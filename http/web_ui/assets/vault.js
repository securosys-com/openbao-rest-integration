'use strict';



;define("vault/adapters/-json-api", ["exports", "@ember-data/adapter/json-api"], function (_exports, _jsonApi) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _jsonApi.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@ember-data/adapter/json-api"eaimeta@70e063a35619d71f
});
;define("vault/adapters/application", ["exports", "@ember-data/adapter/error", "@ember-data/adapter/rest", "@ember/service", "@ember/polyfills", "@ember/object", "rsvp", "vault/config/environment", "fetch"], function (_exports, _error, _rest, _service, _polyfills, _object, _rsvp, _environment, _fetch) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/adapter/error",0,"@ember-data/adapter/rest",0,"@ember/service",0,"@ember/polyfills",0,"@ember/object",0,"rsvp",0,"vault/config/environment",0,"fetch"eaimeta@70e063a35619d71f

  const {
    APP
  } = _environment.default;
  const {
    POLLING_URLS,
    NAMESPACE_ROOT_URLS
  } = APP;

  var _default = _rest.default.extend({
    auth: (0, _service.inject)(),
    namespaceService: (0, _service.inject)('namespace'),
    controlGroup: (0, _service.inject)(),
    flashMessages: (0, _service.inject)(),
    namespace: 'v1/sys',

    shouldReloadAll() {
      return true;
    },

    shouldReloadRecord() {
      return true;
    },

    shouldBackgroundReloadRecord() {
      return false;
    },

    addHeaders(url, options) {
      const token = options.clientToken || this.auth.currentToken;
      const headers = {};

      if (token && !options.unauthenticated) {
        headers['X-Vault-Token'] = token;
      }

      if (options.wrapTTL) {
        headers['X-Vault-Wrap-TTL'] = options.wrapTTL;
      }

      const namespace = typeof options.namespace === 'undefined' ? this.namespaceService.path : options.namespace;

      if (namespace && !NAMESPACE_ROOT_URLS.some(str => url.includes(str))) {
        headers['X-Vault-Namespace'] = namespace;
      }

      options.headers = (0, _polyfills.assign)(options.headers || {}, headers);
    },

    _preRequest(url, options) {
      this.addHeaders(url, options);
      const isPolling = POLLING_URLS.some(str => url.includes(str));

      if (!isPolling) {
        this.auth.setLastFetch(Date.now());
      }

      options.timeout = 60000;
      return options;
    },

    ajax(intendedUrl, method) {
      var _this = this;

      let passedOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      let url = intendedUrl;
      let type = method;
      let options = passedOptions;
      const controlGroup = this.controlGroup;
      const controlGroupToken = controlGroup.tokenForUrl(url); // if we have a Control Group token that matches the intendedUrl,
      // then we want to unwrap it and return the unwrapped response as
      // if it were the initial request
      // To do this, we rewrite the function args

      if (controlGroupToken) {
        url = '/v1/sys/wrapping/unwrap';
        type = 'POST';
        options = {
          clientToken: controlGroupToken.token,
          data: {
            token: controlGroupToken.token
          }
        };
      }

      const opts = this._preRequest(url, options);

      return this._super(url, type, opts).then(function () {
        if (controlGroupToken) {
          controlGroup.deleteControlGroupToken(controlGroupToken.accessor);
        }

        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        const [resp] = args;

        if (resp && resp.warnings) {
          const flash = _this.flashMessages;
          resp.warnings.forEach(message => {
            flash.info(message);
          });
        }

        return controlGroup.checkForControlGroup(args, resp, options.wrapTTL);
      });
    },

    // for use on endpoints that don't return JSON responses
    rawRequest(url, type) {
      let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      const opts = this._preRequest(url, options);

      return (0, _fetch.default)(url, {
        method: type || 'GET',
        headers: opts.headers || {},
        body: opts.body,
        signal: opts.signal
      }).then(response => {
        if (response.status >= 200 && response.status < 300) {
          return _rsvp.default.resolve(response);
        } else {
          return _rsvp.default.reject(response);
        }
      });
    },

    handleResponse(status, headers, payload, requestData) {
      const returnVal = this._super(...arguments);

      if (returnVal instanceof _error.default) {
        // ember data errors don't have the status code, so we add it here
        (0, _object.set)(returnVal, 'httpStatus', status);
        (0, _object.set)(returnVal, 'path', requestData.url); // Most of the time when the Vault API returns an error, the payload looks like:
        // { errors: ['some error message']}
        // But sometimes (eg RespondWithStatusCode) it looks like this:
        // { data: { error: 'some error message' } }

        if (payload?.data?.error && !payload.errors) {
          // Normalize the errors from RespondWithStatusCode
          (0, _object.set)(returnVal, 'errors', [payload.data.error]);
        }
      }

      return returnVal;
    }

  });

  _exports.default = _default;
});
;define("vault/adapters/auth-config/_base", ["exports", "vault/adapters/application"], function (_exports, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/application"eaimeta@70e063a35619d71f

  var _default = _application.default.extend({
    namespace: '/v1/auth',

    pathForType(modelType) {
      // we want the last part of the path
      const type = modelType.split('/').pop();

      if (type === 'identity-accesslist' || type === 'roletag-denylist') {
        return `tidy/${type}`;
      }

      return type;
    },

    buildURL(modelName, id, snapshot) {
      const backendId = id ? id : snapshot.belongsTo('backend').id;
      let url = `${this.namespace}/${backendId}/config`; // aws has a lot more config endpoints

      if (modelName.includes('aws')) {
        url = `${url}/${this.pathForType(modelName)}`;
      }

      return url;
    },

    createRecord(store, type, snapshot) {
      const id = snapshot.belongsTo('backend').id;
      return this._super(...arguments).then(() => {
        return {
          id
        };
      });
    },

    updateRecord(store, type, snapshot) {
      const id = snapshot.belongsTo('backend').id;
      return this._super(...arguments).then(() => {
        return {
          id
        };
      });
    }

  });

  _exports.default = _default;
});
;define("vault/adapters/auth-config/aws/client", ["exports", "vault/adapters/auth-config/_base"], function (_exports, _base) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/auth-config/_base"eaimeta@70e063a35619d71f

  var _default = _base.default.extend();

  _exports.default = _default;
});
;define("vault/adapters/auth-config/aws/identity-accesslist", ["exports", "vault/adapters/auth-config/_base"], function (_exports, _base) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/auth-config/_base"eaimeta@70e063a35619d71f

  var _default = _base.default.extend();

  _exports.default = _default;
});
;define("vault/adapters/auth-config/aws/roletag-denylist", ["exports", "vault/adapters/auth-config/_base"], function (_exports, _base) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/auth-config/_base"eaimeta@70e063a35619d71f

  var _default = _base.default.extend();

  _exports.default = _default;
});
;define("vault/adapters/auth-config/azure", ["exports", "vault/adapters/auth-config/_base"], function (_exports, _base) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/auth-config/_base"eaimeta@70e063a35619d71f

  var _default = _base.default.extend();

  _exports.default = _default;
});
;define("vault/adapters/auth-config/jwt", ["exports", "vault/adapters/auth-config/_base"], function (_exports, _base) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/auth-config/_base"eaimeta@70e063a35619d71f

  var _default = _base.default.extend();

  _exports.default = _default;
});
;define("vault/adapters/auth-config/kubernetes", ["exports", "vault/adapters/auth-config/_base"], function (_exports, _base) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/auth-config/_base"eaimeta@70e063a35619d71f

  var _default = _base.default.extend();

  _exports.default = _default;
});
;define("vault/adapters/auth-config/ldap", ["exports", "vault/adapters/auth-config/_base"], function (_exports, _base) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/auth-config/_base"eaimeta@70e063a35619d71f

  var _default = _base.default.extend();

  _exports.default = _default;
});
;define("vault/adapters/auth-config/oidc", ["exports", "vault/adapters/auth-config/_base"], function (_exports, _base) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/auth-config/_base"eaimeta@70e063a35619d71f

  var _default = _base.default.extend();

  _exports.default = _default;
});
;define("vault/adapters/auth-config/radius", ["exports", "vault/adapters/auth-config/_base"], function (_exports, _base) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/auth-config/_base"eaimeta@70e063a35619d71f

  var _default = _base.default.extend();

  _exports.default = _default;
});
;define("vault/adapters/auth-method", ["exports", "@ember-data/adapter/error", "@ember/polyfills", "@ember/object", "vault/adapters/application", "vault/utils/path-encoding-helpers"], function (_exports, _error, _polyfills, _object, _application, _pathEncodingHelpers) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/adapter/error",0,"@ember/polyfills",0,"@ember/object",0,"vault/adapters/application",0,"vault/utils/path-encoding-helpers"eaimeta@70e063a35619d71f

  var _default = _application.default.extend({
    url(path) {
      const url = `${this.buildURL()}/auth`;
      return path ? url + '/' + (0, _pathEncodingHelpers.encodePath)(path) : url;
    },

    // used in updateRecord
    pathForType() {
      return 'mounts/auth';
    },

    findAll(store, type, sinceToken, snapshotRecordArray) {
      const isUnauthenticated = snapshotRecordArray?.adapterOptions?.unauthenticated;

      if (isUnauthenticated) {
        const url = `/${this.urlPrefix()}/internal/ui/mounts`;
        return this.ajax(url, 'GET', {
          unauthenticated: true
        }).then(result => {
          return {
            data: result.data.auth
          };
        }).catch(() => {
          return {
            data: {}
          };
        });
      }

      return this.ajax(this.url(), 'GET').catch(e => {
        if (e instanceof _error.default) {
          (0, _object.set)(e, 'policyPath', 'sys/auth');
        }

        throw e;
      });
    },

    createRecord(store, type, snapshot) {
      const serializer = store.serializerFor(type.modelName);
      const data = serializer.serialize(snapshot);
      const path = snapshot.attr('path');
      return this.ajax(this.url(path), 'POST', {
        data
      }).then(() => {
        // ember data doesn't like 204s if it's not a DELETE
        data.config.id = path; // config relationship needs an id so use path for now

        return {
          data: (0, _polyfills.assign)({}, data, {
            path: path + '/',
            id: path
          })
        };
      });
    },

    urlForDeleteRecord(id, modelName, snapshot) {
      return this.url(snapshot.id);
    },

    exchangeOIDC(path, state, code) {
      return this.ajax(`/v1/auth/${(0, _pathEncodingHelpers.encodePath)(path)}/oidc/callback`, 'GET', {
        data: {
          state,
          code
        }
      });
    },

    tune(path, data) {
      const url = `${this.buildURL()}/${this.pathForType()}/${(0, _pathEncodingHelpers.encodePath)(path)}tune`;
      return this.ajax(url, 'POST', {
        data
      });
    }

  });

  _exports.default = _default;
});
;define("vault/adapters/aws-credential", ["exports", "vault/adapters/application"], function (_exports, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/application"eaimeta@70e063a35619d71f

  var _default = _application.default.extend({
    createRecord(store, type, snapshot) {
      const ttl = snapshot.attr('ttl');
      const roleArn = snapshot.attr('roleArn');
      const roleType = snapshot.attr('credentialType');
      let method = 'POST';
      let options;
      const data = {};

      if (roleType === 'iam_user') {
        method = 'GET';
      } else {
        if (ttl !== undefined) {
          data.ttl = ttl;
        }

        if (roleType === 'assumed_role' && roleArn) {
          data.role_arn = roleArn;
        }

        options = data.ttl || data.role_arn ? {
          data
        } : {};
      }

      const role = snapshot.attr('role');
      const url = `/v1/${role.backend}/creds/${role.name}`;
      return this.ajax(url, method, options).then(response => {
        response.id = snapshot.id;
        response.modelName = type.modelName;
        store.pushPayload(type.modelName, response);
      });
    }

  });

  _exports.default = _default;
});
;define("vault/adapters/capabilities", ["exports", "@ember-data/adapter/error", "@ember/object", "vault/adapters/application"], function (_exports, _error, _object, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/adapter/error",0,"@ember/object",0,"vault/adapters/application"eaimeta@70e063a35619d71f

  var _default = _application.default.extend({
    pathForType() {
      return 'capabilities-self';
    },

    findRecord(store, type, id) {
      return this.ajax(this.buildURL(type), 'POST', {
        data: {
          paths: [id]
        }
      }).catch(e => {
        if (e instanceof _error.default) {
          (0, _object.set)(e, 'policyPath', 'sys/capabilities-self');
        }

        throw e;
      });
    },

    queryRecord(store, type, query) {
      const {
        id
      } = query;

      if (!id) {
        return;
      }

      return this.findRecord(store, type, id).then(resp => {
        resp.path = id;
        return resp;
      });
    }

  });

  _exports.default = _default;
});
;define("vault/adapters/clients/activity", ["exports", "vault/adapters/application", "date-fns"], function (_exports, _application, _dateFns) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/application",0,"date-fns"eaimeta@70e063a35619d71f

  class ActivityAdapter extends _application.default {
    // javascript localizes new Date() objects but all activity log data is stored in UTC
    // create date object from user's input using Date.UTC() then send to backend as unix
    // time params from the backend are formatted as a zulu timestamp
    formatQueryParams(queryParams) {
      let {
        start_time,
        end_time
      } = queryParams;
      start_time = start_time.timestamp || (0, _dateFns.getUnixTime)(Date.UTC(start_time.year, start_time.monthIdx, 1)); // day=0 for Date.UTC() returns the last day of the month before
      // increase monthIdx by one to get last day of queried month

      end_time = end_time.timestamp || (0, _dateFns.getUnixTime)(Date.UTC(end_time.year, end_time.monthIdx + 1, 0));
      return {
        start_time,
        end_time
      };
    }

    queryRecord(store, type, query) {
      const url = `${this.buildURL()}/internal/counters/activity`;
      const queryParams = this.formatQueryParams(query);

      if (queryParams) {
        return this.ajax(url, 'GET', {
          data: queryParams
        }).then(resp => {
          const response = resp || {};
          response.id = response.request_id || 'no-data';
          return response;
        });
      }
    }

  }

  _exports.default = ActivityAdapter;
});
;define("vault/adapters/clients/config", ["exports", "vault/adapters/application"], function (_exports, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/application"eaimeta@70e063a35619d71f

  var _default = _application.default.extend({
    queryRecord() {
      return this.ajax(this.urlForQuery(), 'GET').then(resp => {
        resp.id = resp.request_id;
        return resp;
      });
    },

    urlForUpdateRecord() {
      return this.buildURL() + '/internal/counters/config';
    },

    urlForQuery() {
      return this.buildURL() + '/internal/counters/config';
    }

  });

  _exports.default = _default;
});
;define("vault/adapters/clients/version-history", ["exports", "vault/adapters/application"], function (_exports, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/application"eaimeta@70e063a35619d71f

  class VersionHistoryAdapter extends _application.default {
    findAll() {
      return this.ajax(this.buildURL() + '/version-history', 'GET', {
        data: {
          list: true
        }
      }).then(resp => {
        return resp;
      });
    }

  }

  _exports.default = VersionHistoryAdapter;
});
;define("vault/adapters/cluster", ["exports", "@ember-data/adapter/error", "@ember/service", "@ember/polyfills", "rsvp", "ember-inflector", "vault/adapters/application"], function (_exports, _error, _service, _polyfills, _rsvp, _emberInflector, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/adapter/error",0,"@ember/service",0,"@ember/polyfills",0,"rsvp",0,"ember-inflector",0,"vault/adapters/application"eaimeta@70e063a35619d71f

  const ENDPOINTS = ['health', 'seal-status', 'tokens', 'token', 'seal', 'unseal', 'init', 'capabilities-self', 'license'];

  var _default = _application.default.extend({
    namespaceService: (0, _service.inject)('namespace'),

    shouldBackgroundReloadRecord() {
      return true;
    },

    findRecord(store, type, id, snapshot) {
      const fetches = {
        health: this.health(),
        sealStatus: this.sealStatus().catch(e => e)
      };
      return (0, _rsvp.hash)(fetches).then(_ref => {
        let {
          health,
          sealStatus
        } = _ref;
        let ret = {
          id,
          name: snapshot.attr('name')
        };
        ret = (0, _polyfills.assign)(ret, health);

        if (sealStatus instanceof _error.default === false) {
          ret = (0, _polyfills.assign)(ret, {
            nodes: [sealStatus]
          });
        }

        return (0, _rsvp.resolve)(ret);
      });
    },

    pathForType(type) {
      return type === 'cluster' ? 'clusters' : (0, _emberInflector.pluralize)(type);
    },

    health() {
      return this.ajax(this.urlFor('health'), 'GET', {
        data: {
          standbycode: 200,
          sealedcode: 200,
          uninitcode: 200,
          drsecondarycode: 200,
          performancestandbycode: 200
        },
        unauthenticated: true
      });
    },

    features() {
      return this.ajax(`${this.urlFor('license')}/features`, 'GET', {
        unauthenticated: true
      });
    },

    sealStatus() {
      return this.ajax(this.urlFor('seal-status'), 'GET', {
        unauthenticated: true
      });
    },

    seal() {
      return this.ajax(this.urlFor('seal'), 'PUT');
    },

    unseal(data) {
      return this.ajax(this.urlFor('unseal'), 'PUT', {
        data,
        unauthenticated: true
      });
    },

    initCluster(data) {
      return this.ajax(this.urlFor('init'), 'PUT', {
        data,
        unauthenticated: true
      });
    },

    authenticate(_ref2) {
      let {
        backend,
        data
      } = _ref2;
      const {
        role,
        jwt,
        token,
        password,
        username,
        path
      } = data;
      const url = this.urlForAuth(backend, username, path);
      const verb = backend === 'token' ? 'GET' : 'POST';
      const options = {
        unauthenticated: true
      };

      if (backend === 'token') {
        options.headers = {
          'X-Vault-Token': token
        };
      } else if (backend === 'jwt' || backend === 'oidc') {
        options.data = {
          role,
          jwt
        };
      } else {
        options.data = token ? {
          token,
          password
        } : {
          password
        };
      }

      return this.ajax(url, verb, options);
    },

    mfaValidate(_ref3) {
      let {
        mfa_request_id,
        mfa_constraints
      } = _ref3;
      const options = {
        data: {
          mfa_request_id,
          mfa_payload: mfa_constraints.reduce((obj, _ref4) => {
            let {
              selectedMethod,
              passcode
            } = _ref4;
            let payload = [];

            if (passcode) {
              // duo requires passcode= prepended to the actual passcode
              // this isn't a great UX so we add it behind the scenes to fulfill the requirement
              // check if user added passcode= to avoid duplication
              payload = selectedMethod.type === 'duo' && !passcode.includes('passcode=') ? [`passcode=${passcode}`] : [passcode];
            }

            obj[selectedMethod.id] = payload;
            return obj;
          }, {})
        }
      };
      return this.ajax('/v1/sys/mfa/validate', 'POST', options);
    },

    urlFor(endpoint) {
      if (!ENDPOINTS.includes(endpoint)) {
        throw new Error(`Calls to a ${endpoint} endpoint are not currently allowed in the vault cluster adapater`);
      }

      return `${this.buildURL()}/${endpoint}`;
    },

    urlForAuth(type, username, path) {
      const authBackend = type.toLowerCase();
      const authURLs = {
        jwt: 'login',
        oidc: 'login',
        userpass: `login/${encodeURIComponent(username)}`,
        ldap: `login/${encodeURIComponent(username)}`,
        radius: `login/${encodeURIComponent(username)}`,
        token: 'lookup-self'
      };
      const urlSuffix = authURLs[authBackend];
      const urlPrefix = path && authBackend !== 'token' ? path : authBackend;

      if (!urlSuffix) {
        throw new Error(`There is no auth url for ${type}.`);
      }

      return `/v1/auth/${urlPrefix}/${urlSuffix}`;
    }

  });

  _exports.default = _default;
});
;define("vault/adapters/console", ["exports", "vault/adapters/application"], function (_exports, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/application"eaimeta@70e063a35619d71f

  var _default = _application.default.extend({
    namespace: 'v1',

    pathForType(modelName) {
      return modelName;
    }

  });

  _exports.default = _default;
});
;define("vault/adapters/control-group-config", ["exports", "vault/adapters/application"], function (_exports, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/application"eaimeta@70e063a35619d71f

  var _default = _application.default.extend({
    pathForType() {
      return 'config/control-group';
    },

    urlForDeleteRecord(id, modelName) {
      return this.buildURL(modelName);
    },

    urlForFindRecord(id, modelName) {
      return this.buildURL(modelName);
    },

    urlForUpdateRecord(id, modelName) {
      return this.buildURL(modelName);
    }

  });

  _exports.default = _default;
});
;define("vault/adapters/control-group", ["exports", "vault/adapters/application"], function (_exports, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/application"eaimeta@70e063a35619d71f

  var _default = _application.default.extend({
    pathForType() {
      return 'control-group';
    },

    findRecord(store, type, id) {
      const baseUrl = this.buildURL(type.modelName);
      return this.ajax(`${baseUrl}/request`, 'POST', {
        data: {
          accessor: id
        }
      }).then(response => {
        response.id = id;
        return response;
      });
    },

    urlForUpdateRecord(id, modelName) {
      const base = this.buildURL(modelName);
      return `${base}/authorize`;
    }

  });

  _exports.default = _default;
});
;define("vault/adapters/database/connection", ["exports", "vault/adapters/application"], function (_exports, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/application"eaimeta@70e063a35619d71f

  var _default = _application.default.extend({
    namespace: 'v1',

    urlFor(backend, id) {
      let type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';

      if (type === 'ROTATE') {
        return `${this.buildURL()}/${backend}/rotate-root/${id}`;
      } else if (type === 'RESET') {
        return `${this.buildURL()}/${backend}/reset/${id}`;
      }

      let url = `${this.buildURL()}/${backend}/config`;

      if (id) {
        url = `${this.buildURL()}/${backend}/config/${id}`;
      }

      return url;
    },

    optionsForQuery(id) {
      const data = {};

      if (!id) {
        data['list'] = true;
      }

      return {
        data
      };
    },

    fetchByQuery(store, query) {
      const {
        backend,
        id
      } = query;
      return this.ajax(this.urlFor(backend, id), 'GET', this.optionsForQuery(id)).then(resp => {
        resp.backend = backend;

        if (id) {
          resp.id = id;
        }

        return resp;
      });
    },

    query(store, type, query) {
      return this.fetchByQuery(store, query);
    },

    queryRecord(store, type, query) {
      return this.fetchByQuery(store, query);
    },

    createRecord(store, type, snapshot) {
      const serializer = store.serializerFor(type.modelName);
      const data = serializer.serialize(snapshot);
      const id = snapshot.attr('name');
      const backend = snapshot.attr('backend');
      return this.ajax(this.urlFor(backend, id), 'POST', {
        data
      }).then(() => {
        // ember data doesn't like 204s if it's not a DELETE
        return {
          data: {
            id,
            ...data
          }
        };
      });
    },

    updateRecord() {
      return this.createRecord(...arguments);
    },

    deleteRecord(store, type, snapshot) {
      const id = snapshot.id;
      const backend = snapshot.attr('backend');
      return this.ajax(this.urlFor(backend, id), 'DELETE');
    },

    rotateRootCredentials(backend, id) {
      return this.ajax(this.urlFor(backend, id, 'ROTATE'), 'POST');
    },

    resetConnection(backend, id) {
      return this.ajax(this.urlFor(backend, id, 'RESET'), 'POST');
    }

  });

  _exports.default = _default;
});
;define("vault/adapters/database/credential", ["exports", "rsvp", "vault/adapters/application", "vault/lib/control-group-error"], function (_exports, _rsvp, _application, _controlGroupError) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"rsvp",0,"vault/adapters/application",0,"vault/lib/control-group-error"eaimeta@70e063a35619d71f

  var _default = _application.default.extend({
    namespace: 'v1',

    _staticCreds(backend, secret) {
      return this.ajax(`${this.buildURL()}/${encodeURIComponent(backend)}/static-creds/${encodeURIComponent(secret)}`, 'GET').then(resp => ({ ...resp,
        roleType: 'static'
      }));
    },

    _dynamicCreds(backend, secret) {
      return this.ajax(`${this.buildURL()}/${encodeURIComponent(backend)}/creds/${encodeURIComponent(secret)}`, 'GET').then(resp => ({ ...resp,
        roleType: 'dynamic'
      }));
    },

    fetchByQuery(store, query) {
      const {
        backend,
        secret
      } = query;

      if (query.roleType === 'static') {
        return this._staticCreds(backend, secret);
      } else if (query.roleType === 'dynamic') {
        return this._dynamicCreds(backend, secret);
      }

      return (0, _rsvp.allSettled)([this._staticCreds(backend, secret), this._dynamicCreds(backend, secret)]).then(_ref => {
        let [staticResp, dynamicResp] = _ref;

        if (staticResp.state === 'rejected' && dynamicResp.state === 'rejected') {
          let reason = staticResp.reason;

          if (dynamicResp.reason instanceof _controlGroupError.default) {
            throw dynamicResp.reason;
          }

          if (reason?.httpStatus < dynamicResp.reason?.httpStatus) {
            reason = dynamicResp.reason;
          }

          throw reason;
        } // Otherwise, return whichever one has a value


        return staticResp.value || dynamicResp.value;
      });
    },

    queryRecord(store, type, query) {
      return this.fetchByQuery(store, query);
    },

    rotateRoleCredentials(backend, id) {
      return this.ajax(`${this.buildURL()}/${encodeURIComponent(backend)}/rotate-role/${encodeURIComponent(id)}`, 'POST');
    }

  });

  _exports.default = _default;
});
;define("vault/adapters/database/role", ["exports", "@ember/polyfills", "@ember/debug", "vault/lib/control-group-error", "vault/adapters/application", "rsvp", "vault/helpers/add-to-array", "vault/helpers/remove-from-array"], function (_exports, _polyfills, _debug, _controlGroupError, _application, _rsvp, _addToArray, _removeFromArray) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/polyfills",0,"@ember/debug",0,"vault/lib/control-group-error",0,"vault/adapters/application",0,"rsvp",0,"vault/helpers/add-to-array",0,"vault/helpers/remove-from-array"eaimeta@70e063a35619d71f

  var _default = _application.default.extend({
    namespace: 'v1',

    pathForType() {
      (true && !(false) && (0, _debug.assert)('Generate the url dynamically based on role type', false));
    },

    urlFor(backend, id) {
      let type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'dynamic';
      let role = 'roles';

      if (type === 'static') {
        role = 'static-roles';
      }

      let url = `${this.buildURL()}/${backend}/${role}`;

      if (id) {
        url = `${this.buildURL()}/${backend}/${role}/${id}`;
      }

      return url;
    },

    staticRoles(backend, id) {
      return this.ajax(this.urlFor(backend, id, 'static'), 'GET', this.optionsForQuery(id)).then(resp => {
        if (id) {
          return { ...resp,
            type: 'static',
            backend,
            id
          };
        }

        return resp;
      });
    },

    dynamicRoles(backend, id) {
      return this.ajax(this.urlFor(backend, id), 'GET', this.optionsForQuery(id)).then(resp => {
        if (id) {
          return { ...resp,
            type: 'dynamic',
            backend,
            id
          };
        }

        return resp;
      });
    },

    optionsForQuery(id) {
      const data = {};

      if (!id) {
        data['list'] = true;
      }

      return {
        data
      };
    },

    queryRecord(store, type, query) {
      const {
        backend,
        id
      } = query;

      if (query.type === 'static') {
        return this.staticRoles(backend, id);
      } else if (query?.type === 'dynamic') {
        return this.dynamicRoles(backend, id);
      } // if role type is not defined, try both


      return (0, _rsvp.allSettled)([this.staticRoles(backend, id), this.dynamicRoles(backend, id)]).then(_ref => {
        let [staticResp, dynamicResp] = _ref;

        if (staticResp.state === 'rejected' && dynamicResp.state === 'rejected') {
          let reason = staticResp.reason;

          if (dynamicResp.reason instanceof _controlGroupError.default) {
            throw dynamicResp.reason;
          }

          if (reason?.httpStatus < dynamicResp.reason?.httpStatus) {
            reason = dynamicResp.reason;
          }

          throw reason;
        } // Names are distinct across both types of role,
        // so only one request should ever come back with value


        const type = staticResp.value ? 'static' : 'dynamic';
        const successful = staticResp.value || dynamicResp.value;
        const resp = {
          data: {},
          backend,
          id,
          type
        };
        resp.data = (0, _polyfills.assign)({}, successful.data);
        return resp;
      });
    },

    query(store, type, query) {
      const {
        backend
      } = query;
      const staticReq = this.staticRoles(backend);
      const dynamicReq = this.dynamicRoles(backend);
      return (0, _rsvp.allSettled)([staticReq, dynamicReq]).then(_ref2 => {
        let [staticResp, dynamicResp] = _ref2;
        const resp = {
          backend,
          data: {
            keys: []
          }
        };

        if (staticResp.reason && dynamicResp.reason) {
          // both failed, throw error
          throw dynamicResp.reason;
        } // at least one request has data


        let staticRoles = [];
        let dynamicRoles = [];

        if (staticResp.value) {
          staticRoles = staticResp.value.data.keys;
        }

        if (dynamicResp.value) {
          dynamicRoles = dynamicResp.value.data.keys;
        }

        resp.data = (0, _polyfills.assign)({}, resp.data, {
          keys: [...staticRoles, ...dynamicRoles]
        }, {
          backend
        }, {
          staticRoles,
          dynamicRoles
        });
        return resp;
      });
    },

    async _updateAllowedRoles(store, _ref3) {
      let {
        role,
        backend,
        db,
        type = 'add'
      } = _ref3;
      const connection = await store.queryRecord('database/connection', {
        backend,
        id: db
      });
      const roles = [...connection.allowed_roles];
      const allowedRoles = type === 'add' ? (0, _addToArray.addToArray)([roles, role]) : (0, _removeFromArray.removeFromArray)([roles, role]);
      connection.allowed_roles = allowedRoles;
      return connection.save();
    },

    async createRecord(store, type, snapshot) {
      const serializer = store.serializerFor(type.modelName);
      const data = serializer.serialize(snapshot);
      const roleType = snapshot.attr('type');
      const backend = snapshot.attr('backend');
      const id = snapshot.attr('name');
      const db = snapshot.attr('database');

      try {
        await this._updateAllowedRoles(store, {
          role: id,
          backend,
          db: db[0]
        });
      } catch (e) {
        throw new Error('Could not update allowed roles for selected database. Check the OpenBao logs for details');
      }

      return this.ajax(this.urlFor(backend, id, roleType), 'POST', {
        data
      }).then(() => {
        // ember data doesn't like 204s if it's not a DELETE
        return {
          data: (0, _polyfills.assign)({}, data, {
            id
          })
        };
      });
    },

    async deleteRecord(store, type, snapshot) {
      const roleType = snapshot.attr('type');
      const backend = snapshot.attr('backend');
      const id = snapshot.attr('name');
      const db = snapshot.attr('database');
      await this._updateAllowedRoles(store, {
        role: id,
        backend,
        db: db[0],
        type: 'remove'
      });
      return this.ajax(this.urlFor(backend, id, roleType), 'DELETE');
    },

    async updateRecord(store, type, snapshot) {
      const serializer = store.serializerFor(type.modelName);
      const data = serializer.serialize(snapshot);
      const roleType = snapshot.attr('type');
      const backend = snapshot.attr('backend');
      const id = snapshot.attr('name');
      return this.ajax(this.urlFor(backend, id, roleType), 'POST', {
        data
      }).then(() => data);
    }

  });

  _exports.default = _default;
});
;define("vault/adapters/generated-item-list", ["exports", "@ember/polyfills", "vault/adapters/application", "ember-concurrency", "@ember/service"], function (_exports, _polyfills, _application, _emberConcurrency, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/polyfills",0,"vault/adapters/application",0,"ember-concurrency",0,"@ember/service"eaimeta@70e063a35619d71f

  var _default = _application.default.extend({
    store: (0, _service.inject)(),
    namespace: 'v1',

    urlForItem() {},

    dynamicApiPath: '',
    getDynamicApiPath: (0, _emberConcurrency.task)(function* (id) {
      // TODO: remove yield at some point.
      const result = yield this.store.peekRecord('auth-method', id);
      this.dynamicApiPath = result.apiPath;
      return;
    }),
    fetchByQuery: (0, _emberConcurrency.task)(function* (store, query, isList) {
      const {
        id
      } = query;
      const data = {};

      if (isList) {
        data.list = true;
        yield this.getDynamicApiPath.perform(id);
      }

      return this.ajax(this.urlForItem(id, isList, this.dynamicApiPath), 'GET', {
        data
      }).then(resp => {
        const data = {
          id,
          method: id
        };
        return (0, _polyfills.assign)({}, resp, data);
      });
    }),

    query(store, type, query) {
      return this.fetchByQuery.perform(store, query, true);
    },

    queryRecord(store, type, query) {
      return this.fetchByQuery.perform(store, query);
    }

  });

  _exports.default = _default;
});
;define("vault/adapters/identity/base", ["exports", "vault/adapters/application"], function (_exports, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/application"eaimeta@70e063a35619d71f

  var _default = _application.default.extend({
    namespace: 'v1',

    pathForType(type) {
      return type;
    },

    urlForQuery() {
      return this._super(...arguments) + '?list=true';
    },

    query(store, type) {
      return this.ajax(this.buildURL(type.modelName, null, null, 'query'), 'GET');
    },

    buildURL(modelName, id, snapshot, requestType, query) {
      if (requestType === 'createRecord') {
        return this._super(...arguments);
      }

      return this._super(`${modelName}/id`, id, snapshot, requestType, query);
    }

  });

  _exports.default = _default;
});
;define("vault/adapters/identity/entity-alias", ["exports", "vault/adapters/identity/base"], function (_exports, _base) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/identity/base"eaimeta@70e063a35619d71f

  var _default = _base.default.extend();

  _exports.default = _default;
});
;define("vault/adapters/identity/entity-merge", ["exports", "vault/adapters/identity/base"], function (_exports, _base) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/identity/base"eaimeta@70e063a35619d71f

  var _default = _base.default.extend({
    buildURL() {
      // first arg is modelName which we're hardcoding in the call to _super.
      const [, ...args] = arguments;
      return this._super('identity/entity/merge', ...args);
    },

    createRecord(store, type, snapshot) {
      return this._super(...arguments).then(() => {
        // return the `to` id here so we can redirect to it on success
        // (and because ember _loves_ 204s for createRecord)
        return {
          id: snapshot.attr('toEntityId')
        };
      });
    }

  });

  _exports.default = _default;
});
;define("vault/adapters/identity/entity", ["exports", "vault/adapters/identity/base"], function (_exports, _base) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/identity/base"eaimeta@70e063a35619d71f

  var _default = _base.default.extend({
    lookup(store, data) {
      const url = `/${this.urlPrefix()}/identity/lookup/entity`;
      return this.ajax(url, 'POST', {
        data
      }).then(response => {
        // unsuccessful lookup is a 204
        if (!response) return;
        const modelName = 'identity/entity';
        store.push(store.serializerFor(modelName).normalizeResponse(store, store.modelFor(modelName), response, response.data.id, 'findRecord'));
        return response;
      });
    }

  });

  _exports.default = _default;
});
;define("vault/adapters/identity/group-alias", ["exports", "vault/adapters/identity/base"], function (_exports, _base) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/identity/base"eaimeta@70e063a35619d71f

  var _default = _base.default.extend();

  _exports.default = _default;
});
;define("vault/adapters/identity/group", ["exports", "vault/adapters/identity/base"], function (_exports, _base) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/identity/base"eaimeta@70e063a35619d71f

  var _default = _base.default.extend({
    lookup(store, data) {
      const url = `/${this.urlPrefix()}/identity/lookup/group`;
      return this.ajax(url, 'POST', {
        data
      }).then(response => {
        // unsuccessful lookup is a 204
        if (!response) return;
        const modelName = 'identity/group';
        store.push(store.serializerFor(modelName).normalizeResponse(store, store.modelFor(modelName), response, response.data.id, 'findRecord'));
        return response;
      });
    }

  });

  _exports.default = _default;
});
;define("vault/adapters/keymgmt/key", ["exports", "vault/adapters/application", "vault/utils/path-encoding-helpers", "vault/lib/control-group-error", "@ember/service"], function (_exports, _application, _pathEncodingHelpers, _controlGroupError, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor;

  0; //eaimeta@70e063a35619d71f0,"vault/adapters/application",0,"vault/utils/path-encoding-helpers",0,"vault/lib/control-group-error",0,"@ember/service"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  function pickKeys(obj, picklist) {
    const data = {};
    Object.keys(obj).forEach(key => {
      if (picklist.indexOf(key) >= 0) {
        data[key] = obj[key];
      }
    });
    return data;
  }

  let KeymgmtKeyAdapter = (_class = class KeymgmtKeyAdapter extends _application.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);

      _defineProperty(this, "namespace", 'v1');
    }

    pathForType() {
      // backend name prepended in buildURL method
      return 'key';
    }

    buildURL(modelName, id, snapshot, requestType, query) {
      let url = super.buildURL(...arguments);

      if (snapshot) {
        url = url.replace('key', `${snapshot.attr('backend')}/key`);
      } else if (query) {
        url = url.replace('key', `${query.backend}/key`);
      }

      return url;
    }

    url(backend, id, type) {
      const url = `${this.buildURL()}/${backend}/key`;

      if (id) {
        if (type === 'ROTATE') {
          return url + '/' + (0, _pathEncodingHelpers.encodePath)(id) + '/rotate';
        } else if (type === 'PROVIDERS') {
          return url + '/' + (0, _pathEncodingHelpers.encodePath)(id) + '/kms';
        }

        return url + '/' + (0, _pathEncodingHelpers.encodePath)(id);
      }

      return url;
    }

    _updateKey(backend, name, serialized) {
      // Only these two attributes are allowed to be updated
      const data = pickKeys(serialized, ['deletion_allowed', 'min_enabled_version']);
      return this.ajax(this.url(backend, name), 'PUT', {
        data
      });
    }

    _createKey(backend, name, serialized) {
      // Only type is allowed on create
      const data = pickKeys(serialized, ['type']);
      return this.ajax(this.url(backend, name), 'POST', {
        data
      });
    }

    async createRecord(store, type, snapshot) {
      const data = store.serializerFor(type.modelName).serialize(snapshot);
      const name = snapshot.attr('name');
      const backend = snapshot.attr('backend'); // Keys must be created and then updated

      await this._createKey(backend, name, data);

      if (snapshot.attr('deletionAllowed')) {
        try {
          await this._updateKey(backend, name, data);
        } catch {
          throw new Error(`Key ${name} was created, but not all settings were saved`);
        }
      }

      return {
        data: { ...data,
          id: name,
          backend
        }
      };
    }

    updateRecord(store, type, snapshot) {
      const data = store.serializerFor(type.modelName).serialize(snapshot);
      const name = snapshot.attr('name');
      const backend = snapshot.attr('backend');
      return this._updateKey(backend, name, data);
    }

    distribute(backend, kms, key, data) {
      return this.ajax(`${this.buildURL()}/${backend}/kms/${(0, _pathEncodingHelpers.encodePath)(kms)}/key/${(0, _pathEncodingHelpers.encodePath)(key)}`, 'PUT', {
        data: { ...data
        }
      });
    }

    async getProvider(backend, name) {
      try {
        const resp = await this.ajax(this.url(backend, name, 'PROVIDERS'), 'GET', {
          data: {
            list: true
          }
        });
        return resp.data.keys ? resp.data.keys[0] : null;
      } catch (e) {
        if (e.httpStatus === 404) {
          // No results, not distributed yet
          return null;
        } else if (e.httpStatus === 403) {
          return {
            permissionsError: true
          };
        }

        throw e;
      }
    }

    getDistribution(backend, kms, key) {
      const url = `${this.buildURL()}/${backend}/kms/${kms}/key/${key}`;
      return this.ajax(url, 'GET').then(res => {
        return { ...res.data,
          purposeArray: res.data.purpose.split(',')
        };
      }).catch(e => {
        if (e instanceof _controlGroupError.default) {
          throw e;
        }

        return null;
      });
    }

    async queryRecord(store, type, query) {
      const {
        id,
        backend,
        recordOnly = false
      } = query;
      const keyData = await this.ajax(this.url(backend, id), 'GET');
      keyData.data.id = id;
      keyData.data.backend = backend;
      let provider, distribution;

      if (!recordOnly) {
        provider = await this.getProvider(backend, id);

        if (provider && !provider.permissionsError) {
          distribution = await this.getDistribution(backend, provider, id);
        }
      }

      return { ...keyData,
        provider,
        distribution
      };
    }

    async query(store, type, query) {
      const {
        backend,
        provider
      } = query;
      const providerAdapter = store.adapterFor('keymgmt/provider');
      const url = provider ? providerAdapter.buildKeysURL(query) : this.url(backend);
      return this.ajax(url, 'GET', {
        data: {
          list: true
        }
      }).then(res => {
        res.backend = backend;
        return res;
      });
    }

    async rotateKey(backend, id) {
      const keyModel = this.store.peekRecord('keymgmt/key', id);
      const result = await this.ajax(this.url(backend, id, 'ROTATE'), 'PUT');
      await keyModel.reload();
      return result;
    }

    removeFromProvider(model) {
      const url = `${this.buildURL()}/${model.backend}/kms/${model.provider}/key/${model.name}`;
      return this.ajax(url, 'DELETE').then(() => {
        model.provider = null;
      });
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class);
  _exports.default = KeymgmtKeyAdapter;
});
;define("vault/adapters/keymgmt/provider", ["exports", "vault/adapters/application", "rsvp"], function (_exports, _application, _rsvp) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/application",0,"rsvp"eaimeta@70e063a35619d71f

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  class KeymgmtKeyAdapter extends _application.default {
    constructor() {
      super(...arguments);

      _defineProperty(this, "namespace", 'v1');

      _defineProperty(this, "listPayload", {
        data: {
          list: true
        }
      });
    }

    pathForType() {
      // backend name prepended in buildURL method
      return 'kms';
    }

    buildURL(modelName, id, snapshot, requestType, query) {
      let url = super.buildURL(...arguments);

      if (snapshot) {
        url = url.replace('kms', `${snapshot.attr('backend')}/kms`);
      } else if (query) {
        url = url.replace('kms', `${query.backend}/kms`);
      }

      return url;
    }

    buildKeysURL(query) {
      const url = this.buildURL('keymgmt/provider', null, null, 'query', query);
      return `${url}/${query.provider}/key`;
    }

    async createRecord(store, _ref, snapshot) {
      let {
        modelName
      } = _ref;
      // create uses PUT instead of POST
      const data = store.serializerFor(modelName).serialize(snapshot);
      const url = this.buildURL(modelName, snapshot.attr('name'), snapshot, 'updateRecord');
      return this.ajax(url, 'PUT', {
        data
      }).then(() => data);
    }

    findRecord(store, type, name) {
      return super.findRecord(...arguments).then(resp => {
        resp.data = { ...resp.data,
          name
        };
        return resp;
      });
    }

    async query(store, type, query) {
      const {
        backend
      } = query;
      const url = this.buildURL(type.modelName, null, null, 'query', query);
      return this.ajax(url, 'GET', this.listPayload).then(async resp => {
        // additional data is needed to fullfil the list view requirements
        // pull in full record for listed items
        const records = await (0, _rsvp.all)(resp.data.keys.map(name => this.findRecord(store, type, name, this._mockSnapshot(query.backend))));
        resp.data.keys = records.map(record => record.data);
        resp.backend = backend;
        return resp;
      });
    }

    async queryRecord(store, type, query) {
      return this.findRecord(store, type, query.id, this._mockSnapshot(query.backend));
    } // when using find in query or queryRecord overrides snapshot is not available
    // ultimately buildURL requires the snapshot to pull the backend name for the dynamic segment
    // since we have the backend value from the query generate a mock snapshot


    _mockSnapshot(backend) {
      return {
        attr(prop) {
          return prop === 'backend' ? backend : null;
        }

      };
    }

  }

  _exports.default = KeymgmtKeyAdapter;
});
;define("vault/adapters/kubernetes/config", ["exports", "vault/adapters/application", "vault/utils/path-encoding-helpers"], function (_exports, _application, _pathEncodingHelpers) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/application",0,"vault/utils/path-encoding-helpers"eaimeta@70e063a35619d71f

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  class KubernetesConfigAdapter extends _application.default {
    constructor() {
      super(...arguments);

      _defineProperty(this, "namespace", 'v1');
    }

    getURL(backend) {
      let path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'config';
      return `${this.buildURL()}/${(0, _pathEncodingHelpers.encodePath)(backend)}/${path}`;
    }

    urlForUpdateRecord(name, modelName, snapshot) {
      return this.getURL(snapshot.attr('backend'));
    }

    urlForDeleteRecord(backend) {
      return this.getURL(backend);
    }

    queryRecord(store, type, query) {
      const {
        backend
      } = query;
      return this.ajax(this.getURL(backend), 'GET').then(resp => {
        resp.backend = backend;
        return resp;
      });
    }

    createRecord() {
      return this._saveRecord(...arguments);
    }

    updateRecord() {
      return this._saveRecord(...arguments);
    }

    _saveRecord(store, _ref, snapshot) {
      let {
        modelName
      } = _ref;
      const data = store.serializerFor(modelName).serialize(snapshot);
      const url = this.getURL(snapshot.attr('backend'));
      return this.ajax(url, 'POST', {
        data
      }).then(() => data);
    }

    checkConfigVars(backend) {
      return this.ajax(`${this.getURL(backend, 'check')}`, 'GET');
    }

  }

  _exports.default = KubernetesConfigAdapter;
});
;define("vault/adapters/kubernetes/role", ["exports", "vault/adapters/named-path", "vault/utils/path-encoding-helpers"], function (_exports, _namedPath, _pathEncodingHelpers) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/named-path",0,"vault/utils/path-encoding-helpers"eaimeta@70e063a35619d71f

  class KubernetesRoleAdapter extends _namedPath.default {
    getURL(backend, name) {
      const base = `${this.buildURL()}/${(0, _pathEncodingHelpers.encodePath)(backend)}/roles`;
      return name ? `${base}/${name}` : base;
    }

    urlForQuery(_ref) {
      let {
        backend
      } = _ref;
      return this.getURL(backend);
    }

    urlForUpdateRecord(name, modelName, snapshot) {
      return this.getURL(snapshot.attr('backend'), name);
    }

    urlForDeleteRecord(name, modelName, snapshot) {
      return this.getURL(snapshot.attr('backend'), name);
    }

    query(store, type, query) {
      const {
        backend
      } = query;
      return this.ajax(this.getURL(backend), 'GET', {
        data: {
          list: true
        }
      }).then(resp => {
        return resp.data.keys.map(name => ({
          name,
          backend
        }));
      });
    }

    queryRecord(store, type, query) {
      const {
        backend,
        name
      } = query;
      return this.ajax(this.getURL(backend, name), 'GET').then(resp => {
        resp.data.backend = backend;
        resp.data.name = name;
        return resp.data;
      });
    }

    generateCredentials(backend, data) {
      const generateCredentialsUrl = `${this.buildURL()}/${(0, _pathEncodingHelpers.encodePath)(backend)}/creds/${data.role}`;
      delete data.role;
      return this.ajax(generateCredentialsUrl, 'POST', {
        data
      }).then(response => {
        const {
          lease_id,
          lease_duration,
          data
        } = response;
        return {
          lease_id,
          lease_duration,
          ...data
        };
      });
    }

  }

  _exports.default = KubernetesRoleAdapter;
});
;define("vault/adapters/lease", ["exports", "vault/adapters/application", "vault/utils/path-encoding-helpers"], function (_exports, _application, _pathEncodingHelpers) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/application",0,"vault/utils/path-encoding-helpers"eaimeta@70e063a35619d71f

  var _default = _application.default.extend({
    revokePrefix(prefix) {
      let url = this.buildURL() + '/leases/revoke-prefix/' + (0, _pathEncodingHelpers.encodePath)(prefix);
      url = url.replace(/\/$/, '');
      return this.ajax(url, 'PUT');
    },

    forceRevokePrefix(prefix) {
      let url = this.buildURL() + '/leases/revoke-force/' + (0, _pathEncodingHelpers.encodePath)(prefix);
      url = url.replace(/\/$/, '');
      return this.ajax(url, 'PUT');
    },

    renew(lease_id, increment) {
      const url = this.buildURL() + '/leases/renew';
      return this.ajax(url, 'PUT', {
        data: {
          lease_id,
          increment
        }
      });
    },

    deleteRecord(store, type, snapshot) {
      const lease_id = snapshot.id;
      return this.ajax(this.buildURL() + '/leases/revoke', 'PUT', {
        data: {
          lease_id
        }
      });
    },

    queryRecord(store, type, query) {
      const {
        lease_id
      } = query;
      return this.ajax(this.buildURL() + '/leases/lookup', 'PUT', {
        data: {
          lease_id
        }
      });
    },

    query(store, type, query) {
      const prefix = query.prefix || '';
      return this.ajax(this.buildURL() + '/leases/lookup/' + (0, _pathEncodingHelpers.encodePath)(prefix), 'GET', {
        data: {
          list: true
        }
      }).then(resp => {
        if (prefix) {
          resp.prefix = prefix;
        }

        return resp;
      });
    }

  });

  _exports.default = _default;
});
;define("vault/adapters/license", ["exports", "vault/adapters/cluster"], function (_exports, _cluster) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/cluster"eaimeta@70e063a35619d71f

  var _default = _cluster.default.extend({
    pathForType() {
      return 'license/status';
    }

  });

  _exports.default = _default;
});
;define("vault/adapters/mfa-login-enforcement", ["exports", "vault/adapters/application"], function (_exports, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/application"eaimeta@70e063a35619d71f

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  class KeymgmtKeyAdapter extends _application.default {
    constructor() {
      super(...arguments);

      _defineProperty(this, "namespace", 'v1');
    }

    pathForType() {
      return 'identity/mfa/login-enforcement';
    }

    _saveRecord(store, _ref, snapshot) {
      let {
        modelName
      } = _ref;
      const data = store.serializerFor(modelName).serialize(snapshot);
      return this.ajax(this.urlForUpdateRecord(snapshot.attr('name'), modelName, snapshot), 'POST', {
        data
      }).then(() => data);
    } // create does not return response similar to PUT request


    createRecord() {
      return this._saveRecord(...arguments);
    } // update record via POST method


    updateRecord() {
      return this._saveRecord(...arguments);
    }

    query(store, type, query) {
      const url = this.urlForQuery(query, type.modelName);
      return this.ajax(url, 'GET', {
        data: {
          list: true
        }
      });
    }

  }

  _exports.default = KeymgmtKeyAdapter;
});
;define("vault/adapters/mfa-method", ["exports", "vault/adapters/application"], function (_exports, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/application"eaimeta@70e063a35619d71f

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  class MfaMethodAdapter extends _application.default {
    constructor() {
      super(...arguments);

      _defineProperty(this, "namespace", 'v1');
    }

    pathForType() {
      return 'identity/mfa/method';
    }

    createOrUpdate(store, type, snapshot) {
      const data = store.serializerFor(type.modelName).serialize(snapshot);
      const {
        id
      } = snapshot;
      return this.ajax(this.buildURL(type.modelName, id, snapshot, 'POST'), 'POST', {
        data
      }).then(res => {
        // TODO: Check how 204's are handled by ember
        return {
          data: { ...data,
            id: res?.data?.method_id || id
          }
        };
      });
    }

    createRecord() {
      return this.createOrUpdate(...arguments);
    }

    updateRecord() {
      return this.createOrUpdate(...arguments);
    }

    urlForDeleteRecord(id, modelName, snapshot) {
      return this.buildURL(modelName, id, snapshot, 'POST');
    }

    query(store, type, query) {
      const url = this.urlForQuery(query, type.modelName);
      return this.ajax(url, 'GET', {
        data: {
          list: true
        }
      });
    }

    buildURL(modelName, id, snapshot, requestType) {
      if (requestType === 'POST') {
        const url = `${super.buildURL(modelName)}/${snapshot.attr('type')}`;
        return id ? `${url}/${id}` : url;
      }

      return super.buildURL(...arguments);
    }

  }

  _exports.default = MfaMethodAdapter;
});
;define("vault/adapters/mfa-setup", ["exports", "vault/adapters/application"], function (_exports, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/application"eaimeta@70e063a35619d71f

  class MfaSetupAdapter extends _application.default {
    currentTokenGenerate(data) {
      const url = `/v1/identity/mfa/method/totp/generate`;
      return this.ajax(url, 'POST', {
        data
      });
    }

    adminDestroy(data) {
      const url = `/v1/identity/mfa/method/totp/admin-destroy`;
      return this.ajax(url, 'POST', {
        data
      });
    }

  }

  _exports.default = MfaSetupAdapter;
});
;define("vault/adapters/named-path", ["exports", "vault/adapters/application", "@ember/debug"], function (_exports, _application, _debug) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/application",0,"@ember/debug"eaimeta@70e063a35619d71f

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  class NamedPathAdapter extends _application.default {
    constructor() {
      super(...arguments);

      _defineProperty(this, "namespace", 'v1');

      _defineProperty(this, "saveMethod", 'POST');
    }

    // override when extending if PUT is used rather than POST
    _saveRecord(store, _ref, snapshot) {
      let {
        modelName
      } = _ref;
      // since the response is empty return the serialized data rather than nothing
      const data = store.serializerFor(modelName).serialize(snapshot);
      return this.ajax(this.urlForUpdateRecord(snapshot.attr('name'), modelName, snapshot), this.saveMethod, {
        data
      }).then(() => data);
    } // create does not return response similar to PUT request


    createRecord() {
      const [store, {
        modelName
      }, snapshot] = arguments;
      const name = snapshot.attr('name'); // throw error if user attempts to create a record with same name, otherwise POST request silently overrides (updates) the existing model

      if (store.hasRecordForId(modelName, name)) {
        throw new Error(`A record already exists with the name: ${name}`);
      } else {
        return this._saveRecord(...arguments);
      }
    } // update uses same endpoint and method as create


    updateRecord() {
      return this._saveRecord(...arguments);
    } // if backend does not return name in response Ember Data will throw an error for pushing a record with no id
    // use the id (name) supplied to findRecord to set property on response data


    findRecord(store, type, name) {
      return super.findRecord(...arguments).then(resp => {
        if (!resp.data.name) {
          resp.data.name = name;
        }

        return resp;
      });
    } // GET request with list=true as query param


    async query(store, type, query) {
      const url = this.urlForQuery(query, type.modelName);
      const {
        paramKey,
        filterFor,
        allowed_client_id
      } = query; // * 'paramKey' is a string of the param name (model attr) we're filtering for, e.g. 'client_id'
      // * 'filterFor' is an array of values to filter for (value type must match the attr type), e.g. array of ID strings
      // * 'allowed_client_id' is a valid query param to the /provider endpoint

      const queryParams = {
        list: true,
        ...(allowed_client_id && {
          allowed_client_id
        })
      };
      const response = await this.ajax(url, 'GET', {
        data: queryParams
      }); // filter LIST response only if key_info exists and query includes both 'paramKey' & 'filterFor'

      if (filterFor) (true && !(Array.isArray(filterFor)) && (0, _debug.assert)('filterFor must be an array', Array.isArray(filterFor)));

      if (response.data.key_info && filterFor && paramKey && !filterFor.includes('*')) {
        const data = this.filterListResponse(paramKey, filterFor, response.data.key_info);
        return { ...response,
          data
        };
      }

      return response;
    }

    filterListResponse(paramKey, matchValues, key_info) {
      const keyInfoAsArray = Object.entries(key_info);
      const filtered = keyInfoAsArray.filter(key => {
        const value = key[1]; // value is an object of model attributes

        return matchValues.includes(value[paramKey]);
      });
      const filteredKeyInfo = Object.fromEntries(filtered);
      const filteredKeys = Object.keys(filteredKeyInfo);
      return {
        keys: filteredKeys,
        key_info: filteredKeyInfo
      };
    }

  }

  _exports.default = NamedPathAdapter;
});
;define("vault/adapters/namespace", ["exports", "vault/adapters/application"], function (_exports, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/application"eaimeta@70e063a35619d71f

  class NamespaceAdapter extends _application.default {
    pathForType() {
      return 'namespaces';
    }

    urlForFindAll(modelName, snapshot) {
      if (snapshot.adapterOptions && snapshot.adapterOptions.forUser) {
        return `/${this.urlPrefix()}/internal/ui/namespaces`;
      }

      return `/${this.urlPrefix()}/namespaces?list=true`;
    }

    urlForCreateRecord(modelName, snapshot) {
      const id = snapshot.attr('path');
      return this.buildURL(modelName, id);
    }

    createRecord(store, type, snapshot) {
      const id = snapshot.attr('path');
      return super.createRecord(...arguments).then(() => {
        return {
          id
        };
      });
    }

    findAll(store, type, sinceToken, snapshot) {
      if (snapshot.adapterOptions && typeof snapshot.adapterOptions.namespace !== 'undefined') {
        return this.ajax(this.urlForFindAll('namespace', snapshot), 'GET', {
          namespace: snapshot.adapterOptions.namespace
        });
      }

      return super.findAll(...arguments);
    }

    query() {
      return this.ajax(`/${this.urlPrefix()}/namespaces?list=true`);
    }

  }

  _exports.default = NamespaceAdapter;
});
;define("vault/adapters/node", ["exports", "vault/adapters/application"], function (_exports, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/application"eaimeta@70e063a35619d71f

  var _default = _application.default.extend();

  _exports.default = _default;
});
;define("vault/adapters/oidc/assignment", ["exports", "vault/adapters/named-path"], function (_exports, _namedPath) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/named-path"eaimeta@70e063a35619d71f

  class OidcAssignmentAdapter extends _namedPath.default {
    pathForType() {
      return 'identity/oidc/assignment';
    }

  }

  _exports.default = OidcAssignmentAdapter;
});
;define("vault/adapters/oidc/client", ["exports", "vault/adapters/named-path"], function (_exports, _namedPath) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/named-path"eaimeta@70e063a35619d71f

  class OidcClientAdapter extends _namedPath.default {
    pathForType() {
      return 'identity/oidc/client';
    }

  }

  _exports.default = OidcClientAdapter;
});
;define("vault/adapters/oidc/key", ["exports", "vault/adapters/named-path"], function (_exports, _namedPath) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/named-path"eaimeta@70e063a35619d71f

  class OidcKeyAdapter extends _namedPath.default {
    pathForType() {
      return 'identity/oidc/key';
    }

    rotate(name, verification_ttl) {
      const data = verification_ttl ? {
        verification_ttl
      } : {};
      return this.ajax(`${this.urlForUpdateRecord(name, 'oidc/key')}/rotate`, 'POST', {
        data
      });
    }

  }

  _exports.default = OidcKeyAdapter;
});
;define("vault/adapters/oidc/provider", ["exports", "vault/adapters/named-path"], function (_exports, _namedPath) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/named-path"eaimeta@70e063a35619d71f

  class OidcProviderAdapter extends _namedPath.default {
    pathForType() {
      return 'identity/oidc/provider';
    }

  }

  _exports.default = OidcProviderAdapter;
});
;define("vault/adapters/oidc/scope", ["exports", "vault/adapters/named-path"], function (_exports, _namedPath) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/named-path"eaimeta@70e063a35619d71f

  class OidcScopeAdapter extends _namedPath.default {
    pathForType() {
      return 'identity/oidc/scope';
    }

  }

  _exports.default = OidcScopeAdapter;
});
;define("vault/adapters/permissions", ["exports", "vault/adapters/application"], function (_exports, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/application"eaimeta@70e063a35619d71f

  var _default = _application.default.extend({
    query() {
      return this.ajax(this.urlForQuery(), 'GET');
    },

    urlForQuery() {
      return this.buildURL() + '/internal/ui/resultant-acl';
    }

  });

  _exports.default = _default;
});
;define("vault/adapters/pki/action", ["exports", "@ember/debug", "vault/utils/path-encoding-helpers", "vault/adapters/application"], function (_exports, _debug, _pathEncodingHelpers, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/debug",0,"vault/utils/path-encoding-helpers",0,"vault/adapters/application"eaimeta@70e063a35619d71f

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  class PkiActionAdapter extends _application.default {
    constructor() {
      super(...arguments);

      _defineProperty(this, "namespace", 'v1');
    }

    urlForCreateRecord(modelName, snapshot) {
      const {
        type
      } = snapshot.record;
      const {
        actionType,
        useIssuer,
        issuerRef,
        mount
      } = snapshot.adapterOptions; // if the backend mount is passed, we want that to override the URL's mount path

      const backend = mount || snapshot.record.backend;

      if (!backend || !actionType) {
        throw new Error('URL for create record is missing required attributes');
      }

      const baseUrl = `${this.buildURL()}/${(0, _pathEncodingHelpers.encodePath)(backend)}`;

      switch (actionType) {
        case 'import':
          return useIssuer ? `${baseUrl}/issuers/import/bundle` : `${baseUrl}/config/ca`;

        case 'generate-root':
          return useIssuer ? `${baseUrl}/issuers/generate/root/${type}` : `${baseUrl}/root/generate/${type}`;

        case 'generate-csr':
          return useIssuer ? `${baseUrl}/issuers/generate/intermediate/${type}` : `${baseUrl}/intermediate/generate/${type}`;

        case 'sign-intermediate':
          return `${baseUrl}/issuer/${(0, _pathEncodingHelpers.encodePath)(issuerRef)}/sign-intermediate`;

        case 'rotate-root':
          return `${baseUrl}/root/rotate/${type}`;

        default:
          (true && !(false) && (0, _debug.assert)('actionType must be one of import, generate-root, generate-csr or sign-intermediate'));
      }
    }

    createRecord(store, type, snapshot) {
      const serializer = store.serializerFor(type.modelName);
      const url = this.urlForCreateRecord(type.modelName, snapshot); // Send actionType as serializer requestType so that we serialize data based on the endpoint

      const data = serializer.serialize(snapshot, snapshot.adapterOptions.actionType);
      return this.ajax(url, 'POST', {
        data
      }).then(result => ({
        // pki/action endpoints don't correspond with a single specific entity,
        // so in ember-data we'll map it to the request ID
        id: result.request_id,
        ...result
      }));
    }

  }

  _exports.default = PkiActionAdapter;
});
;define("vault/adapters/pki/cert", ["exports", "@ember/polyfills", "vault/adapters/pki"], function (_exports, _polyfills, _pki) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/polyfills",0,"vault/adapters/pki"eaimeta@70e063a35619d71f

  var _default = _pki.default.extend({
    url(role) {
      return `/v1/${role.backend}/issue/${role.name}`;
    },

    urlFor(backend, id) {
      let url = `${this.buildURL()}/${backend}/certs`;

      if (id) {
        url = `${this.buildURL()}/${backend}/cert/${id}`;
      }

      return url;
    },

    optionsForQuery(id) {
      const data = {};

      if (!id) {
        data['list'] = true;
      }

      return {
        data
      };
    },

    fetchByQuery(store, query) {
      const {
        backend,
        id
      } = query;
      return this.ajax(this.urlFor(backend, id), 'GET', this.optionsForQuery(id)).then(resp => {
        const data = {
          backend
        };

        if (id) {
          data.serial_number = id;
          data.id = id;
          data.id_for_nav = `cert/${id}`;
        }

        return (0, _polyfills.assign)({}, resp, data);
      });
    },

    query(store, type, query) {
      return this.fetchByQuery(store, query);
    },

    queryRecord(store, type, query) {
      return this.fetchByQuery(store, query);
    },

    updateRecord(store, type, snapshot) {
      if (snapshot.adapterOptions.method !== 'revoke') {
        return;
      }

      const id = snapshot.id;
      const backend = snapshot.record.get('backend');
      const data = {
        serial_number: id
      };
      return this.ajax(`${this.buildURL()}/${backend}/revoke`, 'POST', {
        data
      }).then(resp => {
        const data = {
          id,
          serial_number: id,
          backend
        };
        return (0, _polyfills.assign)({}, resp, data);
      });
    }

  });

  _exports.default = _default;
});
;define("vault/adapters/pki/certificate/base", ["exports", "vault/utils/path-encoding-helpers", "vault/adapters/application"], function (_exports, _pathEncodingHelpers, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/utils/path-encoding-helpers",0,"vault/adapters/application"eaimeta@70e063a35619d71f

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  class PkiCertificateBaseAdapter extends _application.default {
    constructor() {
      super(...arguments);

      _defineProperty(this, "namespace", 'v1');
    }

    getURL(backend, id) {
      const uri = `${this.buildURL()}/${(0, _pathEncodingHelpers.encodePath)(backend)}`;
      return id ? `${uri}/cert/${id}` : `${uri}/certs`;
    }

    fetchByQuery(query) {
      const {
        backend,
        id
      } = query;
      const data = !id ? {
        list: true
      } : {};
      return this.ajax(this.getURL(backend, id), 'GET', {
        data
      }).then(resp => {
        resp.data.backend = backend;

        if (id) {
          resp.data.id = id;
          resp.data.serial_number = id;
        }

        return resp;
      });
    }

    query(store, type, query) {
      return this.fetchByQuery(query);
    }

    queryRecord(store, type, query) {
      return this.fetchByQuery(query);
    } // the only way to update a record is by revoking it which will set the revocationTime property


    updateRecord(store, type, snapshot) {
      const {
        backend,
        serialNumber,
        certificate
      } = snapshot.record; // Revoke certificate requires either serial_number or certificate

      const data = serialNumber ? {
        serial_number: serialNumber
      } : {
        certificate
      };
      return this.ajax(`${this.buildURL()}/${(0, _pathEncodingHelpers.encodePath)(backend)}/revoke`, 'POST', {
        data
      }).then(response => {
        return {
          data: { ...this.serialize(snapshot),
            ...response.data
          }
        };
      });
    }

  }

  _exports.default = PkiCertificateBaseAdapter;
});
;define("vault/adapters/pki/certificate/generate", ["exports", "vault/utils/path-encoding-helpers", "vault/adapters/pki/certificate/base"], function (_exports, _pathEncodingHelpers, _base) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/utils/path-encoding-helpers",0,"vault/adapters/pki/certificate/base"eaimeta@70e063a35619d71f

  class PkiCertificateGenerateAdapter extends _base.default {
    urlForCreateRecord(modelName, snapshot) {
      const {
        role,
        backend
      } = snapshot.record;

      if (!role || !backend) {
        throw new Error('URL for create record is missing required attributes');
      }

      return `${this.buildURL()}/${(0, _pathEncodingHelpers.encodePath)(backend)}/issue/${(0, _pathEncodingHelpers.encodePath)(role)}`;
    }

  }

  _exports.default = PkiCertificateGenerateAdapter;
});
;define("vault/adapters/pki/certificate/sign", ["exports", "vault/utils/path-encoding-helpers", "vault/adapters/pki/certificate/base"], function (_exports, _pathEncodingHelpers, _base) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/utils/path-encoding-helpers",0,"vault/adapters/pki/certificate/base"eaimeta@70e063a35619d71f

  class PkiCertificateSignAdapter extends _base.default {
    urlForCreateRecord(modelName, snapshot) {
      const {
        role,
        backend
      } = snapshot.record;

      if (!role || !backend) {
        throw new Error('URL for create record is missing required attributes');
      }

      return `${this.buildURL()}/${(0, _pathEncodingHelpers.encodePath)(backend)}/sign/${(0, _pathEncodingHelpers.encodePath)(role)}`;
    }

  }

  _exports.default = PkiCertificateSignAdapter;
});
;define("vault/adapters/pki/config/acme", ["exports", "vault/utils/path-encoding-helpers", "vault/adapters/pki/config/base"], function (_exports, _pathEncodingHelpers, _base) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/utils/path-encoding-helpers",0,"vault/adapters/pki/config/base"eaimeta@70e063a35619d71f

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  class PkiConfigAcmeAdapter extends _base.default {
    constructor() {
      super(...arguments);

      _defineProperty(this, "namespace", 'v1');
    }

    _url(backend) {
      return `${this.buildURL()}/${(0, _pathEncodingHelpers.encodePath)(backend)}/config/acme`;
    }

  }

  _exports.default = PkiConfigAcmeAdapter;
});
;define("vault/adapters/pki/config/base", ["exports", "vault/adapters/application"], function (_exports, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/application"eaimeta@70e063a35619d71f

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  class PkiConfigBaseAdapter extends _application.default {
    constructor() {
      super(...arguments);

      _defineProperty(this, "namespace", 'v1');
    }

    findRecord(store, type, backend) {
      return this.ajax(this._url(backend), 'GET').then(resp => {
        return resp.data;
      });
    }

    updateRecord(store, type, snapshot) {
      const data = snapshot.serialize();
      return this.ajax(this._url(snapshot.record.id), 'POST', {
        data
      });
    }

  }

  _exports.default = PkiConfigBaseAdapter;
});
;define("vault/adapters/pki/config/cluster", ["exports", "vault/utils/path-encoding-helpers", "vault/adapters/pki/config/base"], function (_exports, _pathEncodingHelpers, _base) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/utils/path-encoding-helpers",0,"vault/adapters/pki/config/base"eaimeta@70e063a35619d71f

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  class PkiConfigClusterAdapter extends _base.default {
    constructor() {
      super(...arguments);

      _defineProperty(this, "namespace", 'v1');
    }

    _url(backend) {
      return `${this.buildURL()}/${(0, _pathEncodingHelpers.encodePath)(backend)}/config/cluster`;
    }

  }

  _exports.default = PkiConfigClusterAdapter;
});
;define("vault/adapters/pki/config/crl", ["exports", "vault/utils/path-encoding-helpers", "vault/adapters/pki/config/base"], function (_exports, _pathEncodingHelpers, _base) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/utils/path-encoding-helpers",0,"vault/adapters/pki/config/base"eaimeta@70e063a35619d71f

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  class PkiConfigCrlAdapter extends _base.default {
    constructor() {
      super(...arguments);

      _defineProperty(this, "namespace", 'v1');
    }

    _url(backend) {
      return `${this.buildURL()}/${(0, _pathEncodingHelpers.encodePath)(backend)}/config/crl`;
    }

  }

  _exports.default = PkiConfigCrlAdapter;
});
;define("vault/adapters/pki/config/urls", ["exports", "vault/utils/path-encoding-helpers", "vault/adapters/pki/config/base"], function (_exports, _pathEncodingHelpers, _base) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/utils/path-encoding-helpers",0,"vault/adapters/pki/config/base"eaimeta@70e063a35619d71f

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  class PkiConfigUrlsAdapter extends _base.default {
    constructor() {
      super(...arguments);

      _defineProperty(this, "namespace", 'v1');
    }

    _url(backend) {
      return `${this.buildURL()}/${(0, _pathEncodingHelpers.encodePath)(backend)}/config/urls`;
    }

  }

  _exports.default = PkiConfigUrlsAdapter;
});
;define("vault/adapters/pki/issuer", ["exports", "vault/adapters/application", "vault/utils/path-encoding-helpers", "rsvp", "vault/utils/parse-pki-cert"], function (_exports, _application, _pathEncodingHelpers, _rsvp, _parsePkiCert) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/application",0,"vault/utils/path-encoding-helpers",0,"rsvp",0,"vault/utils/parse-pki-cert"eaimeta@70e063a35619d71f

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  class PkiIssuerAdapter extends _application.default {
    constructor() {
      super(...arguments);

      _defineProperty(this, "namespace", 'v1');
    }

    _getBackend(snapshot) {
      const {
        record,
        adapterOptions
      } = snapshot;
      return adapterOptions?.mount || record.backend;
    }

    optionsForQuery(id) {
      const data = {};

      if (!id) {
        data['list'] = true;
      }

      return {
        data
      };
    }

    urlForQuery(backend, id) {
      const baseUrl = `${this.buildURL()}/${(0, _pathEncodingHelpers.encodePath)(backend)}`;

      if (id) {
        return `${baseUrl}/issuer/${(0, _pathEncodingHelpers.encodePath)(id)}`;
      } else {
        return `${baseUrl}/issuers`;
      }
    }

    async getIssuerMetadata(store, type, query, response, id) {
      const keyInfo = response.data.key_info[id];

      try {
        const issuerRecord = await this.queryRecord(store, type, {
          id,
          backend: query.backend
        });
        const {
          data
        } = issuerRecord;
        const isRoot = await (0, _parsePkiCert.verifyCertificates)(data.certificate, data.certificate);
        const parsedCertificate = (0, _parsePkiCert.parseCertificate)(data.certificate);
        return { ...keyInfo,
          ...data,
          isRoot,
          parsedCertificate: {
            common_name: parsedCertificate.common_name
          }
        };
      } catch (e) {
        return { ...keyInfo,
          issuer_id: id
        };
      }
    }

    updateRecord(store, type, snapshot) {
      const {
        issuerId
      } = snapshot.record;

      const backend = this._getBackend(snapshot);

      const data = this.serialize(snapshot);
      const url = this.urlForQuery(backend, issuerId);
      return this.ajax(url, 'POST', {
        data
      });
    }

    query(store, type, query) {
      const {
        backend,
        isListView
      } = query;
      const url = this.urlForQuery(backend);
      return this.ajax(url, 'GET', this.optionsForQuery()).then(async res => {
        // To show issuer meta data tags, we have a flag called isListView and only want to
        // grab each issuer data only if there are less than 10 issuers to avoid making too many requests
        if (isListView && res.data.keys.length <= 10) {
          const keyInfoArray = await (0, _rsvp.all)(res.data.keys.map(id => this.getIssuerMetadata(store, type, query, res, id)));
          const keyInfo = {};
          res.data.keys.forEach(issuerId => {
            keyInfo[issuerId] = keyInfoArray.find(newKey => newKey.issuer_id === issuerId);
          });
          res.data.key_info = keyInfo;
          return res;
        }

        return res;
      });
    }

    queryRecord(store, type, query) {
      const {
        backend,
        id
      } = query;
      return this.ajax(this.urlForQuery(backend, id), 'GET', this.optionsForQuery(id));
    }

    deleteAllIssuers(backend) {
      const deleteAllIssuersAndKeysUrl = `${this.buildURL()}/${(0, _pathEncodingHelpers.encodePath)(backend)}/root`;
      return this.ajax(deleteAllIssuersAndKeysUrl, 'DELETE');
    }

  }

  _exports.default = PkiIssuerAdapter;
});
;define("vault/adapters/pki/key", ["exports", "vault/adapters/application", "vault/utils/path-encoding-helpers"], function (_exports, _application, _pathEncodingHelpers) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/application",0,"vault/utils/path-encoding-helpers"eaimeta@70e063a35619d71f

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  class PkiKeyAdapter extends _application.default {
    constructor() {
      super(...arguments);

      _defineProperty(this, "namespace", 'v1');
    }

    _baseUrl(backend, id) {
      const url = `${this.buildURL()}/${(0, _pathEncodingHelpers.encodePath)(backend)}`;

      if (id) {
        return url + '/key/' + (0, _pathEncodingHelpers.encodePath)(id);
      }

      return url + '/keys';
    }

    createRecord(store, type, snapshot) {
      const {
        record,
        adapterOptions
      } = snapshot;

      let url = this._baseUrl(record.backend);

      if (adapterOptions.import) {
        url = `${url}/import`;
      } else {
        url = `${url}/generate/${record.type}`;
      }

      return this.ajax(url, 'POST', {
        data: this.serialize(snapshot)
      }).then(resp => {
        return resp;
      });
    }

    updateRecord(store, type, snapshot) {
      const {
        record
      } = snapshot;
      const {
        key_name
      } = this.serialize(snapshot);

      const url = this._baseUrl(record.backend, record.id);

      return this.ajax(url, 'POST', {
        data: {
          key_name
        }
      });
    }

    query(store, type, query) {
      const {
        backend
      } = query;
      return this.ajax(this._baseUrl(backend), 'GET', {
        data: {
          list: true
        }
      });
    }

    queryRecord(store, type, query) {
      const {
        backend,
        id
      } = query;
      return this.ajax(this._baseUrl(backend, id), 'GET');
    }

    deleteRecord(store, type, snapshot) {
      const {
        id,
        record
      } = snapshot;
      return this.ajax(this._baseUrl(record.backend, id), 'DELETE');
    }

  }

  _exports.default = PkiKeyAdapter;
});
;define("vault/adapters/pki/role", ["exports", "vault/adapters/application", "@ember/polyfills", "vault/utils/path-encoding-helpers"], function (_exports, _application, _polyfills, _pathEncodingHelpers) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/application",0,"@ember/polyfills",0,"vault/utils/path-encoding-helpers"eaimeta@70e063a35619d71f

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  class PkiRoleAdapter extends _application.default {
    constructor() {
      super(...arguments);

      _defineProperty(this, "namespace", 'v1');
    }

    _urlForRole(backend, id) {
      let url = `${this.buildURL()}/${(0, _pathEncodingHelpers.encodePath)(backend)}/roles`;

      if (id) {
        url = url + '/' + (0, _pathEncodingHelpers.encodePath)(id);
      }

      return url;
    }

    _optionsForQuery(id) {
      const data = {};

      if (!id) {
        data['list'] = true;
      }

      return {
        data
      };
    }

    createRecord(store, type, snapshot) {
      const name = snapshot.attr('name');

      const url = this._urlForRole(snapshot.record.backend, name);

      return this.ajax(url, 'POST', {
        data: this.serialize(snapshot)
      }).then(() => {
        return {
          id: name,
          name,
          backend: snapshot.record.backend
        };
      });
    }

    updateRecord(store, type, snapshot) {
      const {
        name,
        backend
      } = snapshot.record;
      const data = this.serialize(snapshot);

      const url = this._urlForRole(backend, name);

      return this.ajax(url, 'POST', {
        data
      });
    }

    fetchByQuery(store, query) {
      const {
        id,
        backend
      } = query;
      return this.ajax(this._urlForRole(backend, id), 'GET', this._optionsForQuery(id)).then(resp => {
        const data = {
          id,
          name: id,
          backend
        };
        return (0, _polyfills.assign)({}, resp, data);
      });
    }

    query(store, type, query) {
      return this.fetchByQuery(store, query);
    }

    queryRecord(store, type, query) {
      return this.fetchByQuery(store, query);
    }

    deleteRecord(store, type, snapshot) {
      const {
        id,
        record
      } = snapshot;
      return this.ajax(this._urlForRole(record.backend, id), 'DELETE');
    }

  }

  _exports.default = PkiRoleAdapter;
});
;define("vault/adapters/pki/sign-intermediate", ["exports", "vault/utils/path-encoding-helpers", "vault/adapters/application"], function (_exports, _pathEncodingHelpers, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/utils/path-encoding-helpers",0,"vault/adapters/application"eaimeta@70e063a35619d71f

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  class PkiSignIntermediateAdapter extends _application.default {
    constructor() {
      super(...arguments);

      _defineProperty(this, "namespace", 'v1');
    }

    createRecord(store, type, snapshot) {
      const serializer = store.serializerFor(type.modelName);
      const {
        backend,
        issuerRef
      } = snapshot.record;
      const url = `${this.buildURL()}/${(0, _pathEncodingHelpers.encodePath)(backend)}/issuer/${(0, _pathEncodingHelpers.encodePath)(issuerRef)}/sign-intermediate`;
      const data = serializer.serialize(snapshot, type);
      return this.ajax(url, 'POST', {
        data
      }).then(result => ({
        // sign-intermediate can happen multiple times per issuer,
        // so the ID needs to be unique from the issuer ID
        id: result.request_id,
        ...result
      }));
    }

  }

  _exports.default = PkiSignIntermediateAdapter;
});
;define("vault/adapters/pki/tidy", ["exports", "vault/adapters/application", "vault/utils/path-encoding-helpers"], function (_exports, _application, _pathEncodingHelpers) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/application",0,"vault/utils/path-encoding-helpers"eaimeta@70e063a35619d71f

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  class PkiTidyAdapter extends _application.default {
    constructor() {
      super(...arguments);

      _defineProperty(this, "namespace", 'v1');
    }

    _baseUrl(backend) {
      return `${this.buildURL()}/${(0, _pathEncodingHelpers.encodePath)(backend)}`;
    } // single tidy operations (manual) are always a new record


    createRecord(store, type, snapshot) {
      const {
        backend
      } = snapshot.record;
      const {
        tidyType
      } = snapshot.adapterOptions;

      if (tidyType === 'auto') {
        throw new Error('Auto tidy type models are never new, please use findRecord');
      }

      const url = `${this._baseUrl(backend)}/tidy`;
      return this.ajax(url, 'POST', {
        data: this.serialize(snapshot, tidyType)
      });
    } // saving auto-tidy config POST requests will always update


    updateRecord(store, type, snapshot) {
      const backend = snapshot.record.id;
      const {
        tidyType
      } = snapshot.adapterOptions;

      if (tidyType === 'manual') {
        throw new Error('Manual tidy type models are always new, please use createRecord');
      }

      const url = `${this._baseUrl(backend)}/config/auto-tidy`;
      return this.ajax(url, 'POST', {
        data: this.serialize(snapshot, tidyType)
      });
    }

    findRecord(store, type, backend) {
      // only auto-tidy will ever be read, no need to pass the type here
      return this.ajax(`${this._baseUrl(backend)}/config/auto-tidy`, 'GET').then(resp => {
        return resp.data;
      });
    }

    cancelTidy(backend) {
      const url = `${this._baseUrl(backend)}`;
      return this.ajax(`${url}/tidy-cancel`, 'POST');
    }

  }

  _exports.default = PkiTidyAdapter;
});
;define("vault/adapters/policy", ["exports", "@ember/polyfills", "vault/adapters/application"], function (_exports, _polyfills, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/polyfills",0,"vault/adapters/application"eaimeta@70e063a35619d71f

  var _default = _application.default.extend({
    namespace: 'v1/sys',

    pathForType(type) {
      const path = type.replace('policy', 'policies');
      return path;
    },

    createOrUpdate(store, type, snapshot) {
      const serializer = store.serializerFor('policy');
      const data = serializer.serialize(snapshot);
      const name = snapshot.attr('name');
      return this.ajax(this.buildURL(type.modelName, name), 'PUT', {
        data
      }).then(() => {
        // doing this to make it like a Vault response - ember data doesn't like 204s if it's not a DELETE
        return {
          data: (0, _polyfills.assign)({}, this.serialize(snapshot), {
            id: name
          })
        };
      });
    },

    createRecord() {
      return this.createOrUpdate(...arguments);
    },

    updateRecord() {
      return this.createOrUpdate(...arguments);
    },

    query(store, type) {
      return this.ajax(this.buildURL(type.modelName), 'GET', {
        data: {
          list: true
        }
      });
    }

  });

  _exports.default = _default;
});
;define("vault/adapters/policy/acl", ["exports", "vault/adapters/policy"], function (_exports, _policy) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/policy"eaimeta@70e063a35619d71f

  var _default = _policy.default.extend();

  _exports.default = _default;
});
;define("vault/adapters/policy/egp", ["exports", "vault/adapters/policy"], function (_exports, _policy) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/policy"eaimeta@70e063a35619d71f

  var _default = _policy.default.extend();

  _exports.default = _default;
});
;define("vault/adapters/policy/rgp", ["exports", "vault/adapters/policy"], function (_exports, _policy) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/policy"eaimeta@70e063a35619d71f

  var _default = _policy.default.extend();

  _exports.default = _default;
});
;define("vault/adapters/raft-join", ["exports", "vault/adapters/application"], function (_exports, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/application"eaimeta@70e063a35619d71f

  var _default = _application.default.extend({
    urlForCreateRecord() {
      return '/v1/sys/storage/raft/join';
    }

  });

  _exports.default = _default;
});
;define("vault/adapters/role-aws", ["exports", "vault/adapters/application", "vault/utils/path-encoding-helpers"], function (_exports, _application, _pathEncodingHelpers) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/application",0,"vault/utils/path-encoding-helpers"eaimeta@70e063a35619d71f

  var _default = _application.default.extend({
    namespace: 'v1',

    createOrUpdate(store, type, snapshot, requestType) {
      const {
        name,
        backend
      } = snapshot.record;
      const serializer = store.serializerFor(type.modelName);
      const data = serializer.serialize(snapshot, requestType);
      const url = this.urlForRole(backend, name);
      return this.ajax(url, 'POST', {
        data
      }).then(resp => {
        // Ember data doesn't like 204 responses except for DELETE method
        const response = resp || {
          data: {}
        };
        response.data.name = name;
        response.data.backend = name;
        return response;
      });
    },

    createRecord() {
      return this.createOrUpdate(...arguments);
    },

    updateRecord() {
      return this.createOrUpdate(...arguments, 'update');
    },

    deleteRecord(store, type, snapshot) {
      const {
        id
      } = snapshot;
      return this.ajax(this.urlForRole(snapshot.record.get('backend'), id), 'DELETE');
    },

    pathForType() {
      return 'roles';
    },

    urlForRole(backend, id) {
      let url = `${this.buildURL()}/${(0, _pathEncodingHelpers.encodePath)(backend)}/roles`;

      if (id) {
        url = url + '/' + (0, _pathEncodingHelpers.encodePath)(id);
      }

      return url;
    },

    optionsForQuery(id) {
      const data = {};

      if (!id) {
        data['list'] = true;
      }

      return {
        data
      };
    },

    fetchByQuery(store, query) {
      const {
        id,
        backend
      } = query;
      return this.ajax(this.urlForRole(backend, id), 'GET', this.optionsForQuery(id)).then(resp => {
        const data = {
          id,
          name: id,
          backend
        };
        return { ...resp,
          ...data
        };
      });
    },

    query(store, type, query) {
      return this.fetchByQuery(store, query);
    },

    queryRecord(store, type, query) {
      return this.fetchByQuery(store, query);
    }

  });

  _exports.default = _default;
});
;define("vault/adapters/role-jwt", ["exports", "vault/adapters/application", "@ember/service", "vault/utils/path-encoding-helpers"], function (_exports, _application, _service, _pathEncodingHelpers) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/application",0,"@ember/service",0,"vault/utils/path-encoding-helpers"eaimeta@70e063a35619d71f

  var _default = _application.default.extend({
    router: (0, _service.inject)(),

    findRecord(store, type, id, snapshot) {
      let [path, role] = JSON.parse(id);
      path = (0, _pathEncodingHelpers.encodePath)(path);
      const namespace = snapshot?.adapterOptions.namespace;
      const url = `/v1/auth/${path}/oidc/auth_url`;
      let redirect_uri = `${window.location.origin}${this.router.urlFor('vault.cluster.oidc-callback', {
        auth_path: path
      })}`;

      if (namespace) {
        redirect_uri = `${window.location.origin}${this.router.urlFor('vault.cluster.oidc-callback', {
          auth_path: path
        }, {
          queryParams: {
            namespace
          }
        })}`;
      }

      return this.ajax(url, 'POST', {
        data: {
          role,
          redirect_uri
        }
      });
    }

  });

  _exports.default = _default;
});
;define("vault/adapters/role-ssh", ["exports", "@ember/polyfills", "rsvp", "vault/adapters/application", "vault/utils/path-encoding-helpers"], function (_exports, _polyfills, _rsvp, _application, _pathEncodingHelpers) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/polyfills",0,"rsvp",0,"vault/adapters/application",0,"vault/utils/path-encoding-helpers"eaimeta@70e063a35619d71f

  var _default = _application.default.extend({
    namespace: 'v1',

    createOrUpdate(store, type, snapshot, requestType) {
      const {
        name,
        backend
      } = snapshot.record;
      const serializer = store.serializerFor(type.modelName);
      const data = serializer.serialize(snapshot, requestType);
      const url = this.urlForRole(backend, name);
      return this.ajax(url, 'POST', {
        data
      }).then(resp => {
        // Ember data doesn't like 204 responses except for DELETE method
        const response = resp || {
          data: {}
        };
        response.data.name = name;
        return response;
      });
    },

    createRecord() {
      return this.createOrUpdate(...arguments);
    },

    updateRecord() {
      return this.createOrUpdate(...arguments, 'update');
    },

    deleteRecord(store, type, snapshot) {
      const {
        id
      } = snapshot;
      return this.ajax(this.urlForRole(snapshot.record.get('backend'), id), 'DELETE');
    },

    pathForType() {
      return 'roles';
    },

    urlForRole(backend, id) {
      let url = `${this.buildURL()}/${(0, _pathEncodingHelpers.encodePath)(backend)}/roles`;

      if (id) {
        url = url + '/' + (0, _pathEncodingHelpers.encodePath)(id);
      }

      return url;
    },

    optionsForQuery(id) {
      const data = {};

      if (!id) {
        data['list'] = true;
      }

      return {
        data
      };
    },

    fetchByQuery(store, query) {
      const {
        id,
        backend
      } = query;
      let zeroAddressAjax = (0, _rsvp.resolve)();
      const queryAjax = this.ajax(this.urlForRole(backend, id), 'GET', this.optionsForQuery(id));

      if (!id) {
        zeroAddressAjax = this.findAllZeroAddress(store, query);
      }

      return (0, _rsvp.allSettled)([queryAjax, zeroAddressAjax]).then(results => {
        // query result 404d, so throw the adapterError
        if (!results[0].value) {
          throw results[0].reason;
        }

        const resp = {
          id,
          name: id,
          backend,
          data: {}
        };
        results.forEach(result => {
          if (result.value) {
            if (result.value.data.roles) {
              resp.data = (0, _polyfills.assign)({}, resp.data, {
                zero_address_roles: result.value.data.roles
              });
            } else {
              resp.data = (0, _polyfills.assign)({}, resp.data, result.value.data);
            }
          }
        });
        return resp;
      });
    },

    findAllZeroAddress(store, query) {
      const {
        backend
      } = query;
      const url = `/v1/${(0, _pathEncodingHelpers.encodePath)(backend)}/config/zeroaddress`;
      return this.ajax(url, 'GET');
    },

    query(store, type, query) {
      return this.fetchByQuery(store, query);
    },

    queryRecord(store, type, query) {
      return this.fetchByQuery(store, query);
    }

  });

  _exports.default = _default;
});
;define("vault/adapters/secret-engine", ["exports", "@ember/polyfills", "vault/adapters/application", "vault/utils/path-encoding-helpers", "vault/helpers/split-object"], function (_exports, _polyfills, _application, _pathEncodingHelpers, _splitObject) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/polyfills",0,"vault/adapters/application",0,"vault/utils/path-encoding-helpers",0,"vault/helpers/split-object"eaimeta@70e063a35619d71f

  var _default = _application.default.extend({
    url(path) {
      const url = `${this.buildURL()}/mounts`;
      return path ? url + '/' + (0, _pathEncodingHelpers.encodePath)(path) : url;
    },

    urlForConfig(path) {
      return `/v1/${path}/config`;
    },

    internalURL(path) {
      let url = `/${this.urlPrefix()}/internal/ui/mounts`;

      if (path) {
        url = `${url}/${(0, _pathEncodingHelpers.encodePath)(path)}`;
      }

      return url;
    },

    pathForType() {
      return 'mounts';
    },

    async query(store, type, query) {
      let mountModel, configModel;

      try {
        mountModel = await this.ajax(this.internalURL(query.path), 'GET'); // if kv2 then add the config data to the mountModel
        // version comes in as a string

        if (mountModel?.data?.type === 'kv' && mountModel?.data?.options?.version === '2') {
          configModel = await this.ajax(this.urlForConfig(query.path), 'GET');
          mountModel.data = { ...mountModel.data,
            ...configModel.data
          };
        }
      } catch (error) {
        // no path means this was an error on listing
        if (!query.path || !mountModel) {
          throw error;
        } // control groups will throw a 403 permission denied error. If this happens return the mountModel
        // error is handled on routing

      }

      return mountModel;
    },

    async createRecord(store, type, snapshot) {
      const serializer = store.serializerFor(type.modelName);
      let data = serializer.serialize(snapshot);
      const path = snapshot.attr('path'); // for kv2 we make two network requests

      data.config.id = path; // config relationship needs an id so use path for now

      if (data.type === 'kv' && data.options.version === 2) {
        // data has both data for sys mount and the config, we need to separate them
        const splitObjects = (0, _splitObject.splitObject)(data, ['max_versions', 'delete_version_after', 'cas_required']);
        let configData;
        [configData, data] = splitObjects;

        if (!data.id) {
          data.id = path;
        } // first create the engine


        await this.ajax(this.url(path), 'POST', {
          data
        }); // second post to config

        try {
          await this.ajax(this.urlForConfig(path), 'POST', {
            data: configData
          });
        } catch (e) {// error here means you do not have update capabilities to config endpoint. If that's the case we show a flash message in the component and continue with the transition.
          // the error is handled by mount-backend-form component which checks capabilities before hitting the save to the adapter.
          // we do not handle the error here because we want the secret-engine to mount successfully and to continue the flow.
        }

        return {
          data: (0, _polyfills.assign)({}, data, {
            path: path + '/',
            id: path
          })
        };
      } else {
        return this.ajax(this.url(path), 'POST', {
          data
        }).then(() => {
          // ember data doesn't like 204s if it's not a DELETE
          return {
            data: (0, _polyfills.assign)({}, data, {
              path: path + '/',
              id: path
            })
          };
        });
      }
    },

    findRecord(store, type, path, snapshot) {
      if (snapshot.attr('type') === 'ssh') {
        return this.ajax(`/v1/${(0, _pathEncodingHelpers.encodePath)(path)}/config/ca`, 'GET');
      }

      return;
    },

    queryRecord(store, type, query) {
      if (query.type === 'aws') {
        return this.ajax(`/v1/${(0, _pathEncodingHelpers.encodePath)(query.backend)}/config/lease`, 'GET').then(resp => {
          resp.path = query.backend + '/';
          return resp;
        });
      }

      return;
    },

    updateRecord(store, type, snapshot) {
      const {
        apiPath,
        options,
        adapterMethod
      } = snapshot.adapterOptions;

      if (adapterMethod) {
        return this[adapterMethod](...arguments);
      }

      if (apiPath) {
        const serializer = store.serializerFor(type.modelName);
        const data = serializer.serialize(snapshot);
        const path = (0, _pathEncodingHelpers.encodePath)(snapshot.id);
        return this.ajax(`/v1/${path}/${apiPath}`, options.isDelete ? 'DELETE' : 'POST', {
          data
        });
      }
    },

    saveAWSRoot(store, type, snapshot) {
      const {
        data
      } = snapshot.adapterOptions;
      const path = (0, _pathEncodingHelpers.encodePath)(snapshot.id);
      return this.ajax(`/v1/${path}/config/root`, 'POST', {
        data
      });
    },

    saveAWSLease(store, type, snapshot) {
      const {
        data
      } = snapshot.adapterOptions;
      const path = (0, _pathEncodingHelpers.encodePath)(snapshot.id);
      return this.ajax(`/v1/${path}/config/lease`, 'POST', {
        data
      });
    },

    saveZeroAddressConfig(store, type, snapshot) {
      const path = (0, _pathEncodingHelpers.encodePath)(snapshot.id);
      const roles = store.peekAll('role-ssh').filterBy('zeroAddress').mapBy('id').join(',');
      const url = `/v1/${path}/config/zeroaddress`;
      const data = {
        roles
      };

      if (roles === '') {
        return this.ajax(url, 'DELETE');
      }

      return this.ajax(url, 'POST', {
        data
      });
    }

  });

  _exports.default = _default;
});
;define("vault/adapters/secret-v2-version", ["exports", "@ember-data/adapter/error", "@ember/utils", "@ember/object", "vault/adapters/application", "vault/utils/path-encoding-helpers", "@ember/service"], function (_exports, _error, _utils, _object, _application, _pathEncodingHelpers, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/adapter/error",0,"@ember/utils",0,"@ember/object",0,"vault/adapters/application",0,"vault/utils/path-encoding-helpers",0,"@ember/service"eaimeta@70e063a35619d71f

  var _default = _application.default.extend({
    store: (0, _service.inject)(),
    namespace: 'v1',

    _url(backend, id) {
      let infix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'data';
      let url = `${this.buildURL()}/${(0, _pathEncodingHelpers.encodePath)(backend)}/${infix}/`;

      if (!(0, _utils.isEmpty)(id)) {
        url = url + (0, _pathEncodingHelpers.encodePath)(id);
      }

      return url;
    },

    urlForFindRecord(id) {
      let [backend, path, version] = JSON.parse(id);

      let base = this._url(backend, path);

      return version ? base + `?version=${version}` : base;
    },

    urlForQueryRecord(id) {
      return this.urlForFindRecord(id);
    },

    findRecord() {
      return this._super(...arguments).catch(errorOrModel => {
        // if the response is a real 404 or if the secret is gated by a control group this will be an error,
        // otherwise the response will be the body of a deleted / destroyed version
        if (errorOrModel instanceof _error.default) {
          throw errorOrModel;
        }

        return errorOrModel;
      });
    },

    async getSecretDataVersion(backend, id) {
      // used in secret-edit route when you don't have current version and you need it for pulling the correct secret-v2-version record
      let url = this._url(backend, id);

      let response = await this.ajax(this._url(backend, id), 'GET');
      return response.data.metadata.version;
    },

    queryRecord(id, options) {
      return this.ajax(this.urlForQueryRecord(id), 'GET', options).then(resp => {
        if (options.wrapTTL) {
          return resp;
        }

        resp.id = id;
        resp.backend = backend;
        return resp;
      });
    },

    querySecretDataByVersion(id) {
      return this.ajax(this.urlForQueryRecord(id), 'GET').then(resp => {
        return resp.data;
      }).catch(error => {
        return error.data;
      });
    },

    urlForCreateRecord(modelName, snapshot) {
      let backend = snapshot.belongsTo('secret').belongsTo('engine').id;
      let path = snapshot.attr('path');
      return this._url(backend, path);
    },

    createRecord(store, modelName, snapshot) {
      let backend = snapshot.belongsTo('secret').belongsTo('engine').id;
      let path = snapshot.attr('path');
      return this._super(...arguments).then(resp => {
        resp.id = JSON.stringify([backend, path, resp.version]);
        return resp;
      });
    },

    urlForUpdateRecord(id) {
      let [backend, path] = JSON.parse(id);
      return this._url(backend, path);
    },

    async deleteLatestVersion(backend, path) {
      try {
        await this.ajax(this._url(backend, path, 'data'), 'DELETE');
        let model = this.store.peekRecord('secret-v2-version', path);
        await model.reload();
        return model && model.rollbackAttributes();
      } catch (e) {
        return e;
      }
    },

    async undeleteVersion(backend, path, currentVersionForNoReadMetadata) {
      try {
        await this.ajax(this._url(backend, path, 'undelete'), 'POST', {
          data: {
            versions: [currentVersionForNoReadMetadata]
          }
        });
        let model = this.store.peekRecord('secret-v2-version', path);
        await model.reload();
        return model && model.rollbackAttributes();
      } catch (e) {
        return e;
      }
    },

    async softDelete(backend, path, version) {
      try {
        await this.ajax(this._url(backend, path, 'delete'), 'POST', {
          data: {
            versions: [version]
          }
        });
        let model = this.store.peekRecord('secret-v2-version', path);
        await model.reload();
        return model && model.rollbackAttributes();
      } catch (e) {
        return e;
      }
    },

    async deleteByDeleteType(backend, path, deleteType, version) {
      try {
        await this.ajax(this._url(backend, path, deleteType), 'POST', {
          data: {
            versions: [version]
          }
        });
        let model = this.store.peekRecord('secret-v2-version', path);
        await model.reload();
        return model && model.rollbackAttributes();
      } catch (e) {
        return e;
      }
    },

    v2DeleteOperation(store, id) {
      let deleteType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'delete';
      let currentVersionForNoReadMetadata = arguments.length > 3 ? arguments[3] : undefined;
      let [backend, path, version] = JSON.parse(id); // deleteType should be 'delete', 'destroy', 'undelete', 'delete-latest-version', 'destroy-version'

      if (currentVersionForNoReadMetadata && deleteType === 'delete' || deleteType === 'delete-latest-version') {
        // moved to async to away model reload which is a promise
        return this.deleteLatestVersion(backend, path);
      } else if (deleteType === 'undelete' && !version) {
        // happens when no read access to metadata
        return this.undeleteVersion(backend, path, currentVersionForNoReadMetadata);
      } else if (deleteType === 'soft-delete') {
        return this.softDelete(backend, path, version);
      } else {
        version = version || currentVersionForNoReadMetadata;
        return this.deleteByDeleteType(backend, path, deleteType, version);
      }
    },

    handleResponse(status, headers, payload, requestData) {
      // the body of the 404 will have some relevant information
      if (status === 404 && (0, _object.get)(payload, 'data.metadata')) {
        return this._super(200, headers, payload, requestData);
      }

      return this._super(...arguments);
    }

  });

  _exports.default = _default;
});
;define("vault/adapters/secret-v2", ["exports", "@ember/utils", "vault/adapters/application", "vault/utils/path-encoding-helpers"], function (_exports, _utils, _application, _pathEncodingHelpers) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/utils",0,"vault/adapters/application",0,"vault/utils/path-encoding-helpers"eaimeta@70e063a35619d71f

  var _default = _application.default.extend({
    namespace: 'v1',

    _url(backend, id) {
      let url = `${this.buildURL()}/${(0, _pathEncodingHelpers.encodePath)(backend)}/metadata/`;

      if (!(0, _utils.isEmpty)(id)) {
        url = url + (0, _pathEncodingHelpers.encodePath)(id);
      }

      return url;
    },

    // we override query here because the query object has a bunch of client-side
    // concerns and we only want to send "list" to the server
    query(store, type, query) {
      let {
        backend,
        id
      } = query;
      return this.ajax(this._url(backend, id), 'GET', {
        data: {
          list: true
        }
      }).then(resp => {
        resp.id = id;
        resp.backend = backend;
        return resp;
      });
    },

    urlForQueryRecord(query) {
      let {
        id,
        backend
      } = query;
      return this._url(backend, id);
    },

    queryRecord(store, type, query) {
      let {
        backend,
        id
      } = query;
      return this.ajax(this._url(backend, id), 'GET').then(resp => {
        resp.id = id;
        resp.backend = backend;
        return resp;
      });
    },

    detailURL(snapshot) {
      let backend = snapshot.belongsTo('engine', {
        id: true
      }) || snapshot.attr('engineId');
      let {
        id
      } = snapshot;
      return this._url(backend, id);
    },

    urlForUpdateRecord(store, type, snapshot) {
      return this.detailURL(snapshot);
    },

    urlForCreateRecord(modelName, snapshot) {
      return this.detailURL(snapshot);
    },

    urlForDeleteRecord(store, type, snapshot) {
      return this.detailURL(snapshot);
    }

  });

  _exports.default = _default;
});
;define("vault/adapters/secret", ["exports", "@ember/utils", "vault/adapters/application", "vault/utils/path-encoding-helpers"], function (_exports, _utils, _application, _pathEncodingHelpers) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/utils",0,"vault/adapters/application",0,"vault/utils/path-encoding-helpers"eaimeta@70e063a35619d71f

  var _default = _application.default.extend({
    namespace: 'v1',

    createOrUpdate(store, type, snapshot) {
      const serializer = store.serializerFor(type.modelName);
      const data = serializer.serialize(snapshot);
      const {
        id
      } = snapshot;
      const path = snapshot.record.path;
      return this.ajax(this.urlForSecret(snapshot.attr('backend'), path || id), 'POST', {
        data
      }).then(() => {
        data.id = path || id;
        return data;
      });
    },

    createRecord() {
      return this.createOrUpdate(...arguments);
    },

    updateRecord() {
      return this.createOrUpdate(...arguments);
    },

    deleteRecord(store, type, snapshot) {
      const {
        id
      } = snapshot;
      return this.ajax(this.urlForSecret(snapshot.attr('backend'), id), 'DELETE');
    },

    urlForSecret(backend, id) {
      let url = `${this.buildURL()}/${(0, _pathEncodingHelpers.encodePath)(backend)}/`;

      if (!(0, _utils.isEmpty)(id)) {
        url = url + (0, _pathEncodingHelpers.encodePath)(id);
      }

      return url;
    },

    pathForType() {
      return 'mounts';
    },

    optionsForQuery(id, action, wrapTTL) {
      const data = {};

      if (action === 'query') {
        data.list = true;
      }

      if (wrapTTL) {
        return {
          data,
          wrapTTL
        };
      }

      return {
        data
      };
    },

    fetchByQuery(query, action) {
      const {
        id,
        backend,
        wrapTTL
      } = query;
      return this.ajax(this.urlForSecret(backend, id), 'GET', this.optionsForQuery(id, action, wrapTTL)).then(resp => {
        if (wrapTTL) {
          return resp;
        }

        resp.id = id;
        resp.backend = backend;
        return resp;
      });
    },

    query(store, type, query) {
      return this.fetchByQuery(query, 'query');
    },

    queryRecord(store, type, query) {
      return this.fetchByQuery(query, 'queryRecord');
    }

  });

  _exports.default = _default;
});
;define("vault/adapters/server", ["exports", "vault/adapters/application"], function (_exports, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/application"eaimeta@70e063a35619d71f

  const fetchUrl = '/v1/sys/storage/raft/configuration';

  var _default = _application.default.extend({
    urlForFindAll() {
      return fetchUrl;
    },

    urlForQuery() {
      return fetchUrl;
    },

    urlForDeleteRecord() {
      return '/v1/sys/storage/raft/remove-peer';
    },

    deleteRecord(store, type, snapshot) {
      const server_id = snapshot.attr('nodeId');
      const url = '/v1/sys/storage/raft/remove-peer';
      return this.ajax(url, 'POST', {
        data: {
          server_id
        }
      });
    }

  });

  _exports.default = _default;
});
;define("vault/adapters/ssh-otp-credential", ["exports", "vault/adapters/ssh"], function (_exports, _ssh) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/ssh"eaimeta@70e063a35619d71f

  var _default = _ssh.default.extend({
    url(role) {
      return `/v1/${role.backend}/creds/${role.name}`;
    }

  });

  _exports.default = _default;
});
;define("vault/adapters/ssh-sign", ["exports", "vault/adapters/ssh"], function (_exports, _ssh) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/ssh"eaimeta@70e063a35619d71f

  var _default = _ssh.default.extend({
    url(role) {
      return `/v1/${role.backend}/sign/${role.name}`;
    }

  });

  _exports.default = _default;
});
;define("vault/adapters/ssh", ["exports", "@ember/debug", "vault/adapters/application"], function (_exports, _debug, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/debug",0,"vault/adapters/application"eaimeta@70e063a35619d71f

  var _default = _application.default.extend({
    namespace: 'v1',

    url() {
      (true && !(false) && (0, _debug.assert)('Override the `url` method to extend the SSH adapter', false));
    },

    createRecord(store, type, snapshot, requestType) {
      const serializer = store.serializerFor(type.modelName);
      const data = serializer.serialize(snapshot, requestType);
      const role = snapshot.attr('role');
      return this.ajax(this.url(role), 'POST', {
        data
      }).then(response => {
        response.id = snapshot.id;
        response.modelName = type.modelName;
        store.pushPayload(type.modelName, response);
      });
    }

  });

  _exports.default = _default;
});
;define("vault/adapters/tools", ["exports", "vault/adapters/application"], function (_exports, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/application"eaimeta@70e063a35619d71f

  const WRAPPING_ENDPOINTS = ['lookup', 'wrap', 'unwrap', 'rewrap'];
  const TOOLS_ENDPOINTS = ['random', 'hash'];

  var _default = _application.default.extend({
    toolUrlFor(action) {
      const isWrapping = WRAPPING_ENDPOINTS.includes(action);
      const isTool = TOOLS_ENDPOINTS.includes(action);
      const prefix = isWrapping ? 'wrapping' : 'tools';

      if (!isWrapping && !isTool) {
        throw new Error(`Calls to a ${action} endpoint are not currently allowed in the tool adapter`);
      }

      return `${this.buildURL()}/${prefix}/${action}`;
    },

    toolAction(action, data) {
      let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      const {
        wrapTTL,
        clientToken
      } = options;
      const url = this.toolUrlFor(action);
      const ajaxOptions = wrapTTL ? {
        data,
        wrapTTL,
        clientToken
      } : {
        data,
        clientToken
      };
      return this.ajax(url, 'POST', ajaxOptions);
    }

  });

  _exports.default = _default;
});
;define("vault/adapters/transit-key", ["exports", "vault/adapters/application", "ember-inflector", "vault/utils/path-encoding-helpers"], function (_exports, _application, _emberInflector, _pathEncodingHelpers) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/adapters/application",0,"ember-inflector",0,"vault/utils/path-encoding-helpers"eaimeta@70e063a35619d71f

  var _default = _application.default.extend({
    namespace: 'v1',

    createOrUpdate(store, type, snapshot, requestType) {
      const serializer = store.serializerFor(type.modelName);
      const data = serializer.serialize(snapshot, requestType);
      const name = snapshot.attr('name');
      let url = this.urlForSecret(snapshot.record.get('backend'), name);

      if (requestType === 'update') {
        url = url + '/config';
      }

      return this.ajax(url, 'POST', {
        data
      }).then(resp => {
        const response = resp || {};
        response.id = name;
        return response;
      });
    },

    createRecord() {
      return this.createOrUpdate(...arguments);
    },

    updateRecord() {
      return this.createOrUpdate(...arguments, 'update');
    },

    deleteRecord(store, type, snapshot) {
      const {
        id
      } = snapshot;
      return this.ajax(this.urlForSecret(snapshot.record.get('backend'), id), 'DELETE');
    },

    pathForType(type) {
      let path;

      switch (type) {
        case 'cluster':
          path = 'clusters';
          break;

        case 'secret-engine':
          path = 'secrets';
          break;

        default:
          path = (0, _emberInflector.pluralize)(type);
          break;
      }

      return path;
    },

    urlForSecret(backend, id) {
      let url = `${this.buildURL()}/${(0, _pathEncodingHelpers.encodePath)(backend)}/keys/`;

      if (id) {
        url += (0, _pathEncodingHelpers.encodePath)(id);
      }

      return url;
    },

    urlForAction(action, backend, id, param) {
      const urlBase = `${this.buildURL()}/${(0, _pathEncodingHelpers.encodePath)(backend)}/${action}`; // these aren't key-specific

      if (action === 'hash' || action === 'random') {
        return urlBase;
      }

      if (action === 'datakey' && param) {
        // datakey action has `wrapped` or `plaintext` as part of the url
        return `${urlBase}/${param}/${(0, _pathEncodingHelpers.encodePath)(id)}`;
      }

      if (action === 'export' && param) {
        const [type, version] = param;
        const exportBase = `${urlBase}/${type}-key/${(0, _pathEncodingHelpers.encodePath)(id)}`;
        return version ? `${exportBase}/${version}` : exportBase;
      }

      return `${urlBase}/${(0, _pathEncodingHelpers.encodePath)(id)}`;
    },

    optionsForQuery(id) {
      const data = {};

      if (!id) {
        data['list'] = true;
      }

      return {
        data
      };
    },

    fetchByQuery(query) {
      const {
        id,
        backend
      } = query;
      return this.ajax(this.urlForSecret(backend, id), 'GET', this.optionsForQuery(id)).then(resp => {
        resp.id = id;
        resp.backend = backend;
        return resp;
      });
    },

    query(store, type, query) {
      return this.fetchByQuery(query);
    },

    queryRecord(store, type, query) {
      return this.fetchByQuery(query);
    },

    // rotate, encrypt, decrypt, sign, verify, hmac, rewrap, datakey
    keyAction(action, _ref) {
      let {
        backend,
        id,
        payload
      } = _ref;
      let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      const verb = action === 'export' ? 'GET' : 'POST';
      const {
        wrapTTL
      } = options;

      if (action === 'rotate') {
        return this.ajax(this.urlForSecret(backend, id) + '/rotate', verb);
      }

      const {
        param
      } = payload;
      delete payload.param;
      return this.ajax(this.urlForAction(action, backend, id, param), verb, {
        data: payload,
        wrapTTL
      });
    }

  });

  _exports.default = _default;
});
;define("vault/app", ["exports", "@ember/application", "ember-resolver", "ember-load-initializers", "vault/config/environment"], function (_exports, _application, _emberResolver, _emberLoadInitializers, _environment) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/application",0,"ember-resolver",0,"ember-load-initializers",0,"vault/config/environment"eaimeta@70e063a35619d71f

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  class App extends _application.default {
    constructor() {
      super(...arguments);

      _defineProperty(this, "modulePrefix", _environment.default.modulePrefix);

      _defineProperty(this, "podModulePrefix", _environment.default.podModulePrefix);

      _defineProperty(this, "Resolver", _emberResolver.default);

      _defineProperty(this, "engines", {
        openApiExplorer: {
          dependencies: {
            services: ['auth', 'flash-messages', 'namespace', 'router', 'version']
          }
        },
        kmip: {
          dependencies: {
            services: ['auth', 'download', 'flash-messages', 'namespace', 'path-help', 'router', 'store', 'version', 'secret-mount-path'],
            externalRoutes: {
              secrets: 'vault.cluster.secrets.backends'
            }
          }
        },
        kubernetes: {
          dependencies: {
            services: ['router', 'store', 'secret-mount-path', 'flash-messages'],
            externalRoutes: {
              secrets: 'vault.cluster.secrets.backends'
            }
          }
        },
        pki: {
          dependencies: {
            services: ['auth', 'download', 'flash-messages', 'namespace', 'path-help', 'router', 'secret-mount-path', 'store', 'version'],
            externalRoutes: {
              secrets: 'vault.cluster.secrets.backends',
              externalMountIssuer: 'vault.cluster.secrets.backend.pki.issuers.issuer.details',
              secretsListRootConfiguration: 'vault.cluster.secrets.backend.configuration'
            }
          }
        }
      });
    }

  }

  _exports.default = App;
  (0, _emberLoadInitializers.default)(App, _environment.default.modulePrefix);
});
;define("vault/breakpoints", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71feaimeta@70e063a35619d71f

  /**
   * Copyright (c) HashiCorp, Inc.
   * SPDX-License-Identifier: MPL-2.0
   */
  //https://github.com/jgthms/bulma/blob/6ad2e3df0589e5d6ff7a9c03ee1c78a546bedeaf/sass/utilities/initial-variables.sass#L48-L59
  //https://github.com/jgthms/bulma/blob/6ad2e3df0589e5d6ff7a9c03ee1c78a546bedeaf/sass/utilities/mixins.sass#L71-L130
  var _default = {
    mobile: '(max-width: 768px)',
    tablet: '(min-width: 769px)',
    desktop: '(min-width: 1088px)'
  };
  _exports.default = _default;
});
;define("vault/component-managers/glimmer", ["exports", "@glimmer/component/-private/ember-component-manager"], function (_exports, _emberComponentManager) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _emberComponentManager.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@glimmer/component/-private/ember-component-manager"eaimeta@70e063a35619d71f
});
;define("vault/components/-dynamic-element-alt", ["exports", "@glimmer/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@glimmer/component"eaimeta@70e063a35619d71f

  // This component is not needed anymore. However we can only safely remove it once we have an Embroider release that
  // has the special dependency rule for this addon removed:
  // https://github.com/embroider-build/embroider/blob/4fad67f16f811e7f93199a1ee92dba8254c42978/packages/compat/src/addon-dependency-rules/ember-element-helper.ts
  // eslint-disable-next-line ember/no-empty-glimmer-component-classes
  class DynamicElementAlt extends _component.default {}

  _exports.default = DynamicElementAlt;
});
;define("vault/components/-dynamic-element", ["exports", "@glimmer/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@glimmer/component"eaimeta@70e063a35619d71f

  // This component is not needed anymore. However we can only safely remove it once we have an Embroider release that
  // has the special dependency rule for this addon removed:
  // https://github.com/embroider-build/embroider/blob/4fad67f16f811e7f93199a1ee92dba8254c42978/packages/compat/src/addon-dependency-rules/ember-element-helper.ts
  // eslint-disable-next-line ember/no-empty-glimmer-component-classes
  class DynamicElement extends _component.default {}

  _exports.default = DynamicElement;
});
;define("vault/components/alert-banner", ["exports", "core/components/alert-banner"], function (_exports, _alertBanner) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _alertBanner.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/alert-banner"eaimeta@70e063a35619d71f
});
;define("vault/components/alert-inline", ["exports", "core/components/alert-inline"], function (_exports, _alertInline) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _alertInline.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/alert-inline"eaimeta@70e063a35619d71f
});
;define("vault/components/alert-popup", ["exports", "core/components/alert-popup"], function (_exports, _alertPopup) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _alertPopup.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/alert-popup"eaimeta@70e063a35619d71f
});
;define("vault/components/auth-config-form/config", ["exports", "@ember-data/adapter/error", "@ember/service", "@ember/component", "ember-concurrency", "@ember/test-waiters"], function (_exports, _error, _service, _component, _emberConcurrency, _testWaiters) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/adapter/error",0,"@ember/service",0,"@ember/component",0,"ember-concurrency",0,"@ember/test-waiters"eaimeta@70e063a35619d71f

  /**
   * @module AuthConfigForm/Config
   * The `AuthConfigForm/Config` is the base form to configure auth methods.
   *
   * @example
   * ```js
   * {{auth-config-form/config model.model}}
   * ```
   *
   * @property model=null {DS.Model} - The corresponding auth model that is being configured.
   *
   */
  const AuthConfigBase = _component.default.extend({
    tagName: '',
    model: null,
    flashMessages: (0, _service.inject)(),
    router: (0, _service.inject)(),
    saveModel: (0, _emberConcurrency.task)((0, _testWaiters.waitFor)(function* () {
      try {
        yield this.model.save();
      } catch (err) {
        // AdapterErrors are handled by the error-message component
        // in the form
        if (err instanceof _error.default === false) {
          throw err;
        }

        return;
      }

      this.router.transitionTo('vault.cluster.access.methods').followRedirects();
      this.flashMessages.success('The configuration was saved successfully.');
    }))
  });

  AuthConfigBase.reopenClass({
    positionalParams: ['model']
  });
  var _default = AuthConfigBase;
  _exports.default = _default;
});
;define("vault/components/auth-config-form/options", ["exports", "@ember-data/adapter/error", "vault/components/auth-config-form/config", "@ember/service", "ember-concurrency", "@ember/test-waiters"], function (_exports, _error, _config, _service, _emberConcurrency, _testWaiters) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/adapter/error",0,"vault/components/auth-config-form/config",0,"@ember/service",0,"ember-concurrency",0,"@ember/test-waiters"eaimeta@70e063a35619d71f

  /**
   * @module AuthConfigForm/Options
   * The `AuthConfigForm/Options` is options portion of the auth config form.
   *
   * @example
   * ```js
   * {{auth-config-form/options model.model}}
   * ```
   *
   * @property model=null {DS.Model} - The corresponding auth model that is being configured.
   *
   */
  var _default = _config.default.extend({
    flashMessages: (0, _service.inject)(),
    router: (0, _service.inject)(),
    saveModel: (0, _emberConcurrency.task)((0, _testWaiters.waitFor)(function* () {
      const data = this.model.config.serialize();
      data.description = this.model.description; // token_type should not be tuneable for the token auth method.

      if (this.model.methodType === 'token') {
        delete data.token_type;
      }

      try {
        yield this.model.tune(data);
      } catch (err) {
        // AdapterErrors are handled by the error-message component
        // in the form
        if (err instanceof _error.default === false) {
          throw err;
        } // because we're not calling model.save the model never updates with
        // the error.  Forcing the error message by manually setting the errorMessage


        try {
          this.model.set('errorMessage', err.errors.firstObject);
        } catch {// do nothing
        }

        return;
      }

      this.router.transitionTo('vault.cluster.access.methods').followRedirects();
      this.flashMessages.success('The configuration was saved successfully.');
    }))
  });

  _exports.default = _default;
});
;define("vault/components/auth-form-options", ["exports", "@ember/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/component"eaimeta@70e063a35619d71f

  var _default = _component.default.extend({});

  _exports.default = _default;
});
;define("vault/components/auth-form", ["exports", "ember", "@ember/runloop", "@ember/service", "@ember/object/computed", "@ember/string", "@ember/component", "@ember/object", "vault/helpers/supported-auth-backends", "ember-concurrency", "@ember/test-waiters"], function (_exports, _ember, _runloop, _service, _computed, _string, _component, _object, _supportedAuthBackends, _emberConcurrency, _testWaiters) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember",0,"@ember/runloop",0,"@ember/service",0,"@ember/object/computed",0,"@ember/string",0,"@ember/component",0,"@ember/object",0,"vault/helpers/supported-auth-backends",0,"ember-concurrency",0,"@ember/test-waiters"eaimeta@70e063a35619d71f

  const BACKENDS = (0, _supportedAuthBackends.supportedAuthBackends)();
  /**
   * @module AuthForm
   * The `AuthForm` is used to sign users into Vault.
   *
   * @example ```js
   * // All properties are passed in via query params.
   * <AuthForm @wrappedToken={{wrappedToken}} @cluster={{model}} @namespace={{namespaceQueryParam}} @selectedAuth={{authMethod}} @onSuccess={{action this.onSuccess}}/>```
   *
   * @param {string} wrappedToken - The auth method that is currently selected in the dropdown.
   * @param {object} cluster - The auth method that is currently selected in the dropdown. This corresponds to an Ember Model.
   * @param {string} namespace- The currently active namespace.
   * @param {string} selectedAuth - The auth method that is currently selected in the dropdown.
   * @param {function} onSuccess - Fired on auth success.
   * @param {function} [setOktaNumberChallenge] - Sets whether we are waiting for okta number challenge to be used to sign in.
   * @param {boolean} [waitingForOktaNumberChallenge=false] - Determines if we are waiting for the Okta Number Challenge to sign in.
   * @param {function} [setCancellingAuth] - Sets whether we are cancelling or not the login authentication for Okta Number Challenge.
   * @param {boolean} [cancelAuthForOktaNumberChallenge=false] - Determines if we are cancelling the login authentication for the Okta Number Challenge.
   */

  const DEFAULTS = {
    token: null,
    username: null,
    password: null,
    customPath: null
  };

  var _default = _component.default.extend(DEFAULTS, {
    router: (0, _service.inject)(),
    auth: (0, _service.inject)(),
    flashMessages: (0, _service.inject)(),
    store: (0, _service.inject)(),
    csp: (0, _service.inject)('csp-event'),
    //  passed in via a query param
    selectedAuth: null,
    methods: null,
    cluster: null,
    namespace: null,
    wrappedToken: null,
    // internal
    oldNamespace: null,
    authMethods: BACKENDS,
    // number answer for okta number challenge if applicable
    oktaNumberChallengeAnswer: null,

    didReceiveAttrs() {
      this._super(...arguments);

      const {
        wrappedToken: token,
        oldWrappedToken: oldToken,
        oldNamespace: oldNS,
        namespace: ns,
        selectedAuth: newMethod,
        oldSelectedAuth: oldMethod,
        cancelAuthForOktaNumberChallenge: cancelAuth
      } = this; // if we are cancelling the login then we reset the number challenge answer and cancel the current authenticate and polling tasks

      if (cancelAuth) {
        this.set('oktaNumberChallengeAnswer', null);
        this.authenticate.cancelAll();
        this.pollForOktaNumberChallenge.cancelAll();
      }

      (0, _runloop.next)(() => {
        if (!token && (oldNS === null || oldNS !== ns)) {
          this.fetchMethods.perform();
        }

        this.set('oldNamespace', ns); // we only want to trigger this once

        if (token && !oldToken) {
          this.unwrapToken.perform(token);
          this.set('oldWrappedToken', token);
        }

        if (oldMethod && oldMethod !== newMethod) {
          this.resetDefaults();
        }

        this.set('oldSelectedAuth', newMethod);
      });
    },

    didRender() {
      this._super(...arguments); // on very narrow viewports the active tab may be overflowed, so we scroll it into view here


      const activeEle = this.element.querySelector('li.is-active');

      if (activeEle) {
        activeEle.scrollIntoView();
      }

      (0, _runloop.next)(() => {
        const firstMethod = this.firstMethod(); // set `with` to the first method

        if (!this.wrappedToken && (this.fetchMethods.isIdle && firstMethod && !this.selectedAuth || this.selectedAuth && !this.selectedAuthBackend)) {
          this.set('selectedAuth', firstMethod);
        }
      });
    },

    firstMethod() {
      const firstMethod = this.methodsToShow.firstObject;
      if (!firstMethod) return; // prefer backends with a path over those with a type

      return firstMethod.path || firstMethod.type;
    },

    resetDefaults() {
      this.setProperties(DEFAULTS);
    },

    getAuthBackend(type) {
      const {
        wrappedToken,
        methods,
        selectedAuth,
        selectedAuthIsPath: keyIsPath
      } = this;
      const selected = type || selectedAuth;

      if (!methods && !wrappedToken) {
        return {};
      } // if type is provided we can ignore path since we are attempting to lookup a specific backend by type


      if (keyIsPath && !type) {
        return methods.findBy('path', selected);
      }

      return BACKENDS.findBy('type', selected);
    },

    selectedAuthIsPath: (0, _computed.match)('selectedAuth', /\/$/),
    selectedAuthBackend: (0, _object.computed)('wrappedToken', 'methods', 'methods.[]', 'selectedAuth', 'selectedAuthIsPath', function () {
      return this.getAuthBackend();
    }),
    providerName: (0, _object.computed)('selectedAuthBackend.type', function () {
      if (!this.selectedAuthBackend) {
        return;
      }

      let type = this.selectedAuthBackend.type || 'token';
      type = type.toLowerCase();
      const templateName = (0, _string.dasherize)(type);
      return templateName;
    }),
    hasCSPError: (0, _computed.alias)('csp.connectionViolations.firstObject'),
    cspErrorText: `This is a standby OpenBao node but can't communicate with the active node via request forwarding. Sign in at the active node to use the OpenBao UI.`,
    allSupportedMethods: (0, _object.computed)('methodsToShow', 'hasMethodsWithPath', function () {
      const hasMethodsWithPath = this.hasMethodsWithPath;
      const methodsToShow = this.methodsToShow;
      return hasMethodsWithPath ? methodsToShow.concat(BACKENDS) : methodsToShow;
    }),
    hasMethodsWithPath: (0, _object.computed)('methodsToShow', function () {
      return this.methodsToShow.isAny('path');
    }),
    methodsToShow: (0, _object.computed)('methods', function () {
      const methods = this.methods || [];
      const shownMethods = methods.filter(m => BACKENDS.find(b => b.type.toLowerCase() === m.type.toLowerCase()));
      return shownMethods.length ? shownMethods : BACKENDS;
    }),
    unwrapToken: (0, _emberConcurrency.task)((0, _testWaiters.waitFor)(function* (token) {
      // will be using the Token Auth Method, so set it here
      this.set('selectedAuth', 'token');
      const adapter = this.store.adapterFor('tools');

      try {
        const response = yield adapter.toolAction('unwrap', null, {
          clientToken: token
        });
        this.set('token', response.auth.client_token);
        this.send('doSubmit');
      } catch (e) {
        this.set('error', `Token unwrap failed: ${e.errors[0]}`);
      }
    })),
    fetchMethods: (0, _emberConcurrency.task)((0, _testWaiters.waitFor)(function* () {
      const store = this.store;

      try {
        const methods = yield store.findAll('auth-method', {
          adapterOptions: {
            unauthenticated: true
          }
        });
        this.set('methods', methods.map(m => {
          const method = m.serialize({
            includeId: true
          });
          return { ...method,
            mountDescription: method.description
          };
        }));
        (0, _runloop.next)(() => {
          store.unloadAll('auth-method');
        });
      } catch (e) {
        this.set('error', `There was an error fetching Auth Methods: ${e.errors[0]}`);
      }
    })),
    showLoading: (0, _computed.or)('isLoading', 'authenticate.isRunning', 'fetchMethods.isRunning', 'unwrapToken.isRunning'),
    authenticate: (0, _emberConcurrency.task)((0, _testWaiters.waitFor)(function* (backendType, data) {
      const {
        selectedAuth,
        cluster: {
          id: clusterId
        }
      } = this;

      try {
        this.delayAuthMessageReminder.perform();
        const authResponse = yield this.auth.authenticate({
          clusterId,
          backend: backendType,
          data,
          selectedAuth
        });
        this.onSuccess(authResponse, backendType, data);
      } catch (e) {
        this.set('isLoading', false);

        if (!this.auth.mfaError) {
          this.set('error', `Authentication failed: ${this.auth.handleError(e)}`);
        }
      }
    })),
    delayAuthMessageReminder: (0, _emberConcurrency.task)(function* () {
      if (_ember.default.testing) {
        yield (0, _emberConcurrency.timeout)(0);
      } else {
        yield (0, _emberConcurrency.timeout)(5000);
      }
    }),
    actions: {
      doSubmit(passedData, event, token) {
        if (event) {
          event.preventDefault();
        }

        if (token) {
          this.set('token', token);
        }

        this.set('error', null); // if callback from oidc or jwt we have a token at this point

        const backend = token ? this.getAuthBackend('token') : this.selectedAuthBackend || {};
        const backendMeta = BACKENDS.find(b => (b.type || '').toLowerCase() === (backend.type || '').toLowerCase());
        const attributes = (backendMeta || {}).formAttributes || [];
        const data = this.getProperties(...attributes);

        if (passedData) {
          Object.assign(data, passedData);
        }

        if (this.customPath || backend.id) {
          data.path = this.customPath || backend.id;
        }

        return this.authenticate.unlinked().perform(backend.type, data);
      },

      handleError(e) {
        this.setProperties({
          isLoading: false,
          error: e ? this.auth.handleError(e) : null
        });
      },

      returnToLoginFromOktaNumberChallenge() {
        this.setOktaNumberChallenge(false);
        this.set('oktaNumberChallengeAnswer', null);
      }

    }
  });

  _exports.default = _default;
});
;define("vault/components/auth-jwt", ["exports", "ember", "@ember/service", "vault/components/outer-html", "ember-concurrency", "@ember/object", "@ember/test-waiters"], function (_exports, _ember, _service, _outerHtml, _emberConcurrency, _object, _testWaiters) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = _exports.ERROR_WINDOW_CLOSED = _exports.ERROR_MISSING_PARAMS = _exports.ERROR_JWT_LOGIN = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember",0,"@ember/service",0,"vault/components/outer-html",0,"ember-concurrency",0,"@ember/object",0,"@ember/test-waiters"eaimeta@70e063a35619d71f

  const WAIT_TIME = 500;
  const ERROR_WINDOW_CLOSED = 'The provider window was closed before authentication was complete. Your web browser may have blocked or closed a pop-up window. Please check your settings and click Sign In to try again.';
  _exports.ERROR_WINDOW_CLOSED = ERROR_WINDOW_CLOSED;
  const ERROR_MISSING_PARAMS = 'The callback from the provider did not supply all of the required parameters.  Please click Sign In to try again. If the problem persists, you may want to contact your administrator.';
  _exports.ERROR_MISSING_PARAMS = ERROR_MISSING_PARAMS;
  const ERROR_JWT_LOGIN = 'OIDC login is not configured for this mount';
  _exports.ERROR_JWT_LOGIN = ERROR_JWT_LOGIN;

  var _default = _outerHtml.default.extend({
    store: (0, _service.inject)(),
    featureFlagService: (0, _service.inject)('featureFlag'),
    selectedAuthPath: null,
    selectedAuthType: null,
    roleName: null,
    role: null,
    errorMessage: null,

    onRoleName() {},

    onLoading() {},

    onError() {},

    onNamespace() {},

    didReceiveAttrs() {
      this._super();

      const debounce = !this.oldSelectedAuthPath && !this.selectedAuthPath;

      if (this.oldSelectedAuthPath !== this.selectedAuthPath || debounce) {
        this.fetchRole.perform(this.roleName, {
          debounce
        });
      }

      this.set('errorMessage', null);
      this.set('oldSelectedAuthPath', this.selectedAuthPath);
    },

    // Assumes authentication using OIDC until it's known that the mount is
    // configured for JWT authentication via static keys, JWKS, or OIDC discovery.
    isOIDC: (0, _object.computed)('errorMessage', function () {
      return this.errorMessage !== ERROR_JWT_LOGIN;
    }),

    getWindow() {
      return this.window || window;
    },

    fetchRole: (0, _emberConcurrency.task)((0, _testWaiters.waitFor)(function* (roleName) {
      let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
        debounce: true
      };

      if (options.debounce) {
        this.onRoleName(roleName); // debounce

        yield (0, _emberConcurrency.timeout)(_ember.default.testing ? 0 : WAIT_TIME);
      }

      const path = this.selectedAuthPath || this.selectedAuthType;
      const id = JSON.stringify([path, roleName]);
      let role = null;

      try {
        role = yield this.store.findRecord('role-jwt', id, {
          adapterOptions: {
            namespace: this.namespace
          }
        });
      } catch (e) {
        // throwing here causes failures in tests
        if ((!e.httpStatus || e.httpStatus !== 400) && !_ember.default.testing) {
          throw e;
        }

        if (e.errors && e.errors.length > 0) {
          this.set('errorMessage', e.errors[0]);
        }
      }

      this.set('role', role);
    })).restartable(),

    cancelLogin(oidcWindow, errorMessage) {
      this.closeWindow(oidcWindow);
      this.handleOIDCError(errorMessage);
    },

    closeWindow(oidcWindow) {
      this.watchPopup.cancelAll();
      this.watchCurrent.cancelAll();
      oidcWindow.close();
    },

    handleOIDCError(err) {
      this.onLoading(false);
      this.prepareForOIDC.cancelAll();
      this.onError(err);
    },

    prepareForOIDC: (0, _emberConcurrency.task)(function* (oidcWindow) {
      const thisWindow = this.getWindow(); // show the loading animation in the parent

      this.onLoading(true); // start watching the popup window and the current one

      this.watchPopup.perform(oidcWindow);
      this.watchCurrent.perform(oidcWindow); // wait for message posted from oidc callback
      // see issue https://github.com/hashicorp/vault/issues/12436
      // ensure that postMessage event is from expected source

      while (true) {
        const event = yield (0, _emberConcurrency.waitForEvent)(thisWindow, 'message');

        if (event.origin === thisWindow.origin && event.isTrusted && event.data.source === 'oidc-callback') {
          return this.exchangeOIDC.perform(event.data, oidcWindow);
        } // continue to wait for the correct message

      }
    }),
    watchPopup: (0, _emberConcurrency.task)(function* (oidcWindow) {
      while (true) {
        yield (0, _emberConcurrency.timeout)(WAIT_TIME);

        if (!oidcWindow || oidcWindow.closed) {
          return this.handleOIDCError(ERROR_WINDOW_CLOSED);
        }
      }
    }),
    watchCurrent: (0, _emberConcurrency.task)(function* (oidcWindow) {
      // when user is about to change pages, close the popup window
      yield (0, _emberConcurrency.waitForEvent)(this.getWindow(), 'beforeunload');
      oidcWindow.close();
    }),
    exchangeOIDC: (0, _emberConcurrency.task)(function* (oidcState, oidcWindow) {
      if (oidcState === null || oidcState === undefined) {
        return;
      }

      this.onLoading(true);
      let {
        namespace,
        path,
        state,
        code
      } = oidcState; // The namespace can be either be passed as a query parameter, or be embedded
      // in the state param in the format `<state_id>,ns=<namespace>`. So if
      // `namespace` is empty, check for namespace in state as well.

      if (namespace === '' || this.featureFlagService.managedNamespaceRoot) {
        const i = state.indexOf(',ns=');

        if (i >= 0) {
          // ",ns=" is 4 characters
          namespace = state.substring(i + 4);
          state = state.substring(0, i);
        }
      }

      if (!path || !state || !code) {
        return this.cancelLogin(oidcWindow, ERROR_MISSING_PARAMS);
      }

      const adapter = this.store.adapterFor('auth-method');
      this.onNamespace(namespace);
      let resp; // do the OIDC exchange, set the token on the parent component
      // and submit auth form

      try {
        resp = yield adapter.exchangeOIDC(path, state, code);
        this.closeWindow(oidcWindow);
      } catch (e) {
        // If there was an error on Vault's end, close the popup
        // and show the error on the login screen
        return this.cancelLogin(oidcWindow, e);
      }

      yield this.onSubmit(null, null, resp.auth.client_token);
    }),
    actions: {
      async startOIDCAuth(data, e) {
        this.onError(null);

        if (e && e.preventDefault) {
          e.preventDefault();
        }

        try {
          await this.fetchRole.perform(this.roleName, {
            debounce: false
          });
        } catch (error) {
          // this task could be cancelled if the instances in didReceiveAttrs resolve after this was started
          if (error?.name !== 'TaskCancelation') {
            throw error;
          }
        }

        if (!this.isOIDC || !this.role || !this.role.authUrl) {
          let message = this.errorMessage;

          if (!this.role) {
            message = 'Invalid role. Please try again.';
          } else if (!this.role.authUrl) {
            message = 'Missing auth_url. Please check that allowed_redirect_uris for the role include this mount path.';
          }

          this.onError(message);
          return;
        }

        const win = this.getWindow();
        const POPUP_WIDTH = 500;
        const POPUP_HEIGHT = 600;
        const left = win.screen.width / 2 - POPUP_WIDTH / 2;
        const top = win.screen.height / 2 - POPUP_HEIGHT / 2;
        const oidcWindow = win.open(this.role.authUrl, 'vaultOIDCWindow', `width=${POPUP_WIDTH},height=${POPUP_HEIGHT},resizable,scrollbars=yes,top=${top},left=${left}`);
        this.prepareForOIDC.perform(oidcWindow);
      }

    }
  });

  _exports.default = _default;
});
;define("vault/components/autocomplete-input", ["exports", "core/components/autocomplete-input"], function (_exports, _autocompleteInput) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _autocompleteInput.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/autocomplete-input"eaimeta@70e063a35619d71f
});
;define("vault/components/b64-toggle", ["exports", "@ember/object/computed", "@ember/utils", "@ember/component", "@ember/object", "vault/utils/b64"], function (_exports, _computed, _utils, _component, _object, _b) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/object/computed",0,"@ember/utils",0,"@ember/component",0,"@ember/object",0,"vault/utils/b64"eaimeta@70e063a35619d71f

  const B64 = 'base64';
  const UTF8 = 'utf-8';

  var _default = _component.default.extend({
    tagName: 'button',
    attributeBindings: ['type', 'data-test-transit-b64-toggle'],
    type: 'button',
    classNames: ['button', 'b64-toggle'],
    classNameBindings: ['isInput:is-input:is-textarea'],

    /*
     * Whether or not the toggle is associated with an input.
     * Also bound to `is-input` and `is-textarea` classes
     * Defaults to true
     *
     * @public
     * @type boolean
     */
    isInput: true,

    /*
     * The value that will be mutated when the encoding is toggled
     *
     * @public
     * @type string
     */
    value: null,

    /*
     * The encoding of `value` when the component is initialized.
     * Defaults to 'utf-8'.
     * Possible values: 'utf-8' and 'base64'
     *
     * @public
     * @type string
     */
    initialEncoding: UTF8,

    /*
     * A cached version of value - used to determine if the input has changed since encoding.
     *
     * @private
     * @type string
     */
    _value: '',

    /*
     * The current encoding of `value`.
     * Possible values: 'utf-8' and 'base64'
     *
     * @private
     * @type string
     */
    currentEncoding: '',

    /*
     * The encoding when we last mutated `value`.
     * Possible values: 'utf-8' and 'base64'
     *
     * @private
     * @type string
     */
    lastEncoding: '',

    /*
     * Is the value known to be base64-encoded.
     *
     * @private
     * @type boolean
     */
    isBase64: (0, _computed.equal)('currentEncoding', B64),

    /*
     * Does the current value match the cached _value, i.e. has the input been mutated since we encoded.
     *
     * @private
     * @type boolean
     */
    valuesMatch: (0, _object.computed)('value', '_value', function () {
      const {
        value,
        _value
      } = this;
      const anyBlank = (0, _utils.isBlank)(value) || (0, _utils.isBlank)(_value);
      return !anyBlank && value === _value;
    }),

    init() {
      this._super(...arguments);

      const initial = this.initialEncoding;
      (0, _object.set)(this, 'currentEncoding', initial);

      if (initial === B64) {
        (0, _object.set)(this, '_value', this.value);
        (0, _object.set)(this, 'lastEncoding', B64);
      }
    },

    didReceiveAttrs() {
      this._super(); // if there's no value, reset encoding


      if (this.value === '') {
        (0, _object.set)(this, 'currentEncoding', UTF8);
        return;
      } // the value has changed after we transformed it so we reset currentEncoding


      if (this.isBase64 && !this.valuesMatch) {
        (0, _object.set)(this, 'currentEncoding', UTF8);
      } // the value changed back to one we previously had transformed


      if (this.lastEncoding === B64 && this.valuesMatch) {
        (0, _object.set)(this, 'currentEncoding', B64);
      }
    },

    click() {
      const val = this.value;
      const isUTF8 = this.currentEncoding === UTF8;

      if (!val) {
        return;
      }

      const newVal = isUTF8 ? (0, _b.encodeString)(val) : (0, _b.decodeString)(val);
      const encoding = isUTF8 ? B64 : UTF8;
      (0, _object.set)(this, 'value', newVal);
      (0, _object.set)(this, '_value', newVal);
      (0, _object.set)(this, 'lastEncoding', encoding);
      (0, _object.set)(this, 'currentEncoding', encoding);
    }

  });

  _exports.default = _default;
});
;define("vault/components/basic-dropdown-content", ["exports", "ember-basic-dropdown/components/basic-dropdown-content"], function (_exports, _basicDropdownContent) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _basicDropdownContent.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-basic-dropdown/components/basic-dropdown-content"eaimeta@70e063a35619d71f
});
;define("vault/components/basic-dropdown-trigger", ["exports", "ember-basic-dropdown/components/basic-dropdown-trigger"], function (_exports, _basicDropdownTrigger) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _basicDropdownTrigger.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-basic-dropdown/components/basic-dropdown-trigger"eaimeta@70e063a35619d71f
});
;define("vault/components/basic-dropdown", ["exports", "ember-basic-dropdown/components/basic-dropdown"], function (_exports, _basicDropdown) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _basicDropdown.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-basic-dropdown/components/basic-dropdown"eaimeta@70e063a35619d71f
});
;define("vault/components/basic-dropdown/trigger", ["exports", "ember-basic-dropdown/components/basic-dropdown/trigger"], function (_exports, _trigger) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-basic-dropdown/components/basic-dropdown/trigger"eaimeta@70e063a35619d71f

  var _default = _trigger.default.extend({
    attributeBindings: ['type']
  });

  _exports.default = _default;
});
;define("vault/components/box-radio", ["exports", "core/components/box-radio"], function (_exports, _boxRadio) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _boxRadio.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/box-radio"eaimeta@70e063a35619d71f
});
;define("vault/components/calendar-widget", ["exports", "@glimmer/component", "@ember/object", "@glimmer/tracking", "core/utils/date-formatters", "date-fns", "core/utils/timestamp"], function (_exports, _component, _object, _tracking, _dateFormatters, _dateFns, _timestamp) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2, _descriptor3, _descriptor4;

  0; //eaimeta@70e063a35619d71f0,"@glimmer/component",0,"@ember/object",0,"@glimmer/tracking",0,"core/utils/date-formatters",0,"date-fns",0,"core/utils/timestamp"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  /**
   * @module CalendarWidget
   * CalendarWidget component is used in the client counts dashboard to select a month/year to query the /activity endpoint.
   * The component returns an object with selected date info, example: { dateType: 'endDate', monthIdx: 0, monthName: 'January', year: 2022 }
   *
   * @example
   * ```js
   * <CalendarWidget @startTimestamp={{this.startTime}} @endTimestamp={{this.endTime}} @selectMonth={{this.handleSelection}} />
   *
   *    @param {string} startTimestamp - ISO timestamp string of the calendar widget's start time, displays in dropdown trigger
   *    @param {string} endTimestamp - ISO timestamp string for the calendar widget's end time, displays in dropdown trigger
   *    @param {function} selectMonth - callback function from parent - fires when selecting a month or clicking "Current billing period"
   *  />
   * ```
   */
  let CalendarWidget = (_class = class CalendarWidget extends _component.default {
    constructor() {
      super(...arguments);

      _defineProperty(this, "currentDate", _timestamp.default.now());

      _initializerDefineProperty(this, "calendarDisplayDate", _descriptor, this);

      _initializerDefineProperty(this, "showCalendar", _descriptor2, this);

      _initializerDefineProperty(this, "tooltipTarget", _descriptor3, this);

      _initializerDefineProperty(this, "tooltipText", _descriptor4, this);
    }

    // both date getters return a date object
    get startDate() {
      return (0, _dateFormatters.parseAPITimestamp)(this.args.startTimestamp);
    }

    get endDate() {
      return (0, _dateFormatters.parseAPITimestamp)(this.args.endTimestamp);
    }

    get displayYear() {
      return this.calendarDisplayDate.getFullYear();
    }

    get disableFutureYear() {
      return (0, _dateFns.isSameYear)(this.calendarDisplayDate, this.currentDate);
    }

    get disablePastYear() {
      // calendar widget should only go as far back as the passed in start time
      return (0, _dateFns.isSameYear)(this.calendarDisplayDate, this.startDate);
    }

    get widgetMonths() {
      const startYear = this.startDate.getFullYear();
      const startMonthIdx = this.startDate.getMonth();
      return _dateFormatters.ARRAY_OF_MONTHS.map((month, index) => {
        let readonly = false; // if widget is showing same year as @startTimestamp year, disable if month is before start month

        if (startYear === this.displayYear && index < startMonthIdx) {
          readonly = true;
        } // if widget showing current year, disable if month is later than current month


        if (this.displayYear === this.currentDate.getFullYear() && index > this.currentDate.getMonth()) {
          readonly = true;
        }

        return {
          index,
          year: this.displayYear,
          name: month,
          readonly
        };
      });
    }

    addTooltip() {
      if (this.disablePastYear) {
        const previousYear = this.displayYear - 1;
        this.tooltipText = `${previousYear} is unavailable because it is before your start date. Change your start month to a date in ${previousYear} to see data for this year.`;
        this.tooltipTarget = '#previous-year';
      }
    }

    removeTooltip() {
      this.tooltipTarget = null;
    }

    addYear() {
      this.calendarDisplayDate = (0, _dateFns.addYears)(this.calendarDisplayDate, 1);
    }

    subYear() {
      this.calendarDisplayDate = (0, _dateFns.subYears)(this.calendarDisplayDate, 1);
    }

    toggleShowCalendar() {
      this.showCalendar = !this.showCalendar;
      this.calendarDisplayDate = this.endDate;
    }

    handleDateShortcut(dropdown, _ref) {
      let {
        target
      } = _ref;
      this.args.selectMonth({
        dateType: target.name
      }); // send clicked shortcut to parent callback

      this.showCalendar = false;
      dropdown.close();
    }

    selectMonth(month, dropdown) {
      const {
        index,
        year,
        name
      } = month;
      this.toggleShowCalendar();
      this.args.selectMonth({
        monthIdx: index,
        monthName: name,
        year,
        dateType: 'endDate'
      });
      dropdown.close();
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "calendarDisplayDate", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return this.currentDate;
    }
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "showCalendar", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return false;
    }
  }), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, "tooltipTarget", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return null;
    }
  }), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, "tooltipText", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return null;
    }
  }), _applyDecoratedDescriptor(_class.prototype, "addTooltip", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "addTooltip"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "removeTooltip", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "removeTooltip"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "addYear", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "addYear"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "subYear", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "subYear"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "toggleShowCalendar", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "toggleShowCalendar"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "handleDateShortcut", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "handleDateShortcut"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "selectMonth", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "selectMonth"), _class.prototype)), _class);
  _exports.default = CalendarWidget;
});
;define("vault/components/checkbox-grid", ["exports", "core/components/checkbox-grid"], function (_exports, _checkboxGrid) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _checkboxGrid.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/checkbox-grid"eaimeta@70e063a35619d71f
});
;define("vault/components/chevron", ["exports", "core/components/chevron"], function (_exports, _chevron) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _chevron.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/chevron"eaimeta@70e063a35619d71f
});
;define("vault/components/configure-aws-secret", ["exports", "@glimmer/component", "@ember/object"], function (_exports, _component, _object) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class;

  0; //eaimeta@70e063a35619d71f0,"@glimmer/component",0,"@ember/object"eaimeta@70e063a35619d71f

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  /**
   * @module ConfigureAwsSecretComponent
   *
   * @example
   * ```js
   * <ConfigureAwsSecret
      @model={{model}}
      @tab={{tab}}
      @accessKey={{accessKey}}
      @secretKey={{secretKey}}
      @region={{region}}
      @iamEndpoint={{iamEndpoint}}
      @stsEndpoint={{stsEndpoint}}
      @saveAWSRoot={{action "save" "saveAWSRoot"}}
      @saveAWSLease={{action "save" "saveAWSLease"}} />
   * ```
   *
   * @param {object} model - aws secret engine model
   * @param {string} tab - current tab selection
   * @param {string} accessKey - AWS access key
   * @param {string} secretKey - AWS secret key
   * @param {string} region - AWS region
   * @param {string} iamEndpoint - IAM endpoint
   * @param {string} stsEndpoint - Sts endpoint
   * @param {Function} saveAWSRoot - parent action which saves AWS root credentials
   * @param {Function} saveAWSLease - parent action which updates AWS lease information
   *
   */
  let ConfigureAwsSecretComponent = (_class = class ConfigureAwsSecretComponent extends _component.default {
    saveRootCreds(data, event) {
      event.preventDefault();
      this.args.saveAWSRoot(data);
    }

    saveLease(data, event) {
      event.preventDefault();
      this.args.saveAWSLease(data);
    }

    handleTtlChange(name, ttlObj) {
      // lease values cannot be undefined, set to 0 to use default
      const valueToSet = ttlObj.enabled ? ttlObj.goSafeTimeString : 0;
      this.args.model.set(name, valueToSet);
    }

  }, (_applyDecoratedDescriptor(_class.prototype, "saveRootCreds", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "saveRootCreds"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "saveLease", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "saveLease"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "handleTtlChange", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "handleTtlChange"), _class.prototype)), _class);
  _exports.default = ConfigureAwsSecretComponent;
});
;define("vault/components/configure-ssh-secret", ["exports", "@glimmer/component", "@ember/object"], function (_exports, _component, _object) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class;

  0; //eaimeta@70e063a35619d71f0,"@glimmer/component",0,"@ember/object"eaimeta@70e063a35619d71f

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  /**
   * @module ConfigureSshSecretComponent
   *
   * @example
   * ```js
   * <ConfigureSshSecret
   *    @model={{this.model}}
   *    @configured={{this.configured}}
   *    @saveConfig={{action "saveConfig"}}
   *    @loading={{this.loading}}
   *  />
   * ```
   *
   * @param {string} model - ssh secret engine model
   * @param {Function} saveConfig - parent action which updates the configuration
   * @param {boolean} loading - property in parent that updates depending on status of parent's action
   *
   */
  let ConfigureSshSecretComponent = (_class = class ConfigureSshSecretComponent extends _component.default {
    delete() {
      this.args.saveConfig({
        delete: true
      });
    }

    saveConfig(event) {
      event.preventDefault();
      this.args.saveConfig({
        delete: false
      });
    }

  }, (_applyDecoratedDescriptor(_class.prototype, "delete", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "delete"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "saveConfig", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "saveConfig"), _class.prototype)), _class);
  _exports.default = ConfigureSshSecretComponent;
});
;define("vault/components/confirm-action", ["exports", "core/components/confirm-action"], function (_exports, _confirmAction) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _confirmAction.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/confirm-action"eaimeta@70e063a35619d71f
});
;define("vault/components/confirm", ["exports", "core/components/confirm"], function (_exports, _confirm) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _confirm.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/confirm"eaimeta@70e063a35619d71f
});
;define("vault/components/confirm/message", ["exports", "core/components/confirm/message"], function (_exports, _message) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _message.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/confirm/message"eaimeta@70e063a35619d71f
});
;define("vault/components/confirmation-modal", ["exports", "core/components/confirmation-modal"], function (_exports, _confirmationModal) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _confirmationModal.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/confirmation-modal"eaimeta@70e063a35619d71f
});
;define("vault/components/console/command-input", ["exports", "@ember/component", "vault/lib/keycodes"], function (_exports, _component, _keycodes) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/component",0,"vault/lib/keycodes"eaimeta@70e063a35619d71f

  var _default = _component.default.extend({
    onExecuteCommand() {},

    onFullscreen() {},

    onValueUpdate() {},

    onShiftCommand() {},

    value: null,
    isFullscreen: null,
    actions: {
      handleKeyUp(event) {
        const keyCode = event.keyCode;

        switch (keyCode) {
          case _keycodes.default.ENTER:
            this.onExecuteCommand(event.target.value);
            break;

          case _keycodes.default.UP:
          case _keycodes.default.DOWN:
            this.onShiftCommand(keyCode);
            break;

          default:
            this.onValueUpdate(event.target.value);
        }
      },

      fullscreen() {
        this.onFullscreen();
      }

    }
  });

  _exports.default = _default;
});
;define("vault/components/console/log-json", ["exports", "@ember/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/component"eaimeta@70e063a35619d71f

  var _default = _component.default.extend({
    'data-test-component': 'console/log-json',
    attributeBindings: ['data-test-component']
  });

  _exports.default = _default;
});
;define("vault/components/console/log-list", ["exports", "@ember/object/computed", "@ember/component"], function (_exports, _computed, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/object/computed",0,"@ember/component"eaimeta@70e063a35619d71f

  var _default = _component.default.extend({
    content: null,
    list: (0, _computed.reads)('content.keys')
  });

  _exports.default = _default;
});
;define("vault/components/console/log-object", ["exports", "@ember/string", "@ember/component", "@ember/object", "columnify"], function (_exports, _string, _component, _object, _columnify) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  _exports.stringifyObjectValues = stringifyObjectValues;
  0; //eaimeta@70e063a35619d71f0,"@ember/string",0,"@ember/component",0,"@ember/object",0,"columnify"eaimeta@70e063a35619d71f

  function stringifyObjectValues(data) {
    Object.keys(data).forEach(item => {
      let val = data[item];

      if (typeof val !== 'string') {
        val = JSON.stringify(val);
      }

      data[item] = val;
    });
  }

  var _default = _component.default.extend({
    content: null,
    columns: (0, _object.computed)('content', function () {
      const data = this.content;
      stringifyObjectValues(data);
      return (0, _columnify.default)(data, {
        preserveNewLines: true,
        headingTransform: function (heading) {
          return (0, _string.capitalize)(heading);
        }
      });
    })
  });

  _exports.default = _default;
});
;define("vault/components/console/log-text", ["exports", "@ember/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/component"eaimeta@70e063a35619d71f

  var _default = _component.default.extend({
    'data-test-component': 'console/log-text',
    attributeBindings: ['data-test-component']
  });

  _exports.default = _default;
});
;define("vault/components/console/output-log", ["exports", "@ember/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/component"eaimeta@70e063a35619d71f

  var _default = _component.default.extend({
    'data-test-component': 'console/output-log',
    attributeBindings: ['data-test-component'],
    log: null
  });

  _exports.default = _default;
});
;define("vault/components/console/ui-panel", ["exports", "@ember/service", "@ember/object/computed", "@ember/component", "@ember/application", "@ember/runloop", "@ember/string", "ember-concurrency", "vault/lib/control-group-error", "vault/lib/console-helpers"], function (_exports, _service, _computed, _component, _application, _runloop, _string, _emberConcurrency, _controlGroupError, _consoleHelpers) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@ember/object/computed",0,"@ember/component",0,"@ember/application",0,"@ember/runloop",0,"@ember/string",0,"ember-concurrency",0,"vault/lib/control-group-error",0,"vault/lib/console-helpers"eaimeta@70e063a35619d71f

  var _default = _component.default.extend({
    console: (0, _service.inject)(),
    router: (0, _service.inject)(),
    controlGroup: (0, _service.inject)(),
    store: (0, _service.inject)(),
    'data-test-component': 'console/ui-panel',
    attributeBindings: ['data-test-component'],
    classNames: 'console-ui-panel',
    classNameBindings: ['isFullscreen:fullscreen'],
    isFullscreen: false,
    inputValue: null,
    cliLog: (0, _computed.alias)('console.log'),

    didRender() {
      this._super(...arguments);

      this.scrollToBottom();
    },

    logAndOutput(command, logContent) {
      this.console.logAndOutput(command, logContent);
      (0, _runloop.schedule)('afterRender', () => this.scrollToBottom());
    },

    isRunning: (0, _computed.or)('executeCommand.isRunning', 'refreshRoute.isRunning'),
    executeCommand: (0, _emberConcurrency.task)(function* (command) {
      let shouldThrow = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      this.set('inputValue', '');
      const service = this.console;
      let serviceArgs;

      if ((0, _consoleHelpers.executeUICommand)(command, args => this.logAndOutput(args), {
        api: () => this.routeToExplore.perform(command),
        clearall: () => service.clearLog(true),
        clear: () => service.clearLog(),
        fullscreen: () => this.toggleProperty('isFullscreen'),
        refresh: () => this.refreshRoute.perform()
      })) {
        return;
      } // parse to verify it's valid


      try {
        serviceArgs = (0, _consoleHelpers.parseCommand)(command);
      } catch (e) {
        if (shouldThrow) {
          this.logAndOutput(command, {
            type: 'help'
          });
        }

        return;
      }

      const {
        method,
        flagArray,
        path,
        dataArray
      } = serviceArgs;
      const flags = (0, _consoleHelpers.extractFlagsFromStrings)(flagArray, method);
      const data = (0, _consoleHelpers.extractDataFromStrings)(dataArray);
      const inputError = (0, _consoleHelpers.formattedErrorFromInput)(path, method, flags, dataArray);

      if (inputError) {
        this.logAndOutput(command, inputError);
        return;
      }

      try {
        const resp = yield service[(0, _string.camelize)(method)].call(service, path, data, flags);
        this.logAndOutput(command, (0, _consoleHelpers.logFromResponse)(resp, path, method, flags));
      } catch (error) {
        if (error instanceof _controlGroupError.default) {
          return this.logAndOutput(command, this.controlGroup.logFromError(error));
        }

        this.logAndOutput(command, (0, _consoleHelpers.logFromError)(error, path, method));
      }
    }),
    refreshRoute: (0, _emberConcurrency.task)(function* () {
      const owner = (0, _application.getOwner)(this);
      const currentRoute = owner.lookup(`router:main`).get('currentRouteName');

      try {
        this.store.clearAllDatasets();
        yield this.router.transitionTo(currentRoute);
        this.logAndOutput(null, {
          type: 'success',
          content: 'The current screen has been refreshed!'
        });
      } catch (error) {
        this.logAndOutput(null, {
          type: 'error',
          content: 'The was a problem refreshing the current screen.'
        });
      }
    }),
    routeToExplore: (0, _emberConcurrency.task)(function* (command) {
      const filter = command.replace('api', '').trim();
      let content = 'Welcome to the OpenBao API explorer! \nYou can search for endpoints, see what parameters they accept, and even execute requests with your current token.';

      if (filter) {
        content = `Welcome to the OpenBao API explorer! \nWe've filtered the list of endpoints for '${filter}'.`;
      }

      try {
        yield this.router.transitionTo('vault.cluster.open-api-explorer.index', {
          queryParams: {
            filter
          }
        });
        this.logAndOutput(null, {
          type: 'success',
          content
        });
      } catch (error) {
        if (error.message === 'TransitionAborted') {
          this.logAndOutput(null, {
            type: 'success',
            content
          });
        } else {
          this.logAndOutput(null, {
            type: 'error',
            content: 'There was a problem navigating to the api explorer.'
          });
        }
      }
    }),

    shiftCommandIndex(keyCode) {
      this.console.shiftCommandIndex(keyCode, val => {
        this.set('inputValue', val);
      });
    },

    scrollToBottom() {
      this.element.scrollTop = this.element.scrollHeight;
    },

    actions: {
      closeConsole() {
        this.set('console.isOpen', false);
      },

      toggleFullscreen() {
        this.toggleProperty('isFullscreen');
      },

      executeCommand(val) {
        this.executeCommand.perform(val, true);
      },

      shiftCommandIndex(direction) {
        this.shiftCommandIndex(direction);
      }

    }
  });

  _exports.default = _default;
});
;define("vault/components/control-group-success", ["exports", "@ember/service", "@ember/component", "ember-concurrency"], function (_exports, _service, _component, _emberConcurrency) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@ember/component",0,"ember-concurrency"eaimeta@70e063a35619d71f

  var _default = _component.default.extend({
    router: (0, _service.inject)(),
    controlGroup: (0, _service.inject)(),
    store: (0, _service.inject)(),
    // public attrs
    model: null,
    controlGroupResponse: null,
    //internal state
    error: null,
    unwrapData: null,
    unwrap: (0, _emberConcurrency.task)(function* (token) {
      const adapter = this.store.adapterFor('tools');
      this.set('error', null);

      try {
        const response = yield adapter.toolAction('unwrap', null, {
          clientToken: token
        });
        this.set('unwrapData', response.auth || response.data);
        this.controlGroup.deleteControlGroupToken(this.model.id);
      } catch (e) {
        this.set('error', `Token unwrap failed: ${e.errors[0]}`);
      }
    }).drop(),
    markAndNavigate: (0, _emberConcurrency.task)(function* () {
      this.controlGroup.markTokenForUnwrap(this.model.id);
      const {
        url
      } = this.controlGroupResponse.uiParams;
      yield this.router.transitionTo(url);
    }).drop()
  });

  _exports.default = _default;
});
;define("vault/components/control-group", ["exports", "@ember/service", "@ember/object/computed", "@ember/component", "@ember/object", "ember-concurrency"], function (_exports, _service, _computed, _component, _object, _emberConcurrency) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@ember/object/computed",0,"@ember/component",0,"@ember/object",0,"ember-concurrency"eaimeta@70e063a35619d71f

  var _default = _component.default.extend({
    tagName: '',
    auth: (0, _service.inject)(),
    controlGroup: (0, _service.inject)(),
    // public API
    model: null,

    didReceiveAttrs() {
      this._super(...arguments);

      const accessor = this.model.id;
      const data = this.controlGroup.wrapInfoForAccessor(accessor);
      this.set('controlGroupResponse', data);
    },

    currentUserEntityId: (0, _computed.alias)('auth.authData.entity_id'),
    currentUserIsRequesting: (0, _object.computed)('currentUserEntityId', 'model.requestEntity.id', function () {
      if (!this.model.requestEntity) return false;
      return this.currentUserEntityId === this.model.requestEntity.id;
    }),
    currentUserHasAuthorized: (0, _object.computed)('currentUserEntityId', 'model.authorizations.@each.id', function () {
      const authorizations = this.model.authorizations || [];
      return Boolean(authorizations.findBy('id', this.currentUserEntityId));
    }),
    isSuccess: (0, _computed.or)('currentUserHasAuthorized', 'model.approved'),
    requestorName: (0, _object.computed)('currentUserIsRequesting', 'model.requestEntity', function () {
      const entity = this.model.requestEntity;

      if (this.currentUserIsRequesting) {
        return 'You';
      }

      if (entity && entity.name) {
        return entity.name;
      }

      return 'Someone';
    }),
    bannerPrefix: (0, _object.computed)('model.approved', 'currentUserHasAuthorized', function () {
      if (this.currentUserHasAuthorized) {
        return 'Thanks!';
      }

      if (this.model.approved) {
        return 'Success!';
      }

      return 'Locked';
    }),
    bannerText: (0, _object.computed)('model.approved', 'currentUserIsRequesting', 'currentUserHasAuthorized', function () {
      const isApproved = this.model.approved;
      const {
        currentUserHasAuthorized,
        currentUserIsRequesting
      } = this;

      if (currentUserHasAuthorized) {
        return 'You have given authorization';
      }

      if (currentUserIsRequesting && isApproved) {
        return 'You have been given authorization';
      }

      if (isApproved) {
        return 'This Control Group has been authorized';
      }

      if (currentUserIsRequesting) {
        return 'The path you requested is locked by a Control Group';
      }

      return 'Someone is requesting access to a path locked by a Control Group';
    }),
    refresh: (0, _emberConcurrency.task)(function* () {
      try {
        yield this.model.reload();
      } catch (e) {
        this.set('errors', e);
      }
    }).drop(),
    authorize: (0, _emberConcurrency.task)(function* () {
      try {
        yield this.model.save();
        yield this.refresh.perform();
      } catch (e) {
        this.set('errors', e);
      }
    }).drop()
  });

  _exports.default = _default;
});
;define("vault/components/copy-button", ["exports", "ember-cli-clipboard/components/copy-button"], function (_exports, _copyButton) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _copyButton.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-cli-clipboard/components/copy-button"eaimeta@70e063a35619d71f
});
;define("vault/components/database-connection", ["exports", "@glimmer/component", "@ember/service", "@glimmer/tracking", "@ember/object"], function (_exports, _component, _service, _tracking, _object) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5;

  0; //eaimeta@70e063a35619d71f0,"@glimmer/component",0,"@ember/service",0,"@glimmer/tracking",0,"@ember/object"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  const LIST_ROOT_ROUTE = 'vault.cluster.secrets.backend.list-root';
  const SHOW_ROUTE = 'vault.cluster.secrets.backend.show';

  const getErrorMessage = errors => {
    let errorMessage = errors?.join('. ') || 'Something went wrong. Check the OpenBao logs for more information.';

    if (errorMessage.indexOf('failed to verify') >= 0) {
      errorMessage = 'There was a verification error for this connection. Check the OpenBao logs for more information.';
    }

    return errorMessage;
  };

  let DatabaseConnectionEdit = (_class = class DatabaseConnectionEdit extends _component.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);

      _initializerDefineProperty(this, "router", _descriptor2, this);

      _initializerDefineProperty(this, "flashMessages", _descriptor3, this);

      _initializerDefineProperty(this, "showPasswordField", _descriptor4, this);

      _initializerDefineProperty(this, "showSaveModal", _descriptor5, this);
    }

    // used for create mode
    rotateCredentials(backend, name) {
      const adapter = this.store.adapterFor('database/connection');
      return adapter.rotateRootCredentials(backend, name);
    }

    transitionToRoute() {
      return this.router.transitionTo(...arguments);
    }

    updateShowPassword(showForm) {
      this.showPasswordField = showForm;

      if (!showForm) {
        // unset password if hidden
        this.args.model.password = undefined;
      }
    }

    updatePassword(attr, evt) {
      const value = evt.target.value;
      this.args.model[attr] = value;
    }

    async handleCreateConnection(evt) {
      evt.preventDefault();
      const secret = this.args.model;
      const secretId = secret.name;
      secret.set('id', secretId);
      secret.save().then(() => {
        this.showSaveModal = true;
      }).catch(e => {
        const errorMessage = getErrorMessage(e.errors);
        this.flashMessages.danger(errorMessage);
      });
    }

    continueWithoutRotate(evt) {
      evt.preventDefault();
      const {
        name
      } = this.args.model;
      this.transitionToRoute(SHOW_ROUTE, name);
    }

    continueWithRotate(evt) {
      evt.preventDefault();
      const {
        backend,
        name
      } = this.args.model;
      this.rotateCredentials(backend, name).then(() => {
        this.flashMessages.success(`Successfully rotated root credentials for connection "${name}"`);
        this.transitionToRoute(SHOW_ROUTE, name);
      }).catch(e => {
        this.flashMessages.danger(`Error rotating root credentials: ${e.errors}`);
        this.transitionToRoute(SHOW_ROUTE, name);
      });
    }

    handleUpdateConnection(evt) {
      evt.preventDefault();
      const secret = this.args.model;
      const secretId = secret.name;
      secret.save().then(() => {
        this.transitionToRoute(SHOW_ROUTE, secretId);
      }).catch(e => {
        const errorMessage = getErrorMessage(e.errors);
        this.flashMessages.danger(errorMessage);
      });
    }

    delete(evt) {
      evt.preventDefault();
      const secret = this.args.model;
      const backend = secret.backend;
      secret.destroyRecord().then(() => {
        this.transitionToRoute(LIST_ROOT_ROUTE, backend);
      });
    }

    reset() {
      const {
        name,
        backend
      } = this.args.model;
      const adapter = this.store.adapterFor('database/connection');
      adapter.resetConnection(backend, name).then(() => {
        // TODO: Why isn't the confirmAction closing?
        this.flashMessages.success('Successfully reset connection');
      }).catch(e => {
        const errorMessage = getErrorMessage(e.errors);
        this.flashMessages.danger(errorMessage);
      });
    }

    rotate() {
      const {
        name,
        backend
      } = this.args.model;
      this.rotateCredentials(backend, name).then(() => {
        // TODO: Why isn't the confirmAction closing?
        this.flashMessages.success('Successfully rotated credentials');
      }).catch(e => {
        const errorMessage = getErrorMessage(e.errors);
        this.flashMessages.danger(errorMessage);
      });
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "router", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, "flashMessages", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, "showPasswordField", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return false;
    }
  }), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, "showSaveModal", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return false;
    }
  }), _applyDecoratedDescriptor(_class.prototype, "updateShowPassword", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "updateShowPassword"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "updatePassword", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "updatePassword"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "handleCreateConnection", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "handleCreateConnection"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "continueWithoutRotate", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "continueWithoutRotate"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "continueWithRotate", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "continueWithRotate"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "handleUpdateConnection", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "handleUpdateConnection"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "delete", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "delete"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "reset", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "reset"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "rotate", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "rotate"), _class.prototype)), _class);
  _exports.default = DatabaseConnectionEdit;
});
;define("vault/components/database-role-edit", ["exports", "@glimmer/component", "@ember/service", "@ember/object", "@glimmer/tracking"], function (_exports, _component, _service, _object, _tracking) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2, _descriptor3, _descriptor4;

  0; //eaimeta@70e063a35619d71f0,"@glimmer/component",0,"@ember/service",0,"@ember/object",0,"@glimmer/tracking"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  const LIST_ROOT_ROUTE = 'vault.cluster.secrets.backend.list-root';
  const SHOW_ROUTE = 'vault.cluster.secrets.backend.show';
  let DatabaseRoleEdit = (_class = class DatabaseRoleEdit extends _component.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "router", _descriptor, this);

      _initializerDefineProperty(this, "flashMessages", _descriptor2, this);

      _initializerDefineProperty(this, "store", _descriptor3, this);

      _initializerDefineProperty(this, "loading", _descriptor4, this);

      if (this.args.initialKey) {
        this.args.model.database = [this.args.initialKey];
      }
    }

    get warningMessages() {
      const warnings = {};

      if (this.args.model.canUpdateDb === false) {
        warnings.database = `You don’t have permissions to update this database connection, so this role cannot be created.`;
      }

      if (this.args.model.type === 'dynamic' && this.args.model.canCreateDynamic === false || this.args.model.type === 'static' && this.args.model.canCreateStatic === false) {
        warnings.type = `You don't have permissions to create this type of role.`;
      }

      return warnings;
    }

    get databaseType() {
      const backend = this.args.model?.backend;
      const dbs = this.args.model?.database || [];

      if (!backend || dbs.length === 0) {
        return null;
      }

      return this.store.queryRecord('database/connection', {
        id: dbs[0],
        backend
      }).then(record => record.plugin_name).catch(() => null);
    }

    generateCreds(roleId) {
      let roleType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
      this.router.transitionTo('vault.cluster.secrets.backend.credentials', roleId, {
        queryParams: {
          roleType
        }
      });
    }

    delete() {
      const secret = this.args.model;
      const backend = secret.backend;
      secret.destroyRecord().then(() => {
        try {
          this.router.transitionTo(LIST_ROOT_ROUTE, backend, {
            queryParams: {
              tab: 'role'
            }
          });
        } catch (e) {
          console.debug(e); // eslint-disable-line
        }
      }).catch(e => {
        this.flashMessages.danger(e.errors?.join('. '));
      });
    }

    handleCreateEditRole(evt) {
      evt.preventDefault();
      this.loading = true;
      const mode = this.args.mode;
      const roleSecret = this.args.model;
      const secretId = roleSecret.name;

      if (mode === 'create') {
        roleSecret.set('id', secretId);
        const path = roleSecret.type === 'static' ? 'static-roles' : 'roles';
        roleSecret.set('path', path);
      }

      roleSecret.save().then(() => {
        try {
          this.router.transitionTo(SHOW_ROUTE, `role/${secretId}`);
        } catch (e) {
          console.debug(e); // eslint-disable-line
        }
      }).catch(e => {
        const errorMessage = e.errors?.join('. ') || e.message;
        this.flashMessages.danger(errorMessage || 'Could not save the role. Please check OpenBao logs for more information.');
        this.loading = false;
      });
    }

    rotateRoleCred(id) {
      const backend = this.args.model?.backend;
      const adapter = this.store.adapterFor('database/credential');
      adapter.rotateRoleCredentials(backend, id).then(() => {
        this.flashMessages.success(`Success: Credentials for ${id} role were rotated`);
      }).catch(e => {
        this.flashMessages.danger(e.errors);
      });
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "router", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "flashMessages", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, "loading", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return false;
    }
  }), _applyDecoratedDescriptor(_class.prototype, "generateCreds", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "generateCreds"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "delete", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "delete"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "handleCreateEditRole", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "handleCreateEditRole"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "rotateRoleCred", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "rotateRoleCred"), _class.prototype)), _class);
  _exports.default = DatabaseRoleEdit;
});
;define("vault/components/database-role-setting-form", ["exports", "@glimmer/component", "vault/utils/database-helpers"], function (_exports, _component, _databaseHelpers) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@glimmer/component",0,"vault/utils/database-helpers"eaimeta@70e063a35619d71f

  /**
   * @module DatabaseRoleSettingForm
   * DatabaseRoleSettingForm components are used to handle the role settings section on the database/role form
   *
   * @example
   * ```js
   * <DatabaseRoleSettingForm @requiredParam={requiredParam} @optionalParam={optionalParam} @param1={{param1}}/>
   * ```
   * @param {Array<object>} attrs - all available attrs from the model to iterate over
   * @param {object} model - ember data model which should be updated on change
   * @param {string} [roleType] - role type controls which attributes are shown
   * @param {string} [mode=create] - mode of the form (eg. create or edit)
   * @param {string} [dbType=default] - type of database, eg 'mongodb-database-plugin'
   */
  class DatabaseRoleSettingForm extends _component.default {
    get settingFields() {
      if (!this.args.roleType) return null;
      const dbValidFields = (0, _databaseHelpers.getRoleFields)(this.args.roleType);
      return this.args.attrs.filter(a => {
        return dbValidFields.includes(a.name);
      });
    }

    get statementFields() {
      const type = this.args.roleType;
      const plugin = this.args.dbType;
      if (!type) return null;
      const dbValidFields = (0, _databaseHelpers.getStatementFields)(type, plugin);
      return this.args.attrs.filter(a => {
        return dbValidFields.includes(a.name);
      });
    }

  }

  _exports.default = DatabaseRoleSettingForm;
});
;define("vault/components/date-dropdown", ["exports", "@glimmer/component", "@ember/object", "@glimmer/tracking", "core/utils/date-formatters", "core/utils/timestamp"], function (_exports, _component, _object, _tracking, _dateFormatters, _timestamp) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5;

  0; //eaimeta@70e063a35619d71f0,"@glimmer/component",0,"@ember/object",0,"@glimmer/tracking",0,"core/utils/date-formatters",0,"core/utils/timestamp"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  /**
   * @module DateDropdown
   * DateDropdown components are used to display a dropdown of months and years to handle date selection. Future dates are disabled (current month and year are selectable).
   * The component returns an object with selected date info, example: { dateType: 'start', monthIdx: 0, monthName: 'January', year: 2022 }
   *
   * @example
   * ```js
   * <DateDropdown @handleSubmit={{this.actionFromParent}} @name="startTime" @submitText="Save" @handleCancel={{this.onCancel}}/>
   * ```
   * @param {function} handleSubmit - callback function from parent that the date picker triggers on submit
   * @param {function} [handleCancel] - optional callback for cancel action, if exists then buttons appear modal style with a light gray background
   * @param {string} [dateType] - optional argument to give the selected month/year a type
   * @param {string} [submitText] - optional argument to change submit button text
   * @param {function} [validateDate] - parent function to validate date selection, receives date object and returns an error message that's passed to the inline alert
   */
  let DateDropdown = (_class = class DateDropdown extends _component.default {
    constructor() {
      super(...arguments);

      _defineProperty(this, "currentDate", _timestamp.default.now());

      _defineProperty(this, "currentYear", this.currentDate.getFullYear());

      _defineProperty(this, "currentMonthIdx", this.currentDate.getMonth());

      _defineProperty(this, "dropdownMonths", _dateFormatters.ARRAY_OF_MONTHS.map((m, i) => ({
        name: m,
        index: i
      })));

      _defineProperty(this, "dropdownYears", Array.from({
        length: 5
      }, (item, i) => this.currentYear - i));

      _initializerDefineProperty(this, "maxMonthIdx", _descriptor, this);

      _initializerDefineProperty(this, "disabledYear", _descriptor2, this);

      _initializerDefineProperty(this, "selectedMonth", _descriptor3, this);

      _initializerDefineProperty(this, "selectedYear", _descriptor4, this);

      _initializerDefineProperty(this, "invalidDate", _descriptor5, this);
    }

    selectMonth(month, dropdown) {
      this.selectedMonth = month; // disable current year if selected month is later than current month

      this.disabledYear = month.index > this.currentMonthIdx ? this.currentYear : null;
      dropdown.close();
    }

    selectYear(year, dropdown) {
      this.selectedYear = year; // disable months after current month if selected year is current year

      this.maxMonthIdx = year === this.currentYear ? this.currentMonthIdx : 11;
      dropdown.close();
    }

    handleSubmit() {
      if (this.args.validateDate) {
        this.invalidDate = null;
        this.invalidDate = this.args.validateDate(new Date(this.selectedYear, this.selectedMonth.index));
        if (this.invalidDate) return;
      }

      const {
        index,
        name
      } = this.selectedMonth;
      this.args.handleSubmit({
        monthIdx: index,
        monthName: name,
        year: this.selectedYear,
        dateType: this.args.dateType
      });
      this.resetDropdown();
    }

    handleCancel() {
      this.args.handleCancel();
      this.resetDropdown();
    }

    resetDropdown() {
      this.maxMonthIdx = 11;
      this.disabledYear = null;
      this.selectedMonth = null;
      this.selectedYear = null;
      this.invalidDate = null;
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "maxMonthIdx", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return 11;
    }
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "disabledYear", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return null;
    }
  }), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, "selectedMonth", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return null;
    }
  }), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, "selectedYear", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return null;
    }
  }), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, "invalidDate", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return null;
    }
  }), _applyDecoratedDescriptor(_class.prototype, "selectMonth", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "selectMonth"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "selectYear", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "selectYear"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "handleSubmit", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "handleSubmit"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "handleCancel", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "handleCancel"), _class.prototype)), _class);
  _exports.default = DateDropdown;
});
;define("vault/components/diff-version-selector", ["exports", "@glimmer/component", "@ember/service", "@ember/object", "@glimmer/tracking"], function (_exports, _component, _service, _object, _tracking) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7;

  0; //eaimeta@70e063a35619d71f0,"@glimmer/component",0,"@ember/service",0,"@ember/object",0,"@glimmer/tracking"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  /**
   * @module DiffVersionSelector
   * DiffVersionSelector component includes a toolbar and diff view between KV 2 versions. It uses the library jsondiffpatch.
   *
   * @example
   * ```js
   * <DiffVersionSelector @model={model}/>
   * ```
   * @param {object} model - model that comes from secret-v2-version
   */
  let DiffVersionSelector = (_class = class DiffVersionSelector extends _component.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "leftSideVersionDataSelected", _descriptor, this);

      _initializerDefineProperty(this, "leftSideVersionSelected", _descriptor2, this);

      _initializerDefineProperty(this, "rightSideVersionDataSelected", _descriptor3, this);

      _initializerDefineProperty(this, "rightSideVersionSelected", _descriptor4, this);

      _initializerDefineProperty(this, "statesMatch", _descriptor5, this);

      _initializerDefineProperty(this, "visualDiff", _descriptor6, this);

      _initializerDefineProperty(this, "store", _descriptor7, this);

      _defineProperty(this, "adapter", this.store.adapterFor('secret-v2-version'));

      this.createVisualDiff();
    }

    get leftSideDataInit() {
      const string = `["${this.args.model.engineId}", "${this.args.model.id}", "${this.args.model.currentVersion}"]`;
      return this.adapter.querySecretDataByVersion(string).then(response => response.data).catch(() => null);
    }

    get rightSideDataInit() {
      const string = `["${this.args.model.engineId}", "${this.args.model.id}", "${this.rightSideVersionInit}"]`;
      return this.adapter.querySecretDataByVersion(string).then(response => response.data).catch(() => null);
    }

    get rightSideVersionInit() {
      // initial value of right side version is one less than the current version
      return this.args.model.currentVersion === 1 ? 0 : this.args.model.currentVersion - 1;
    }

    async createVisualDiff() {
      const diffpatcher = jsondiffpatch.create({});
      const leftSideVersionData = this.leftSideVersionDataSelected || (await this.leftSideDataInit);
      const rightSideVersionData = this.rightSideVersionDataSelected || (await this.rightSideDataInit);
      const delta = diffpatcher.diff(rightSideVersionData, leftSideVersionData);

      if (delta === undefined) {
        this.statesMatch = true; // params: value, replacer (all properties included), space (white space and indentation, line break, etc.)

        this.visualDiff = JSON.stringify(leftSideVersionData, undefined, 2);
      } else {
        this.statesMatch = false;
        this.visualDiff = jsondiffpatch.formatters.html.format(delta, rightSideVersionData);
      }
    }

    async selectVersion(selectedVersion, actions, side) {
      const string = `["${this.args.model.engineId}", "${this.args.model.id}", "${selectedVersion}"]`;
      const secretData = await this.adapter.querySecretDataByVersion(string);

      if (side === 'left') {
        this.leftSideVersionDataSelected = secretData.data;
        this.leftSideVersionSelected = selectedVersion;
      }

      if (side === 'right') {
        this.rightSideVersionDataSelected = secretData.data;
        this.rightSideVersionSelected = selectedVersion;
      }

      await this.createVisualDiff(); // close dropdown menu.

      actions.close();
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "leftSideVersionDataSelected", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return null;
    }
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "leftSideVersionSelected", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return null;
    }
  }), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, "rightSideVersionDataSelected", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return null;
    }
  }), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, "rightSideVersionSelected", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return null;
    }
  }), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, "statesMatch", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return false;
    }
  }), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, "visualDiff", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return null;
    }
  }), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _applyDecoratedDescriptor(_class.prototype, "selectVersion", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "selectVersion"), _class.prototype)), _class);
  _exports.default = DiffVersionSelector;
});
;define("vault/components/doc-link", ["exports", "core/components/doc-link"], function (_exports, _docLink) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _docLink.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/doc-link"eaimeta@70e063a35619d71f
});
;define("vault/components/download-button", ["exports", "core/components/download-button"], function (_exports, _downloadButton) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _downloadButton.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/download-button"eaimeta@70e063a35619d71f
});
;define("vault/components/edit-form", ["exports", "core/components/edit-form"], function (_exports, _editForm) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _editForm.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/edit-form"eaimeta@70e063a35619d71f
});
;define("vault/components/ember-modal-dialog-positioned-container", ["exports", "ember-modal-dialog/components/positioned-container"], function (_exports, _positionedContainer) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _positionedContainer.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-modal-dialog/components/positioned-container"eaimeta@70e063a35619d71f
});
;define("vault/components/ember-modal-dialog/-basic-dialog", ["exports", "ember-modal-dialog/components/basic-dialog"], function (_exports, _basicDialog) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _basicDialog.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-modal-dialog/components/basic-dialog"eaimeta@70e063a35619d71f
});
;define("vault/components/ember-modal-dialog/-in-place-dialog", ["exports", "ember-modal-dialog/components/in-place-dialog"], function (_exports, _inPlaceDialog) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _inPlaceDialog.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-modal-dialog/components/in-place-dialog"eaimeta@70e063a35619d71f
});
;define("vault/components/ember-modal-dialog/-liquid-dialog", ["exports", "ember-modal-dialog/components/liquid-dialog"], function (_exports, _liquidDialog) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _liquidDialog.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-modal-dialog/components/liquid-dialog"eaimeta@70e063a35619d71f
});
;define("vault/components/ember-modal-dialog/-liquid-tether-dialog", ["exports", "ember-modal-dialog/components/liquid-tether-dialog"], function (_exports, _liquidTetherDialog) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _liquidTetherDialog.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-modal-dialog/components/liquid-tether-dialog"eaimeta@70e063a35619d71f
});
;define("vault/components/ember-modal-dialog/-tether-dialog", ["exports", "ember-modal-dialog/components/tether-dialog"], function (_exports, _tetherDialog) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _tetherDialog.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-modal-dialog/components/tether-dialog"eaimeta@70e063a35619d71f
});
;define("vault/components/ember-modal-dialog/overlay", ["exports", "ember-modal-dialog/components/overlay"], function (_exports, _overlay) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _overlay.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-modal-dialog/components/overlay"eaimeta@70e063a35619d71f
});
;define("vault/components/ember-tether", ["exports", "ember-tether/components/ember-tether"], function (_exports, _emberTether) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _emberTether.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-tether/components/ember-tether"eaimeta@70e063a35619d71f
});
;define("vault/components/ember-wormhole", ["exports", "ember-wormhole/components/ember-wormhole"], function (_exports, _emberWormhole) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _emberWormhole.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-wormhole/components/ember-wormhole"eaimeta@70e063a35619d71f
});
;define("vault/components/empty-state", ["exports", "core/components/empty-state"], function (_exports, _emptyState) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _emptyState.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/empty-state"eaimeta@70e063a35619d71f
});
;define("vault/components/external-link", ["exports", "core/components/external-link"], function (_exports, _externalLink) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _externalLink.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/external-link"eaimeta@70e063a35619d71f
});
;define("vault/components/field-group-show", ["exports", "core/components/field-group-show"], function (_exports, _fieldGroupShow) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _fieldGroupShow.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/field-group-show"eaimeta@70e063a35619d71f
});
;define("vault/components/file-to-array-buffer", ["exports", "@ember/component", "filesize"], function (_exports, _component, _filesize) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/component",0,"filesize"eaimeta@70e063a35619d71f

  /**
   * @module FileToArrayBuffer
   * `FileToArrayBuffer` is a component that will allow you to pick a file from the local file system. Once
   * loaded, this file will be emitted as a JS ArrayBuffer to the passed `onChange` callback.
   *
   * @example
   * ```js
   *   <FileToArrayBuffer @onChange={{action (mut file)}} />
   * ```
   * @param onChange=null {Function} - The function to call when the file read is complete. This function
   * receives the file as a JS ArrayBuffer
   * @param [label=null {String}] - Text to use as the label for the file input
   * @param [fileHelpText=null {String} - Text to use as help under the file input
   *
   */
  var _default = _component.default.extend({
    classNames: ['box', 'is-fullwidth', 'is-marginless', 'is-shadowless'],
    onChange: () => {},
    label: null,
    fileHelpText: null,
    file: null,
    filename: null,
    fileSize: null,
    fileLastModified: null,

    readFile(file) {
      const reader = new FileReader(); // raft-snapshot-restore test was failing on CI trying to send action on destroyed object
      // ensure that the component has not been torn down prior to sending onChange action

      reader.onload = () => {
        if (!this.isDestroyed && !this.isDestroying) {
          this.send('onChange', reader.result, file);
        }
      };

      reader.readAsArrayBuffer(file);
    },

    actions: {
      pickedFile(e) {
        const {
          files
        } = e.target;

        if (!files.length) {
          return;
        }

        for (let i = 0, len = files.length; i < len; i++) {
          this.readFile(files[i]);
        }
      },

      clearFile() {
        this.send('onChange');
      },

      onChange(fileAsBytes, fileMeta) {
        const {
          name,
          size,
          lastModifiedDate
        } = fileMeta || {};
        const fileSize = size ? (0, _filesize.default)(size) : null;
        this.set('file', fileAsBytes);
        this.set('filename', name);
        this.set('fileSize', fileSize);
        this.set('fileLastModified', lastModifiedDate);
        this.onChange(fileAsBytes, name);
      }

    }
  });

  _exports.default = _default;
});
;define("vault/components/flash-message", ["exports", "ember-cli-flash/components/flash-message"], function (_exports, _flashMessage) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-flash/components/flash-message"eaimeta@70e063a35619d71f

  class FlashMessageComponent extends _flashMessage.default {
    // override alertType to get Bulma specific prefix
    //https://github.com/poteto/ember-cli-flash/blob/master/addon/components/flash-message.js#L55
    get alertType() {
      const flashType = this.args.flash.type || '';
      return `is-${flashType}`;
    }

  }

  _exports.default = FlashMessageComponent;
});
;define("vault/components/flight-icon", ["exports", "@hashicorp/ember-flight-icons/components/flight-icon"], function (_exports, _flightIcon) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _flightIcon.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/ember-flight-icons/components/flight-icon"eaimeta@70e063a35619d71f
});
;define("vault/components/form-error", ["exports", "core/components/form-error"], function (_exports, _formError) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _formError.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/form-error"eaimeta@70e063a35619d71f
});
;define("vault/components/form-field-groups-loop", ["exports", "core/components/form-field-groups-loop"], function (_exports, _formFieldGroupsLoop) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _formFieldGroupsLoop.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/form-field-groups-loop"eaimeta@70e063a35619d71f
});
;define("vault/components/form-field-groups", ["exports", "core/components/form-field-groups"], function (_exports, _formFieldGroups) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _formFieldGroups.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/form-field-groups"eaimeta@70e063a35619d71f
});
;define("vault/components/form-field-label", ["exports", "core/components/form-field-label"], function (_exports, _formFieldLabel) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _formFieldLabel.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/form-field-label"eaimeta@70e063a35619d71f
});
;define("vault/components/form-field", ["exports", "core/components/form-field"], function (_exports, _formField) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _formField.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/form-field"eaimeta@70e063a35619d71f
});
;define("vault/components/form-save-buttons", ["exports", "core/components/form-save-buttons"], function (_exports, _formSaveButtons) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _formSaveButtons.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/form-save-buttons"eaimeta@70e063a35619d71f
});
;define("vault/components/generate-credentials-database", ["exports", "@glimmer/component", "@ember/object"], function (_exports, _component, _object) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class;

  0; //eaimeta@70e063a35619d71f0,"@glimmer/component",0,"@ember/object"eaimeta@70e063a35619d71f

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  let GenerateCredentialsDatabase = (_class = class GenerateCredentialsDatabase extends _component.default {
    get errorTitle() {
      return this.args.model.errorTitle || 'Something went wrong';
    }

    redirectPreviousPage() {
      window.history.back();
    }

  }, (_applyDecoratedDescriptor(_class.prototype, "redirectPreviousPage", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "redirectPreviousPage"), _class.prototype)), _class);
  _exports.default = GenerateCredentialsDatabase;
});
;define("vault/components/generate-credentials", ["exports", "@ember/service", "@ember/object", "@ember/component"], function (_exports, _service, _object, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@ember/object",0,"@ember/component"eaimeta@70e063a35619d71f

  const MODEL_TYPES = {
    'ssh-sign': {
      model: 'ssh-sign'
    },
    'ssh-creds': {
      model: 'ssh-otp-credential',
      title: 'Generate SSH Credentials'
    },
    'aws-creds': {
      model: 'aws-credential',
      title: 'Generate AWS Credentials',
      backIsListLink: true
    },
    'pki-issue': {
      model: 'pki/cert',
      title: 'Issue Certificate'
    },
    'pki-sign': {
      model: 'pki-certificate-sign',
      title: 'Sign Certificate'
    }
  };

  var _default = _component.default.extend({
    controlGroup: (0, _service.inject)(),
    store: (0, _service.inject)(),
    router: (0, _service.inject)(),
    // set on the component
    backendType: null,
    backendPath: null,
    roleName: null,
    action: null,
    model: null,
    loading: false,
    emptyData: '{\n}',

    modelForType() {
      const type = this.options;

      if (type) {
        return type.model;
      } // if we don't have a mode for that type then redirect them back to the backend list


      this.router.transitionTo('vault.cluster.secrets.backend.list-root', this.backendPath);
    },

    options: (0, _object.computed)('action', 'backendType', function () {
      const action = this.action || 'creds';
      return MODEL_TYPES[`${this.backendType}-${action}`];
    }),

    init() {
      this._super(...arguments);

      this.createOrReplaceModel();
    },

    willDestroy() {
      if (!this.model.isDestroyed && !this.model.isDestroying) {
        this.model.unloadRecord();
      }

      this._super(...arguments);
    },

    createOrReplaceModel() {
      const modelType = this.modelForType();
      const model = this.model;
      const roleName = this.roleName;
      const backendPath = this.backendPath;

      if (!modelType) {
        return;
      }

      if (model) {
        model.unloadRecord();
      }

      const attrs = {
        role: {
          backend: backendPath,
          name: roleName
        },
        id: `${backendPath}-${roleName}`
      };
      const newModel = this.store.createRecord(modelType, attrs);
      this.set('model', newModel);
    },

    actions: {
      create() {
        const model = this.model;
        this.set('loading', true);
        this.model.save().then(() => {
          model.set('hasGenerated', true);
        }).catch(error => {
          // Handle control group AdapterError
          if (error.message === 'Control Group encountered') {
            this.controlGroup.saveTokenFromError(error);
            const err = this.controlGroup.logFromError(error);
            error.errors = [err.content];
          }

          throw error;
        }).finally(() => {
          this.set('loading', false);
        });
      },

      codemirrorUpdated(attr, val, codemirror) {
        codemirror.performLint();
        const hasErrors = codemirror.state.lint.marked.length > 0;

        if (!hasErrors) {
          (0, _object.set)(this.model, attr, JSON.parse(val));
        }
      },

      newModel() {
        this.createOrReplaceModel();
      }

    }
  });

  _exports.default = _default;
});
;define("vault/components/generated-item-list", ["exports", "@ember/service", "@glimmer/component", "@ember/object", "@ember/application"], function (_exports, _service, _component, _object, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2;

  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@glimmer/component",0,"@ember/object",0,"@ember/application"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  /**
   * @module GeneratedItemList
   * The `GeneratedItemList` component lists generated items related to mounts (e.g. groups, roles, users)
   *
   * @example
   * ```js
   * <GeneratedItemList @model={{model}} @itemType={{itemType}} @paths={{this.paths}} @methodModel={{this.methodModel}}/>
   * ```
   *
   * @param {class} model=null - The corresponding item model that is being configured.
   * @param {string} itemType - The type of item displayed.
   * @param {array} paths - Relevant to the link for the LinkTo element.
   * @param {class} methodModel - Model for the particular method selected.
   */
  let GeneratedItemList = (_class = class GeneratedItemList extends _component.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "router", _descriptor, this);

      _initializerDefineProperty(this, "store", _descriptor2, this);
    }

    get model() {
      return this.args.model || null;
    }

    get itemType() {
      return this.args.itemType || null;
    }

    refreshItemList() {
      const route = (0, _application.getOwner)(this).lookup(`route:${this.router.currentRouteName}`);
      this.store.clearAllDatasets();
      route.refresh();
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "router", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _applyDecoratedDescriptor(_class.prototype, "refreshItemList", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "refreshItemList"), _class.prototype)), _class);
  _exports.default = GeneratedItemList;
});
;define("vault/components/generated-item", ["exports", "@ember-data/adapter/error", "@ember/service", "@ember/component", "@ember/object", "ember-concurrency", "@ember/test-waiters"], function (_exports, _error, _service, _component, _object, _emberConcurrency, _testWaiters) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/adapter/error",0,"@ember/service",0,"@ember/component",0,"@ember/object",0,"ember-concurrency",0,"@ember/test-waiters"eaimeta@70e063a35619d71f

  /**
   * @module GeneratedItem
   * The `GeneratedItem` component is the form to configure generated items related to mounts (e.g. groups, roles, users)
   *
   * @example
   * ```js
   * <GeneratedItem @model={{model}} @mode={{mode}} @itemType={{itemType/>
   * ```
   *
   * @property model=null {DS.Model} - The corresponding item model that is being configured.
   * @property mode {String} - which config mode to use. either `show`, `edit`, or `create`
   * @property itemType {String} - the type of item displayed
   *
   */
  var _default = _component.default.extend({
    model: null,
    itemType: null,
    flashMessages: (0, _service.inject)(),
    router: (0, _service.inject)(),
    modelValidations: null,
    isFormInvalid: false,
    props: (0, _object.computed)('model', function () {
      return this.model.serialize();
    }),
    saveModel: (0, _emberConcurrency.task)((0, _testWaiters.waitFor)(function* () {
      try {
        yield this.model.save();
      } catch (err) {
        // AdapterErrors are handled by the error-message component
        // in the form
        if (err instanceof _error.default === false) {
          throw err;
        }

        return;
      }

      this.router.transitionTo('vault.cluster.access.method.item.list').followRedirects();
      this.flashMessages.success(`Successfully saved ${this.itemType} ${this.model.id}.`);
    })),

    init() {
      this._super(...arguments);

      if (this.mode === 'edit') {
        // For validation to work in edit mode,
        // reconstruct the model values from field group
        this.model.fieldGroups.forEach(element => {
          if (element.default) {
            element.default.forEach(attr => {
              const fieldValue = attr.options && attr.options.fieldValue;

              if (fieldValue) {
                this.model[attr.name] = this.model[fieldValue];
              }
            });
          }
        });
      }
    },

    actions: {
      onKeyUp(name, value) {
        this.model.set(name, value);

        if (this.model.validate) {
          // Set validation error message for updated attribute
          const {
            isValid,
            state
          } = this.model.validate();
          this.setProperties({
            modelValidations: state,
            isFormInvalid: !isValid
          });
        } else {
          this.set('isFormInvalid', false);
        }
      },

      deleteItem() {
        this.model.destroyRecord().then(() => {
          this.router.transitionTo('vault.cluster.access.method.item.list').followRedirects();
          this.flashMessages.success(`Successfully deleted ${this.itemType} ${this.model.id}.`);
        });
      }

    }
  });

  _exports.default = _default;
});
;define("vault/components/get-credentials-card", ["exports", "@glimmer/component", "@ember/service", "@ember/object", "@glimmer/tracking"], function (_exports, _component, _service, _object, _tracking) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2, _descriptor3, _descriptor4;

  0; //eaimeta@70e063a35619d71f0,"@glimmer/component",0,"@ember/service",0,"@ember/object",0,"@glimmer/tracking"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let GetCredentialsCard = (_class = class GetCredentialsCard extends _component.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "router", _descriptor, this);

      _initializerDefineProperty(this, "store", _descriptor2, this);

      _initializerDefineProperty(this, "role", _descriptor3, this);

      _initializerDefineProperty(this, "secret", _descriptor4, this);

      this.secret = this.args?.initialValue || '';
    }

    get buttonText() {
      if (this.args.type === 'secret') {
        if (this.secret.endsWith('/')) {
          return 'View list';
        }

        return 'View secret';
      }

      return 'Get credentials';
    }

    get buttonDisabled() {
      return !this.role && !this.secret;
    }

    transitionToCredential(evt) {
      evt.preventDefault();
      const role = this.role;
      const secret = this.secret;

      if (role) {
        this.router.transitionTo('vault.cluster.secrets.backend.credentials', role);
      }

      if (secret) {
        if (secret.endsWith('/')) {
          this.router.transitionTo('vault.cluster.secrets.backend.list', secret);
          return;
        }

        this.router.transitionTo('vault.cluster.secrets.backend.show', secret);
      }
    }

    handleInput(value) {
      if (this.args.type === 'role') {
        // if it comes in from the fallback component then the value is a string otherwise it's an array
        // which currently only happens if type is role.
        if (Array.isArray(value)) {
          this.role = value[0];
        } else {
          this.role = value;
        }
      }

      if (this.args.type === 'secret') {
        this.secret = value;
      }
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "router", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, "role", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return '';
    }
  }), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, "secret", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return '';
    }
  }), _applyDecoratedDescriptor(_class.prototype, "transitionToCredential", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "transitionToCredential"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "handleInput", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "handleInput"), _class.prototype)), _class);
  _exports.default = GetCredentialsCard;
});
;define("vault/components/hds/alert/description", ["exports", "@hashicorp/design-system-components/components/hds/alert/description"], function (_exports, _description) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _description.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/alert/description"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/alert/index", ["exports", "@hashicorp/design-system-components/components/hds/alert/index"], function (_exports, _index) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _index.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/alert/index"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/alert/title", ["exports", "@hashicorp/design-system-components/components/hds/alert/title"], function (_exports, _title) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _title.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/alert/title"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/app-frame/index", ["exports", "@hashicorp/design-system-components/components/hds/app-frame/index"], function (_exports, _index) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _index.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/app-frame/index"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/app-frame/parts/footer", ["exports", "@hashicorp/design-system-components/components/hds/app-frame/parts/footer"], function (_exports, _footer) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _footer.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/app-frame/parts/footer"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/app-frame/parts/header", ["exports", "@hashicorp/design-system-components/components/hds/app-frame/parts/header"], function (_exports, _header) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _header.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/app-frame/parts/header"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/app-frame/parts/main", ["exports", "@hashicorp/design-system-components/components/hds/app-frame/parts/main"], function (_exports, _main) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _main.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/app-frame/parts/main"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/app-frame/parts/modals", ["exports", "@hashicorp/design-system-components/components/hds/app-frame/parts/modals"], function (_exports, _modals) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _modals.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/app-frame/parts/modals"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/app-frame/parts/sidebar", ["exports", "@hashicorp/design-system-components/components/hds/app-frame/parts/sidebar"], function (_exports, _sidebar) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _sidebar.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/app-frame/parts/sidebar"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/application-state/body", ["exports", "@hashicorp/design-system-components/components/hds/application-state/body"], function (_exports, _body) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _body.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/application-state/body"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/application-state/footer", ["exports", "@hashicorp/design-system-components/components/hds/application-state/footer"], function (_exports, _footer) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _footer.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/application-state/footer"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/application-state/header", ["exports", "@hashicorp/design-system-components/components/hds/application-state/header"], function (_exports, _header) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _header.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/application-state/header"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/application-state/index", ["exports", "@hashicorp/design-system-components/components/hds/application-state/index"], function (_exports, _index) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _index.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/application-state/index"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/avatar/index", ["exports", "@hashicorp/design-system-components/components/hds/avatar/index"], function (_exports, _index) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _index.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/avatar/index"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/badge-count/index", ["exports", "@hashicorp/design-system-components/components/hds/badge-count/index"], function (_exports, _index) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _index.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/badge-count/index"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/badge/index", ["exports", "@hashicorp/design-system-components/components/hds/badge/index"], function (_exports, _index) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _index.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/badge/index"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/breadcrumb/index", ["exports", "@hashicorp/design-system-components/components/hds/breadcrumb/index"], function (_exports, _index) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _index.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/breadcrumb/index"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/breadcrumb/item", ["exports", "@hashicorp/design-system-components/components/hds/breadcrumb/item"], function (_exports, _item) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _item.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/breadcrumb/item"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/breadcrumb/truncation", ["exports", "@hashicorp/design-system-components/components/hds/breadcrumb/truncation"], function (_exports, _truncation) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _truncation.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/breadcrumb/truncation"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/button-set/index", ["exports", "@hashicorp/design-system-components/components/hds/button-set/index"], function (_exports, _index) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _index.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/button-set/index"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/button/index", ["exports", "@hashicorp/design-system-components/components/hds/button/index"], function (_exports, _index) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _index.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/button/index"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/card/container", ["exports", "@hashicorp/design-system-components/components/hds/card/container"], function (_exports, _container) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _container.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/card/container"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/disclosure/index", ["exports", "@hashicorp/design-system-components/components/hds/disclosure/index"], function (_exports, _index) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _index.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/disclosure/index"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/dismiss-button/index", ["exports", "@hashicorp/design-system-components/components/hds/dismiss-button/index"], function (_exports, _index) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _index.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/dismiss-button/index"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/dropdown/footer", ["exports", "@hashicorp/design-system-components/components/hds/dropdown/footer"], function (_exports, _footer) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _footer.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/dropdown/footer"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/dropdown/header", ["exports", "@hashicorp/design-system-components/components/hds/dropdown/header"], function (_exports, _header) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _header.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/dropdown/header"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/dropdown/index", ["exports", "@hashicorp/design-system-components/components/hds/dropdown/index"], function (_exports, _index) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _index.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/dropdown/index"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/dropdown/list-item/checkbox", ["exports", "@hashicorp/design-system-components/components/hds/dropdown/list-item/checkbox"], function (_exports, _checkbox) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _checkbox.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/dropdown/list-item/checkbox"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/dropdown/list-item/checkmark", ["exports", "@hashicorp/design-system-components/components/hds/dropdown/list-item/checkmark"], function (_exports, _checkmark) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _checkmark.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/dropdown/list-item/checkmark"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/dropdown/list-item/copy-item", ["exports", "@hashicorp/design-system-components/components/hds/dropdown/list-item/copy-item"], function (_exports, _copyItem) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _copyItem.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/dropdown/list-item/copy-item"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/dropdown/list-item/description", ["exports", "@hashicorp/design-system-components/components/hds/dropdown/list-item/description"], function (_exports, _description) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _description.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/dropdown/list-item/description"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/dropdown/list-item/generic", ["exports", "@hashicorp/design-system-components/components/hds/dropdown/list-item/generic"], function (_exports, _generic) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _generic.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/dropdown/list-item/generic"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/dropdown/list-item/interactive", ["exports", "@hashicorp/design-system-components/components/hds/dropdown/list-item/interactive"], function (_exports, _interactive) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _interactive.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/dropdown/list-item/interactive"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/dropdown/list-item/radio", ["exports", "@hashicorp/design-system-components/components/hds/dropdown/list-item/radio"], function (_exports, _radio) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _radio.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/dropdown/list-item/radio"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/dropdown/list-item/separator", ["exports", "@hashicorp/design-system-components/components/hds/dropdown/list-item/separator"], function (_exports, _separator) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _separator.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/dropdown/list-item/separator"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/dropdown/list-item/title", ["exports", "@hashicorp/design-system-components/components/hds/dropdown/list-item/title"], function (_exports, _title) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _title.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/dropdown/list-item/title"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/dropdown/toggle/button", ["exports", "@hashicorp/design-system-components/components/hds/dropdown/toggle/button"], function (_exports, _button) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _button.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/dropdown/toggle/button"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/dropdown/toggle/chevron", ["exports", "@hashicorp/design-system-components/components/hds/dropdown/toggle/chevron"], function (_exports, _chevron) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _chevron.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/dropdown/toggle/chevron"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/dropdown/toggle/icon", ["exports", "@hashicorp/design-system-components/components/hds/dropdown/toggle/icon"], function (_exports, _icon) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _icon.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/dropdown/toggle/icon"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/flyout/body", ["exports", "@hashicorp/design-system-components/components/hds/flyout/body"], function (_exports, _body) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _body.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/flyout/body"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/flyout/description", ["exports", "@hashicorp/design-system-components/components/hds/flyout/description"], function (_exports, _description) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _description.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/flyout/description"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/flyout/footer", ["exports", "@hashicorp/design-system-components/components/hds/flyout/footer"], function (_exports, _footer) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _footer.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/flyout/footer"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/flyout/header", ["exports", "@hashicorp/design-system-components/components/hds/flyout/header"], function (_exports, _header) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _header.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/flyout/header"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/flyout/index", ["exports", "@hashicorp/design-system-components/components/hds/flyout/index"], function (_exports, _index) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _index.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/flyout/index"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/form/checkbox/base", ["exports", "@hashicorp/design-system-components/components/hds/form/checkbox/base"], function (_exports, _base) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _base.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/form/checkbox/base"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/form/checkbox/field", ["exports", "@hashicorp/design-system-components/components/hds/form/checkbox/field"], function (_exports, _field) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _field.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/form/checkbox/field"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/form/checkbox/group", ["exports", "@hashicorp/design-system-components/components/hds/form/checkbox/group"], function (_exports, _group) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _group.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/form/checkbox/group"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/form/error/index", ["exports", "@hashicorp/design-system-components/components/hds/form/error/index"], function (_exports, _index) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _index.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/form/error/index"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/form/error/message", ["exports", "@hashicorp/design-system-components/components/hds/form/error/message"], function (_exports, _message) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _message.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/form/error/message"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/form/field/index", ["exports", "@hashicorp/design-system-components/components/hds/form/field/index"], function (_exports, _index) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _index.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/form/field/index"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/form/fieldset/index", ["exports", "@hashicorp/design-system-components/components/hds/form/fieldset/index"], function (_exports, _index) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _index.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/form/fieldset/index"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/form/helper-text/index", ["exports", "@hashicorp/design-system-components/components/hds/form/helper-text/index"], function (_exports, _index) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _index.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/form/helper-text/index"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/form/indicator/index", ["exports", "@hashicorp/design-system-components/components/hds/form/indicator/index"], function (_exports, _index) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _index.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/form/indicator/index"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/form/label/index", ["exports", "@hashicorp/design-system-components/components/hds/form/label/index"], function (_exports, _index) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _index.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/form/label/index"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/form/legend/index", ["exports", "@hashicorp/design-system-components/components/hds/form/legend/index"], function (_exports, _index) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _index.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/form/legend/index"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/form/radio-card/description", ["exports", "@hashicorp/design-system-components/components/hds/form/radio-card/description"], function (_exports, _description) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _description.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/form/radio-card/description"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/form/radio-card/group", ["exports", "@hashicorp/design-system-components/components/hds/form/radio-card/group"], function (_exports, _group) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _group.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/form/radio-card/group"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/form/radio-card/index", ["exports", "@hashicorp/design-system-components/components/hds/form/radio-card/index"], function (_exports, _index) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _index.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/form/radio-card/index"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/form/radio-card/label", ["exports", "@hashicorp/design-system-components/components/hds/form/radio-card/label"], function (_exports, _label) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _label.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/form/radio-card/label"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/form/radio/base", ["exports", "@hashicorp/design-system-components/components/hds/form/radio/base"], function (_exports, _base) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _base.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/form/radio/base"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/form/radio/field", ["exports", "@hashicorp/design-system-components/components/hds/form/radio/field"], function (_exports, _field) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _field.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/form/radio/field"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/form/radio/group", ["exports", "@hashicorp/design-system-components/components/hds/form/radio/group"], function (_exports, _group) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _group.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/form/radio/group"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/form/select/base", ["exports", "@hashicorp/design-system-components/components/hds/form/select/base"], function (_exports, _base) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _base.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/form/select/base"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/form/select/field", ["exports", "@hashicorp/design-system-components/components/hds/form/select/field"], function (_exports, _field) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _field.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/form/select/field"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/form/text-input/base", ["exports", "@hashicorp/design-system-components/components/hds/form/text-input/base"], function (_exports, _base) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _base.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/form/text-input/base"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/form/text-input/field", ["exports", "@hashicorp/design-system-components/components/hds/form/text-input/field"], function (_exports, _field) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _field.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/form/text-input/field"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/form/textarea/base", ["exports", "@hashicorp/design-system-components/components/hds/form/textarea/base"], function (_exports, _base) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _base.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/form/textarea/base"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/form/textarea/field", ["exports", "@hashicorp/design-system-components/components/hds/form/textarea/field"], function (_exports, _field) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _field.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/form/textarea/field"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/form/toggle/base", ["exports", "@hashicorp/design-system-components/components/hds/form/toggle/base"], function (_exports, _base) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _base.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/form/toggle/base"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/form/toggle/field", ["exports", "@hashicorp/design-system-components/components/hds/form/toggle/field"], function (_exports, _field) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _field.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/form/toggle/field"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/form/toggle/group", ["exports", "@hashicorp/design-system-components/components/hds/form/toggle/group"], function (_exports, _group) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _group.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/form/toggle/group"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/icon-tile/index", ["exports", "@hashicorp/design-system-components/components/hds/icon-tile/index"], function (_exports, _index) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _index.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/icon-tile/index"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/interactive/index", ["exports", "@hashicorp/design-system-components/components/hds/interactive/index"], function (_exports, _index) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _index.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/interactive/index"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/link/inline", ["exports", "@hashicorp/design-system-components/components/hds/link/inline"], function (_exports, _inline) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _inline.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/link/inline"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/link/standalone", ["exports", "@hashicorp/design-system-components/components/hds/link/standalone"], function (_exports, _standalone) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _standalone.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/link/standalone"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/modal/body", ["exports", "@hashicorp/design-system-components/components/hds/modal/body"], function (_exports, _body) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _body.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/modal/body"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/modal/footer", ["exports", "@hashicorp/design-system-components/components/hds/modal/footer"], function (_exports, _footer) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _footer.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/modal/footer"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/modal/header", ["exports", "@hashicorp/design-system-components/components/hds/modal/header"], function (_exports, _header) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _header.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/modal/header"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/modal/index", ["exports", "@hashicorp/design-system-components/components/hds/modal/index"], function (_exports, _index) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _index.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/modal/index"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/pagination/compact/index", ["exports", "@hashicorp/design-system-components/components/hds/pagination/compact/index"], function (_exports, _index) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _index.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/pagination/compact/index"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/pagination/info", ["exports", "@hashicorp/design-system-components/components/hds/pagination/info"], function (_exports, _info) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _info.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/pagination/info"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/pagination/nav/arrow", ["exports", "@hashicorp/design-system-components/components/hds/pagination/nav/arrow"], function (_exports, _arrow) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _arrow.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/pagination/nav/arrow"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/pagination/nav/ellipsis", ["exports", "@hashicorp/design-system-components/components/hds/pagination/nav/ellipsis"], function (_exports, _ellipsis) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _ellipsis.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/pagination/nav/ellipsis"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/pagination/nav/number", ["exports", "@hashicorp/design-system-components/components/hds/pagination/nav/number"], function (_exports, _number) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _number.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/pagination/nav/number"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/pagination/numbered/index", ["exports", "@hashicorp/design-system-components/components/hds/pagination/numbered/index"], function (_exports, _index) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _index.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/pagination/numbered/index"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/pagination/size-selector", ["exports", "@hashicorp/design-system-components/components/hds/pagination/size-selector"], function (_exports, _sizeSelector) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _sizeSelector.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/pagination/size-selector"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/segmented-group/index", ["exports", "@hashicorp/design-system-components/components/hds/segmented-group/index"], function (_exports, _index) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _index.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/segmented-group/index"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/side-nav/base", ["exports", "@hashicorp/design-system-components/components/hds/side-nav/base"], function (_exports, _base) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _base.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/side-nav/base"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/side-nav/header/home-link", ["exports", "@hashicorp/design-system-components/components/hds/side-nav/header/home-link"], function (_exports, _homeLink) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _homeLink.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/side-nav/header/home-link"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/side-nav/header/icon-button", ["exports", "@hashicorp/design-system-components/components/hds/side-nav/header/icon-button"], function (_exports, _iconButton) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _iconButton.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/side-nav/header/icon-button"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/side-nav/header/index", ["exports", "@hashicorp/design-system-components/components/hds/side-nav/header"], function (_exports, _header) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _header.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/side-nav/header"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/side-nav/index", ["exports", "@hashicorp/design-system-components/components/hds/side-nav/index"], function (_exports, _index) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _index.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/side-nav/index"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/side-nav/list/back-link", ["exports", "@hashicorp/design-system-components/components/hds/side-nav/list/back-link"], function (_exports, _backLink) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _backLink.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/side-nav/list/back-link"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/side-nav/list/index", ["exports", "@hashicorp/design-system-components/components/hds/side-nav/list/index"], function (_exports, _index) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _index.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/side-nav/list/index"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/side-nav/list/item", ["exports", "@hashicorp/design-system-components/components/hds/side-nav/list/item"], function (_exports, _item) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _item.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/side-nav/list/item"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/side-nav/list/link", ["exports", "@hashicorp/design-system-components/components/hds/side-nav/list/link"], function (_exports, _link) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _link.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/side-nav/list/link"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/side-nav/list/title", ["exports", "@hashicorp/design-system-components/components/hds/side-nav/list/title"], function (_exports, _title) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _title.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/side-nav/list/title"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/side-nav/portal/index", ["exports", "@hashicorp/design-system-components/components/hds/side-nav/portal/index"], function (_exports, _index) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _index.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/side-nav/portal/index"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/side-nav/portal/target", ["exports", "@hashicorp/design-system-components/components/hds/side-nav/portal/target"], function (_exports, _target) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _target.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/side-nav/portal/target"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/stepper/step/indicator", ["exports", "@hashicorp/design-system-components/components/hds/stepper/step/indicator"], function (_exports, _indicator) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _indicator.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/stepper/step/indicator"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/stepper/task/indicator", ["exports", "@hashicorp/design-system-components/components/hds/stepper/task/indicator"], function (_exports, _indicator) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _indicator.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/stepper/task/indicator"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/table/index", ["exports", "@hashicorp/design-system-components/components/hds/table/index"], function (_exports, _index) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _index.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/table/index"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/table/td", ["exports", "@hashicorp/design-system-components/components/hds/table/td"], function (_exports, _td) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _td.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/table/td"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/table/th-sort", ["exports", "@hashicorp/design-system-components/components/hds/table/th-sort"], function (_exports, _thSort) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _thSort.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/table/th-sort"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/table/th", ["exports", "@hashicorp/design-system-components/components/hds/table/th"], function (_exports, _th) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _th.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/table/th"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/table/tr", ["exports", "@hashicorp/design-system-components/components/hds/table/tr"], function (_exports, _tr) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _tr.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/table/tr"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/tabs/index", ["exports", "@hashicorp/design-system-components/components/hds/tabs/index"], function (_exports, _index) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _index.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/tabs/index"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/tabs/panel", ["exports", "@hashicorp/design-system-components/components/hds/tabs/panel"], function (_exports, _panel) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _panel.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/tabs/panel"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/tabs/tab", ["exports", "@hashicorp/design-system-components/components/hds/tabs/tab"], function (_exports, _tab) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _tab.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/tabs/tab"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/tag/index", ["exports", "@hashicorp/design-system-components/components/hds/tag/index"], function (_exports, _index) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _index.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/tag/index"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/toast/index", ["exports", "@hashicorp/design-system-components/components/hds/toast/index"], function (_exports, _index) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _index.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/toast/index"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/tooltip-button/index", ["exports", "@hashicorp/design-system-components/components/hds/tooltip-button/index"], function (_exports, _index) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _index.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/tooltip-button/index"eaimeta@70e063a35619d71f
});
;define("vault/components/hds/yield/index", ["exports", "@hashicorp/design-system-components/components/hds/yield/index"], function (_exports, _index) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _index.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/components/hds/yield/index"eaimeta@70e063a35619d71f
});
;define("vault/components/hover-copy-button", ["exports", "@glimmer/component", "@glimmer/tracking"], function (_exports, _component, _tracking) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor;

  0; //eaimeta@70e063a35619d71f0,"@glimmer/component",0,"@glimmer/tracking"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  /**
   * @module HoverCopyButton
   * The `HoverCopyButton` is used on dark backgrounds to show a copy button.
   *
   * @example ```js
   * <HoverCopyButton @copyValue={{stringify this.model.id}} @alwaysShow={{true}} />```
   *
   * @param {string} copyValue - The value to be copied.
   * @param {boolean} [alwaysShow] - Boolean that affects the class.
   */
  let HoverCopyButton = (_class = class HoverCopyButton extends _component.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "tooltipText", _descriptor, this);
    }

    get alwaysShow() {
      return this.args.alwaysShow || false;
    }

    get copyValue() {
      return this.args.copyValue || false;
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "tooltipText", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return 'Copy';
    }
  })), _class);
  _exports.default = HoverCopyButton;
});
;define("vault/components/icon", ["exports", "core/components/icon"], function (_exports, _icon) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _icon.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/icon"eaimeta@70e063a35619d71f
});
;define("vault/components/identity/_popup-base", ["exports", "@ember/service", "@ember/debug", "@ember/component"], function (_exports, _service, _debug, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@ember/debug",0,"@ember/component"eaimeta@70e063a35619d71f

  var _default = _component.default.extend({
    tagName: '',
    flashMessages: (0, _service.inject)(),
    params: null,

    successMessage() {
      return 'Save was successful';
    },

    errorMessage() {
      return 'There was an error saving';
    },

    onError(model) {
      if (model && model.rollbackAttributes) {
        model.rollbackAttributes();
      }
    },

    onSuccess() {},

    // override and return a promise
    transaction() {
      (true && !(false) && (0, _debug.assert)('override transaction call in an extension of popup-base', false));
    },

    actions: {
      performTransaction() {
        const args = [...arguments];
        const messageArgs = this.messageArgs(...args);
        return this.transaction(...args).then(() => {
          this.onSuccess();
          this.flashMessages.success(this.successMessage(...messageArgs));
        }).catch(e => {
          this.onError(...messageArgs);
          this.flashMessages.success(this.errorMessage(e, ...messageArgs));
        });
      }

    }
  });

  _exports.default = _default;
});
;define("vault/components/identity/edit-form", ["exports", "@ember/service", "@ember/component", "@ember/object", "ember-concurrency", "vault/helpers/humanize", "@ember/test-waiters"], function (_exports, _service, _component, _object, _emberConcurrency, _humanize, _testWaiters) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@ember/component",0,"@ember/object",0,"ember-concurrency",0,"vault/helpers/humanize",0,"@ember/test-waiters"eaimeta@70e063a35619d71f

  var _default = _component.default.extend({
    flashMessages: (0, _service.inject)(),
    'data-test-component': 'identity-edit-form',
    attributeBindings: ['data-test-component'],
    model: null,
    // 'create', 'edit', 'merge'
    mode: 'create',

    /*
     * @param Function
     * @public
     *
     * Optional param to call a function upon successfully saving an entity
     */
    onSave: () => {},
    cancelLink: (0, _object.computed)('mode', 'model.identityType', function () {
      const {
        model,
        mode
      } = this;
      const routes = {
        'create-entity': 'vault.cluster.access.identity',
        'edit-entity': 'vault.cluster.access.identity.show',
        'merge-entity-merge': 'vault.cluster.access.identity',
        'create-entity-alias': 'vault.cluster.access.identity.aliases',
        'edit-entity-alias': 'vault.cluster.access.identity.aliases.show',
        'create-group': 'vault.cluster.access.identity',
        'edit-group': 'vault.cluster.access.identity.show',
        'create-group-alias': 'vault.cluster.access.identity.aliases',
        'edit-group-alias': 'vault.cluster.access.identity.aliases.show'
      };
      const key = model ? `${mode}-${model.identityType}` : 'merge-entity-alias';
      return routes[key];
    }),

    getMessage(model) {
      let isDelete = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      const mode = this.mode;
      const typeDisplay = (0, _humanize.humanize)([model.identityType]);
      const action = isDelete ? 'deleted' : 'saved';

      if (mode === 'merge') {
        return 'Successfully merged entities';
      }

      if (model.id) {
        return `Successfully ${action} ${typeDisplay} ${model.id}.`;
      }

      return `Successfully ${action} ${typeDisplay}.`;
    },

    save: (0, _emberConcurrency.task)((0, _testWaiters.waitFor)(function* () {
      const model = this.model;
      const message = this.getMessage(model);

      try {
        yield model.save();
      } catch (err) {
        // err will display via model state
        return;
      }

      this.flashMessages.success(message);
      yield this.onSave({
        saveType: 'save',
        model
      });
    })).drop(),

    willDestroy() {
      this._super(...arguments);

      const model = this.model;
      if (!model) return;

      if (model.get('isDirty') && !model.isDestroyed || !model.isDestroying) {
        model.rollbackAttributes();
      }
    },

    actions: {
      deleteItem(model) {
        const message = this.getMessage(model, true);
        const flash = this.flashMessages;
        model.destroyRecord().then(() => {
          flash.success(message);
          return this.onSave({
            saveType: 'delete',
            model
          });
        });
      }

    }
  });

  _exports.default = _default;
});
;define("vault/components/identity/entity-nav", ["exports", "@ember/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/component"eaimeta@70e063a35619d71f

  var _default = _component.default.extend({});

  _exports.default = _default;
});
;define("vault/components/identity/item-details", ["exports", "@ember/service", "@ember/component"], function (_exports, _service, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@ember/component"eaimeta@70e063a35619d71f

  var _default = _component.default.extend({
    flashMessages: (0, _service.inject)(),
    actions: {
      enable(model) {
        model.set('disabled', false);
        model.save().then(() => {
          this.flashMessages.success(`Successfully enabled entity: ${model.id}`);
        }).catch(e => {
          this.flashMessages.success(`There was a problem enabling the entity: ${model.id} - ${e.errors.join(' ') || e.message}`);
        });
      }

    }
  });

  _exports.default = _default;
});
;define("vault/components/identity/lookup-input", ["exports", "@ember/service", "@ember/component", "ember-concurrency", "vault/helpers/underscore"], function (_exports, _service, _component, _emberConcurrency, _underscore) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@ember/component",0,"ember-concurrency",0,"vault/helpers/underscore"eaimeta@70e063a35619d71f

  var _default = _component.default.extend({
    store: (0, _service.inject)(),
    flashMessages: (0, _service.inject)(),
    router: (0, _service.inject)(),
    // Public API - either 'entity' or 'group'
    // this will determine which adapter is used to make the lookup call
    type: 'entity',
    param: 'alias name',
    paramValue: null,
    aliasMountAccessor: null,
    authMethods: null,

    init() {
      this._super(...arguments);

      this.store.findAll('auth-method').then(methods => {
        this.set('authMethods', methods);
        this.set('aliasMountAccessor', methods.get('firstObject.accessor'));
      });
    },

    adapter() {
      const type = this.type;
      const store = this.store;
      return store.adapterFor(`identity/${type}`);
    },

    data() {
      const {
        param,
        paramValue,
        aliasMountAccessor
      } = this;
      const data = {};
      data[(0, _underscore.underscore)([param])] = paramValue;

      if (param === 'alias name') {
        data.alias_mount_accessor = aliasMountAccessor;
      }

      return data;
    },

    lookup: (0, _emberConcurrency.task)(function* () {
      const flash = this.flashMessages;
      const type = this.type;
      const store = this.store;
      const {
        param,
        paramValue
      } = this;
      let response;

      try {
        response = yield this.adapter().lookup(store, this.data());
      } catch (err) {
        flash.danger(`We encountered an error attempting the ${type} lookup: ${err.message || err.errors.join('')}.`);
        return;
      }

      if (response) {
        return this.router.transitionTo('vault.cluster.access.identity.show', response.id, 'details');
      } else {
        flash.danger(`We were unable to find an identity ${type} with a "${param}" of "${paramValue}".`);
      }
    })
  });

  _exports.default = _default;
});
;define("vault/components/identity/popup-alias", ["exports", "vault/components/identity/_popup-base"], function (_exports, _popupBase) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/components/identity/_popup-base"eaimeta@70e063a35619d71f

  var _default = _popupBase.default.extend({
    messageArgs(model) {
      const type = model.get('identityType');
      const id = model.id;
      return [type, id];
    },

    successMessage(type, id) {
      return `Successfully deleted ${type}: ${id}`;
    },

    errorMessage(e, type, id) {
      const error = e.errors ? e.errors.join(' ') : e.message;
      return `There was a problem deleting ${type}: ${id} - ${error}`;
    },

    transaction(model) {
      return model.destroyRecord();
    }

  });

  _exports.default = _default;
});
;define("vault/components/identity/popup-members", ["exports", "@ember/object/computed", "@ember/object", "vault/components/identity/_popup-base"], function (_exports, _computed, _object, _popupBase) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/object/computed",0,"@ember/object",0,"vault/components/identity/_popup-base"eaimeta@70e063a35619d71f

  var _default = _popupBase.default.extend({
    model: (0, _computed.alias)('params.firstObject'),
    groupArray: (0, _object.computed)('params', function () {
      return this.params.objectAt(1);
    }),
    memberId: (0, _object.computed)('params', function () {
      return this.params.objectAt(2);
    }),

    messageArgs() {
      return [...arguments];
    },

    successMessage(model, groupArray, memberId) {
      return `Successfully removed '${memberId}' from the group`;
    },

    errorMessage(e, model, groupArray, memberId) {
      const error = e.errors ? e.errors.join(' ') : e.message;
      return `There was a problem removing '${memberId}' from the group - ${error}`;
    },

    transaction(model, groupArray, memberId) {
      const members = model.get(groupArray);
      model.set(groupArray, members.without(memberId));
      return model.save();
    }

  });

  _exports.default = _default;
});
;define("vault/components/identity/popup-metadata", ["exports", "vault/components/identity/_popup-base", "@ember/object", "@ember/object/computed"], function (_exports, _popupBase, _object, _computed) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/components/identity/_popup-base",0,"@ember/object",0,"@ember/object/computed"eaimeta@70e063a35619d71f

  var _default = _popupBase.default.extend({
    model: (0, _computed.alias)('params.firstObject'),
    key: (0, _object.computed)('params', function () {
      return this.params.objectAt(1);
    }),

    messageArgs(model, key) {
      return [model, key];
    },

    successMessage(model, key) {
      return `Successfully removed '${key}' from metadata`;
    },

    errorMessage(e, model, key) {
      const error = e.errors ? e.errors.join(' ') : e.message;
      return `There was a problem removing '${key}' from the metadata - ${error}`;
    },

    transaction(model, key) {
      const metadata = model.metadata;
      delete metadata[key];
      model.set('metadata', { ...metadata
      });
      return model.save();
    }

  });

  _exports.default = _default;
});
;define("vault/components/identity/popup-policy", ["exports", "@ember/object/computed", "@ember/object", "vault/components/identity/_popup-base"], function (_exports, _computed, _object, _popupBase) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/object/computed",0,"@ember/object",0,"vault/components/identity/_popup-base"eaimeta@70e063a35619d71f

  var _default = _popupBase.default.extend({
    model: (0, _computed.alias)('params.firstObject'),
    policyName: (0, _object.computed)('params', function () {
      return this.params.objectAt(1);
    }),

    messageArgs(model, policyName) {
      return [model, policyName];
    },

    successMessage(model, policyName) {
      return `Successfully removed '${policyName}' policy from ${model.id} `;
    },

    errorMessage(e, model, policyName) {
      const error = e.errors ? e.errors.join(' ') : e.message;
      return `There was a problem removing '${policyName}' policy - ${error}`;
    },

    transaction(model, policyName) {
      const policies = model.get('policies');
      model.set('policies', policies.without(policyName));
      return model.save();
    }

  });

  _exports.default = _default;
});
;define("vault/components/info-table-item-array", ["exports", "core/components/info-table-item-array"], function (_exports, _infoTableItemArray) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _infoTableItemArray.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/info-table-item-array"eaimeta@70e063a35619d71f
});
;define("vault/components/info-table-row", ["exports", "core/components/info-table-row"], function (_exports, _infoTableRow) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _infoTableRow.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/info-table-row"eaimeta@70e063a35619d71f
});
;define("vault/components/info-table", ["exports", "core/components/info-table"], function (_exports, _infoTable) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _infoTable.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/info-table"eaimeta@70e063a35619d71f
});
;define("vault/components/info-tooltip", ["exports", "core/components/info-tooltip"], function (_exports, _infoTooltip) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _infoTooltip.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/info-tooltip"eaimeta@70e063a35619d71f
});
;define("vault/components/input-search", ["exports", "core/components/input-search"], function (_exports, _inputSearch) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _inputSearch.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/input-search"eaimeta@70e063a35619d71f
});
;define("vault/components/json-editor", ["exports", "core/components/json-editor"], function (_exports, _jsonEditor) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _jsonEditor.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/json-editor"eaimeta@70e063a35619d71f
});
;define("vault/components/key-value-header", ["exports", "core/components/key-value-header"], function (_exports, _keyValueHeader) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _keyValueHeader.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/key-value-header"eaimeta@70e063a35619d71f
});
;define("vault/components/key-version-select", ["exports", "@ember/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/component"eaimeta@70e063a35619d71f

  var _default = _component.default.extend({
    tagName: ''
  });

  _exports.default = _default;
});
;define("vault/components/keymgmt/distribute", ["exports", "@glimmer/component", "@ember/object", "@ember/service", "@glimmer/tracking", "vault/models/keymgmt/key", "ember-concurrency", "@ember/test-waiters"], function (_exports, _component, _object, _service, _tracking, _key, _emberConcurrency, _testWaiters) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _class3, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12;

  0; //eaimeta@70e063a35619d71f0,"@glimmer/component",0,"@ember/object",0,"@ember/service",0,"@glimmer/tracking",0,"vault/models/keymgmt/key",0,"ember-concurrency",0,"@ember/test-waiters"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  /**
   * @module KeymgmtDistribute
   * KeymgmtDistribute components are used to provide a form to distribute Keymgmt keys to a provider.
   *
   * @example
   * ```js
   * <KeymgmtDistribute @backend="keymgmt" @key="my-key" @provider="my-kms" />
   * ```
   * @param {string} backend - name of backend, which will be the basis of other store queries
   * @param {string} [key] - key is the name of the existing key which is being distributed. Will hide the key field in UI
   * @param {string} [provider] - provider is the name of the existing provider which is being distributed to. Will hide the provider field in UI
   */
  let DistributionData = (_class = class DistributionData {
    constructor() {
      _initializerDefineProperty(this, "key", _descriptor, this);

      _initializerDefineProperty(this, "provider", _descriptor2, this);

      _initializerDefineProperty(this, "operations", _descriptor3, this);

      _initializerDefineProperty(this, "protection", _descriptor4, this);
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "key", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "provider", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, "operations", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, "protection", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class);
  const VALID_TYPES_BY_PROVIDER = {
    gcpckms: ['aes256-gcm96', 'rsa-2048', 'rsa-3072', 'rsa-4096', 'ecdsa-p256', 'ecdsa-p384', 'ecdsa-p521'],
    awskms: ['aes256-gcm96'],
    azurekeyvault: ['rsa-2048', 'rsa-3072', 'rsa-4096']
  };
  let KeymgmtDistribute = (_class3 = class KeymgmtDistribute extends _component.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor5, this);

      _initializerDefineProperty(this, "flashMessages", _descriptor6, this);

      _initializerDefineProperty(this, "router", _descriptor7, this);

      _initializerDefineProperty(this, "keyModel", _descriptor8, this);

      _initializerDefineProperty(this, "isNewKey", _descriptor9, this);

      _initializerDefineProperty(this, "providerType", _descriptor10, this);

      _initializerDefineProperty(this, "formData", _descriptor11, this);

      _initializerDefineProperty(this, "formErrors", _descriptor12, this);

      this.formData = new DistributionData(); // Set initial values passed in

      this.formData.key = this.args.key || '';
      this.formData.provider = this.args.provider || ''; // Side effects to get types of key or provider passed in

      if (this.args.provider) {
        this.getProviderType(this.args.provider);
      }

      if (this.args.key) {
        this.getKeyInfo(this.args.key);
      }

      this.formData.operations = [];
    }

    get keyTypes() {
      return _key.KEY_TYPES;
    }

    get validMatchError() {
      if (!this.providerType || !this.keyModel?.type) {
        return null;
      }

      const valid = VALID_TYPES_BY_PROVIDER[this.providerType]?.includes(this.keyModel.type);
      if (valid) return null; // default to showing error on provider unless @provider (field hidden)

      if (this.args.provider) {
        return {
          key: `This key type is incompatible with the ${this.providerType} provider. To distribute to this provider, change the key type or choose another key.`
        };
      }

      const message = `This provider is incompatible with the ${this.keyModel.type} key type. Please choose another provider`;
      return {
        provider: this.args.key ? `${message}.` : `${message} or change the key type.`
      };
    }

    get operations() {
      const pt = this.providerType;

      if (pt === 'awskms') {
        return ['encrypt', 'decrypt'];
      } else if (pt === 'gcpckms') {
        const kt = this.keyModel?.type || '';

        switch (kt) {
          case 'aes256-gcm96':
            return ['encrypt', 'decrypt'];

          case 'rsa-2048':
          case 'rsa-3072':
          case 'rsa-4096':
            return ['decrypt', 'sign'];

          case 'ecdsa-p256':
          case 'ecdsa-p384':
            return ['sign'];

          default:
            return ['encrypt', 'decrypt', 'sign', 'verify', 'wrap', 'unwrap'];
        }
      }

      return ['encrypt', 'decrypt', 'sign', 'verify', 'wrap', 'unwrap'];
    }

    get disableOperations() {
      return this.validMatchError || !this.formData.provider || !this.formData.key || this.isNewKey && !this.keyModel.type;
    }

    async getKeyInfo(keyName) {
      let isNew = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      let key;

      if (isNew) {
        this.isNewKey = true;
        key = this.store.createRecord(`keymgmt/key`, {
          backend: this.args.backend,
          id: keyName,
          name: keyName
        });
      } else {
        key = await this.store.queryRecord(`keymgmt/key`, {
          backend: this.args.backend,
          id: keyName,
          recordOnly: true
        }).catch(() => {// Key type isn't essential for distributing, so if
          // we can't read it for some reason swallow the error
          // and allow the API to respond with any key/provider
          // type matching errors
        });
      }

      this.keyModel = key;
    }

    async getProviderType(id) {
      if (!id) {
        this.providerType = '';
        return;
      }

      const provider = await this.store.queryRecord('keymgmt/provider', {
        backend: this.args.backend,
        id
      }).catch(() => {});
      this.providerType = provider?.provider;
    }

    destroyKey() {
      if (this.isNewKey) {
        // Delete record from store if it was created here
        this.keyModel.destroyRecord().finally(() => {
          this.keyModel = null;
        });
      }

      this.isNewKey = false;
      this.keyModel = null;
    }
    /**
     *
     * @param {DistributionData} rawData
     * @returns POJO formatted how the distribution endpoint needs
     */


    formatData(rawData) {
      const {
        key,
        provider,
        operations,
        protection
      } = rawData;
      if (!key || !provider || !operations || operations.length === 0) return null;
      return {
        key,
        provider,
        purpose: operations.join(','),
        protection
      };
    }

    distributeKey(backend, data) {
      const adapter = this.store.adapterFor('keymgmt/key');
      const {
        key,
        provider,
        purpose,
        protection
      } = data;
      return adapter.distribute(backend, provider, key, {
        purpose,
        protection
      }).then(() => {
        this.flashMessages.success(`Successfully distributed key ${key} to ${provider}`); // update keys on provider model

        this.store.clearDataset('keymgmt/key');
        const providerModel = this.store.peekRecord('keymgmt/provider', provider);
        providerModel.fetchKeys(providerModel.keys?.meta?.currentPage || 1);
        this.args.onClose();
      }).catch(e => {
        this.formErrors = `${e.errors}`;
      });
    }

    handleProvider(selection) {
      let providerName = selection[0];

      if (typeof selection === 'string') {
        // Handles case if no list permissions and fallback component is used
        providerName = selection;
      }

      this.formData.provider = providerName;

      if (providerName) {
        this.getProviderType(providerName);
      }
    }

    handleKeyType(evt) {
      this.keyModel.set('type', evt.target.value);
    }

    handleOperation(evt) {
      const ops = [...this.formData.operations];

      if (evt.target.checked) {
        ops.push(evt.target.id);
      } else {
        const idx = ops.indexOf(evt.target.id);
        ops.splice(idx, 1);
      }

      this.formData.operations = ops;
    }

    async handleKeySelect(selected) {
      const selectedKey = selected[0] || null;

      if (!selectedKey) {
        this.formData.key = null;
        return this.destroyKey();
      }

      this.formData.key = selectedKey.id;
      return this.getKeyInfo(selectedKey.id, selectedKey.isNew);
    }

    *createDistribution(evt) {
      evt.preventDefault();
      const {
        backend
      } = this.args;
      const data = this.formatData(this.formData);

      if (!data) {
        this.flashMessages.danger(`Key, provider, and operations are all required`);
        return;
      }

      if (this.isNewKey) {
        try {
          yield this.keyModel.save();
          this.flashMessages.success(`Successfully created key ${this.keyModel.name}`);
        } catch (e) {
          this.flashMessages.danger(`Error creating new key ${this.keyModel.name}: ${e.errors}`);
          return;
        }
      }

      yield this.distributeKey(backend, data); // Reload key to get dist info

      yield this.store.queryRecord(`keymgmt/key`, {
        backend: this.args.backend,
        id: this.keyModel.name
      });
    }

  }, (_descriptor5 = _applyDecoratedDescriptor(_class3.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor6 = _applyDecoratedDescriptor(_class3.prototype, "flashMessages", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor7 = _applyDecoratedDescriptor(_class3.prototype, "router", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor8 = _applyDecoratedDescriptor(_class3.prototype, "keyModel", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor9 = _applyDecoratedDescriptor(_class3.prototype, "isNewKey", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return false;
    }
  }), _descriptor10 = _applyDecoratedDescriptor(_class3.prototype, "providerType", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor11 = _applyDecoratedDescriptor(_class3.prototype, "formData", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor12 = _applyDecoratedDescriptor(_class3.prototype, "formErrors", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _applyDecoratedDescriptor(_class3.prototype, "handleProvider", [_object.action], Object.getOwnPropertyDescriptor(_class3.prototype, "handleProvider"), _class3.prototype), _applyDecoratedDescriptor(_class3.prototype, "handleKeyType", [_object.action], Object.getOwnPropertyDescriptor(_class3.prototype, "handleKeyType"), _class3.prototype), _applyDecoratedDescriptor(_class3.prototype, "handleOperation", [_object.action], Object.getOwnPropertyDescriptor(_class3.prototype, "handleOperation"), _class3.prototype), _applyDecoratedDescriptor(_class3.prototype, "handleKeySelect", [_object.action], Object.getOwnPropertyDescriptor(_class3.prototype, "handleKeySelect"), _class3.prototype), _applyDecoratedDescriptor(_class3.prototype, "createDistribution", [_emberConcurrency.task, _testWaiters.waitFor], Object.getOwnPropertyDescriptor(_class3.prototype, "createDistribution"), _class3.prototype)), _class3);
  _exports.default = KeymgmtDistribute;
});
;define("vault/components/keymgmt/key-edit", ["exports", "@glimmer/component", "@ember/service", "@ember/object", "@glimmer/tracking", "ember-concurrency", "@ember/test-waiters"], function (_exports, _component, _service, _object, _tracking, _emberConcurrency, _testWaiters) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2, _descriptor3, _descriptor4;

  0; //eaimeta@70e063a35619d71f0,"@glimmer/component",0,"@ember/service",0,"@ember/object",0,"@glimmer/tracking",0,"ember-concurrency",0,"@ember/test-waiters"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  /**
   * @module KeymgmtKeyEdit
   * KeymgmtKeyEdit components are used to display KeyMgmt Secrets engine UI for Key items
   *
   * @example
   * ```js
   * <KeymgmtKeyEdit @model={model} @mode="show" @tab="versions" />
   * ```
   * @param {object} model - model is the data from the store
   * @param {string} [mode=show] - mode controls which view is shown on the component
   * @param {string} [tab=details] - Options are "details" or "versions" for the show mode only
   */
  const LIST_ROOT_ROUTE = 'vault.cluster.secrets.backend.list-root';
  const SHOW_ROUTE = 'vault.cluster.secrets.backend.show';
  let KeymgmtKeyEdit = (_class = class KeymgmtKeyEdit extends _component.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);

      _initializerDefineProperty(this, "router", _descriptor2, this);

      _initializerDefineProperty(this, "flashMessages", _descriptor3, this);

      _initializerDefineProperty(this, "isDeleteModalOpen", _descriptor4, this);
    }

    get mode() {
      return this.args.mode || 'show';
    }

    get keyAdapter() {
      return this.store.adapterFor('keymgmt/key');
    }

    get isMutable() {
      return ['create', 'edit'].includes(this.args.mode);
    }

    get isCreating() {
      return this.args.mode === 'create';
    }

    toggleModal(bool) {
      this.isDeleteModalOpen = bool;
    }

    *saveKey(evt) {
      evt.preventDefault();
      const {
        model
      } = this.args;

      try {
        yield model.save();
        this.router.transitionTo(SHOW_ROUTE, model.name);
      } catch (error) {
        let errorMessage = error;

        if (error.errors) {
          // if errors come directly from API they will be in this shape
          errorMessage = error.errors.join('. ');
        }

        this.flashMessages.danger(errorMessage);

        if (!error.errors) {
          // If error was custom from save, only partial fail
          // so it's safe to show the key
          this.router.transitionTo(SHOW_ROUTE, model.name);
        }
      }
    }

    *removeKey() {
      try {
        yield this.keyAdapter.removeFromProvider(this.args.model);
        yield this.args.model.reload();
        this.flashMessages.success('Key has been successfully removed from provider');
      } catch (error) {
        this.flashMessages.danger(error.errors?.join('. '));
      }
    }

    deleteKey() {
      const secret = this.args.model;
      const backend = secret.backend;
      secret.destroyRecord().then(() => {
        this.router.transitionTo(LIST_ROOT_ROUTE, backend);
      }).catch(e => {
        this.flashMessages.danger(e.errors?.join('. '));
      });
    }

    *rotateKey() {
      const id = this.args.model.name;
      const backend = this.args.model.backend;
      const adapter = this.keyAdapter;
      yield adapter.rotateKey(backend, id).then(() => {
        this.flashMessages.success(`Success: ${id} connection was rotated`);
      }).catch(e => {
        this.flashMessages.danger(e.errors);
      });
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "router", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, "flashMessages", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, "isDeleteModalOpen", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return false;
    }
  }), _applyDecoratedDescriptor(_class.prototype, "toggleModal", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "toggleModal"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "saveKey", [_emberConcurrency.task, _testWaiters.waitFor], Object.getOwnPropertyDescriptor(_class.prototype, "saveKey"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "removeKey", [_emberConcurrency.task, _testWaiters.waitFor], Object.getOwnPropertyDescriptor(_class.prototype, "removeKey"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "deleteKey", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "deleteKey"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "rotateKey", [_emberConcurrency.task, _testWaiters.waitFor], Object.getOwnPropertyDescriptor(_class.prototype, "rotateKey"), _class.prototype)), _class);
  _exports.default = KeymgmtKeyEdit;
});
;define("vault/components/keymgmt/provider-edit", ["exports", "@glimmer/component", "@ember/service", "@ember/object", "@glimmer/tracking", "ember-concurrency", "@ember/test-waiters"], function (_exports, _component, _service, _object, _tracking, _emberConcurrency, _testWaiters) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2, _descriptor3;

  0; //eaimeta@70e063a35619d71f0,"@glimmer/component",0,"@ember/service",0,"@ember/object",0,"@glimmer/tracking",0,"ember-concurrency",0,"@ember/test-waiters"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  /**
   * @module KeymgmtProviderEdit
   * ProviderKeyEdit components are used to display KeyMgmt Secrets engine UI for Key items
   *
   * @example
   * ```js
   * <KeymgmtProviderEdit @model={model} @mode="show" />
   * ```
   * @param {object} model - model is the data from the store
   * @param {string} mode - mode controls which view is shown on the component - show | create |
   * @param {string} [tab] - Options are "details" or "keys" for the show mode only
   */
  let KeymgmtProviderEdit = (_class = class KeymgmtProviderEdit extends _component.default {
    constructor() {
      super(...arguments); // key count displayed in details tab and keys are listed in keys tab

      _initializerDefineProperty(this, "router", _descriptor, this);

      _initializerDefineProperty(this, "flashMessages", _descriptor2, this);

      _initializerDefineProperty(this, "modelValidations", _descriptor3, this);

      if (this.args.mode === 'show') {
        this.fetchKeys.perform();
      }
    }

    get isShowing() {
      return this.args.mode === 'show';
    }

    get isCreating() {
      return this.args.mode === 'create';
    }

    get viewingKeys() {
      return this.args.tab === 'keys';
    }

    *saveTask() {
      const {
        model
      } = this.args;

      try {
        yield model.save();
        this.router.transitionTo('vault.cluster.secrets.backend.show', model.id, {
          queryParams: {
            itemType: 'provider'
          }
        });
      } catch (error) {
        this.flashMessages.danger(error.errors.join('. '));
      }
    }

    *fetchKeys() {
      let page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;

      try {
        yield this.args.model.fetchKeys(page);
      } catch (error) {
        this.flashMessages.danger(error.errors.join('. '));
      }
    }

    async onSave(event) {
      event.preventDefault();
      const {
        isValid,
        state
      } = await this.args.model.validate();

      if (isValid) {
        this.modelValidations = null;
        this.saveTask.perform();
      } else {
        this.modelValidations = state;
      }
    }

    async onDelete() {
      try {
        const {
          model,
          root
        } = this.args;
        await model.destroyRecord();
        this.router.transitionTo(root.path, root.model, {
          queryParams: {
            tab: 'provider'
          }
        });
      } catch (error) {
        this.flashMessages.danger(error.errors.join('. '));
      }
    }

    async onDeleteKey(model) {
      try {
        await model.destroyRecord();
        this.args.model.keys.removeObject(model);
      } catch (error) {
        this.flashMessages.danger(error.errors.join('. '));
      }
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "router", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "flashMessages", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, "modelValidations", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _applyDecoratedDescriptor(_class.prototype, "saveTask", [_emberConcurrency.task, _testWaiters.waitFor], Object.getOwnPropertyDescriptor(_class.prototype, "saveTask"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "fetchKeys", [_emberConcurrency.task, _testWaiters.waitFor], Object.getOwnPropertyDescriptor(_class.prototype, "fetchKeys"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "onSave", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "onSave"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "onDelete", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "onDelete"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "onDeleteKey", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "onDeleteKey"), _class.prototype)), _class);
  _exports.default = KeymgmtProviderEdit;
});
;define("vault/components/kv-object-editor", ["exports", "core/components/kv-object-editor"], function (_exports, _kvObjectEditor) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _kvObjectEditor.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/kv-object-editor"eaimeta@70e063a35619d71f
});
;define("vault/components/layout-loading", ["exports", "core/components/layout-loading"], function (_exports, _layoutLoading) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _layoutLoading.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/layout-loading"eaimeta@70e063a35619d71f
});
;define("vault/components/link-to-external", ["exports", "ember-engines/components/link-to-external"], function (_exports, _linkToExternal) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _linkToExternal.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-engines/components/link-to-external"eaimeta@70e063a35619d71f
});
;define("vault/components/linkable-item/content", ["exports", "core/components/linkable-item/content"], function (_exports, _content) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _content.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/linkable-item/content"eaimeta@70e063a35619d71f
});
;define("vault/components/linkable-item/menu", ["exports", "core/components/linkable-item/menu"], function (_exports, _menu) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _menu.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/linkable-item/menu"eaimeta@70e063a35619d71f
});
;define("vault/components/linked-block", ["exports", "core/components/linked-block"], function (_exports, _linkedBlock) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _linkedBlock.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/linked-block"eaimeta@70e063a35619d71f
});
;define("vault/components/list-item", ["exports", "core/components/list-item"], function (_exports, _listItem) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _listItem.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/list-item"eaimeta@70e063a35619d71f
});
;define("vault/components/list-item/content", ["exports", "core/components/list-item/content"], function (_exports, _content) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _content.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/list-item/content"eaimeta@70e063a35619d71f
});
;define("vault/components/list-item/popup-menu", ["exports", "core/components/list-item/popup-menu"], function (_exports, _popupMenu) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _popupMenu.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/list-item/popup-menu"eaimeta@70e063a35619d71f
});
;define("vault/components/list-pagination", ["exports", "core/components/list-pagination"], function (_exports, _listPagination) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _listPagination.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/list-pagination"eaimeta@70e063a35619d71f
});
;define("vault/components/list-view", ["exports", "core/components/list-view"], function (_exports, _listView) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _listView.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/list-view"eaimeta@70e063a35619d71f
});
;define("vault/components/logo-edition", ["exports", "@ember/service", "@ember/component"], function (_exports, _service, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@ember/component"eaimeta@70e063a35619d71f

  var _default = _component.default.extend({
    tagName: '',
    version: (0, _service.inject)()
  });

  _exports.default = _default;
});
;define("vault/components/masked-input", ["exports", "core/components/masked-input"], function (_exports, _maskedInput) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _maskedInput.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/masked-input"eaimeta@70e063a35619d71f
});
;define("vault/components/maybe-in-element", ["exports", "ember-maybe-in-element/components/maybe-in-element"], function (_exports, _maybeInElement) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _maybeInElement.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-maybe-in-element/components/maybe-in-element"eaimeta@70e063a35619d71f
});
;define("vault/components/menu-loader", ["exports", "core/components/menu-loader"], function (_exports, _menuLoader) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _menuLoader.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/menu-loader"eaimeta@70e063a35619d71f
});
;define("vault/components/message-error", ["exports", "core/components/message-error"], function (_exports, _messageError) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _messageError.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/message-error"eaimeta@70e063a35619d71f
});
;define("vault/components/mfa/method-form", ["exports", "@glimmer/component", "@ember/object", "@glimmer/tracking", "@ember/service", "ember-concurrency"], function (_exports, _component, _object, _tracking, _service, _emberConcurrency) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2, _descriptor3, _descriptor4;

  0; //eaimeta@70e063a35619d71f0,"@glimmer/component",0,"@ember/object",0,"@glimmer/tracking",0,"@ember/service",0,"ember-concurrency"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  /**
   * MfaMethodForm component
   *
   * @example
   * ```js
   * <Mfa::MethodForm @model={{this.model}} @hasActions={{true}} @onSave={{this.onSave}} @onClose={{this.onClose}} />
   * ```
   * @param {Object} model - MFA method model
   * @param {boolean} [hasActions] - whether the action buttons will be rendered or not
   * @param {onSave} [onSave] - callback when save is successful
   * @param {onClose} [onClose] - callback when cancel is triggered
   */
  let MfaMethodForm = (_class = class MfaMethodForm extends _component.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);

      _initializerDefineProperty(this, "flashMessages", _descriptor2, this);

      _initializerDefineProperty(this, "editValidations", _descriptor3, this);

      _initializerDefineProperty(this, "isEditModalActive", _descriptor4, this);
    }

    *save() {
      try {
        yield this.args.model.save();
        this.args.onSave();
      } catch (e) {
        this.flashMessages.danger(e.errors?.join('. ') || e.message);
      }
    }

    async initSave(e) {
      e.preventDefault();
      const {
        isValid,
        state
      } = await this.args.model.validate();

      if (isValid) {
        this.isEditModalActive = true;
      } else {
        this.editValidations = state;
      }
    }

    cancel() {
      this.args.model.rollbackAttributes();
      this.args.onClose();
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "flashMessages", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, "editValidations", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, "isEditModalActive", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return false;
    }
  }), _applyDecoratedDescriptor(_class.prototype, "save", [_emberConcurrency.task], Object.getOwnPropertyDescriptor(_class.prototype, "save"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "initSave", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "initSave"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "cancel", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "cancel"), _class.prototype)), _class);
  _exports.default = MfaMethodForm;
});
;define("vault/components/mfa/mfa-form", ["exports", "@glimmer/component", "@ember/service", "@glimmer/tracking", "@ember/object", "ember-concurrency", "vault/helpers/number-to-word"], function (_exports, _component, _service, _tracking, _object, _emberConcurrency, _numberToWord) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = _exports.TOTP_VALIDATION_ERROR = void 0;

  var _class, _descriptor, _descriptor2, _descriptor3, _descriptor4;

  0; //eaimeta@70e063a35619d71f0,"@glimmer/component",0,"@ember/service",0,"@glimmer/tracking",0,"@ember/object",0,"ember-concurrency",0,"vault/helpers/number-to-word"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  /**
   * @module MfaForm
   * The MfaForm component is used to enter a passcode when mfa is required to login
   *
   * @example
   * ```js
   * <Mfa::MfaForm @clusterId={this.model.id} @authData={this.authData} />
   * ```
   * @param {string} clusterId - id of selected cluster
   * @param {object} authData - data from initial auth request -- { mfa_requirement, backend, data }
   * @param {function} onSuccess - fired when passcode passes validation
   * @param {function} onError - fired for multi-method or non-passcode method validation errors
   */
  const TOTP_VALIDATION_ERROR = 'The passcode failed to validate. If you entered the correct passcode, contact your administrator.';
  _exports.TOTP_VALIDATION_ERROR = TOTP_VALIDATION_ERROR;
  let MfaForm = (_class = class MfaForm extends _component.default {
    constructor() {
      super(...arguments); // trigger validation immediately when passcode is not required

      _initializerDefineProperty(this, "auth", _descriptor, this);

      _initializerDefineProperty(this, "countdown", _descriptor2, this);

      _initializerDefineProperty(this, "error", _descriptor3, this);

      _initializerDefineProperty(this, "codeDelayMessage", _descriptor4, this);

      const passcodeOrSelect = this.constraints.filter(constraint => {
        return constraint.methods.length > 1 || constraint.methods.findBy('uses_passcode');
      });

      if (!passcodeOrSelect.length) {
        this.validate.perform();
      }
    }

    get constraints() {
      return this.args.authData.mfa_requirement.mfa_constraints;
    }

    get multiConstraint() {
      return this.constraints.length > 1;
    }

    get singleConstraintMultiMethod() {
      return !this.isMultiConstraint && this.constraints[0].methods.length > 1;
    }

    get singlePasscode() {
      return !this.isMultiConstraint && this.constraints[0].methods.length === 1 && this.constraints[0].methods[0].uses_passcode;
    }

    get description() {
      let base = 'Multi-factor authentication is enabled for your account.';

      if (this.singlePasscode) {
        base += ' Enter your authentication code to log in.';
      }

      if (this.singleConstraintMultiMethod) {
        base += ' Select the MFA method you wish to use.';
      }

      if (this.multiConstraint) {
        const num = this.constraints.length;
        base += ` ${(0, _numberToWord.numberToWord)(num, true)} methods are required for successful authentication.`;
      }

      return base;
    }

    *validate() {
      try {
        this.error = null;
        const response = yield this.auth.totpValidate({
          clusterId: this.args.clusterId,
          ...this.args.authData
        });
        this.args.onSuccess(response);
      } catch (error) {
        const errors = error.errors || [];
        const codeUsed = errors.find(e => e.includes('code already used'));
        const rateLimit = errors.find(e => e.includes('maximum TOTP validation attempts'));
        const delayMessage = codeUsed || rateLimit;

        if (delayMessage) {
          const reason = codeUsed ? 'This code has already been used' : 'Maximum validation attempts exceeded';
          this.codeDelayMessage = `${reason}. Please wait until a new code is available.`;
          this.newCodeDelay.perform(delayMessage);
        } else if (this.singlePasscode) {
          this.error = TOTP_VALIDATION_ERROR;
        } else {
          this.args.onError(this.auth.handleError(error));
        }
      }
    }

    *newCodeDelay(message) {
      // parse validity period from error string to initialize countdown
      this.countdown = parseInt(message.match(/(\d\w seconds)/)[0].split(' ')[0]);

      while (this.countdown) {
        yield (0, _emberConcurrency.timeout)(1000);
        this.countdown--;
      }
    }

    onSelect(constraint, id) {
      (0, _object.set)(constraint, 'selectedId', id);
      (0, _object.set)(constraint, 'selectedMethod', constraint.methods.findBy('id', id));
    }

    submit(e) {
      e.preventDefault();
      this.validate.perform();
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "auth", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "countdown", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, "error", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, "codeDelayMessage", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _applyDecoratedDescriptor(_class.prototype, "validate", [_emberConcurrency.task], Object.getOwnPropertyDescriptor(_class.prototype, "validate"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "newCodeDelay", [_emberConcurrency.task], Object.getOwnPropertyDescriptor(_class.prototype, "newCodeDelay"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "onSelect", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "onSelect"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "submit", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "submit"), _class.prototype)), _class);
  _exports.default = MfaForm;
});
;define("vault/components/mfa/mfa-login-enforcement-form", ["exports", "@glimmer/component", "@glimmer/tracking", "@ember/object", "@ember/service", "ember-concurrency", "core/utils/search-select-has-many"], function (_exports, _component, _tracking, _object, _service, _emberConcurrency, _searchSelectHasMany) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9;

  0; //eaimeta@70e063a35619d71f0,"@glimmer/component",0,"@glimmer/tracking",0,"@ember/object",0,"@ember/service",0,"ember-concurrency",0,"core/utils/search-select-has-many"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  /**
   * @module MfaLoginEnforcementForm
   * MfaLoginEnforcementForm components are used to create and edit login enforcements
   *
   * @example
   * ```js
   * <MfaLoginEnforcementForm @model={{this.model}} @isInline={{false}} @onSave={{this.onSave}} @onClose={{this.onClose}} />
   * ```
   * @callback onSave
   * @callback onClose
   * @param {Object} model - login enforcement model
   * @param {Object} [isInline] - toggles inline display of form -- method selector and actions are hidden and should be handled externally
   * @param {Object} [modelErrors] - model validations state object if handling actions externally when displaying inline
   * @param {onSave} [onSave] - triggered on save success
   * @param {onClose} [onClose] - triggered on cancel
   */
  let MfaLoginEnforcementForm = (_class = class MfaLoginEnforcementForm extends _component.default {
    constructor() {
      super(...arguments); // aggregate different target array properties on model into flat list

      _initializerDefineProperty(this, "store", _descriptor, this);

      _initializerDefineProperty(this, "flashMessages", _descriptor2, this);

      _defineProperty(this, "targetTypes", [{
        label: 'Authentication mount',
        type: 'accessor',
        key: 'auth_method_accessors'
      }, {
        label: 'Authentication method',
        type: 'method',
        key: 'auth_method_types'
      }, {
        label: 'Group',
        type: 'identity/group',
        key: 'identity_groups'
      }, {
        label: 'Entity',
        type: 'identity/entity',
        key: 'identity_entities'
      }]);

      _defineProperty(this, "searchSelectOptions", null);

      _initializerDefineProperty(this, "name", _descriptor3, this);

      _initializerDefineProperty(this, "targets", _descriptor4, this);

      _initializerDefineProperty(this, "selectedTargetType", _descriptor5, this);

      _initializerDefineProperty(this, "selectedTargetValue", _descriptor6, this);

      _initializerDefineProperty(this, "searchSelect", _descriptor7, this);

      _initializerDefineProperty(this, "authMethods", _descriptor8, this);

      _initializerDefineProperty(this, "modelErrors", _descriptor9, this);

      this.flattenTargets(); // eagerly fetch identity groups and entities for use as search select options

      this.resetTargetState(); // only auth method types that have mounts can be selected as targets -- fetch from sys/auth and map by type

      this.fetchAuthMethods();
    }

    async flattenTargets() {
      for (const {
        label,
        key
      } of this.targetTypes) {
        const targetArray = await this.args.model[key];
        const targets = targetArray.map(value => ({
          label,
          key,
          value
        }));
        this.targets.addObjects(targets);
      }
    }

    async resetTargetState() {
      this.selectedTargetValue = null;
      const options = this.searchSelectOptions || {};

      if (!this.searchSelectOptions) {
        const types = ['identity/group', 'identity/entity'];

        for (const type of types) {
          try {
            options[type] = (await this.store.query(type, {})).toArray();
          } catch (error) {
            options[type] = [];
          }
        }

        this.searchSelectOptions = options;
      }

      if (this.selectedTargetType.includes('identity')) {
        this.searchSelect = {
          selected: [],
          options: [...options[this.selectedTargetType]]
        };
      }
    }

    async fetchAuthMethods() {
      const mounts = (await this.store.findAll('auth-method')).toArray();
      this.authMethods = mounts.mapBy('type');
    }

    get selectedTarget() {
      return this.targetTypes.findBy('type', this.selectedTargetType);
    }

    get errors() {
      return this.args.modelErrors || this.modelErrors;
    }

    *save() {
      this.modelErrors = {}; // check validity state first and abort if invalid

      const {
        isValid,
        state
      } = this.args.model.validate();

      if (!isValid) {
        this.modelErrors = state;
      } else {
        try {
          yield this.args.model.save();
          this.args.onSave();
        } catch (error) {
          const message = error.errors ? error.errors.join('. ') : error.message;
          this.flashMessages.danger(message);
        }
      }
    }

    async onMethodChange(selectedIds) {
      const methods = await this.args.model.mfa_methods;
      (0, _searchSelectHasMany.default)(selectedIds, methods, this.store, 'mfa-method');
    }

    onTargetSelect(type) {
      this.selectedTargetType = type;
      this.resetTargetState();
    }

    setTargetValue(selected) {
      const {
        type
      } = this.selectedTarget;

      if (type.includes('identity')) {
        // for identity groups and entities grab model from store as value
        this.selectedTargetValue = this.store.peekRecord(type, selected[0]);
      } else {
        this.selectedTargetValue = selected;
      }
    }

    addTarget() {
      const {
        label,
        key
      } = this.selectedTarget;
      const value = this.selectedTargetValue;
      this.targets.addObject({
        label,
        value,
        key
      }); // add target to appropriate model property

      this.args.model[key].addObject(value);
      this.selectedTargetValue = null;
      this.resetTargetState();
    }

    removeTarget(target) {
      this.targets.removeObject(target); // remove target from appropriate model property

      this.args.model[target.key].removeObject(target.value);
    }

    cancel() {
      // revert model changes
      this.args.model.rollbackAttributes();
      this.args.onClose();
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "flashMessages", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, "name", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, "targets", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return [];
    }
  }), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, "selectedTargetType", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return 'accessor';
    }
  }), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, "selectedTargetValue", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return null;
    }
  }), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, "searchSelect", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return {
        options: [],
        selected: []
      };
    }
  }), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, "authMethods", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return [];
    }
  }), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, "modelErrors", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _applyDecoratedDescriptor(_class.prototype, "save", [_emberConcurrency.task], Object.getOwnPropertyDescriptor(_class.prototype, "save"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "onMethodChange", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "onMethodChange"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "onTargetSelect", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "onTargetSelect"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "setTargetValue", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "setTargetValue"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "addTarget", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "addTarget"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "removeTarget", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "removeTarget"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "cancel", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "cancel"), _class.prototype)), _class);
  _exports.default = MfaLoginEnforcementForm;
});
;define("vault/components/mfa/mfa-login-enforcement-header", ["exports", "@glimmer/component", "@glimmer/tracking", "@ember/service", "@ember/object"], function (_exports, _component, _tracking, _service, _object) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2;

  0; //eaimeta@70e063a35619d71f0,"@glimmer/component",0,"@glimmer/tracking",0,"@ember/service",0,"@ember/object"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  /**
   * @module MfaLoginEnforcementHeader
   * MfaLoginEnforcementHeader components are used to display information when creating and editing login enforcements
   *
   * @example
   * ```js
   * <MfaLoginEnforcementHeader @heading="New enforcement" />
   * <MfaLoginEnforcementHeader @radioCardGroupValue={{this.enforcementPreference}} @onRadioCardSelect={{fn (mut this.enforcementPreference)}} @onEnforcementSelect={{fn (mut this.enforcement)}} />
   * ```
   * @callback onRadioCardSelect
   * @callback onEnforcementSelect
   * @param {boolean} [isInline] - toggle component display when used inline with mfa method form -- overrides heading and shows radio cards and enforcement select
   * @param {string} [heading] - page heading to display outside of inline mode
   * @param {string} [radioCardGroupValue] - selected value of the radio card group in inline mode -- new, existing or skip are the accepted values
   * @param {onRadioCardSelect} [onRadioCardSelect] - change event triggered on radio card select
   * @param {onEnforcementSelect} [onEnforcementSelect] - change event triggered on enforcement select when radioCardGroupValue is set to existing
   */
  let MfaLoginEnforcementHeaderComponent = (_class = class MfaLoginEnforcementHeaderComponent extends _component.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);

      _initializerDefineProperty(this, "enforcements", _descriptor2, this);

      if (this.args.isInline) {
        this.fetchEnforcements();
      }
    }

    async fetchEnforcements() {
      try {
        // cache initial values for lookup in select handler
        this._enforcements = (await this.store.query('mfa-login-enforcement', {})).toArray();
        this.enforcements = [...this._enforcements];
      } catch (error) {
        this.enforcements = [];
      }
    }

    onEnforcementSelect(_ref) {
      let [name] = _ref;
      // search select returns array of strings, in this case enforcement name
      // lookup model and pass to callback
      this.args.onEnforcementSelect(this._enforcements.findBy('name', name));
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "enforcements", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return [];
    }
  }), _applyDecoratedDescriptor(_class.prototype, "onEnforcementSelect", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "onEnforcementSelect"), _class.prototype)), _class);
  _exports.default = MfaLoginEnforcementHeaderComponent;
});
;define("vault/components/mfa/mfa-setup-step-one", ["exports", "@glimmer/component", "@ember/service", "@ember/object", "@glimmer/tracking"], function (_exports, _component, _service, _object, _tracking) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2, _descriptor3, _descriptor4;

  0; //eaimeta@70e063a35619d71f0,"@glimmer/component",0,"@ember/service",0,"@ember/object",0,"@glimmer/tracking"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  /**
   * @module MfaSetupStepOne
   * MfaSetupStepOne component is a child component used in the end user setup for MFA. It records the UUID (aka method_id) and sends a admin-generate request.
   *
   * @param {string} entityId - the entityId of the user. This comes from the auth service which records it on loading of the cluster. A root user does not have an entityId.
   * @param {function} isUUIDVerified - a function that consumes a boolean. Is true if the admin-generate is successful and false if it throws a warning or error.
   * @param {boolean} restartFlow - a boolean that is true that is true if the user should proceed to step two or false if they should stay on step one.
   * @param {function} saveUUIDandQrCode - A function that sends the inputted UUID and return qrCode from step one to the parent.
   * @param {boolean} showWarning - whether a warning is returned from the admin-generate query. Needs to be passed to step two.
   */
  let MfaSetupStepOne = (_class = class MfaSetupStepOne extends _component.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);

      _initializerDefineProperty(this, "error", _descriptor2, this);

      _initializerDefineProperty(this, "warning", _descriptor3, this);

      _initializerDefineProperty(this, "qrCode", _descriptor4, this);
    }

    redirectPreviousPage() {
      this.args.restartFlow();
      window.history.back();
    }

    async verifyUUID(evt) {
      evt.preventDefault();
      const response = await this.postCurrentTokenGenerate();

      if (response === 'stop_progress') {
        this.args.isUUIDVerified(false);
      } else if (response === 'reset_method') {
        this.args.showWarning(this.warning);
      } else {
        this.args.isUUIDVerified(true);
      }
    }

    async postCurrentTokenGenerate() {
      this.error = '';
      this.warning = '';
      const adapter = this.store.adapterFor('mfa-setup');
      let response;

      try {
        response = await adapter.currentTokenGenerate({
          method_id: this.UUID // comes from value on the input

        });
        this.args.saveUUIDandQrCode(this.UUID, response.data?.url); // if there was a warning it won't fail but needs to be handled here and the flow needs to be interrupted

        const warnings = response.warnings || [];

        if (warnings.length > 0) {
          this.UUID = ''; // clear UUID

          const alreadyGenerated = warnings.find(w => w.includes('Entity already has a secret for MFA method'));

          if (alreadyGenerated) {
            this.warning = 'A QR code has already been generated, scanned, and MFA set up for this entity. If a new code is required, contact your administrator.';
            return 'reset_method';
          }

          this.warning = warnings; // in case other kinds of warnings comes through.

          return 'reset_method';
        }
      } catch (error) {
        this.UUID = ''; // clear the UUID

        this.error = error.errors;
        return 'stop_progress';
      }

      return response;
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "error", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return '';
    }
  }), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, "warning", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return '';
    }
  }), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, "qrCode", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return '';
    }
  }), _applyDecoratedDescriptor(_class.prototype, "redirectPreviousPage", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "redirectPreviousPage"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "verifyUUID", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "verifyUUID"), _class.prototype)), _class);
  _exports.default = MfaSetupStepOne;
});
;define("vault/components/mfa/mfa-setup-step-two", ["exports", "@glimmer/component", "@ember/service", "@ember/object"], function (_exports, _component, _service, _object) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor;

  0; //eaimeta@70e063a35619d71f0,"@glimmer/component",0,"@ember/service",0,"@ember/object"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  /**
   * @module MfaSetupStepTwo
   * MfaSetupStepTwo component is a child component used in the end user setup for MFA. It displays a qrCode or a warning and allows a user to reset the method.
   *
   * @param {string} entityId - the entityId of the user. This comes from the auth service which records it on loading of the cluster. A root user does not have an entityId.
   * @param {string} uuid - the UUID that is entered in the input on step one.
   * @param {string} qrCode - the returned url from the admin-generate post. Used to create the qrCode.
   * @param {boolean} restartFlow - a boolean that is true that is true if the user should proceed to step two or false if they should stay on step one.
   * @param {string} warning - if there is a warning returned from the admin-generate post then it's sent to the step two component in this param.
   */
  let MfaSetupStepTwo = (_class = class MfaSetupStepTwo extends _component.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);
    }

    redirectPreviousPage() {
      this.args.restartFlow();
      window.history.back();
    }

    async restartSetup() {
      this.error = null;
      const adapter = this.store.adapterFor('mfa-setup');

      try {
        await adapter.adminDestroy({
          entity_id: this.args.entityId,
          method_id: this.args.uuid
        });
      } catch (error) {
        this.error = error.errors;
        return 'stop_progress';
      }

      this.args.restartFlow();
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _applyDecoratedDescriptor(_class.prototype, "redirectPreviousPage", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "redirectPreviousPage"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "restartSetup", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "restartSetup"), _class.prototype)), _class);
  _exports.default = MfaSetupStepTwo;
});
;define("vault/components/modal-dialog", ["exports", "ember-modal-dialog/components/modal-dialog"], function (_exports, _modalDialog) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _modalDialog.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-modal-dialog/components/modal-dialog"eaimeta@70e063a35619d71f
});
;define("vault/components/modal-form/oidc-assignment-template", ["exports", "@ember/component", "@ember/template-factory", "@glimmer/component", "@ember/object", "@ember/service", "@glimmer/tracking"], function (_exports, _component, _templateFactory, _component2, _object, _service, _tracking) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2;

  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars",0,"@glimmer/component",0,"@ember/object",0,"@ember/service",0,"@glimmer/tracking"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  const __COLOCATED_TEMPLATE__ = (0, _templateFactory.createTemplateFactory)(
  /*
    <Oidc::AssignmentForm @onSave={{this.onSave}} @model={{this.assignment}} @onCancel={{@onCancel}} />
  */
  {
    "id": "KQxxdMLY",
    "block": "[[[8,[39,0],null,[[\"@onSave\",\"@model\",\"@onCancel\"],[[30,0,[\"onSave\"]],[30,0,[\"assignment\"]],[30,1]]],null]],[\"@onCancel\"],false,[\"oidc/assignment-form\"]]",
    "moduleName": "vault/components/modal-form/oidc-assignment-template.hbs",
    "isStrictMode": false
  });
  /**
   * Copyright (c) HashiCorp, Inc.
   * SPDX-License-Identifier: MPL-2.0
   */


  /**
   * @module ModalForm::OidcAssignmentTemplate
   * ModalForm::OidcAssignmentTemplate components render within a modal and create a model using the input from the search select. The model is passed to the oidc/assignment-form.
   *
   * @example
   *  <ModalForm::OidcAssignmentTemplate
   *    @nameInput="new-item-name"
   *    @onSave={{this.closeModal}}
   *    @onCancel={{@onCancel}}
   *  />
   * ```
   * @callback onCancel - callback triggered when cancel button is clicked
   * @callback onSave - callback triggered when save button is clicked
   * @param {string} nameInput - the name of the newly created assignment
   */
  let OidcAssignmentTemplate = (_class = class OidcAssignmentTemplate extends _component2.default {
    // model record passed to oidc/assignment-form
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);

      _initializerDefineProperty(this, "assignment", _descriptor2, this);

      this.assignment = this.store.createRecord('oidc/assignment', {
        name: this.args.nameInput
      });
    }

    onSave(assignmentModel) {
      this.args.onSave(assignmentModel); // Reset component assignment for next use

      this.assignment = null;
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "assignment", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return null;
    }
  }), _applyDecoratedDescriptor(_class.prototype, "onSave", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "onSave"), _class.prototype)), _class);
  _exports.default = OidcAssignmentTemplate;
  (0, _component.setComponentTemplate)(__COLOCATED_TEMPLATE__, OidcAssignmentTemplate);
});
;define("vault/components/modal-form/policy-template", ["exports", "@ember/component", "@ember/template-factory", "@glimmer/component", "@ember/object", "@ember/service", "@glimmer/tracking"], function (_exports, _component, _templateFactory, _component2, _object, _service, _tracking) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2, _descriptor3;

  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars",0,"@glimmer/component",0,"@ember/object",0,"@ember/service",0,"@glimmer/tracking"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  const __COLOCATED_TEMPLATE__ = (0, _templateFactory.createTemplateFactory)(
  /*
    {{#if this.policy.policyType}}
    <nav class="tabs has-bottom-margin-l">
      <ul>
        <li class={{unless this.showExamplePolicy "active"}}>
          <button
            data-test-tab-your-policy
            type="button"
            name="form"
            class="link link-plain tab has-text-weight-semibold {{unless this.showExamplePolicy ' is-active'}}"
            {{on "click" (fn (mut this.showExamplePolicy) false)}}
          >
            Your Policy
          </button>
        </li>
        <li class={{if this.showExamplePolicy "active"}}>
          <button
            data-test-tab-example-policy
            type="button"
            name="form"
            class="link link-plain tab has-text-weight-semibold {{if this.showExamplePolicy ' is-active'}}"
            {{on "click" (fn (mut this.showExamplePolicy) true)}}
          >
            Example Policy
          </button>
        </li>
      </ul>
    </nav>
  {{/if}}
  {{#if this.showExamplePolicy}}
    <div class="has-bottom-margin-s">
      <p>
        ACL Policies are written in Hashicorp Configuration Language (
        <ExternalLink @href="https://github.com/hashicorp/hcl">HCL</ExternalLink>
        ) or JSON and describe which paths in OpenBao a user or machine is allowed to access. Here is an example policy:
      </p>
    </div>
    <JsonEditor
      @value={{get this.policyTemplates this.policy.policyType}}
      @mode="ruby"
      @readOnly={{true}}
      @showToolbar={{true}}
    />
  {{else}}
    <Select
      @name="policyType"
      @label="Type"
      @options={{this.policyOptions}}
      @isFullwidth={{true}}
      @selectedValue={{this.policy.policyType}}
      @onChange={{this.setPolicyType}}
      @noDefault={{true}}
    />
    {{#if this.policy.policyType}}
      <PolicyForm @onSave={{this.onSave}} @model={{this.policy}} @onCancel={{@onCancel}} />
    {{else}}
      <EmptyState @title="No policy type selected" @message="Select a policy type to continue creating." />
    {{/if}}
  {{/if}}
  */
  {
    "id": "kAtBGznB",
    "block": "[[[41,[30,0,[\"policy\",\"policyType\"]],[[[1,\"  \"],[10,\"nav\"],[14,0,\"tabs has-bottom-margin-l\"],[12],[1,\"\\n    \"],[10,\"ul\"],[12],[1,\"\\n      \"],[10,\"li\"],[15,0,[52,[51,[30,0,[\"showExamplePolicy\"]]],\"active\"]],[12],[1,\"\\n        \"],[11,\"button\"],[24,\"data-test-tab-your-policy\",\"\"],[24,3,\"form\"],[16,0,[29,[\"link link-plain tab has-text-weight-semibold \",[52,[51,[30,0,[\"showExamplePolicy\"]]],\" is-active\"]]]],[24,4,\"button\"],[4,[38,2],[\"click\",[28,[37,3],[[28,[37,4],[[30,0,[\"showExamplePolicy\"]]],null],false],null]],null],[12],[1,\"\\n          Your Policy\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n      \"],[10,\"li\"],[15,0,[52,[30,0,[\"showExamplePolicy\"]],\"active\"]],[12],[1,\"\\n        \"],[11,\"button\"],[24,\"data-test-tab-example-policy\",\"\"],[24,3,\"form\"],[16,0,[29,[\"link link-plain tab has-text-weight-semibold \",[52,[30,0,[\"showExamplePolicy\"]],\" is-active\"]]]],[24,4,\"button\"],[4,[38,2],[\"click\",[28,[37,3],[[28,[37,4],[[30,0,[\"showExamplePolicy\"]]],null],true],null]],null],[12],[1,\"\\n          Example Policy\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]],null],[41,[30,0,[\"showExamplePolicy\"]],[[[1,\"  \"],[10,0],[14,0,\"has-bottom-margin-s\"],[12],[1,\"\\n    \"],[10,2],[12],[1,\"\\n      ACL Policies are written in Hashicorp Configuration Language (\\n      \"],[8,[39,5],null,[[\"@href\"],[\"https://github.com/hashicorp/hcl\"]],[[\"default\"],[[[[1,\"HCL\"]],[]]]]],[1,\"\\n      ) or JSON and describe which paths in OpenBao a user or machine is allowed to access. Here is an example policy:\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n  \"],[8,[39,6],null,[[\"@value\",\"@mode\",\"@readOnly\",\"@showToolbar\"],[[28,[37,7],[[30,0,[\"policyTemplates\"]],[30,0,[\"policy\",\"policyType\"]]],null],\"ruby\",true,true]],null],[1,\"\\n\"]],[]],[[[1,\"  \"],[8,[39,8],null,[[\"@name\",\"@label\",\"@options\",\"@isFullwidth\",\"@selectedValue\",\"@onChange\",\"@noDefault\"],[\"policyType\",\"Type\",[30,0,[\"policyOptions\"]],true,[30,0,[\"policy\",\"policyType\"]],[30,0,[\"setPolicyType\"]],true]],null],[1,\"\\n\"],[41,[30,0,[\"policy\",\"policyType\"]],[[[1,\"    \"],[8,[39,9],null,[[\"@onSave\",\"@model\",\"@onCancel\"],[[30,0,[\"onSave\"]],[30,0,[\"policy\"]],[30,1]]],null],[1,\"\\n\"]],[]],[[[1,\"    \"],[8,[39,10],null,[[\"@title\",\"@message\"],[\"No policy type selected\",\"Select a policy type to continue creating.\"]],null],[1,\"\\n\"]],[]]]],[]]]],[\"@onCancel\"],false,[\"if\",\"unless\",\"on\",\"fn\",\"mut\",\"external-link\",\"json-editor\",\"get\",\"select\",\"policy-form\",\"empty-state\"]]",
    "moduleName": "vault/components/modal-form/policy-template.hbs",
    "isStrictMode": false
  });
  /**
   * Copyright (c) HashiCorp, Inc.
   * SPDX-License-Identifier: MPL-2.0
   */


  /**
   * @module ModalForm::PolicyTemplate
   * ModalForm::PolicyTemplate components are meant to render within a modal for creating a new policy of unknown type.
   *
   * @example
   *  <ModalForm::PolicyTemplate
   *    @nameInput="new-item-name"
   *    @onSave={{this.closeModal}}
   *    @onCancel={{this.closeModal}}
   *  />
   * ```
   * @callback onCancel - callback triggered when cancel button is clicked
   * @callback onSave - callback triggered when save button is clicked
   * @param {string} nameInput - the name of the newly created policy
   */
  let PolicyTemplate = (_class = class PolicyTemplate extends _component2.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);

      _initializerDefineProperty(this, "policy", _descriptor2, this);

      _initializerDefineProperty(this, "showExamplePolicy", _descriptor3, this);

      _defineProperty(this, "policyTemplates", {
        acl: `
# Grant 'create', 'read' , 'update', and ‘list’ permission
# to paths prefixed by 'secret/*'
path "secret/*" {
  capabilities = [ "create", "read", "update", "list" ]
}

# Even though we allowed secret/*, this line explicitly denies
# secret/super-secret. This takes precedence.
path "secret/super-secret" {
  capabilities = ["deny"]
}
`
      });
    }

    get policyOptions() {
      return [{
        label: 'ACL Policy',
        value: 'acl',
        isDisabled: false
      }];
    } // formatting here is purposeful so that whitespace renders correctly in JsonEditor


    setPolicyType(type) {
      if (this.policy) this.policy.unloadRecord(); // if user selects a different type, clear from store before creating a new record
      // Create form model once type is chosen

      this.policy = this.store.createRecord(`policy/${type}`, {
        name: this.args.nameInput
      });
    }

    onSave(policyModel) {
      this.args.onSave(policyModel); // Reset component policy for next use

      this.policy = null;
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "policy", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return null;
    }
  }), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, "showExamplePolicy", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return false;
    }
  }), _applyDecoratedDescriptor(_class.prototype, "setPolicyType", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "setPolicyType"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "onSave", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "onSave"), _class.prototype)), _class);
  _exports.default = PolicyTemplate;
  (0, _component.setComponentTemplate)(__COLOCATED_TEMPLATE__, PolicyTemplate);
});
;define("vault/components/modal", ["exports", "core/components/modal"], function (_exports, _modal) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _modal.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/modal"eaimeta@70e063a35619d71f
});
;define("vault/components/mount-accessor-select", ["exports", "@glimmer/component", "@ember/service", "ember-concurrency", "@ember/object"], function (_exports, _component, _service, _emberConcurrency, _object) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor;

  0; //eaimeta@70e063a35619d71f0,"@glimmer/component",0,"@ember/service",0,"ember-concurrency",0,"@ember/object"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  /**
   * @module MountAccessorSelect
   * The MountAccessorSelect component is used to selectDrop down mount options.
   *
   * @example
   * ```js
   * <MountAccessorSelect @value={this.aliasMountAccessor} @onChange={this.onChange} />
   * ```
   * @param {string} value - the selected value.
   * @param {function} onChange - the parent function that handles when a new value is selected.
   * @param {boolean} [showAccessor] - whether or not you should show the value or the more detailed accessor off the class.
   * @param {boolean} [noDefault] - whether or not there is a default value.
   * @param {boolean} [filterToken] - whether or not you should filter out type "token".
   * @param {string} [name] - name on the label.
   * @param {string} [label] - label above the select input.
   * @param {string} [helpText] - text shown in tooltip.
   */
  let MountAccessorSelect = (_class = class MountAccessorSelect extends _component.default {
    get filterToken() {
      return this.args.filterToken || false;
    }

    get noDefault() {
      return this.args.noDefault || false;
    }

    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);

      this.authMethods.perform();
    }

    *authMethods() {
      const methods = yield this.store.findAll('auth-method');

      if (!this.args.value && !this.args.noDefault) {
        const getValue = methods.get('firstObject.accessor');
        this.args.onChange(getValue);
      }

      return methods;
    }

    change(event) {
      this.args.onChange(event.target.value);
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _applyDecoratedDescriptor(_class.prototype, "authMethods", [_emberConcurrency.task], Object.getOwnPropertyDescriptor(_class.prototype, "authMethods"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "change", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "change"), _class.prototype)), _class);
  _exports.default = MountAccessorSelect;
});
;define("vault/components/mount-backend-form", ["exports", "@glimmer/component", "@glimmer/tracking", "@ember/service", "@ember/object", "ember-concurrency", "@ember/test-waiters", "vault/helpers/supported-secret-backends", "vault/helpers/mountable-auth-methods"], function (_exports, _component, _tracking, _service, _object, _emberConcurrency, _testWaiters, _supportedSecretBackends, _mountableAuthMethods) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5;

  0; //eaimeta@70e063a35619d71f0,"@glimmer/component",0,"@glimmer/tracking",0,"@ember/service",0,"@ember/object",0,"ember-concurrency",0,"@ember/test-waiters",0,"vault/helpers/supported-secret-backends",0,"vault/helpers/mountable-auth-methods"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  /**
   * @module MountBackendForm
   * The `MountBackendForm` is used to mount either a secret or auth backend.
   *
   * @example ```js
   *   <MountBackendForm @mountType="secret" @onMountSuccess={{this.onMountSuccess}} />```
   *
   * @param {function} onMountSuccess - A function that transitions once the Mount has been successfully posted.
   * @param {string} [mountType=auth] - The type of backend we want to mount.
   *
   */
  let MountBackendForm = (_class = class MountBackendForm extends _component.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);

      _initializerDefineProperty(this, "flashMessages", _descriptor2, this);

      _initializerDefineProperty(this, "modelValidations", _descriptor3, this);

      _initializerDefineProperty(this, "invalidFormAlert", _descriptor4, this);

      _initializerDefineProperty(this, "errorMessage", _descriptor5, this);
    }

    willDestroy() {
      // if unsaved, we want to unload so it doesn't show up in the auth mount list
      super.willDestroy(...arguments);

      if (this.args.mountModel) {
        const method = this.args.mountModel.isNew ? 'unloadRecord' : 'rollbackAttributes';
        this.args.mountModel[method]();
      }
    }

    checkPathChange(type) {
      if (!type) return;
      const mount = this.args.mountModel;
      const currentPath = mount.path;
      const mountTypes = this.args.mountType === 'secret' ? (0, _supportedSecretBackends.supportedSecretBackends)() : (0, _mountableAuthMethods.methods)().map(auth => auth.type); // if the current path has not been altered by user,
      // change it here to match the new type

      if (!currentPath || mountTypes.includes(currentPath)) {
        mount.path = type;
      }
    }

    typeChangeSideEffect(type) {
      if (!this.args.mountType === 'secret') return;

      if (type === 'pki') {
        // If type PKI, set max lease to ~10years
        this.args.mountModel.config.maxLeaseTtl = '3650d';
      } else {
        // otherwise reset
        this.args.mountModel.config.maxLeaseTtl = 0;
      }
    }

    checkModelValidity(model) {
      const {
        isValid,
        state,
        invalidFormMessage
      } = model.validate();
      this.modelValidations = state;
      this.invalidFormAlert = invalidFormMessage;
      return isValid;
    }

    checkModelWarnings() {
      // check for warnings on change
      // since we only show errors on submit we need to clear those out and only send warning state
      const {
        state
      } = this.args.mountModel.validate();

      for (const key in state) {
        state[key].errors = [];
      }

      this.modelValidations = state;
      this.invalidFormAlert = null;
    }

    async showWarningsForKvv2() {
      try {
        const capabilities = await this.store.findRecord('capabilities', `${this.args.mountModel.path}/config`);

        if (!capabilities?.canUpdate) {
          // config error is not thrown from secret-engine adapter, so handling here
          this.flashMessages.warning('You do not have access to the config endpoint. The secret engine was mounted, but the configuration settings were not saved.'); // remove the config data from the model otherwise it will persist in the store even though network request failed.

          [this.args.mountModel.maxVersions, this.args.mountModel.casRequired, this.args.mountModel.deleteVersionAfter] = [0, false, 0];
        }
      } catch (e) {
        // Show different warning if we're not sure the config saved
        this.flashMessages.warning('You may not have access to the config endpoint. The secret engine was mounted, but the configuration settings may not be saved.');
      }

      return;
    }

    *mountBackend(event) {
      event.preventDefault();
      const mountModel = this.args.mountModel;
      const {
        type,
        path
      } = mountModel; // only submit form if validations pass

      if (!this.checkModelValidity(mountModel)) {
        return;
      }

      const changedAttrKeys = Object.keys(mountModel.changedAttributes());
      const updatesConfig = changedAttrKeys.includes('casRequired') || changedAttrKeys.includes('deleteVersionAfter') || changedAttrKeys.includes('maxVersions');

      try {
        yield mountModel.save();
      } catch (err) {
        if (err.httpStatus === 403) {
          this.flashMessages.danger('You do not have access to the sys/mounts endpoint. The secret engine was not mounted.');
          return;
        }

        if (err.errors) {
          const errors = err.errors.map(e => {
            if (typeof e === 'object') return e.title || e.message || JSON.stringify(e);
            return e;
          });
          this.errorMessage = errors;
        } else if (err.message) {
          this.errorMessage = err.message;
        } else {
          this.errorMessage = 'An error occurred, check the OpenBao logs.';
        }

        return;
      }

      if (mountModel.isV2KV && updatesConfig) {
        yield this.showWarningsForKvv2();
      }

      this.flashMessages.success(`Successfully mounted the ${type} ${this.args.mountType === 'secret' ? 'secrets engine' : 'auth method'} at ${path}.`);
      yield this.args.onMountSuccess(type, path);
      return;
    }

    onKeyUp(name, value) {
      this.args.mountModel[name] = value;
      this.checkModelWarnings();
    }

    setMountType(value) {
      this.args.mountModel.type = value;
      this.typeChangeSideEffect(value);
      this.checkPathChange(value);
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "flashMessages", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, "modelValidations", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return null;
    }
  }), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, "invalidFormAlert", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return null;
    }
  }), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, "errorMessage", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return '';
    }
  }), _applyDecoratedDescriptor(_class.prototype, "mountBackend", [_emberConcurrency.task, _testWaiters.waitFor], Object.getOwnPropertyDescriptor(_class.prototype, "mountBackend"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "onKeyUp", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "onKeyUp"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "setMountType", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "setMountType"), _class.prototype)), _class);
  _exports.default = MountBackendForm;
});
;define("vault/components/mount-backend/type-form", ["exports", "@ember/component", "@ember/template-factory", "@glimmer/component", "@ember/service", "vault/helpers/mountable-auth-methods", "vault/helpers/mountable-secret-engines", "@glimmer/tracking"], function (_exports, _component, _templateFactory, _component2, _service, _mountableAuthMethods, _mountableSecretEngines, _tracking) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2;

  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars",0,"@glimmer/component",0,"@ember/service",0,"vault/helpers/mountable-auth-methods",0,"vault/helpers/mountable-secret-engines",0,"@glimmer/tracking"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  const __COLOCATED_TEMPLATE__ = (0, _templateFactory.createTemplateFactory)(
  /*
    {{#each (array "generic" "infra") as |category|}}
    <h3 class="title box-radio-header">
      {{capitalize category}}
    </h3>
    <div class="box-radio-container">
      {{#each (filter-by "category" category this.mountTypes) as |type|}}
        <BoxRadio
          @displayName={{type.displayName}}
          @type={{type.type}}
          @glyph={{or type.glyph type.type}}
          @groupValue={{this.selection}}
          @groupName="mount-type"
          @onRadioChange={{mut this.selection}}
        />
      {{/each}}
    </div>
  {{/each}}
  <div class="field is-grouped box is-fullwidth is-bottomless">
    <button
      data-test-mount-next
      type="button"
      class="button is-primary"
      {{on "click" (fn @setMountType this.selection)}}
      disabled={{not this.selection}}
    >
      Next
    </button>
  </div>
  */
  {
    "id": "kxkLnVhe",
    "block": "[[[42,[28,[37,1],[[28,[37,1],[[28,[37,2],[\"generic\",\"infra\"],null]],null]],null],null,[[[1,\"  \"],[10,\"h3\"],[14,0,\"title box-radio-header\"],[12],[1,\"\\n    \"],[1,[28,[35,3],[[30,1]],null]],[1,\"\\n  \"],[13],[1,\"\\n  \"],[10,0],[14,0,\"box-radio-container\"],[12],[1,\"\\n\"],[42,[28,[37,1],[[28,[37,1],[[28,[37,4],[\"category\",[30,1],[30,0,[\"mountTypes\"]]],null]],null]],null],null,[[[1,\"      \"],[8,[39,5],null,[[\"@displayName\",\"@type\",\"@glyph\",\"@groupValue\",\"@groupName\",\"@onRadioChange\"],[[30,2,[\"displayName\"]],[30,2,[\"type\"]],[28,[37,6],[[30,2,[\"glyph\"]],[30,2,[\"type\"]]],null],[30,0,[\"selection\"]],\"mount-type\",[28,[37,7],[[30,0,[\"selection\"]]],null]]],null],[1,\"\\n\"]],[2]],null],[1,\"  \"],[13],[1,\"\\n\"]],[1]],null],[10,0],[14,0,\"field is-grouped box is-fullwidth is-bottomless\"],[12],[1,\"\\n  \"],[11,\"button\"],[24,\"data-test-mount-next\",\"\"],[24,0,\"button is-primary\"],[16,\"disabled\",[28,[37,8],[[30,0,[\"selection\"]]],null]],[24,4,\"button\"],[4,[38,9],[\"click\",[28,[37,10],[[30,3],[30,0,[\"selection\"]]],null]],null],[12],[1,\"\\n    Next\\n  \"],[13],[1,\"\\n\"],[13]],[\"category\",\"type\",\"@setMountType\"],false,[\"each\",\"-track-array\",\"array\",\"capitalize\",\"filter-by\",\"box-radio\",\"or\",\"mut\",\"not\",\"on\",\"fn\"]]",
    "moduleName": "vault/components/mount-backend/type-form.hbs",
    "isStrictMode": false
  });
  /**
   * Copyright (c) HashiCorp, Inc.
   * SPDX-License-Identifier: MPL-2.0
   */


  /**
   *
   * @module MountBackendTypeForm
   * MountBackendTypeForm components are used to display type options for
   * mounting either an auth method or secret engine.
   *
   * @example
   * ```js
   * <MountBackend::TypeForm @setMountType={{this.setMountType}} @mountType="secret" />
   * ```
   * @param {CallableFunction} setMountType - function will recieve the mount type string. Should update the model type value
   * @param {string} [mountType=auth] - mount type can be `auth` or `secret`
   */
  let MountBackendTypeForm = (_class = class MountBackendTypeForm extends _component2.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "version", _descriptor, this);

      _initializerDefineProperty(this, "selection", _descriptor2, this);
    }

    get secretEngines() {
      return (0, _mountableSecretEngines.mountableEngines)();
    }

    get mountTypes() {
      return this.args.mountType === 'secret' ? this.secretEngines : (0, _mountableAuthMethods.methods)();
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "version", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "selection", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class);
  _exports.default = MountBackendTypeForm;
  (0, _component.setComponentTemplate)(__COLOCATED_TEMPLATE__, MountBackendTypeForm);
});
;define("vault/components/namespace-link", ["exports", "@ember/service", "@ember/object/computed", "@ember/component", "@ember/object"], function (_exports, _service, _computed, _component, _object) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@ember/object/computed",0,"@ember/component",0,"@ember/object"eaimeta@70e063a35619d71f

  var _default = _component.default.extend({
    namespaceService: (0, _service.inject)('namespace'),
    currentNamespace: (0, _computed.alias)('namespaceService.path'),
    tagName: '',
    //public api
    targetNamespace: null,
    showLastSegment: false,
    // set to true if targetNamespace is passed in unmodified
    // otherwise, this assumes it is parsed as in namespace-picker
    unparsed: false,
    normalizedNamespace: (0, _object.computed)('targetNamespace', 'unparsed', function () {
      const ns = this.targetNamespace || '';
      return this.unparsed ? ns : ns.replace(/\.+/g, '/').replace(/☃/g, '.');
    }),
    namespaceDisplay: (0, _object.computed)('normalizedNamespace', 'showLastSegment', function () {
      const ns = this.normalizedNamespace;
      if (!ns) return 'root';
      const showLastSegment = this.showLastSegment;
      const parts = ns?.split('/');
      return showLastSegment ? parts[parts.length - 1] : ns;
    }),
    isCurrentNamespace: (0, _object.computed)('targetNamespace', 'currentNamespace', function () {
      return this.currentNamespace === this.targetNamespace;
    }),

    get namespaceLink() {
      const origin = window.location.protocol + '//' + window.location.hostname + (window.location.port ? ':' + window.location.port : '');
      if (!this.normalizedNamespace) return `${origin}/ui/vault/secrets`; // The full URL/origin is required so that the page is reloaded.

      return `${origin}/ui/vault/secrets?namespace=${encodeURIComponent(this.normalizedNamespace)}`;
    }

  });

  _exports.default = _default;
});
;define("vault/components/namespace-picker", ["exports", "@ember/service", "@ember/object/computed", "@ember/component", "@ember/object", "vault/lib/key-utils", "vault/lib/path-to-tree", "ember-concurrency"], function (_exports, _service, _computed, _component, _object, _keyUtils, _pathToTree, _emberConcurrency) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@ember/object/computed",0,"@ember/component",0,"@ember/object",0,"vault/lib/key-utils",0,"vault/lib/path-to-tree",0,"ember-concurrency"eaimeta@70e063a35619d71f

  const {
    ancestorKeysForKey
  } = _keyUtils.default;
  const DOT_REPLACEMENT = '☃';
  const ANIMATION_DURATION = 250;

  var _default = _component.default.extend({
    tagName: '',
    namespaceService: (0, _service.inject)('namespace'),
    auth: (0, _service.inject)(),
    store: (0, _service.inject)(),
    namespace: null,
    listCapability: null,
    canList: false,

    init() {
      this._super(...arguments);

      this.namespaceService?.findNamespacesForUser.perform();
    },

    didReceiveAttrs() {
      this._super(...arguments);

      const ns = this.namespace;
      const oldNS = this.oldNamespace;

      if (!oldNS || ns !== oldNS) {
        this.setForAnimation.perform();
        this.fetchListCapability.perform();
      }

      this.set('oldNamespace', ns);
    },

    fetchListCapability: (0, _emberConcurrency.task)(function* () {
      try {
        const capability = yield this.store.findRecord('capabilities', 'sys/namespaces/');
        this.set('listCapability', capability);
        this.set('canList', true);
      } catch (e) {
        // If error out on findRecord call it's because you don't have permissions
        // and therefor don't have permission to manage namespaces
        this.set('canList', false);
      }
    }),
    setForAnimation: (0, _emberConcurrency.task)(function* () {
      const leaves = this.menuLeaves;
      const lastLeaves = this.lastMenuLeaves;

      if (!lastLeaves) {
        this.set('lastMenuLeaves', leaves);
        yield (0, _emberConcurrency.timeout)(0);
        return;
      }

      const isAdding = leaves.length > lastLeaves.length;
      const changedLeaf = (isAdding ? leaves : lastLeaves).get('lastObject');
      this.set('isAdding', isAdding);
      this.set('changedLeaf', changedLeaf); // if we're adding we want to render immediately an animate it in
      // if we're not adding, we need time to move the item out before
      // a rerender removes it

      if (isAdding) {
        this.set('lastMenuLeaves', leaves);
        yield (0, _emberConcurrency.timeout)(0);
        return;
      }

      yield (0, _emberConcurrency.timeout)(ANIMATION_DURATION);
      this.set('lastMenuLeaves', leaves);
    }).drop(),
    isAnimating: (0, _computed.alias)('setForAnimation.isRunning'),
    namespacePath: (0, _computed.alias)('namespaceService.path'),
    // this is an array of namespace paths that the current user
    // has access to
    accessibleNamespaces: (0, _computed.alias)('namespaceService.accessibleNamespaces'),
    inRootNamespace: (0, _computed.alias)('namespaceService.inRootNamespace'),
    namespaceTree: (0, _object.computed)('accessibleNamespaces', function () {
      const nsList = this.accessibleNamespaces;

      if (!nsList) {
        return [];
      }

      return (0, _pathToTree.default)(nsList);
    }),

    maybeAddRoot(leaves) {
      const userRoot = this.auth.authData.userRootNamespace;

      if (userRoot === '') {
        leaves.unshift('');
      }

      return leaves.uniq();
    },

    pathToLeaf(path) {
      // dots are allowed in namespace paths
      // so we need to preserve them, and replace slashes with dots
      // in order to use Ember's get function on the namespace tree
      // to pull out the correct level
      return path // trim trailing slash
      .replace(/\/$/, '') // replace dots with snowman
      .replace(/\.+/g, DOT_REPLACEMENT) // replace slash with dots
      .replace(/\/+/g, '.');
    },

    // an array that keeps track of what additional panels to render
    // on the menu stack
    // if you're in  'foo/bar/baz',
    // this array will be: ['foo', 'foo.bar', 'foo.bar.baz']
    // the template then iterates over this, and does  Ember.get(namespaceTree, leaf)
    // to render the nodes of each leaf
    // gets set as  'lastMenuLeaves' in the ember concurrency task above
    menuLeaves: (0, _object.computed)('namespacePath', 'namespaceTree', 'pathToLeaf', function () {
      let ns = this.namespacePath;
      ns = (ns || '').replace(/^\//, '');
      let leaves = ancestorKeysForKey(ns);
      leaves.push(ns);
      leaves = this.maybeAddRoot(leaves);
      leaves = leaves.map(this.pathToLeaf);
      return leaves;
    }),
    // the nodes at the root of the namespace tree
    // these will get rendered as the bottom layer
    rootLeaves: (0, _object.computed)('namespaceTree', function () {
      const tree = this.namespaceTree;
      const leaves = Object.keys(tree);
      return leaves;
    }),
    currentLeaf: (0, _computed.alias)('lastMenuLeaves.lastObject'),
    canAccessMultipleNamespaces: (0, _computed.gt)('accessibleNamespaces.length', 1),
    isUserRootNamespace: (0, _object.computed)('auth.authData.userRootNamespace', 'namespacePath', function () {
      return this.auth.authData.userRootNamespace === this.namespacePath;
    }),
    namespaceDisplay: (0, _object.computed)('namespacePath', 'accessibleNamespaces', 'accessibleNamespaces.[]', function () {
      const namespace = this.namespacePath;

      if (!namespace) {
        return 'root';
      }

      const parts = namespace?.split('/');
      return parts[parts.length - 1];
    }),
    actions: {
      refreshNamespaceList() {
        this.namespaceService.findNamespacesForUser.perform();
      }

    }
  });

  _exports.default = _default;
});
;define("vault/components/namespace-reminder", ["exports", "core/components/namespace-reminder"], function (_exports, _namespaceReminder) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _namespaceReminder.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/namespace-reminder"eaimeta@70e063a35619d71f
});
;define("vault/components/navigate-input", ["exports", "core/components/navigate-input"], function (_exports, _navigateInput) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _navigateInput.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/navigate-input"eaimeta@70e063a35619d71f
});
;define("vault/components/navigation-narrator", ["exports", "ember-a11y-refocus/components/navigation-narrator"], function (_exports, _navigationNarrator) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _navigationNarrator.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-a11y-refocus/components/navigation-narrator"eaimeta@70e063a35619d71f
});
;define("vault/components/not-found", ["exports", "@ember/service", "@ember/object/computed", "@ember/component"], function (_exports, _service, _computed, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@ember/object/computed",0,"@ember/component"eaimeta@70e063a35619d71f

  var _default = _component.default.extend({
    // public
    model: null,
    tagName: '',
    router: (0, _service.inject)(),
    path: (0, _computed.alias)('router.currentURL')
  });

  _exports.default = _default;
});
;define("vault/components/object-list-input", ["exports", "core/components/object-list-input"], function (_exports, _objectListInput) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _objectListInput.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/object-list-input"eaimeta@70e063a35619d71f
});
;define("vault/components/oidc-consent-block", ["exports", "ember", "@glimmer/component", "@ember/object", "@glimmer/tracking"], function (_exports, _ember, _component, _object, _tracking) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor;

  0; //eaimeta@70e063a35619d71f0,"ember",0,"@glimmer/component",0,"@ember/object",0,"@glimmer/tracking"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  const validParameters = ['code', 'state'];
  let OidcConsentBlockComponent = (_class = class OidcConsentBlockComponent extends _component.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "didCancel", _descriptor, this);
    }

    get win() {
      return this.window || window;
    }

    buildUrl(urlString, params) {
      try {
        const url = new URL(urlString);
        Object.keys(params).forEach(key => {
          if (params[key] && validParameters.includes(key)) {
            url.searchParams.append(key, params[key]);
          }
        });
        return url;
      } catch (e) {
        console.debug('DEBUG: parsing url failed for', urlString); // eslint-disable-line

        throw new Error('Invalid URL');
      }
    }

    handleSubmit(evt) {
      evt.preventDefault();
      const {
        redirect,
        ...params
      } = this.args;
      const redirectUrl = this.buildUrl(redirect, params);

      if (_ember.default.testing) {
        this.args.testRedirect(redirectUrl.toString());
      } else {
        this.win.location.replace(redirectUrl);
      }
    }

    handleCancel(evt) {
      evt.preventDefault();
      this.didCancel = true;
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "didCancel", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return false;
    }
  }), _applyDecoratedDescriptor(_class.prototype, "handleSubmit", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "handleSubmit"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "handleCancel", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "handleCancel"), _class.prototype)), _class);
  _exports.default = OidcConsentBlockComponent;
});
;define("vault/components/oidc/assignment-form", ["exports", "@glimmer/component", "@ember/object", "@ember/service", "ember-concurrency", "@glimmer/tracking"], function (_exports, _component, _object, _service, _emberConcurrency, _tracking) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2, _descriptor3, _descriptor4;

  0; //eaimeta@70e063a35619d71f0,"@glimmer/component",0,"@ember/object",0,"@ember/service",0,"ember-concurrency",0,"@glimmer/tracking"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  /**
   * @module Oidc::AssignmentForm
   * Oidc::AssignmentForm components are used to display the create view for OIDC providers assignments.
   *
   * @example
   * ```js
   * <Oidc::AssignmentForm @model={this.model}
   * @onCancel={transition-to "vault.cluster.access.oidc.assignment"} @param1={{param1}}
   * @onSave={transition-to "vault.cluster.access.oidc.assignments.assignment.details" this.model.name}
   * />
   * ```
  
   * @param {object} model - The parent's model
   * @callback onCancel - callback triggered when cancel button is clicked
   * @callback onSave - callback triggered when save button is clicked*
   */
  let OidcAssignmentFormComponent = (_class = class OidcAssignmentFormComponent extends _component.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);

      _initializerDefineProperty(this, "flashMessages", _descriptor2, this);

      _initializerDefineProperty(this, "modelValidations", _descriptor3, this);

      _initializerDefineProperty(this, "errorBanner", _descriptor4, this);
    }

    *save(event) {
      event.preventDefault();

      try {
        const {
          isValid,
          state
        } = this.args.model.validate();
        this.modelValidations = isValid ? null : state;

        if (isValid) {
          const {
            isNew,
            name
          } = this.args.model;
          yield this.args.model.save();
          this.flashMessages.success(`Successfully ${isNew ? 'created' : 'updated'} the assignment ${name}.`); // this form is sometimes used in modal, passing the model notifies
          // the parent if the save was successful

          this.args.onSave(this.args.model);
        }
      } catch (error) {
        const message = error.errors ? error.errors.join('. ') : error.message;
        this.errorBanner = message;
      }
    }

    cancel() {
      const method = this.args.model.isNew ? 'unloadRecord' : 'rollbackAttributes';
      this.args.model[method]();
      this.args.onCancel();
    }

    handleOperation(_ref) {
      let {
        target
      } = _ref;
      this.args.model.name = target.value;
    }

    onEntitiesSelect(selectedIds) {
      this.args.model.entityIds = selectedIds;
    }

    onGroupsSelect(selectedIds) {
      this.args.model.groupIds = selectedIds;
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "flashMessages", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, "modelValidations", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, "errorBanner", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _applyDecoratedDescriptor(_class.prototype, "save", [_emberConcurrency.task], Object.getOwnPropertyDescriptor(_class.prototype, "save"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "cancel", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "cancel"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "handleOperation", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "handleOperation"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "onEntitiesSelect", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "onEntitiesSelect"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "onGroupsSelect", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "onGroupsSelect"), _class.prototype)), _class);
  _exports.default = OidcAssignmentFormComponent;
});
;define("vault/components/oidc/client-form", ["exports", "@glimmer/component", "@ember/object", "@ember/service", "@glimmer/tracking", "ember-concurrency"], function (_exports, _component, _object, _service, _tracking, _emberConcurrency) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5;

  0; //eaimeta@70e063a35619d71f0,"@glimmer/component",0,"@ember/object",0,"@ember/service",0,"@glimmer/tracking",0,"ember-concurrency"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  /**
   * @module OidcClientForm
   * OidcClientForm components are used to create and update OIDC clients (a.k.a. applications)
   *
   * @example
   * ```js
   * <OidcClientForm @model={{this.model}} />
   * ```
   * @param {Object} model - oidc client model
   * @callback onCancel - callback triggered when cancel button is clicked
   * @callback onSave - callback triggered on save success
   * @param {boolean} [isInline=false] - true when form is rendered within a modal
   */
  let OidcClientForm = (_class = class OidcClientForm extends _component.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "flashMessages", _descriptor, this);

      _initializerDefineProperty(this, "modelValidations", _descriptor2, this);

      _initializerDefineProperty(this, "errorBanner", _descriptor3, this);

      _initializerDefineProperty(this, "invalidFormAlert", _descriptor4, this);

      _initializerDefineProperty(this, "radioCardGroupValue", _descriptor5, this);
    }

    get modelAssignments() {
      const {
        assignments
      } = this.args.model;

      if (assignments.includes('allow_all') && assignments.length === 1) {
        return [];
      } else {
        return assignments;
      }
    }

    handleAssignmentSelection(selection) {
      // if array then coming from search-select component, set selection as model assignments
      if (Array.isArray(selection)) {
        this.args.model.assignments = selection;
      } else {
        // otherwise update radio button value and reset assignments so
        // UI always reflects a user's selection (including when no assignments are selected)
        this.radioCardGroupValue = selection;
        this.args.model.assignments = [];
      }
    }

    cancel() {
      const method = this.args.model.isNew ? 'unloadRecord' : 'rollbackAttributes';
      this.args.model[method]();
      this.args.onCancel();
    }

    *save(event) {
      event.preventDefault();

      try {
        const {
          isValid,
          state,
          invalidFormMessage
        } = this.args.model.validate();
        this.modelValidations = isValid ? null : state;
        this.invalidFormAlert = invalidFormMessage;

        if (isValid) {
          if (this.radioCardGroupValue === 'allow_all') {
            // the backend permits 'allow_all' AND other assignments, though 'allow_all' will take precedence
            // the UI limits the config by allowing either 'allow_all' OR a list of other assignments
            // note: when editing the UI removes any additional assignments previously configured via CLI
            this.args.model.assignments = ['allow_all'];
          } // if TTL components are toggled off, set to default lease duration


          const {
            idTokenTtl,
            accessTokenTtl
          } = this.args.model; // value returned from API is a number, and string when from form action

          if (Number(idTokenTtl) === 0) this.args.model.idTokenTtl = '24h';
          if (Number(accessTokenTtl) === 0) this.args.model.accessTokenTtl = '24h';
          const {
            isNew,
            name
          } = this.args.model;
          yield this.args.model.save();
          this.flashMessages.success(`Successfully ${isNew ? 'created' : 'updated'} the application ${name}.`);
          this.args.onSave();
        }
      } catch (error) {
        const message = error.errors ? error.errors.join('. ') : error.message;
        this.errorBanner = message;
        this.invalidFormAlert = 'There was an error submitting this form.';
      }
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "flashMessages", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "modelValidations", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, "errorBanner", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, "invalidFormAlert", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, "radioCardGroupValue", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return !this.args.model.assignments || this.args.model.assignments.includes('allow_all') ? 'allow_all' : 'limited';
    }
  }), _applyDecoratedDescriptor(_class.prototype, "handleAssignmentSelection", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "handleAssignmentSelection"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "cancel", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "cancel"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "save", [_emberConcurrency.task], Object.getOwnPropertyDescriptor(_class.prototype, "save"), _class.prototype)), _class);
  _exports.default = OidcClientForm;
});
;define("vault/components/oidc/key-form", ["exports", "@glimmer/component", "@ember/object", "@ember/service", "@glimmer/tracking", "ember-concurrency"], function (_exports, _component, _object, _service, _tracking, _emberConcurrency) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6;

  0; //eaimeta@70e063a35619d71f0,"@glimmer/component",0,"@ember/object",0,"@ember/service",0,"@glimmer/tracking",0,"ember-concurrency"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  /**
   * @module OidcKeyForm
   * OidcKeyForm components are used to create and update OIDC providers
   *
   * @example
   * ```js
   * <OidcKeyForm @model={{this.model}} />
   * ```
   * @callback onCancel
   * @callback onSave
   * @param {Object} model - oidc client model
   * @param {onCancel} onCancel - callback triggered when cancel button is clicked
   * @param {onSave} onSave - callback triggered on save success
   */
  let OidcKeyForm = (_class = class OidcKeyForm extends _component.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);

      _initializerDefineProperty(this, "flashMessages", _descriptor2, this);

      _initializerDefineProperty(this, "errorBanner", _descriptor3, this);

      _initializerDefineProperty(this, "invalidFormAlert", _descriptor4, this);

      _initializerDefineProperty(this, "modelValidations", _descriptor5, this);

      _initializerDefineProperty(this, "radioCardGroupValue", _descriptor6, this);
    }

    get filterDropdownOptions() {
      // query object sent to search-select so only clients that reference this key appear in dropdown
      return {
        paramKey: 'key',
        filterFor: [this.args.model.name]
      };
    }

    handleClientSelection(selection) {
      // if array then coming from search-select component, set selection as model clients
      if (Array.isArray(selection)) {
        this.args.model.allowedClientIds = selection.map(client => client.clientId);
      } else {
        // otherwise update radio button value and reset clients so
        // UI always reflects a user's selection (including when no clients are selected)
        this.radioCardGroupValue = selection;
        this.args.model.allowedClientIds = [];
      }
    }

    cancel() {
      const method = this.args.model.isNew ? 'unloadRecord' : 'rollbackAttributes';
      this.args.model[method]();
      this.args.onCancel();
    }

    *save(event) {
      event.preventDefault();

      try {
        const {
          isValid,
          state,
          invalidFormMessage
        } = this.args.model.validate();
        this.modelValidations = isValid ? null : state;
        this.invalidFormAlert = invalidFormMessage;

        if (isValid) {
          const {
            isNew,
            name
          } = this.args.model;

          if (this.radioCardGroupValue === 'allow_all') {
            this.args.model.allowedClientIds = ['*'];
          } // if TTL components are toggled off, set to default lease duration


          const {
            rotationPeriod,
            verificationTtl
          } = this.args.model; // value returned from API is a number, and string when from form action

          if (Number(rotationPeriod) === 0) this.args.model.rotationPeriod = '24h';
          if (Number(verificationTtl) === 0) this.args.model.verificationTtl = '24h';
          yield this.args.model.save();
          this.flashMessages.success(`Successfully ${isNew ? 'created' : 'updated'} the key
          ${name}.`);
          this.args.onSave();
        }
      } catch (error) {
        const message = error.errors ? error.errors.join('. ') : error.message;
        this.errorBanner = message;
        this.invalidFormAlert = 'There was an error submitting this form.';
      }
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "flashMessages", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, "errorBanner", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, "invalidFormAlert", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, "modelValidations", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, "radioCardGroupValue", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return (// If "*" is provided, all clients are allowed: https://www.vaultproject.io/api-docs/secret/identity/oidc-provider#parameters
        !this.args.model.allowedClientIds || this.args.model.allowedClientIds.includes('*') ? 'allow_all' : 'limited'
      );
    }
  }), _applyDecoratedDescriptor(_class.prototype, "handleClientSelection", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "handleClientSelection"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "cancel", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "cancel"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "save", [_emberConcurrency.task], Object.getOwnPropertyDescriptor(_class.prototype, "save"), _class.prototype)), _class);
  _exports.default = OidcKeyForm;
});
;define("vault/components/oidc/provider-form", ["exports", "@glimmer/component", "@ember/object", "@ember/service", "@glimmer/tracking", "ember-concurrency", "core/utils/parse-url"], function (_exports, _component, _object, _service, _tracking, _emberConcurrency, _parseUrl) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6;

  0; //eaimeta@70e063a35619d71f0,"@glimmer/component",0,"@ember/object",0,"@ember/service",0,"@glimmer/tracking",0,"ember-concurrency",0,"core/utils/parse-url"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  /**
   * @module OidcProviderForm
   * OidcProviderForm components are used to create and update OIDC providers
   *
   * @example
   * ```js
   * <OidcProviderForm @model={{this.model}} />
   * ```
   * @callback onCancel
   * @callback onSave
   * @param {Object} model - oidc client model
   * @param {onCancel} onCancel - callback triggered when cancel button is clicked
   * @param {onSave} onSave - callback triggered on save success
   */
  let OidcProviderForm = (_class = class OidcProviderForm extends _component.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);

      _initializerDefineProperty(this, "flashMessages", _descriptor2, this);

      _initializerDefineProperty(this, "modelValidations", _descriptor3, this);

      _initializerDefineProperty(this, "errorBanner", _descriptor4, this);

      _initializerDefineProperty(this, "invalidFormAlert", _descriptor5, this);

      _initializerDefineProperty(this, "radioCardGroupValue", _descriptor6, this);
    }

    // function passed to search select
    renderInfoTooltip(selection, dropdownOptions) {
      // if a client has been deleted it will not exist in dropdownOptions (response from search select's query)
      const clientExists = !!dropdownOptions.findBy('clientId', selection);
      return !clientExists ? 'The application associated with this client_id no longer exists' : false;
    } // fired on did-insert from render modifier


    setIssuer(elem, _ref) {
      let [model] = _ref;
      model.issuer = model.isNew ? '' : (0, _parseUrl.default)(model.issuer).origin;
    }

    handleClientSelection(selection) {
      // if array then coming from search-select component, set selection as model clients
      if (Array.isArray(selection)) {
        this.args.model.allowedClientIds = selection.map(client => client.clientId);
      } else {
        // otherwise update radio button value and reset clients so
        // UI always reflects a user's selection (including when no clients are selected)
        this.radioCardGroupValue = selection;
        this.args.model.allowedClientIds = [];
      }
    }

    cancel() {
      const method = this.args.model.isNew ? 'unloadRecord' : 'rollbackAttributes';
      this.args.model[method]();
      this.args.onCancel();
    }

    *save(event) {
      event.preventDefault();

      try {
        const {
          isValid,
          state,
          invalidFormMessage
        } = this.args.model.validate();
        this.modelValidations = isValid ? null : state;
        this.invalidFormAlert = invalidFormMessage;

        if (isValid) {
          const {
            isNew,
            name
          } = this.args.model;

          if (this.radioCardGroupValue === 'allow_all') {
            this.args.model.allowedClientIds = ['*'];
          }

          yield this.args.model.save();
          this.flashMessages.success(`Successfully ${isNew ? 'created' : 'updated'} the OIDC provider 
          ${name}.`);
          this.args.onSave();
        }
      } catch (error) {
        const message = error.errors ? error.errors.join('. ') : error.message;
        this.errorBanner = message;
        this.invalidFormAlert = 'There was an error submitting this form.';
      }
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "flashMessages", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, "modelValidations", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, "errorBanner", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, "invalidFormAlert", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, "radioCardGroupValue", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return (// If "*" is provided, all clients are allowed: https://www.vaultproject.io/api-docs/secret/identity/oidc-provider#parameters
        !this.args.model.allowedClientIds || this.args.model.allowedClientIds.includes('*') ? 'allow_all' : 'limited'
      );
    }
  }), _applyDecoratedDescriptor(_class.prototype, "setIssuer", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "setIssuer"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "handleClientSelection", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "handleClientSelection"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "cancel", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "cancel"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "save", [_emberConcurrency.task], Object.getOwnPropertyDescriptor(_class.prototype, "save"), _class.prototype)), _class);
  _exports.default = OidcProviderForm;
});
;define("vault/components/oidc/scope-form", ["exports", "@glimmer/component", "@glimmer/tracking", "@ember/object", "ember-concurrency", "@ember/service"], function (_exports, _component, _tracking, _object, _emberConcurrency, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2, _descriptor3, _descriptor4;

  0; //eaimeta@70e063a35619d71f0,"@glimmer/component",0,"@glimmer/tracking",0,"@ember/object",0,"ember-concurrency",0,"@ember/service"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  /**
   * @module OidcScopeForm
   * Oidc scope form components are used to create and edit oidc scopes
   *
   * @example
   * ```js
   * <Oidc::ScopeForm @model={{this.model}} />
   * ```
   * @callback onCancel
   * @callback onSave
   * @param {Object} model - oidc scope model
   * @param {onCancel} onCancel - callback triggered when cancel button is clicked
   * @param {onSave} onSave - callback triggered on save success
   */
  let OidcScopeFormComponent = (_class = class OidcScopeFormComponent extends _component.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "flashMessages", _descriptor, this);

      _initializerDefineProperty(this, "errorBanner", _descriptor2, this);

      _initializerDefineProperty(this, "invalidFormAlert", _descriptor3, this);

      _initializerDefineProperty(this, "modelValidations", _descriptor4, this);

      _defineProperty(this, "exampleTemplate", `{
  "username": {{identity.entity.aliases.$MOUNT_ACCESSOR.name}},
  "contact": {
    "email": {{identity.entity.metadata.email}},
    "phone_number": {{identity.entity.metadata.phone_number}}
  },
  "groups": {{identity.entity.groups.names}}
}`);
    }

    *save(event) {
      event.preventDefault();

      try {
        const {
          isValid,
          state,
          invalidFormMessage
        } = this.args.model.validate();
        this.modelValidations = isValid ? null : state;
        this.invalidFormAlert = invalidFormMessage;

        if (isValid) {
          const {
            isNew,
            name
          } = this.args.model;
          yield this.args.model.save();
          this.flashMessages.success(`Successfully ${isNew ? 'created' : 'updated'} the scope ${name}.`);
          this.args.onSave();
        }
      } catch (error) {
        const message = error.errors ? error.errors.join('. ') : error.message;
        this.errorBanner = message;
        this.invalidFormAlert = 'There was an error submitting this form.';
      }
    }

    cancel() {
      const method = this.args.model.isNew ? 'unloadRecord' : 'rollbackAttributes';
      this.args.model[method]();
      this.args.onCancel();
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "flashMessages", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "errorBanner", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, "invalidFormAlert", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, "modelValidations", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _applyDecoratedDescriptor(_class.prototype, "save", [_emberConcurrency.task], Object.getOwnPropertyDescriptor(_class.prototype, "save"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "cancel", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "cancel"), _class.prototype)), _class);
  _exports.default = OidcScopeFormComponent;
});
;define("vault/components/outer-html", ["exports", "@ember/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/component"eaimeta@70e063a35619d71f

  var _default = _component.default.extend({
    tagName: ''
  }); // yep! that's it, it's more of a way to keep track of what components
  // use tagless semantics to make the upgrade to glimmer components easier


  _exports.default = _default;
});
;define("vault/components/overview-card", ["exports", "core/components/overview-card"], function (_exports, _overviewCard) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _overviewCard.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/overview-card"eaimeta@70e063a35619d71f
});
;define("vault/components/page-header-level", ["exports", "core/components/page-header-level"], function (_exports, _pageHeaderLevel) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _pageHeaderLevel.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/page-header-level"eaimeta@70e063a35619d71f
});
;define("vault/components/page-header", ["exports", "core/components/page-header"], function (_exports, _pageHeader) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _pageHeader.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/page-header"eaimeta@70e063a35619d71f
});
;define("vault/components/page/breadcrumbs", ["exports", "core/components/page/breadcrumbs"], function (_exports, _breadcrumbs) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _breadcrumbs.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/page/breadcrumbs"eaimeta@70e063a35619d71f
});
;define("vault/components/page/error", ["exports", "core/components/page/error"], function (_exports, _error) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _error.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/page/error"eaimeta@70e063a35619d71f
});
;define("vault/components/pagination-controls", ["exports", "@glimmer/component", "@glimmer/tracking", "@ember/object"], function (_exports, _component, _tracking, _object) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor;

  0; //eaimeta@70e063a35619d71f0,"@glimmer/component",0,"@glimmer/tracking",0,"@ember/object"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  /**
   * @module PaginationControls
   * PaginationControls components are used to paginate through item lists
   *
   * @example
   * ```js
   * <PaginationControls @startPage={{1}} @total={{100}} @size={{15}} @onChange={{this.onPageChange}} />
   * ```
   * @param {number} total - total number of items
   * @param {number} [startPage=1] - initial page number to select
   * @param {number} [size=15] - number of items to display per page
   * @param {function} onChange - callback fired on page change
   */
  let PaginationControls = (_class = class PaginationControls extends _component.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "page", _descriptor, this);

      this.page = this.args.startPage || 1;
      this.size = this.args.size || 15; // size selector may be added in future version
    }

    get totalPages() {
      return Math.ceil(this.args.total / this.size);
    }

    get displayInfo() {
      const {
        total
      } = this.args;
      const end = this.page * this.size;
      return `${end - this.size + 1}-${end > total ? total : end} of ${total}`;
    }

    get pages() {
      // show 5 pages with 2 on either side of the current page
      let start = this.page - 2 >= 1 ? this.page - 2 : 1;
      const incrementer = start + 4;
      const end = incrementer <= this.totalPages ? incrementer : this.totalPages;
      const pageNumbers = [];

      while (start <= end) {
        pageNumbers.push(start);
        start++;
      }

      return pageNumbers;
    }

    get hasMorePages() {
      return this.pages.lastObject !== this.totalPages;
    }

    changePage(page) {
      this.page = page;
      this.args.onChange(page);
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "page", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _applyDecoratedDescriptor(_class.prototype, "changePage", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "changePage"), _class.prototype)), _class);
  _exports.default = PaginationControls;
});
;define("vault/components/pgp-file", ["exports", "@ember/component", "@ember/object", "ember-concurrency", "@ember/test-waiters"], function (_exports, _component, _object, _emberConcurrency, _testWaiters) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/component",0,"@ember/object",0,"ember-concurrency",0,"@ember/test-waiters"eaimeta@70e063a35619d71f

  const BASE_64_REGEX = /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/gi;

  var _default = _component.default.extend({
    'data-test-pgp-file': true,
    attributeBindings: ['data-test-pgp-file'],
    classNames: ['box', 'is-fullwidth', 'is-marginless', 'is-shadowless'],
    key: null,
    index: null,
    onChange: () => {},

    /*
     * @public
     * @param String
     * Text to use as the label for the file input
     * If null, a default will be rendered
     */
    label: null,

    /*
     * @public
     * @param String
     * Text to use as help under the file input
     * If null, a default will be rendered
     */
    fileHelpText: null,

    /*
     * @public
     * @param String
     * Text to use as help under the textarea in text-input mode
     * If null, a default will be rendered
     */
    textareaHelpText: null,

    readFile(file) {
      const reader = new FileReader();

      reader.onload = () => this.setPGPKey.perform(reader.result, file.name); // this gives us a base64-encoded string which is important in the onload


      reader.readAsDataURL(file);
    },

    setPGPKey: (0, _emberConcurrency.task)((0, _testWaiters.waitFor)(function* (dataURL, filename) {
      const b64File = dataURL.split(',')[1].trim();
      const decoded = atob(b64File).trim(); // If a b64-encoded file was uploaded, then after decoding, it
      // will still be b64.
      // If after decoding it's not b64, we want
      // the original as it was only encoded when we used `readAsDataURL`.

      const fileData = decoded.match(BASE_64_REGEX) ? decoded : b64File;
      yield this.onChange(this.index, {
        value: fileData,
        filename: filename
      });
    })),
    actions: {
      pickedFile(e) {
        const {
          files
        } = e.target;

        if (!files.length) {
          return;
        }

        for (let i = 0, len = files.length; i < len; i++) {
          this.readFile(files[i]);
        }
      },

      updateData(e) {
        const key = this.key;
        (0, _object.set)(key, 'value', e.target.value);
        this.onChange(this.index, this.key);
      },

      clearKey() {
        this.onChange(this.index, {
          value: ''
        });
      }

    }
  });

  _exports.default = _default;
});
;define("vault/components/pgp-list", ["exports", "@ember/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/component"eaimeta@70e063a35619d71f

  var _default = _component.default.extend({
    onDataUpdate: () => {},
    listLength: 0,
    listData: null,

    init() {
      this._super(...arguments);

      let num = this.listLength;

      if (num) {
        num = parseInt(num, 10);
      }

      const list = this.newList(num);
      this.set('listData', list);
    },

    didReceiveAttrs() {
      this._super(...arguments);

      let list;

      if (!this.listLength) {
        this.set('listData', []);
        return;
      } // no update needed


      if (this.listData.length === this.listLength) {
        return;
      }

      if (this.listLength < this.listData.length) {
        // shorten the current list
        list = this.listData.slice(0, this.listLength);
      } else if (this.listLength > this.listData.length) {
        // add to the current list by creating a new list and copying over existing list
        list = [...this.listData, ...this.newList(this.listLength - this.listData.length)];
      }

      this.set('listData', list || this.listData);
      this.onDataUpdate((list || this.listData).compact().map(k => k.value));
    },

    newList(length) {
      return Array(length || 0).fill(null).map(() => ({
        value: ''
      }));
    },

    actions: {
      setKey(index, key) {
        const {
          listData
        } = this;
        listData.splice(index, 1, key);
        this.onDataUpdate(listData.compact().map(k => k.value));
      }

    }
  });

  _exports.default = _default;
});
;define("vault/components/policy-form", ["exports", "@ember/component", "@ember/template-factory", "@glimmer/component", "@ember/object", "@ember/service", "ember-concurrency", "vault/utils/trim-right", "@glimmer/tracking"], function (_exports, _component, _templateFactory, _component2, _object, _service, _emberConcurrency, _trimRight, _tracking) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2, _descriptor3;

  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars",0,"@glimmer/component",0,"@ember/object",0,"@ember/service",0,"ember-concurrency",0,"vault/utils/trim-right",0,"@glimmer/tracking"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  const __COLOCATED_TEMPLATE__ = (0, _templateFactory.createTemplateFactory)(
  /*
    <form {{on "submit" (perform this.save)}} data-test-policy-form>
    <div class="box is-bottomless is-fullwidth is-marginless">
      <MessageError @errorMessage={{this.errorBanner}} />
      <NamespaceReminder @mode={{if @model.isNew "create" "edit"}} @noun="policy" />
      {{#if @model.isNew}}
        <div class="field">
          <label for="policy-name" class="is-label">Name</label>
          <div class="control">
            <Input
              @type="text"
              @value={{lowercase @model.name}}
              id="policy-name"
              class="input"
              {{on "input" this.setModelName}}
              data-test-policy-input="name"
            />
          </div>
        </div>
      {{/if}}
      <div class="field">
        {{#if @model.isNew}}
          <Toolbar>
            <label class="is-label">Policy</label>
            <ToolbarActions>
              <div class="toolbar-separator"></div>
              <div class="control is-flex">
                <Input
                  id="fileUploadToggle"
                  @type="checkbox"
                  name="fileUploadToggle"
                  class="switch is-rounded is-success is-small"
                  @checked={{this.showFileUpload}}
                  {{on "change" (fn (mut this.showFileUpload) (not this.showFileUpload))}}
                  data-test-policy-edit-toggle
                />
                <label for="fileUploadToggle">Upload file</label>
              </div>
            </ToolbarActions>
          </Toolbar>
          {{#if this.showFileUpload}}
            <TextFile @uploadOnly={{true}} @onChange={{this.setPolicyFromFile}} />
          {{else}}
            <JsonEditor
              @title="Policy"
              @helpText="You can use Alt+Tab (Option+Tab on MacOS) in the code editor to skip to the next field"
              @showToolbar={{false}}
              @value={{@model.policy}}
              @valueUpdated={{action (mut @model.policy)}}
              @mode="ruby"
              @extraKeys={{hash Shift-Enter=(perform this.save)}}
              data-test-policy-editor
            />
          {{/if}}
        {{else}}
          {{! EDITING - no file upload toggle}}
          <JsonEditor
            @title="Policy"
            @helpText="You can use Alt+Tab (Option+Tab on MacOS) in the code editor to skip to the next field"
            @value={{@model.policy}}
            @valueUpdated={{action (mut @model.policy)}}
            @mode="ruby"
            @extraKeys={{hash Shift-Enter=(perform this.save)}}
            data-test-policy-editor
          />
        {{/if}}
      </div>
      {{#each @model.additionalAttrs as |attr|}}
        <FormField data-test-field={{true}} @attr={{attr}} @model={{@model}} />
      {{/each}}
    </div>
    <div class="has-bottom-margin-m">
      <p>
        More information about
        {{uppercase @model.policyType}}
        policies can be found
        <DocLink @path={{"/docs/concepts/policies#capabilities"}}>
          here.
        </DocLink>
      </p>
    </div>
    <div class="field is-grouped box is-fullwidth is-bottomless">
      <div class="control">
        <button
          type="submit"
          class="button is-primary {{if this.save.isRunning 'is-loading'}}"
          disabled={{this.save.isRunning}}
          data-test-policy-save
        >
          {{if @model.isNew "Create policy" "Save"}}
        </button>
        <button
          type="button"
          class="button has-left-margin-s"
          disabled={{this.save.isRunning}}
          {{on "click" this.cancel}}
          data-test-policy-cancel
        >
          Cancel
        </button>
      </div>
    </div>
  </form>
  */
  {
    "id": "DEp00Q9H",
    "block": "[[[11,\"form\"],[24,\"data-test-policy-form\",\"\"],[4,[38,0],[\"submit\",[28,[37,1],[[30,0,[\"save\"]]],null]],null],[12],[1,\"\\n  \"],[10,0],[14,0,\"box is-bottomless is-fullwidth is-marginless\"],[12],[1,\"\\n    \"],[8,[39,2],null,[[\"@errorMessage\"],[[30,0,[\"errorBanner\"]]]],null],[1,\"\\n    \"],[8,[39,3],null,[[\"@mode\",\"@noun\"],[[52,[30,1,[\"isNew\"]],\"create\",\"edit\"],\"policy\"]],null],[1,\"\\n\"],[41,[30,1,[\"isNew\"]],[[[1,\"      \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n        \"],[10,\"label\"],[14,\"for\",\"policy-name\"],[14,0,\"is-label\"],[12],[1,\"Name\"],[13],[1,\"\\n        \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n          \"],[8,[39,5],[[24,1,\"policy-name\"],[24,0,\"input\"],[24,\"data-test-policy-input\",\"name\"],[4,[38,0],[\"input\",[30,0,[\"setModelName\"]]],null]],[[\"@type\",\"@value\"],[\"text\",[28,[37,6],[[30,1,[\"name\"]]],null]]],null],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n\"]],[]],null],[1,\"    \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n\"],[41,[30,1,[\"isNew\"]],[[[1,\"        \"],[8,[39,7],null,null,[[\"default\"],[[[[1,\"\\n          \"],[10,\"label\"],[14,0,\"is-label\"],[12],[1,\"Policy\"],[13],[1,\"\\n          \"],[8,[39,8],null,null,[[\"default\"],[[[[1,\"\\n            \"],[10,0],[14,0,\"toolbar-separator\"],[12],[13],[1,\"\\n            \"],[10,0],[14,0,\"control is-flex\"],[12],[1,\"\\n              \"],[8,[39,5],[[24,1,\"fileUploadToggle\"],[24,3,\"fileUploadToggle\"],[24,0,\"switch is-rounded is-success is-small\"],[24,\"data-test-policy-edit-toggle\",\"\"],[4,[38,0],[\"change\",[28,[37,9],[[28,[37,10],[[30,0,[\"showFileUpload\"]]],null],[28,[37,11],[[30,0,[\"showFileUpload\"]]],null]],null]],null]],[[\"@type\",\"@checked\"],[\"checkbox\",[30,0,[\"showFileUpload\"]]]],null],[1,\"\\n              \"],[10,\"label\"],[14,\"for\",\"fileUploadToggle\"],[12],[1,\"Upload file\"],[13],[1,\"\\n            \"],[13],[1,\"\\n          \"]],[]]]]],[1,\"\\n        \"]],[]]]]],[1,\"\\n\"],[41,[30,0,[\"showFileUpload\"]],[[[1,\"          \"],[8,[39,12],null,[[\"@uploadOnly\",\"@onChange\"],[true,[30,0,[\"setPolicyFromFile\"]]]],null],[1,\"\\n\"]],[]],[[[1,\"          \"],[8,[39,13],[[24,\"data-test-policy-editor\",\"\"]],[[\"@title\",\"@helpText\",\"@showToolbar\",\"@value\",\"@valueUpdated\",\"@mode\",\"@extraKeys\"],[\"Policy\",\"You can use Alt+Tab (Option+Tab on MacOS) in the code editor to skip to the next field\",false,[30,1,[\"policy\"]],[28,[37,14],[[30,0],[28,[37,10],[[30,1,[\"policy\"]]],null]],null],\"ruby\",[28,[37,15],null,[[\"Shift-Enter\"],[[28,[37,1],[[30,0,[\"save\"]]],null]]]]]],null],[1,\"\\n\"]],[]]]],[]],[[[1,\"        \"],[8,[39,13],[[24,\"data-test-policy-editor\",\"\"]],[[\"@title\",\"@helpText\",\"@value\",\"@valueUpdated\",\"@mode\",\"@extraKeys\"],[\"Policy\",\"You can use Alt+Tab (Option+Tab on MacOS) in the code editor to skip to the next field\",[30,1,[\"policy\"]],[28,[37,14],[[30,0],[28,[37,10],[[30,1,[\"policy\"]]],null]],null],\"ruby\",[28,[37,15],null,[[\"Shift-Enter\"],[[28,[37,1],[[30,0,[\"save\"]]],null]]]]]],null],[1,\"\\n\"]],[]]],[1,\"    \"],[13],[1,\"\\n\"],[42,[28,[37,17],[[28,[37,17],[[30,1,[\"additionalAttrs\"]]],null]],null],null,[[[1,\"      \"],[8,[39,18],[[16,\"data-test-field\",true]],[[\"@attr\",\"@model\"],[[30,2],[30,1]]],null],[1,\"\\n\"]],[2]],null],[1,\"  \"],[13],[1,\"\\n  \"],[10,0],[14,0,\"has-bottom-margin-m\"],[12],[1,\"\\n    \"],[10,2],[12],[1,\"\\n      More information about\\n      \"],[1,[28,[35,19],[[30,1,[\"policyType\"]]],null]],[1,\"\\n      policies can be found\\n      \"],[8,[39,20],null,[[\"@path\"],[\"/docs/concepts/policies#capabilities\"]],[[\"default\"],[[[[1,\"\\n        here.\\n      \"]],[]]]]],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n  \"],[10,0],[14,0,\"field is-grouped box is-fullwidth is-bottomless\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n      \"],[10,\"button\"],[15,0,[29,[\"button is-primary \",[52,[30,0,[\"save\",\"isRunning\"]],\"is-loading\"]]]],[15,\"disabled\",[30,0,[\"save\",\"isRunning\"]]],[14,\"data-test-policy-save\",\"\"],[14,4,\"submit\"],[12],[1,\"\\n        \"],[1,[52,[30,1,[\"isNew\"]],\"Create policy\",\"Save\"]],[1,\"\\n      \"],[13],[1,\"\\n      \"],[11,\"button\"],[24,0,\"button has-left-margin-s\"],[16,\"disabled\",[30,0,[\"save\",\"isRunning\"]]],[24,\"data-test-policy-cancel\",\"\"],[24,4,\"button\"],[4,[38,0],[\"click\",[30,0,[\"cancel\"]]],null],[12],[1,\"\\n        Cancel\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"],[13]],[\"@model\",\"attr\"],false,[\"on\",\"perform\",\"message-error\",\"namespace-reminder\",\"if\",\"input\",\"lowercase\",\"toolbar\",\"toolbar-actions\",\"fn\",\"mut\",\"not\",\"text-file\",\"json-editor\",\"action\",\"hash\",\"each\",\"-track-array\",\"form-field\",\"uppercase\",\"doc-link\"]]",
    "moduleName": "vault/components/policy-form.hbs",
    "isStrictMode": false
  });
  /**
   * Copyright (c) HashiCorp, Inc.
   * SPDX-License-Identifier: MPL-2.0
   */


  /**
   * @module PolicyForm
   * PolicyForm components are the forms to create and edit all types of policies. This is only the form, not the outlying layout, and expects that the form model is passed from the parent.
   *
   * @example
   *  <PolicyForm
   *    @model={{this.model}}
   *    @onSave={{transition-to "vault.cluster.policy.show" this.model.policyType this.model.name}}
   *    @onCancel={{transition-to "vault.cluster.policies.index"}}
   *  />
   * ```
   * @callback onCancel - callback triggered when cancel button is clicked
   * @callback onSave - callback triggered when save button is clicked. Passes saved model
   * @param {object} model - ember data model from createRecord
   */
  let PolicyFormComponent = (_class = class PolicyFormComponent extends _component2.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "flashMessages", _descriptor, this);

      _initializerDefineProperty(this, "errorBanner", _descriptor2, this);

      _initializerDefineProperty(this, "showFileUpload", _descriptor3, this);
    }

    *save(event) {
      event.preventDefault();

      try {
        const {
          name,
          policyType,
          isNew
        } = this.args.model;
        yield this.args.model.save();
        this.flashMessages.success(`${policyType.toUpperCase()} policy "${name}" was successfully ${isNew ? 'created' : 'updated'}.`);
        this.args.onSave(this.args.model);
      } catch (error) {
        const message = error.errors ? error.errors.join('. ') : error.message;
        this.errorBanner = message;
      }
    }

    setModelName(_ref) {
      let {
        target
      } = _ref;
      this.args.model.name = target.value.toLowerCase();
    }

    setPolicyFromFile(fileInfo) {
      const {
        value,
        filename
      } = fileInfo;
      this.args.model.policy = value;

      if (!this.args.model.name) {
        const trimmedFileName = (0, _trimRight.default)(filename, ['.json', '.txt', '.hcl', '.policy']);
        this.args.model.name = trimmedFileName.toLowerCase();
      }

      this.showFileUpload = false;
    }

    cancel() {
      const method = this.args.model.isNew ? 'unloadRecord' : 'rollbackAttributes';
      this.args.model[method]();
      this.args.onCancel();
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "flashMessages", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "errorBanner", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return '';
    }
  }), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, "showFileUpload", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return false;
    }
  }), _applyDecoratedDescriptor(_class.prototype, "save", [_emberConcurrency.task], Object.getOwnPropertyDescriptor(_class.prototype, "save"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "setModelName", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "setModelName"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "setPolicyFromFile", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "setPolicyFromFile"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "cancel", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "cancel"), _class.prototype)), _class);
  _exports.default = PolicyFormComponent;
  (0, _component.setComponentTemplate)(__COLOCATED_TEMPLATE__, PolicyFormComponent);
});
;define("vault/components/popup-menu", ["exports", "core/components/popup-menu"], function (_exports, _popupMenu) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _popupMenu.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/popup-menu"eaimeta@70e063a35619d71f
});
;define("vault/components/portal-target", ["exports", "ember-stargate/components/portal-target"], function (_exports, _portalTarget) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _portalTarget.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-stargate/components/portal-target"eaimeta@70e063a35619d71f
});
;define("vault/components/portal", ["exports", "ember-stargate/components/portal"], function (_exports, _portal) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _portal.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-stargate/components/portal"eaimeta@70e063a35619d71f
});
;define("vault/components/power-select-multiple", ["exports", "ember-power-select/components/power-select-multiple"], function (_exports, _powerSelectMultiple) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _powerSelectMultiple.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-power-select/components/power-select-multiple"eaimeta@70e063a35619d71f
});
;define("vault/components/power-select-multiple/trigger", ["exports", "ember-power-select/components/power-select-multiple/trigger"], function (_exports, _trigger) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _trigger.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-power-select/components/power-select-multiple/trigger"eaimeta@70e063a35619d71f
});
;define("vault/components/power-select", ["exports", "ember-power-select/components/power-select"], function (_exports, _powerSelect) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _powerSelect.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-power-select/components/power-select"eaimeta@70e063a35619d71f
});
;define("vault/components/power-select/before-options", ["exports", "ember-power-select/components/power-select/before-options"], function (_exports, _beforeOptions) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _beforeOptions.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-power-select/components/power-select/before-options"eaimeta@70e063a35619d71f
});
;define("vault/components/power-select/no-matches-message", ["exports", "ember-power-select/components/power-select/no-matches-message"], function (_exports, _noMatchesMessage) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _noMatchesMessage.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-power-select/components/power-select/no-matches-message"eaimeta@70e063a35619d71f
});
;define("vault/components/power-select/options", ["exports", "ember-power-select/components/power-select/options"], function (_exports, _options) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _options.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-power-select/components/power-select/options"eaimeta@70e063a35619d71f
});
;define("vault/components/power-select/placeholder", ["exports", "ember-power-select/components/power-select/placeholder"], function (_exports, _placeholder) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _placeholder.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-power-select/components/power-select/placeholder"eaimeta@70e063a35619d71f
});
;define("vault/components/power-select/power-select-group", ["exports", "ember-power-select/components/power-select/power-select-group"], function (_exports, _powerSelectGroup) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _powerSelectGroup.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-power-select/components/power-select/power-select-group"eaimeta@70e063a35619d71f
});
;define("vault/components/power-select/search-message", ["exports", "ember-power-select/components/power-select/search-message"], function (_exports, _searchMessage) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _searchMessage.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-power-select/components/power-select/search-message"eaimeta@70e063a35619d71f
});
;define("vault/components/power-select/trigger", ["exports", "ember-power-select/components/power-select/trigger"], function (_exports, _trigger) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _trigger.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-power-select/components/power-select/trigger"eaimeta@70e063a35619d71f
});
;define("vault/components/qr-code", ["exports", "ember-qrcode-shim/components/qr-code"], function (_exports, _qrCode) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _qrCode.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-qrcode-shim/components/qr-code"eaimeta@70e063a35619d71f
});
;define("vault/components/radial-progress", ["exports", "@ember/component", "@ember/object"], function (_exports, _component, _object) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/component",0,"@ember/object"eaimeta@70e063a35619d71f

  var _default = _component.default.extend({
    'data-test-radial-progress': true,
    tagName: 'svg',
    classNames: 'radial-progress',
    attributeBindings: ['size:width', 'size:height', 'viewBox', 'data-test-radial-progress'],
    progressDecimal: null,
    size: 20,
    strokeWidth: 1,
    viewBox: (0, _object.computed)('size', function () {
      const s = this.size;
      return `0 0 ${s} ${s}`;
    }),
    centerValue: (0, _object.computed)('size', function () {
      return this.size / 2;
    }),
    r: (0, _object.computed)('size', 'strokeWidth', function () {
      return (this.size - this.strokeWidth) / 2;
    }),
    c: (0, _object.computed)('r', function () {
      return 2 * Math.PI * this.r;
    }),
    dashArrayOffset: (0, _object.computed)('c', 'progressDecimal', function () {
      return this.c * (1 - this.progressDecimal);
    })
  });

  _exports.default = _default;
});
;define("vault/components/radio-button", ["exports", "core/components/radio-button"], function (_exports, _radioButton) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _radioButton.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/radio-button"eaimeta@70e063a35619d71f
});
;define("vault/components/radio-card", ["exports", "core/components/radio-card"], function (_exports, _radioCard) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _radioCard.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/radio-card"eaimeta@70e063a35619d71f
});
;define("vault/components/raft-join", ["exports", "@ember/service", "@ember/component"], function (_exports, _service, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@ember/component"eaimeta@70e063a35619d71f

  var _default = _component.default.extend({
    classNames: 'raft-join',
    store: (0, _service.inject)(),

    onDismiss() {},

    preference: 'join',
    showJoinForm: false,
    actions: {
      advanceFirstScreen(event) {
        event.preventDefault();

        if (this.preference !== 'join') {
          this.onDismiss();
          return;
        }

        this.set('showJoinForm', true);
      },

      newModel() {
        return this.store.createRecord('raft-join');
      }

    }
  });

  _exports.default = _default;
});
;define("vault/components/raft-storage-overview", ["exports", "@ember/component", "@ember/application", "vault/config/environment", "@ember/service"], function (_exports, _component, _application, _environment, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/component",0,"@ember/application",0,"vault/config/environment",0,"@ember/service"eaimeta@70e063a35619d71f

  var _default = _component.default.extend({
    flashMessages: (0, _service.inject)(),
    auth: (0, _service.inject)(),
    useServiceWorker: null,

    async init() {
      this._super(...arguments);

      if (this.useServiceWorker === false) {
        return;
      } // check to see if we support ServiceWorker


      if ('serviceWorker' in navigator) {
        // this checks to see if there's an active service worker - if it failed to register
        // for any reason, then this would be null
        const worker = await navigator.serviceWorker.getRegistration(_environment.default.serviceWorkerScope);

        if (worker) {
          navigator.serviceWorker.addEventListener('message', this.serviceWorkerGetToken.bind(this));
          this.set('useServiceWorker', true);
        }
      }
    },

    willDestroy() {
      if (this.useServiceWorker) {
        navigator.serviceWorker.removeEventListener('message', this.serviceWorkerGetToken);
      }

      this._super(...arguments);
    },

    serviceWorkerGetToken(event) {
      const {
        action
      } = event.data;
      const [port] = event.ports;

      if (action === 'getToken') {
        port.postMessage({
          token: this.auth.currentToken
        });
      } else {
        console.error('Unknown event', event); // eslint-disable-line

        port.postMessage({
          error: 'Unknown request'
        });
      }
    },

    actions: {
      async removePeer(model) {
        const {
          nodeId
        } = model;

        try {
          await model.destroyRecord();
        } catch (e) {
          const errString = e.errors ? e.errors.join(' ') : e.message || e;
          this.flashMessages.danger(`There was an issue removing the peer ${nodeId}: ${errString}`);
          return;
        }

        this.flashMessages.success(`Successfully removed the peer: ${nodeId}.`);
      },

      downloadViaServiceWorker() {
        // the actual download happens when the user clicks the anchor link, and then the ServiceWorker
        // intercepts the request and adds auth headers.
        // Here we just want to notify users that something is happening before the browser starts the download
        this.flashMessages.success('The snapshot download will begin shortly.');
      },

      async downloadSnapshot() {
        // this entire method is the fallback behavior in case the browser either doesn't support ServiceWorker
        // or the UI is not being run on https.
        // here we're downloading the entire snapshot in memory, creating a dataurl with createObjectURL, and
        // then forcing a download by clicking a link that has a download attribute
        //
        // this is not the default because
        const adapter = (0, _application.getOwner)(this).lookup('adapter:application');
        this.flashMessages.success('The snapshot download has begun.');
        let resp, blob;

        try {
          resp = await adapter.rawRequest('/v1/sys/storage/raft/snapshot', 'GET');
          blob = await resp.blob();
        } catch (e) {
          const errString = e.errors ? e.errors.join(' ') : e.message || e;
          this.flashMessages.danger(`There was an error trying to download the snapshot: ${errString}`);
        }

        const filename = 'snapshot.gz';
        const file = new Blob([blob], {
          type: 'application/x-gzip'
        });
        file.name = filename;

        if ('msSaveOrOpenBlob' in navigator) {
          navigator.msSaveOrOpenBlob(file, filename);
          return;
        }

        const a = document.createElement('a');
        const objectURL = window.URL.createObjectURL(file);
        a.href = objectURL;
        a.download = filename;
        document.body.appendChild(a);
        a.click();
        a.remove();
        window.URL.revokeObjectURL(objectURL);
      }

    }
  });

  _exports.default = _default;
});
;define("vault/components/raft-storage-restore", ["exports", "@ember/component", "ember-concurrency", "@ember/application", "@ember/service", "@ember/object/computed", "fetch"], function (_exports, _component, _emberConcurrency, _application, _service, _computed, _fetch) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/component",0,"ember-concurrency",0,"@ember/application",0,"@ember/service",0,"@ember/object/computed",0,"fetch"eaimeta@70e063a35619d71f

  var _default = _component.default.extend({
    file: null,
    errors: null,
    forceRestore: false,
    flashMessages: (0, _service.inject)(),
    isUploading: (0, _computed.alias)('restore.isRunning'),
    abortController: null,
    restore: (0, _emberConcurrency.task)(function* () {
      this.set('errors', null);
      const adapter = (0, _application.getOwner)(this).lookup('adapter:application');

      try {
        let url = '/v1/sys/storage/raft/snapshot';

        if (this.forceRestore) {
          url = `${url}-force`;
        }

        const file = new Blob([this.file], {
          type: 'application/gzip'
        });
        const controller = new _fetch.AbortController();
        this.set('abortController', controller);
        yield adapter.rawRequest(url, 'POST', {
          body: file,
          signal: controller.signal
        });
        this.flashMessages.success('The snapshot was successfully uploaded!');
      } catch (e) {
        if (e.name === 'AbortError') {
          return;
        }

        let resp;

        if (e.json) {
          resp = yield e.json();
        }

        const err = resp ? resp.errors : [e];
        this.set('errors', err);
      }
    }),
    actions: {
      cancelUpload() {
        this.abortController.abort();
      }

    }
  });

  _exports.default = _default;
});
;define("vault/components/read-more", ["exports", "core/components/read-more"], function (_exports, _readMore) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _readMore.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/read-more"eaimeta@70e063a35619d71f
});
;define("vault/components/readonly-form-field", ["exports", "core/components/readonly-form-field"], function (_exports, _readonlyFormField) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _readonlyFormField.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/readonly-form-field"eaimeta@70e063a35619d71f
});
;define("vault/components/regex-validator", ["exports", "@ember/component", "@ember/template-factory", "@glimmer/component", "@glimmer/tracking", "@ember/object"], function (_exports, _component, _templateFactory, _component2, _tracking, _object) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2;

  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars",0,"@glimmer/component",0,"@glimmer/tracking",0,"@ember/object"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  const __COLOCATED_TEMPLATE__ = (0, _templateFactory.createTemplateFactory)(
  /*
    {{#if @attr}}
    <div class="field" data-test-regex-validator-pattern>
      <div class="regex-label-wrapper">
        <div class="regex-label">
          <label for={{@attr.name}} class="is-label">
            {{@labelString}}
            {{#if @attr.options.helpText}}
              <InfoTooltip>
                <span data-test-help-text>
                  {{@attr.options.helpText}}
                </span>
              </InfoTooltip>
            {{/if}}
          </label>
          {{#if @attr.options.subText}}
            <p class="sub-text">
              {{@attr.options.subText}}
              {{#if @attr.options.docLink}}
                <DocLink @path={{@attr.options.docLink}}>
                  See our documentation
                </DocLink>
                for help.
              {{/if}}
            </p>
          {{/if}}
        </div>
        <div>
          <Toggle
            @name={{concat @attr.name "-validation-toggle"}}
            @status="success"
            @size="small"
            @checked={{this.showTestValue}}
            @onChange={{this.toggleTestValue}}
          >
            <span class="has-text-grey">Validation</span>
          </Toggle>
        </div>
      </div>
      <input
        id={{@attr.name}}
        data-test-input={{@attr.name}}
        autocomplete="off"
        spellcheck="false"
        {{on "change" @onChange}}
        value={{@value}}
        class="input"
      />
    </div>
  {{/if}}
  {{#if this.showTestValue}}
    <div data-test-regex-validator-test-string>
      <label for="regex-test-val" class="is-label">
        {{this.testInputLabel}}
      </label>
      {{#if @testInputSubText}}
        <p class="sub-text">{{@testInputSubText}}</p>
      {{/if}}
      <input
        data-test-input="regex-test-val"
        id="regex-test-val"
        autocomplete="off"
        spellcheck="false"
        value={{this.testValue}}
        {{on "change" this.updateTestValue}}
        class="input {{if this.regexError 'has-error'}}"
      />
  
      {{#if this.testValue}}
        <div data-test-regex-validation-message>
          {{#if (not @value)}}
            <AlertInline
              @type="warning"
              @message={{concat
                "A pattern has not been entered. Enter a pattern to check this "
                (lowercase this.testInputLabel)
                " against it."
              }}
            />
          {{else if this.regexError}}
            <AlertInline @type="danger" @message="This test string does not match the pattern regex." />
          {{else}}
            <div class="message-inline">
              <Icon @name="check-circle-fill" class="has-text-success" />
              <p data-test-inline-success-message>
                This test string matches the pattern regex.
              </p>
            </div>
          {{/if}}
        </div>
      {{/if}}
    </div>
  {{/if}}
  {{#if @showGroups}}
    <div class="has-top-margin-l">
      <label class="is-label">Groups</label>
      {{! check with design but should likely show a placeholder if testValue is blank }}
      {{#if (and @value this.testValue (not this.regexError))}}
        <div class="regex-group">
          {{#each this.captureGroups as |group|}}
            <span class="regex-group-position" data-test-regex-group-position={{group.position}}>
              <span>{{group.position}}</span>
            </span>
            <span class="regex-group-value" data-test-regex-group-value={{group.position}}>
              {{group.value}}
            </span>
          {{/each}}
        </div>
      {{else}}
        <p class="sub-text" data-test-regex-validator-groups-placeholder>
          Enter pattern and test string to show groupings.
        </p>
      {{/if}}
    </div>
  {{/if}}
  */
  {
    "id": "QiAEh/z6",
    "block": "[[[41,[30,1],[[[1,\"  \"],[10,0],[14,0,\"field\"],[14,\"data-test-regex-validator-pattern\",\"\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"regex-label-wrapper\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"regex-label\"],[12],[1,\"\\n        \"],[10,\"label\"],[15,\"for\",[30,1,[\"name\"]]],[14,0,\"is-label\"],[12],[1,\"\\n          \"],[1,[30,2]],[1,\"\\n\"],[41,[30,1,[\"options\",\"helpText\"]],[[[1,\"            \"],[8,[39,1],null,null,[[\"default\"],[[[[1,\"\\n              \"],[10,1],[14,\"data-test-help-text\",\"\"],[12],[1,\"\\n                \"],[1,[30,1,[\"options\",\"helpText\"]]],[1,\"\\n              \"],[13],[1,\"\\n            \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"        \"],[13],[1,\"\\n\"],[41,[30,1,[\"options\",\"subText\"]],[[[1,\"          \"],[10,2],[14,0,\"sub-text\"],[12],[1,\"\\n            \"],[1,[30,1,[\"options\",\"subText\"]]],[1,\"\\n\"],[41,[30,1,[\"options\",\"docLink\"]],[[[1,\"              \"],[8,[39,2],null,[[\"@path\"],[[30,1,[\"options\",\"docLink\"]]]],[[\"default\"],[[[[1,\"\\n                See our documentation\\n              \"]],[]]]]],[1,\"\\n              for help.\\n\"]],[]],null],[1,\"          \"],[13],[1,\"\\n\"]],[]],null],[1,\"      \"],[13],[1,\"\\n      \"],[10,0],[12],[1,\"\\n        \"],[8,[39,3],null,[[\"@name\",\"@status\",\"@size\",\"@checked\",\"@onChange\"],[[28,[37,4],[[30,1,[\"name\"]],\"-validation-toggle\"],null],\"success\",\"small\",[30,0,[\"showTestValue\"]],[30,0,[\"toggleTestValue\"]]]],[[\"default\"],[[[[1,\"\\n          \"],[10,1],[14,0,\"has-text-grey\"],[12],[1,\"Validation\"],[13],[1,\"\\n        \"]],[]]]]],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n    \"],[11,\"input\"],[16,1,[30,1,[\"name\"]]],[16,\"data-test-input\",[30,1,[\"name\"]]],[24,\"autocomplete\",\"off\"],[24,\"spellcheck\",\"false\"],[16,2,[30,3]],[24,0,\"input\"],[4,[38,5],[\"change\",[30,4]],null],[12],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]],null],[41,[30,0,[\"showTestValue\"]],[[[1,\"  \"],[10,0],[14,\"data-test-regex-validator-test-string\",\"\"],[12],[1,\"\\n    \"],[10,\"label\"],[14,\"for\",\"regex-test-val\"],[14,0,\"is-label\"],[12],[1,\"\\n      \"],[1,[30,0,[\"testInputLabel\"]]],[1,\"\\n    \"],[13],[1,\"\\n\"],[41,[30,5],[[[1,\"      \"],[10,2],[14,0,\"sub-text\"],[12],[1,[30,5]],[13],[1,\"\\n\"]],[]],null],[1,\"    \"],[11,\"input\"],[24,\"data-test-input\",\"regex-test-val\"],[24,1,\"regex-test-val\"],[24,\"autocomplete\",\"off\"],[24,\"spellcheck\",\"false\"],[16,2,[30,0,[\"testValue\"]]],[16,0,[29,[\"input \",[52,[30,0,[\"regexError\"]],\"has-error\"]]]],[4,[38,5],[\"change\",[30,0,[\"updateTestValue\"]]],null],[12],[13],[1,\"\\n\\n\"],[41,[30,0,[\"testValue\"]],[[[1,\"      \"],[10,0],[14,\"data-test-regex-validation-message\",\"\"],[12],[1,\"\\n\"],[41,[28,[37,6],[[30,3]],null],[[[1,\"          \"],[8,[39,7],null,[[\"@type\",\"@message\"],[\"warning\",[28,[37,4],[\"A pattern has not been entered. Enter a pattern to check this \",[28,[37,8],[[30,0,[\"testInputLabel\"]]],null],\" against it.\"],null]]],null],[1,\"\\n\"]],[]],[[[41,[30,0,[\"regexError\"]],[[[1,\"          \"],[8,[39,7],null,[[\"@type\",\"@message\"],[\"danger\",\"This test string does not match the pattern regex.\"]],null],[1,\"\\n\"]],[]],[[[1,\"          \"],[10,0],[14,0,\"message-inline\"],[12],[1,\"\\n            \"],[8,[39,9],[[24,0,\"has-text-success\"]],[[\"@name\"],[\"check-circle-fill\"]],null],[1,\"\\n            \"],[10,2],[14,\"data-test-inline-success-message\",\"\"],[12],[1,\"\\n              This test string matches the pattern regex.\\n            \"],[13],[1,\"\\n          \"],[13],[1,\"\\n        \"]],[]]]],[]]],[1,\"      \"],[13],[1,\"\\n\"]],[]],null],[1,\"  \"],[13],[1,\"\\n\"]],[]],null],[41,[30,6],[[[1,\"  \"],[10,0],[14,0,\"has-top-margin-l\"],[12],[1,\"\\n    \"],[10,\"label\"],[14,0,\"is-label\"],[12],[1,\"Groups\"],[13],[1,\"\\n\"],[41,[28,[37,10],[[30,3],[30,0,[\"testValue\"]],[28,[37,6],[[30,0,[\"regexError\"]]],null]],null],[[[1,\"      \"],[10,0],[14,0,\"regex-group\"],[12],[1,\"\\n\"],[42,[28,[37,12],[[28,[37,12],[[30,0,[\"captureGroups\"]]],null]],null],null,[[[1,\"          \"],[10,1],[14,0,\"regex-group-position\"],[15,\"data-test-regex-group-position\",[30,7,[\"position\"]]],[12],[1,\"\\n            \"],[10,1],[12],[1,[30,7,[\"position\"]]],[13],[1,\"\\n          \"],[13],[1,\"\\n          \"],[10,1],[14,0,\"regex-group-value\"],[15,\"data-test-regex-group-value\",[30,7,[\"position\"]]],[12],[1,\"\\n            \"],[1,[30,7,[\"value\"]]],[1,\"\\n          \"],[13],[1,\"\\n\"]],[7]],null],[1,\"      \"],[13],[1,\"\\n\"]],[]],[[[1,\"      \"],[10,2],[14,0,\"sub-text\"],[14,\"data-test-regex-validator-groups-placeholder\",\"\"],[12],[1,\"\\n        Enter pattern and test string to show groupings.\\n      \"],[13],[1,\"\\n\"]],[]]],[1,\"  \"],[13],[1,\"\\n\"]],[]],null]],[\"@attr\",\"@labelString\",\"@value\",\"@onChange\",\"@testInputSubText\",\"@showGroups\",\"group\"],false,[\"if\",\"info-tooltip\",\"doc-link\",\"toggle\",\"concat\",\"on\",\"not\",\"alert-inline\",\"lowercase\",\"icon\",\"and\",\"each\",\"-track-array\"]]",
    "moduleName": "vault/components/regex-validator.hbs",
    "isStrictMode": false
  });
  /**
   * Copyright (c) HashiCorp, Inc.
   * SPDX-License-Identifier: MPL-2.0
   */

  /**
   * @module RegexValidator
   * RegexValidator components are used to provide input forms for regex values, along with a toggle-able validation input which does not get saved to the model.
   *
   * @example
   * ```js
   * const attrExample = {
   *    name: 'valName',
   *    options: {
   *      helpText: 'Shows in tooltip',
   *      subText: 'Shows underneath label',
   *      docLink: 'Adds docs link to subText if present',
   *      defaultValue: 'hello', // Shows if no value on model
   *    }
   * }
   * <RegexValidator @onChange={action 'myAction'} @attr={attrExample} @labelString="Label String" @value="initial value" />
   * ```
   * @param {string} value - the value of the main input which will be updated in onChange
   * @param {func} [onChange] - the action that should trigger when pattern input is changed. Required when attr is provided.
   * @param {string} [labelString] - Form label. Anticipated from form-field. Required when attr is provided.
   * @param {object} [attr] - attribute from model. Anticipated from form-field. Example of attribute shape above. When not provided pattern input is hidden
   * @param {string} [testInputLabel] - label for test input
   * @param {string} [testInputSubText] - sub text for test input
   * @param {boolean} [showGroups] - show groupings based on pattern and test input
   * @param {func} [onValidate] - action triggered every time the test string is validated against the regex -- passes testValue and captureGroups
   */


  let RegexValidator = (_class = class RegexValidator extends _component2.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "testValue", _descriptor, this);

      _initializerDefineProperty(this, "showTestValue", _descriptor2, this);

      this.showTestValue = !this.args.attr;
    }

    get testInputLabel() {
      return this.args.testInputLabel || 'Test string';
    }

    get regex() {
      return new RegExp(this.args.value, 'g');
    }

    get regexError() {
      const testString = this.testValue;
      if (!testString || !this.args.value) return false;
      const matchArray = testString.toString().match(this.regex);

      if (this.args.onValidate) {
        this.args.onValidate(this.testValue, this.captureGroups);
      }

      return testString !== matchArray?.join('');
    }

    get captureGroups() {
      const result = this.regex.exec(this.testValue);

      if (result) {
        // first item is full string match but we are only interested in the captured groups
        const [fullMatch, ...matches] = result; // eslint-disable-line

        const groups = matches.map((m, index) => ({
          position: `$${index + 1}`,
          value: m
        })); // push named capture groups into array -> eg (<lastFour>\d{4})

        if (result.groups) {
          for (const key in result.groups) {
            groups.push({
              position: `$${key}`,
              value: result.groups[key]
            });
          }
        }

        return groups;
      }

      return [];
    }

    updateTestValue(evt) {
      this.testValue = evt.target.value;
    }

    toggleTestValue() {
      this.showTestValue = !this.showTestValue;
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "testValue", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return '';
    }
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "showTestValue", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return false;
    }
  }), _applyDecoratedDescriptor(_class.prototype, "updateTestValue", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "updateTestValue"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "toggleTestValue", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "toggleTestValue"), _class.prototype)), _class);
  _exports.default = RegexValidator;
  (0, _component.setComponentTemplate)(__COLOCATED_TEMPLATE__, RegexValidator);
});
;define("vault/components/role-aws-edit", ["exports", "@ember/utils", "@ember/object", "vault/components/role-edit"], function (_exports, _utils, _object, _roleEdit) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/utils",0,"@ember/object",0,"vault/components/role-edit"eaimeta@70e063a35619d71f

  const SHOW_ROUTE = 'vault.cluster.secrets.backend.show';

  var _default = _roleEdit.default.extend({
    actions: {
      createOrUpdate(type, event) {
        event.preventDefault(); // all of the attributes with fieldValue:'id' are called `name`

        const modelId = this.model.id || this.model.name; // prevent from submitting if there's no key
        // maybe do something fancier later

        if (type === 'create' && (0, _utils.isBlank)(modelId)) {
          return;
        }

        var credential_type = this.model.credential_type;

        if (credential_type == 'iam_user') {
          (0, _object.set)(this, 'model.role_arns', []);
        }

        if (credential_type == 'assumed_role') {
          (0, _object.set)(this, 'model.policy_arns', []);
        }

        if (credential_type == 'federation_token') {
          (0, _object.set)(this, 'model.role_arns', []);
          (0, _object.set)(this, 'model.policy_arns', []);
        }

        var policy_document = this.model.policy_document;

        if (policy_document == '{}') {
          (0, _object.set)(this, 'model.policy_document', '');
        }

        this.persist('save', () => {
          this.hasDataChanges();
          this.transitionToRoute(SHOW_ROUTE, modelId);
        });
      },

      codemirrorUpdated(attr, val, codemirror) {
        codemirror.performLint();
        const hasErrors = codemirror.state.lint.marked.length > 0;

        if (!hasErrors) {
          (0, _object.set)(this.model, attr, val);
        }
      }

    }
  });

  _exports.default = _default;
});
;define("vault/components/role-edit", ["exports", "@ember/service", "@ember/object/computed", "@ember/utils", "ember-concurrency", "@ember/component", "@ember/object", "vault/mixins/focus-on-insert", "vault/lib/keycodes"], function (_exports, _service, _computed, _utils, _emberConcurrency, _component, _object, _focusOnInsert, _keycodes) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@ember/object/computed",0,"@ember/utils",0,"ember-concurrency",0,"@ember/component",0,"@ember/object",0,"vault/mixins/focus-on-insert",0,"vault/lib/keycodes"eaimeta@70e063a35619d71f

  const LIST_ROOT_ROUTE = 'vault.cluster.secrets.backend.list-root';
  const SHOW_ROUTE = 'vault.cluster.secrets.backend.show';

  var _default = _component.default.extend(_focusOnInsert.default, {
    router: (0, _service.inject)(),
    mode: null,
    emptyData: '{\n}',

    onDataChange() {},

    onRefresh() {},

    model: null,
    requestInFlight: (0, _computed.or)('model.isLoading', 'model.isReloading', 'model.isSaving'),

    willDestroyElement() {
      this._super(...arguments);

      if (this.model && this.model.isError) {
        this.model.rollbackAttributes();
      }
    },

    waitForKeyUp: (0, _emberConcurrency.task)(function* () {
      while (true) {
        const event = yield (0, _emberConcurrency.waitForEvent)(document.body, 'keyup');
        this.onEscape(event);
      }
    }).on('didInsertElement').cancelOn('willDestroyElement'),

    transitionToRoute() {
      this.router.transitionTo(...arguments);
    },

    onEscape(e) {
      if (e.keyCode !== _keycodes.default.ESC || this.mode !== 'show') {
        return;
      }

      this.transitionToRoute(LIST_ROOT_ROUTE);
    },

    hasDataChanges() {
      this.onDataChange(this.model.hasDirtyAttributes);
    },

    persist(method, successCallback) {
      const model = this.model;
      return model[method]().then(() => {
        if (!model.isError) {
          successCallback(model);
        }
      });
    },

    actions: {
      createOrUpdate(type, event) {
        event.preventDefault(); // all of the attributes with fieldValue:'id' are called `name`

        const modelId = this.model.id || this.model.name; // prevent from submitting if there's no key
        // maybe do something fancier later

        if (type === 'create' && (0, _utils.isBlank)(modelId)) {
          return;
        }

        this.persist('save', () => {
          this.hasDataChanges();
          this.transitionToRoute(SHOW_ROUTE, modelId);
        });
      },

      setValue(key, event) {
        (0, _object.set)(this.model, key, event.target.checked);
      },

      refresh() {
        this.onRefresh();
      },

      delete() {
        this.persist('destroyRecord', () => {
          this.hasDataChanges();
          this.transitionToRoute(LIST_ROOT_ROUTE);
        });
      },

      codemirrorUpdated(attr, val, codemirror) {
        codemirror.performLint();
        const hasErrors = codemirror.state.lint.marked.length > 0;

        if (!hasErrors) {
          (0, _object.set)(this.model, attr, JSON.parse(val));
        }
      }

    }
  });

  _exports.default = _default;
});
;define("vault/components/role-ssh-edit", ["exports", "vault/components/role-edit"], function (_exports, _roleEdit) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/components/role-edit"eaimeta@70e063a35619d71f

  var _default = _roleEdit.default.extend({
    init() {
      this._super(...arguments);

      this.set('backendType', 'ssh');
    },

    actions: {
      updateTtl(path, val) {
        const model = this.model;
        const valueToSet = val.enabled === true ? `${val.seconds}s` : undefined;
        model.set(path, valueToSet);
      }

    }
  });

  _exports.default = _default;
});
;define("vault/components/search-select-placeholder", ["exports", "core/components/search-select-placeholder"], function (_exports, _searchSelectPlaceholder) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _searchSelectPlaceholder.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/search-select-placeholder"eaimeta@70e063a35619d71f
});
;define("vault/components/search-select-with-modal", ["exports", "core/components/search-select-with-modal"], function (_exports, _searchSelectWithModal) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _searchSelectWithModal.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/search-select-with-modal"eaimeta@70e063a35619d71f
});
;define("vault/components/search-select", ["exports", "core/components/search-select"], function (_exports, _searchSelect) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _searchSelect.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/search-select"eaimeta@70e063a35619d71f
});
;define("vault/components/secret-create-or-update", ["exports", "@glimmer/component", "vault/lib/control-group-error", "ember", "vault/lib/keycodes", "@ember/object", "@ember/service", "@glimmer/tracking", "@ember/utils", "ember-concurrency"], function (_exports, _component, _controlGroupError, _ember, _keycodes, _object, _service, _tracking, _utils, _emberConcurrency) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11;

  0; //eaimeta@70e063a35619d71f0,"@glimmer/component",0,"vault/lib/control-group-error",0,"ember",0,"vault/lib/keycodes",0,"@ember/object",0,"@ember/service",0,"@glimmer/tracking",0,"@ember/utils",0,"ember-concurrency"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  const LIST_ROUTE = 'vault.cluster.secrets.backend.list';
  const LIST_ROOT_ROUTE = 'vault.cluster.secrets.backend.list-root';
  const SHOW_ROUTE = 'vault.cluster.secrets.backend.show';
  let SecretCreateOrUpdate = (_dec = (0, _emberConcurrency.task)(function* (name, value) {
    this.checkValidation(name, value);

    while (true) {
      const event = yield (0, _emberConcurrency.waitForEvent)(document.body, 'keyup');
      this.onEscape(event);
    }
  }).on('didInsertElement').cancelOn('willDestroyElement'), (_class = class SecretCreateOrUpdate extends _component.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "codemirrorString", _descriptor, this);

      _initializerDefineProperty(this, "error", _descriptor2, this);

      _initializerDefineProperty(this, "secretPaths", _descriptor3, this);

      _initializerDefineProperty(this, "pathWhiteSpaceWarning", _descriptor4, this);

      _initializerDefineProperty(this, "validationErrorCount", _descriptor5, this);

      _initializerDefineProperty(this, "validationMessages", _descriptor6, this);

      _initializerDefineProperty(this, "controlGroup", _descriptor7, this);

      _initializerDefineProperty(this, "flashMessages", _descriptor8, this);

      _initializerDefineProperty(this, "router", _descriptor9, this);

      _initializerDefineProperty(this, "store", _descriptor10, this);

      _initializerDefineProperty(this, "waitForKeyUp", _descriptor11, this);
    }

    setup(elem, _ref) {
      let [secretData, model, mode] = _ref;
      this.codemirrorString = secretData.toJSONString();
      this.validationMessages = {
        path: ''
      }; // for validation, return array of path names already assigned

      if (_ember.default.testing) {
        this.secretPaths = ['beep', 'bop', 'boop'];
      } else {
        const adapter = this.store.adapterFor('secret-v2');
        const type = {
          modelName: 'secret-v2'
        };
        const query = {
          backend: model.backend
        };
        adapter.query(this.store, type, query).then(result => {
          this.secretPaths = result.data.keys;
        });
      }

      this.checkRows();

      if (mode === 'edit') {
        this.addRow();
      }
    }

    checkRows() {
      if (this.args.secretData.length === 0) {
        this.addRow();
      }
    }

    checkValidation(name, value) {
      if (name === 'path') {
        // check for whitespace
        this.pathHasWhiteSpace(value);
        !value ? (0, _object.set)(this.validationMessages, name, `${name} can't be blank.`) : (0, _object.set)(this.validationMessages, name, '');
      } // check duplicate on path


      if (name === 'path' && value) {
        this.secretPaths?.includes(value) ? (0, _object.set)(this.validationMessages, name, `A secret with this ${name} already exists.`) : (0, _object.set)(this.validationMessages, name, '');
      }

      const values = Object.values(this.validationMessages);
      this.validationErrorCount = values.filter(Boolean).length;
    }

    onEscape(e) {
      if (e.keyCode !== _keycodes.default.ESC || this.args.mode !== 'show') {
        return;
      }

      const parentKey = this.args.model.parentKey;

      if (parentKey) {
        this.transitionToRoute(LIST_ROUTE, parentKey);
      } else {
        this.transitionToRoute(LIST_ROOT_ROUTE);
      }
    }

    pathHasWhiteSpace(value) {
      const validation = new RegExp('\\s', 'g'); // search for whitespace

      this.pathWhiteSpaceWarning = validation.test(value);
    } // successCallback is called in the context of the component


    persistKey(successCallback) {
      const secret = this.args.model;
      const secretData = this.args.modelForData;
      const isV2 = this.args.isV2;
      let key = secretData.get('path') || secret.id;

      if (key.startsWith('/')) {
        key = key.replace(/^\/+/g, '');
        secretData.set(secretData.pathAttr, key);
      }

      const changed = secret.changedAttributes();
      const changedKeys = Object.keys(changed);
      return secretData.save().then(() => {
        if (!this.args.canReadSecretData && secret.selectedVersion) {
          delete secret.selectedVersion.secretData;
        }

        if (!secretData.isError) {
          if (isV2) {
            secret.set('id', key);
          } // this secret.save() saves to the metadata endpoint. Only saved if metadata has been added
          // and if the currentVersion attr changed that's because we added it (only happens if they don't have read access to metadata on mode = update which does not allow you to change metadata)


          if (isV2 && changedKeys.length > 0 && changedKeys[0] !== 'currentVersion') {
            // save secret metadata
            secret.save().then(() => {
              this.saveComplete(successCallback, key);
            }).catch(e => {
              // when mode is not create the metadata error is handled in secret-edit-metadata
              if (this.args.mode === 'create') {
                this.error = e.errors.join(' ');
              }

              return;
            });
          } else {
            this.saveComplete(successCallback, key);
          }
        }
      }).catch(error => {
        if (error instanceof _controlGroupError.default) {
          const errorMessage = this.controlGroup.logFromError(error);
          this.error = errorMessage.content;
          this.controlGroup.saveTokenFromError(error);
        }

        throw error;
      });
    }

    saveComplete(callback, key) {
      callback(key);
    }

    transitionToRoute() {
      return this.router.transitionTo(...arguments);
    }

    get isCreateNewVersionFromOldVersion() {
      const model = this.args.model;

      if (!model) {
        return false;
      }

      if (!model.failedServerRead && !model.selectedVersion?.failedServerRead && model.selectedVersion?.version !== model.currentVersion) {
        return true;
      }

      return false;
    }

    addRow() {
      const data = this.args.secretData; // fired off on init

      if ((0, _utils.isNone)(data.findBy('name', ''))) {
        data.pushObject({
          name: '',
          value: ''
        });
        this.handleChange();
      }

      this.checkRows();
    }

    codemirrorUpdated(val, codemirror) {
      this.error = null;
      codemirror.performLint();
      const noErrors = codemirror.state.lint.marked.length === 0;

      if (noErrors) {
        try {
          this.args.secretData.fromJSONString(val);
          (0, _object.set)(this.args.modelForData, 'secretData', this.args.secretData.toJSON());
        } catch (e) {
          this.error = e.message;
        }
      }

      this.codemirrorString = val;
    }

    createOrUpdateKey(type, event) {
      event.preventDefault();

      if (type === 'create' && (0, _utils.isBlank)(this.args.modelForData.path || this.args.modelForData.id)) {
        this.checkValidation('path', '');
        return;
      }

      const secretPath = type === 'create' ? this.args.modelForData.path : this.args.model.id;
      this.persistKey(() => {
        // Show flash message in case there's a control group on read
        this.flashMessages.success(`Secret ${secretPath} ${type === 'create' ? 'created' : 'updated'} successfully.`);
        this.transitionToRoute(SHOW_ROUTE, secretPath);
      });
    }

    deleteRow(name) {
      const data = this.args.secretData;
      const item = data.findBy('name', name);

      if ((0, _utils.isBlank)(item.name)) {
        return;
      }

      data.removeObject(item);
      this.checkRows();
      this.handleChange();
    }

    formatJSON() {
      this.codemirrorString = this.args.secretData.toJSONString(true);
    }

    handleMaskedInputChange(secret, index, value) {
      const row = { ...secret,
        value
      };
      (0, _object.set)(this.args.secretData, index, row);
      this.handleChange();
    }

    handleChange() {
      this.codemirrorString = this.args.secretData.toJSONString(true);
      (0, _object.set)(this.args.modelForData, 'secretData', this.args.secretData.toJSON());
    }

    updateValidationErrorCount(errorCount) {
      this.validationErrorCount = errorCount;
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "codemirrorString", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return null;
    }
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "error", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return null;
    }
  }), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, "secretPaths", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return null;
    }
  }), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, "pathWhiteSpaceWarning", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return false;
    }
  }), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, "validationErrorCount", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return 0;
    }
  }), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, "validationMessages", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return null;
    }
  }), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, "controlGroup", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, "flashMessages", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, "router", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor10 = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _applyDecoratedDescriptor(_class.prototype, "setup", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "setup"), _class.prototype), _descriptor11 = _applyDecoratedDescriptor(_class.prototype, "waitForKeyUp", [_dec], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _applyDecoratedDescriptor(_class.prototype, "addRow", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "addRow"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "codemirrorUpdated", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "codemirrorUpdated"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "createOrUpdateKey", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "createOrUpdateKey"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "deleteRow", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "deleteRow"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "formatJSON", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "formatJSON"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "handleMaskedInputChange", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "handleMaskedInputChange"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "handleChange", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "handleChange"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "updateValidationErrorCount", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "updateValidationErrorCount"), _class.prototype)), _class));
  _exports.default = SecretCreateOrUpdate;
});
;define("vault/components/secret-delete-menu", ["exports", "ember", "@ember/service", "@glimmer/component", "@glimmer/tracking", "@ember/object", "@ember/object/computed", "vault/macros/maybe-query-record"], function (_exports, _ember, _service, _component, _tracking, _object, _computed, _maybeQueryRecord) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14;

  0; //eaimeta@70e063a35619d71f0,"ember",0,"@ember/service",0,"@glimmer/component",0,"@glimmer/tracking",0,"@ember/object",0,"@ember/object/computed",0,"vault/macros/maybe-query-record"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  const getErrorMessage = errors => {
    const errorMessage = errors?.join('. ') || 'Something went wrong. Check the OpenBao logs for more information.';
    return errorMessage;
  };

  let SecretDeleteMenu = (_dec = (0, _maybeQueryRecord.maybeQueryRecord)('capabilities', context => {
    if (!context.args || !context.args.modelForData || !context.args.modelForData.id) return;
    const [backend, id] = JSON.parse(context.args.modelForData.id);
    return {
      id: `${backend}/undelete/${id}`
    };
  }, 'model.id'), _dec2 = (0, _computed.alias)('undeleteVersionPath.canUpdate'), _dec3 = (0, _maybeQueryRecord.maybeQueryRecord)('capabilities', context => {
    if (!context.args || !context.args.modelForData || !context.args.modelForData.id) return;
    const [backend, id] = JSON.parse(context.args.modelForData.id);
    return {
      id: `${backend}/destroy/${id}`
    };
  }, 'model.id'), _dec4 = (0, _computed.alias)('destroyVersionPath.canUpdate'), _dec5 = (0, _maybeQueryRecord.maybeQueryRecord)('capabilities', context => {
    if (!context.args.model || !context.args.model.engine || !context.args.model.id) return;
    const backend = context.args.model.engine.id;
    const id = context.args.model.id;
    return {
      id: `${backend}/metadata/${id}`
    };
  }, 'model', 'model.id', 'mode'), _dec6 = (0, _computed.alias)('v2UpdatePath.canDelete'), _dec7 = (0, _maybeQueryRecord.maybeQueryRecord)('capabilities', context => {
    if (!context.args.model || context.args.mode === 'create') {
      return;
    }

    const backend = context.args.isV2 ? context.args.model.engine.id : context.args.model.backend;
    const id = context.args.model.id;
    const path = context.args.isV2 ? `${backend}/data/${id}` : `${backend}/${id}`;
    return {
      id: path
    };
  }, 'isV2', 'model', 'model.id', 'mode'), _dec8 = (0, _computed.alias)('secretDataPath.canDelete'), _dec9 = (0, _maybeQueryRecord.maybeQueryRecord)('capabilities', context => {
    if (!context.args.model || context.args.mode === 'create') {
      return;
    }

    const backend = context.args.isV2 ? context.args.model.engine.id : context.args.model.backend;
    const id = context.args.model.id;
    const path = context.args.isV2 ? `${backend}/delete/${id}` : `${backend}/${id}`;
    return {
      id: path
    };
  }, 'isV2', 'model', 'model.id', 'mode'), _dec10 = (0, _computed.alias)('secretSoftDataPath.canUpdate'), (_class = class SecretDeleteMenu extends _component.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);

      _initializerDefineProperty(this, "router", _descriptor2, this);

      _initializerDefineProperty(this, "flashMessages", _descriptor3, this);

      _initializerDefineProperty(this, "showDeleteModal", _descriptor4, this);

      _initializerDefineProperty(this, "undeleteVersionPath", _descriptor5, this);

      _initializerDefineProperty(this, "canUndeleteVersion", _descriptor6, this);

      _initializerDefineProperty(this, "destroyVersionPath", _descriptor7, this);

      _initializerDefineProperty(this, "canDestroyVersion", _descriptor8, this);

      _initializerDefineProperty(this, "v2UpdatePath", _descriptor9, this);

      _initializerDefineProperty(this, "canDestroyAllVersions", _descriptor10, this);

      _initializerDefineProperty(this, "secretDataPath", _descriptor11, this);

      _initializerDefineProperty(this, "canDeleteSecretData", _descriptor12, this);

      _initializerDefineProperty(this, "secretSoftDataPath", _descriptor13, this);

      _initializerDefineProperty(this, "canSoftDeleteSecretData", _descriptor14, this);
    }

    get isLatestVersion() {
      // must have metadata access.
      const {
        model
      } = this.args;
      if (!model) return false;
      const latestVersion = model.currentVersion;
      const selectedVersion = model.selectedVersion.version;

      if (latestVersion !== selectedVersion) {
        return false;
      }

      return true;
    }

    handleDelete(deleteType) {
      // deleteType should be 'delete', 'destroy', 'undelete', 'delete-latest-version', 'destroy-all-versions', 'v1'
      if (!deleteType) {
        return;
      }

      if (deleteType === 'destroy-all-versions' || deleteType === 'v1') {
        this.args.model.destroyRecord().then(() => {
          return this.router.transitionTo('vault.cluster.secrets.backend.list-root');
        });
      } else {
        // if they do not have read access on the metadata endpoint we need to pull the version from modelForData so they can perform delete and undelete operations
        // only perform if no access to metadata otherwise it will only delete latest version for any deleteType === delete
        let currentVersionForNoReadMetadata;

        if (!this.args.canReadSecretMetadata) {
          currentVersionForNoReadMetadata = this.args.modelForData?.version;
        }

        return this.store.adapterFor('secret-v2-version').v2DeleteOperation(this.store, this.args.modelForData.id, deleteType, currentVersionForNoReadMetadata).then(resp => {
          if (_ember.default.testing) {
            this.showDeleteModal = false; // we don't want a refresh otherwise test loop will rerun in a loop

            return;
          }

          if (!resp) {
            this.showDeleteModal = false;
            this.args.refresh();
            return;
          }

          if (resp.isAdapterError) {
            const errorMessage = getErrorMessage(resp.errors);
            this.flashMessages.danger(errorMessage);
          } else {
            // not likely to ever get to this situation, but adding just in case.
            location.reload();
          }
        });
      }
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "router", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, "flashMessages", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, "showDeleteModal", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return false;
    }
  }), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, "undeleteVersionPath", [_dec], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, "canUndeleteVersion", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, "destroyVersionPath", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, "canDestroyVersion", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, "v2UpdatePath", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor10 = _applyDecoratedDescriptor(_class.prototype, "canDestroyAllVersions", [_dec6], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor11 = _applyDecoratedDescriptor(_class.prototype, "secretDataPath", [_dec7], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor12 = _applyDecoratedDescriptor(_class.prototype, "canDeleteSecretData", [_dec8], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor13 = _applyDecoratedDescriptor(_class.prototype, "secretSoftDataPath", [_dec9], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor14 = _applyDecoratedDescriptor(_class.prototype, "canSoftDeleteSecretData", [_dec10], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _applyDecoratedDescriptor(_class.prototype, "handleDelete", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "handleDelete"), _class.prototype)), _class));
  _exports.default = SecretDeleteMenu;
});
;define("vault/components/secret-edit-metadata", ["exports", "@glimmer/component", "@ember/object", "@ember/service", "@glimmer/tracking"], function (_exports, _component, _object, _service, _tracking) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2, _descriptor3, _descriptor4;

  0; //eaimeta@70e063a35619d71f0,"@glimmer/component",0,"@ember/object",0,"@ember/service",0,"@glimmer/tracking"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  /**
   * @module SecretEditMetadata
   *
   * @example
   * ```js
   * <SecretEditMetadata
   * @model={{model}}
   * @mode={{mode}}
   * @updateValidationErrorCount={{updateValidationErrorCount}}
   * />
   * ```
   *
   * @param {object} model - name of the current cluster, passed from the parent.
   * @param {string} mode - if the mode is create, show, edit.
   * @param {Function} [updateValidationErrorCount] - function on parent that handles disabling the save button.
   */
  let SecretEditMetadata = (_class = class SecretEditMetadata extends _component.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "router", _descriptor, this);

      _initializerDefineProperty(this, "store", _descriptor2, this);

      _initializerDefineProperty(this, "validationErrorCount", _descriptor3, this);

      _initializerDefineProperty(this, "modelValidations", _descriptor4, this);
    }

    async save() {
      const model = this.args.model;

      try {
        await model.save();
      } catch (e) {
        this.error = e;
        return;
      }

      this.router.transitionTo('vault.cluster.secrets.backend.metadata', this.args.model.id);
    }

    onSaveChanges(event) {
      event.preventDefault();
      return this.save();
    }

    onKeyUp(name, value) {
      let state = {};

      if (value) {
        if (name === 'customMetadata') {
          // atypical case where property is not set on model on change - validate independently

          /* eslint-disable no-useless-escape */
          const regex = /^[^\\]+$/g; // looking for a backward slash

          if (!value.match(regex)) {
            state[name] = {
              errors: ['Custom values cannot contain a backward slash.'],
              isValid: false
            };
          }
        }

        if (name === 'maxVersions') {
          this.args.model.maxVersions = value;
          state = this.args.model.validate().state;
        }
      }

      let count = 0;

      for (const key in state) {
        if (!state[key].isValid) {
          count++;
        }
      }

      this.modelValidations = state;
      this.validationErrorCount = count; // when mode is "update" this works, but on mode "create" we need to bubble up the count

      if (this.args.updateValidationErrorCount) {
        this.args.updateValidationErrorCount(this.validationErrorCount);
      }
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "router", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, "validationErrorCount", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return 0;
    }
  }), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, "modelValidations", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _applyDecoratedDescriptor(_class.prototype, "onSaveChanges", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "onSaveChanges"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "onKeyUp", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "onKeyUp"), _class.prototype)), _class);
  _exports.default = SecretEditMetadata;
});
;define("vault/components/secret-edit-toolbar", ["exports", "@glimmer/component", "@ember/object", "@ember/object/computed", "@ember/service", "@glimmer/tracking"], function (_exports, _component, _object, _computed, _service, _tracking) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5;

  0; //eaimeta@70e063a35619d71f0,"@glimmer/component",0,"@ember/object",0,"@ember/object/computed",0,"@ember/service",0,"@glimmer/tracking"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let SecretEditToolbar = (_dec = (0, _computed.not)('wrappedData'), (_class = class SecretEditToolbar extends _component.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);

      _initializerDefineProperty(this, "flashMessages", _descriptor2, this);

      _initializerDefineProperty(this, "wrappedData", _descriptor3, this);

      _initializerDefineProperty(this, "isWrapping", _descriptor4, this);

      _initializerDefineProperty(this, "showWrapButton", _descriptor5, this);
    }

    clearWrappedData() {
      this.wrappedData = null;
    }

    handleCopyError() {
      this.flashMessages.danger('Could Not Copy Wrapped Data');
      this.send('clearWrappedData');
    }

    handleCopySuccess() {
      this.flashMessages.success('Copied Wrapped Data!');
      this.send('clearWrappedData');
    }

    handleWrapClick() {
      this.isWrapping = true;

      if (this.args.isV2) {
        this.store.adapterFor('secret-v2-version').queryRecord(this.args.modelForData.id, {
          wrapTTL: 1800
        }).then(resp => {
          this.wrappedData = resp.wrap_info.token;
          this.flashMessages.success('Secret Successfully Wrapped!');
        }).catch(() => {
          this.flashMessages.danger('Could Not Wrap Secret');
        }).finally(() => {
          this.isWrapping = false;
        });
      } else {
        this.store.adapterFor('secret').queryRecord(null, null, {
          backend: this.args.model.backend,
          id: this.args.modelForData.id,
          wrapTTL: 1800
        }).then(resp => {
          this.wrappedData = resp.wrap_info.token;
          this.flashMessages.success('Secret Successfully Wrapped!');
        }).catch(() => {
          this.flashMessages.danger('Could Not Wrap Secret');
        }).finally(() => {
          this.isWrapping = false;
        });
      }
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "flashMessages", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, "wrappedData", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return null;
    }
  }), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, "isWrapping", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return false;
    }
  }), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, "showWrapButton", [_dec], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _applyDecoratedDescriptor(_class.prototype, "clearWrappedData", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "clearWrappedData"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "handleCopyError", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "handleCopyError"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "handleCopySuccess", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "handleCopySuccess"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "handleWrapClick", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "handleWrapClick"), _class.prototype)), _class));
  _exports.default = SecretEditToolbar;
});
;define("vault/components/secret-edit", ["exports", "@ember/service", "@glimmer/component", "@ember/object", "@glimmer/tracking", "vault/lib/kv-object", "vault/macros/maybe-query-record", "@ember/object/computed"], function (_exports, _service, _component, _object, _tracking, _kvObject, _maybeQueryRecord, _computed) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13;

  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@glimmer/component",0,"@ember/object",0,"@glimmer/tracking",0,"vault/lib/kv-object",0,"vault/macros/maybe-query-record",0,"@ember/object/computed"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let SecretEdit = (_dec = (0, _maybeQueryRecord.maybeQueryRecord)('capabilities', context => {
    if (!context.args.model || context.args.mode === 'create') {
      return;
    }

    const backend = context.isV2 ? context.args.model.engine.id : context.args.model.backend;
    const id = context.args.model.id;
    const path = context.isV2 ? `${backend}/data/${id}` : `${backend}/${id}`;
    return {
      id: path
    };
  }, 'isV2', 'model', 'model.id', 'mode'), _dec2 = (0, _computed.alias)('checkSecretCapabilities.canUpdate'), _dec3 = (0, _computed.alias)('checkSecretCapabilities.canRead'), _dec4 = (0, _maybeQueryRecord.maybeQueryRecord)('capabilities', context => {
    if (!context.args.model || !context.isV2) {
      return;
    }

    const backend = context.args.model.backend;
    const id = context.args.model.id;
    const path = `${backend}/metadata/${id}`;
    return {
      id: path
    };
  }, 'isV2', 'model', 'model.id', 'mode'), _dec5 = (0, _computed.alias)('checkMetadataCapabilities.canDelete'), _dec6 = (0, _computed.alias)('checkMetadataCapabilities.canUpdate'), _dec7 = (0, _computed.alias)('checkMetadataCapabilities.canRead'), _dec8 = (0, _computed.or)('model.isLoading', 'model.isReloading', 'model.isSaving'), _dec9 = (0, _computed.or)('requestInFlight', 'model.isFolder', 'model.flagsIsInvalid'), (_class = class SecretEdit extends _component.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);

      _initializerDefineProperty(this, "secretData", _descriptor2, this);

      _initializerDefineProperty(this, "isV2", _descriptor3, this);

      _initializerDefineProperty(this, "codemirrorString", _descriptor4, this);

      _initializerDefineProperty(this, "checkSecretCapabilities", _descriptor5, this);

      _initializerDefineProperty(this, "canUpdateSecretData", _descriptor6, this);

      _initializerDefineProperty(this, "canReadSecretData", _descriptor7, this);

      _initializerDefineProperty(this, "checkMetadataCapabilities", _descriptor8, this);

      _initializerDefineProperty(this, "canDeleteSecretMetadata", _descriptor9, this);

      _initializerDefineProperty(this, "canUpdateSecretMetadata", _descriptor10, this);

      _initializerDefineProperty(this, "canReadSecretMetadata", _descriptor11, this);

      _initializerDefineProperty(this, "requestInFlight", _descriptor12, this);

      _initializerDefineProperty(this, "buttonDisabled", _descriptor13, this);
    }

    // fired on did-insert from render modifier
    createKvData(elem, _ref) {
      let [model] = _ref;

      if (!model.secretData && model.selectedVersion) {
        this.isV2 = true;
        model.secretData = model.belongsTo('selectedVersion').value().secretData;
      }

      this.secretData = _kvObject.default.create({
        content: []
      }).fromJSON(model.secretData);
      this.codemirrorString = this.secretData.toJSONString();
    }

    get modelForData() {
      const {
        model
      } = this.args;
      if (!model) return null;
      return this.isV2 ? model.belongsTo('selectedVersion').value() : model;
    }

    get basicModeDisabled() {
      return this.secretDataIsAdvanced || this.showAdvancedMode === false;
    }

    get secretDataAsJSON() {
      return this.secretData.toJSON();
    }

    get secretDataIsAdvanced() {
      return this.secretData.isAdvanced();
    }

    get showAdvancedMode() {
      return this.secretDataIsAdvanced || this.args.preferAdvancedEdit;
    }

    get isWriteWithoutRead() {
      if (!this.args.model) {
        return false;
      } // if the version couldn't be read from the server


      if (this.isV2 && this.modelForData.failedServerRead) {
        return true;
      } // if the model couldn't be read from the server


      if (!this.isV2 && this.args.model.failedServerRead) {
        return true;
      }

      return false;
    }

    refresh() {
      this.args.onRefresh();
    }

    toggleAdvanced(bool) {
      this.args.onToggleAdvancedEdit(bool);
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "secretData", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return null;
    }
  }), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, "isV2", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return false;
    }
  }), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, "codemirrorString", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return null;
    }
  }), _applyDecoratedDescriptor(_class.prototype, "createKvData", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "createKvData"), _class.prototype), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, "checkSecretCapabilities", [_dec], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, "canUpdateSecretData", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, "canReadSecretData", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, "checkMetadataCapabilities", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, "canDeleteSecretMetadata", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor10 = _applyDecoratedDescriptor(_class.prototype, "canUpdateSecretMetadata", [_dec6], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor11 = _applyDecoratedDescriptor(_class.prototype, "canReadSecretMetadata", [_dec7], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor12 = _applyDecoratedDescriptor(_class.prototype, "requestInFlight", [_dec8], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor13 = _applyDecoratedDescriptor(_class.prototype, "buttonDisabled", [_dec9], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _applyDecoratedDescriptor(_class.prototype, "refresh", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "refresh"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "toggleAdvanced", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "toggleAdvanced"), _class.prototype)), _class));
  _exports.default = SecretEdit;
});
;define("vault/components/secret-link", ["exports", "@glimmer/component", "@ember/object", "vault/utils/path-encoding-helpers"], function (_exports, _component, _object, _pathEncodingHelpers) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class;

  0; //eaimeta@70e063a35619d71f0,"@glimmer/component",0,"@ember/object",0,"vault/utils/path-encoding-helpers"eaimeta@70e063a35619d71f

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  let SecretLink = (_class = class SecretLink extends _component.default {
    get link() {
      const {
        mode,
        secret
      } = this.args;
      const route = `vault.cluster.secrets.backend.${mode}`;

      if (mode !== 'versions' && !secret || secret === ' ') {
        return {
          route: `${route}-root`,
          models: []
        };
      } else {
        return {
          route,
          models: [(0, _pathEncodingHelpers.encodePath)(secret)]
        };
      }
    }

    get query() {
      const qp = this.args.queryParams || {};
      return qp.isQueryParams ? qp.values : qp;
    }

    onLinkClick() {
      if (this.args.onLinkClick) {
        this.args.onLinkClick(...arguments);
      }
    }

  }, (_applyDecoratedDescriptor(_class.prototype, "onLinkClick", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "onLinkClick"), _class.prototype)), _class);
  _exports.default = SecretLink;
});
;define("vault/components/secret-list-header-tab", ["exports", "core/components/secret-list-header-tab"], function (_exports, _secretListHeaderTab) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _secretListHeaderTab.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/secret-list-header-tab"eaimeta@70e063a35619d71f
});
;define("vault/components/secret-list-header", ["exports", "core/components/secret-list-header"], function (_exports, _secretListHeader) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _secretListHeader.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/secret-list-header"eaimeta@70e063a35619d71f
});
;define("vault/components/secret-list/database-list-item", ["exports", "@glimmer/component", "@glimmer/tracking", "@ember/service", "@ember/object"], function (_exports, _component, _tracking, _service, _object) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2, _descriptor3;

  0; //eaimeta@70e063a35619d71f0,"@glimmer/component",0,"@glimmer/tracking",0,"@ember/service",0,"@ember/object"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let DatabaseListItem = (_class = class DatabaseListItem extends _component.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "roleType", _descriptor, this);

      _initializerDefineProperty(this, "store", _descriptor2, this);

      _initializerDefineProperty(this, "flashMessages", _descriptor3, this);
    }

    get keyTypeValue() {
      const item = this.args.item; // basing this on path in case we want to remove 'type' later

      if (item.path === 'roles') {
        return 'dynamic';
      } else if (item.path === 'static-roles') {
        return 'static';
      } else {
        return '';
      }
    }

    resetConnection(id) {
      const {
        backend
      } = this.args.item;
      const adapter = this.store.adapterFor('database/connection');
      adapter.resetConnection(backend, id).then(() => {
        this.flashMessages.success(`Success: ${id} connection was reset`);
      }).catch(e => {
        this.flashMessages.danger(e.errors);
      });
    }

    rotateRootCred(id) {
      const {
        backend
      } = this.args.item;
      const adapter = this.store.adapterFor('database/connection');
      adapter.rotateRootCredentials(backend, id).then(() => {
        this.flashMessages.success(`Success: ${id} connection was rotated`);
      }).catch(e => {
        this.flashMessages.danger(e.errors);
      });
    }

    rotateRoleCred(id) {
      const {
        backend
      } = this.args.item;
      const adapter = this.store.adapterFor('database/credential');
      adapter.rotateRoleCredentials(backend, id).then(() => {
        this.flashMessages.success(`Success: Credentials for ${id} role were rotated`);
      }).catch(e => {
        this.flashMessages.danger(e.errors);
      });
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "roleType", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return '';
    }
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, "flashMessages", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _applyDecoratedDescriptor(_class.prototype, "resetConnection", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "resetConnection"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "rotateRootCred", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "rotateRootCred"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "rotateRoleCred", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "rotateRoleCred"), _class.prototype)), _class);
  _exports.default = DatabaseListItem;
});
;define("vault/components/secret-version-menu", ["exports", "@glimmer/component", "@ember/object", "@ember/service", "@ember/runloop"], function (_exports, _component, _object, _service, _runloop) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor;

  0; //eaimeta@70e063a35619d71f0,"@glimmer/component",0,"@ember/object",0,"@ember/service",0,"@ember/runloop"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let SecretVersionMenu = (_class = class SecretVersionMenu extends _component.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "router", _descriptor, this);
    }

    onRefresh() {}

    closeDropdown(dropdown) {
      // strange issue where closing dropdown triggers full transition which redirects to auth screen in production builds
      // closing dropdown in next tick of run loop fixes it
      (0, _runloop.next)(() => dropdown.actions.close());
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "router", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _applyDecoratedDescriptor(_class.prototype, "closeDropdown", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "closeDropdown"), _class.prototype)), _class);
  _exports.default = SecretVersionMenu;
});
;define("vault/components/section-tabs", ["exports", "@ember/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/component"eaimeta@70e063a35619d71f

  const SectionTabs = _component.default.extend({
    tagName: '',
    model: null,
    tabType: 'authSettings'
  });

  SectionTabs.reopenClass({
    positionalParams: ['model', 'tabType', 'paths']
  });
  var _default = SectionTabs;
  _exports.default = _default;
});
;define("vault/components/select", ["exports", "core/components/select"], function (_exports, _select) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _select.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/select"eaimeta@70e063a35619d71f
});
;define("vault/components/selectable-card", ["exports", "@glimmer/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@glimmer/component"eaimeta@70e063a35619d71f

  /**
   * @module SelectableCard
   * SelectableCard components are card-like components that display a title, total, subtotal, and anything after the yield.
   * They are designed to be used in containers that act as flexbox or css grid containers.
   *
   * @example
   * ```js
   * <SelectableCard @cardTitle="Tokens" @total={{totalHttpRequests}} @subText="Total"/>
   * ```
   * @param {string} [cardTitle] - cardTitle displays the card title.
   * @param {number} [total = 0] - the number displayed as the largest text in the component.
   * @param {string} [subText] - subText describes the total.
   * @param {string} [actionText] - action text link.
   * @param {string} [actionTo] - route where link will take you.
   * @param {string} [queryParam] - tab for the route the link will take you.
   * @param {string} [type] - type used in the link type.
   */
  class SelectableCard extends _component.default {
    get gridContainer() {
      return this.args.gridContainer || false;
    }

    get total() {
      return this.args.total || 0;
    }

  }

  _exports.default = SelectableCard;
});
;define("vault/components/shamir-flow", ["exports", "core/components/shamir-flow"], function (_exports, _shamirFlow) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _shamirFlow.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/shamir-flow"eaimeta@70e063a35619d71f
});
;define("vault/components/shamir-modal-flow", ["exports", "core/components/shamir-modal-flow"], function (_exports, _shamirModalFlow) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _shamirModalFlow.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/shamir-modal-flow"eaimeta@70e063a35619d71f
});
;define("vault/components/shamir-progress", ["exports", "@ember/component", "@ember/object"], function (_exports, _component, _object) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/component",0,"@ember/object"eaimeta@70e063a35619d71f

  var _default = _component.default.extend({
    threshold: null,
    progress: null,
    classNames: ['shamir-progress'],
    progressDecimal: (0, _object.computed)('threshold', 'progress', function () {
      const {
        threshold,
        progress
      } = this;

      if (threshold && progress) {
        return progress / threshold;
      }

      return 0;
    })
  });

  _exports.default = _default;
});
;define("vault/components/sidebar/frame", ["exports", "@ember/component", "@ember/template-factory", "@glimmer/component", "@ember/service", "@ember/controller"], function (_exports, _component, _templateFactory, _component2, _service, _controller) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _class, _descriptor, _descriptor2, _descriptor3;

  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars",0,"@glimmer/component",0,"@ember/service",0,"@ember/controller"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  const __COLOCATED_TEMPLATE__ = (0, _templateFactory.createTemplateFactory)(
  /*
    <Hds::AppFrame @hasSidebar={{@showSidebar}} @hasHeader={{false}} @hasFooter={{false}} as |Frame|>
    <Frame.Sidebar data-test-sidebar-nav>
      <Hds::SideNav @isResponsive={{true}} @hasA11yRefocus={{true}} @a11yRefocusSkipTo="app-main-content">
        <:header>
          <Hds::SideNav::Header>
            <:logo>
              <Sidebar::Header::HomeLink
                @icon="openbao"
                @route="vault.cluster"
                @model={{this.currentCluster.cluster.name}}
                @ariaLabel="home link"
                data-test-sidebar-logo
              />
            </:logo>
            <:actions>
              <Hds::SideNav::Header::IconButton
                class="sidebar-button"
                @icon="terminal-screen"
                @ariaLabel="Console toggle"
                data-test-console-toggle
                {{on "click" (fn (mut this.console.isOpen) (not this.console.isOpen))}}
              />
              <Sidebar::UserMenu />
            </:actions>
          </Hds::SideNav::Header>
        </:header>
  
        {{! this block is where the Hds::SideNav::Portal components render into }}
        <:body>
          <Hds::SideNav::Portal::Target aria-label="sidebar navigation links" />
        </:body>
      </Hds::SideNav>
    </Frame.Sidebar>
    <Frame.Main id="app-main-content" class={{if this.console.isOpen "main--console-open"}}>
      {{! outlet for app content }}
      <div id="modal-wormhole"></div>
      {{yield}}
      <div data-test-console-panel class={{if this.console.isOpen "panel-open"}}>
        <Console::UiPanel @isFullscreen={{this.consoleFullscreen}} />
      </div>
    </Frame.Main>
  </Hds::AppFrame>
  */
  {
    "id": "T8f+SsQx",
    "block": "[[[8,[39,0],null,[[\"@hasSidebar\",\"@hasHeader\",\"@hasFooter\"],[[30,1],false,false]],[[\"default\"],[[[[1,\"\\n  \"],[8,[30,2,[\"Sidebar\"]],[[24,\"data-test-sidebar-nav\",\"\"]],null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,1],null,[[\"@isResponsive\",\"@hasA11yRefocus\",\"@a11yRefocusSkipTo\"],[true,true,\"app-main-content\"]],[[\"header\",\"body\"],[[[[1,\"\\n        \"],[8,[39,2],null,null,[[\"logo\",\"actions\"],[[[[1,\"\\n            \"],[8,[39,3],[[24,\"data-test-sidebar-logo\",\"\"]],[[\"@icon\",\"@route\",\"@model\",\"@ariaLabel\"],[\"openbao\",\"vault.cluster\",[30,0,[\"currentCluster\",\"cluster\",\"name\"]],\"home link\"]],null],[1,\"\\n          \"]],[]],[[[1,\"\\n            \"],[8,[39,4],[[24,0,\"sidebar-button\"],[24,\"data-test-console-toggle\",\"\"],[4,[38,5],[\"click\",[28,[37,6],[[28,[37,7],[[30,0,[\"console\",\"isOpen\"]]],null],[28,[37,8],[[30,0,[\"console\",\"isOpen\"]]],null]],null]],null]],[[\"@icon\",\"@ariaLabel\"],[\"terminal-screen\",\"Console toggle\"]],null],[1,\"\\n            \"],[8,[39,9],null,null,null],[1,\"\\n          \"]],[]]]]],[1,\"\\n      \"]],[]],[[[1,\"\\n        \"],[8,[39,10],[[24,\"aria-label\",\"sidebar navigation links\"]],null,null],[1,\"\\n      \"]],[]]]]],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[30,2,[\"Main\"]],[[24,1,\"app-main-content\"],[16,0,[52,[30,0,[\"console\",\"isOpen\"]],\"main--console-open\"]]],null,[[\"default\"],[[[[1,\"\\n\"],[1,\"    \"],[10,0],[14,1,\"modal-wormhole\"],[12],[13],[1,\"\\n    \"],[18,3,null],[1,\"\\n    \"],[10,0],[14,\"data-test-console-panel\",\"\"],[15,0,[52,[30,0,[\"console\",\"isOpen\"]],\"panel-open\"]],[12],[1,\"\\n      \"],[8,[39,13],null,[[\"@isFullscreen\"],[[30,0,[\"consoleFullscreen\"]]]],null],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[2]]]]]],[\"@showSidebar\",\"Frame\",\"&default\"],false,[\"hds/app-frame\",\"hds/side-nav\",\"hds/side-nav/header\",\"sidebar/header/home-link\",\"hds/side-nav/header/icon-button\",\"on\",\"fn\",\"mut\",\"not\",\"sidebar/user-menu\",\"hds/side-nav/portal/target\",\"if\",\"yield\",\"console/ui-panel\"]]",
    "moduleName": "vault/components/sidebar/frame.hbs",
    "isStrictMode": false
  });

  let SidebarNavComponent = (_dec = (0, _controller.inject)('vault.cluster'), (_class = class SidebarNavComponent extends _component2.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "currentCluster", _descriptor, this);

      _initializerDefineProperty(this, "console", _descriptor2, this);

      _initializerDefineProperty(this, "clusterController", _descriptor3, this);
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "currentCluster", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "console", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, "clusterController", [_dec], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class));
  _exports.default = SidebarNavComponent;
  (0, _component.setComponentTemplate)(__COLOCATED_TEMPLATE__, SidebarNavComponent);
});
;define("vault/components/sidebar/header/home-link", ["exports", "@ember/component", "@ember/template-factory", "@glimmer/component", "@ember/debug"], function (_exports, _component, _templateFactory, _component2, _debug) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars",0,"@glimmer/component",0,"@ember/debug"eaimeta@70e063a35619d71f

  const __COLOCATED_TEMPLATE__ = (0, _templateFactory.createTemplateFactory)(
  /*
    <Hds::Interactive
    class="hds-side-nav__home-link"
    @current-when={{@current-when}}
    @models={{hds-link-to-models @model @models}}
    @query={{hds-link-to-query @query}}
    @replace={{@replace}}
    @route={{@route}}
    @isRouteExternal={{@isRouteExternal}}
    @href={{@href}}
    @isHrefExternal={{@isHrefExternal}}
    ...attributes
    aria-label={{this.ariaLabel}}
  >
    <Icon @name={{@icon}} @color={{@color}} @stretched={{true}} />
  </Hds::Interactive>
  */
  {
    "id": "87zf5om0",
    "block": "[[[8,[39,0],[[24,0,\"hds-side-nav__home-link\"],[17,1],[16,\"aria-label\",[30,0,[\"ariaLabel\"]]]],[[\"@current-when\",\"@models\",\"@query\",\"@replace\",\"@route\",\"@isRouteExternal\",\"@href\",\"@isHrefExternal\"],[[30,2],[28,[37,1],[[30,3],[30,4]],null],[28,[37,2],[[30,5]],null],[30,6],[30,7],[30,8],[30,9],[30,10]]],[[\"default\"],[[[[1,\"\\n  \"],[8,[39,3],null,[[\"@name\",\"@color\",\"@stretched\"],[[30,11],[30,12],true]],null],[1,\"\\n\"]],[]]]]]],[\"&attrs\",\"@current-when\",\"@model\",\"@models\",\"@query\",\"@replace\",\"@route\",\"@isRouteExternal\",\"@href\",\"@isHrefExternal\",\"@icon\",\"@color\"],false,[\"hds/interactive\",\"hds-link-to-models\",\"hds-link-to-query\",\"icon\"]]",
    "moduleName": "vault/components/sidebar/header/home-link.hbs",
    "isStrictMode": false
  });
  /**
   * Copyright (c) HashiCorp, Inc.
   * SPDX-License-Identifier: MPL-2.0
   */


  class SidebarHeaderHomeLinkComponent extends _component2.default {
    /**
     * @param ariaLabel
     * @type {string}
     * @description The value of `aria-label`
     */
    get ariaLabel() {
      const {
        ariaLabel
      } = this.args;
      (true && !(ariaLabel !== undefined) && (0, _debug.assert)('@ariaLabel for "Sidebar::Header::HomeLink" ("Logo") must have a valid value', ariaLabel !== undefined));
      return ariaLabel;
    }

  }

  _exports.default = SidebarHeaderHomeLinkComponent;
  (0, _component.setComponentTemplate)(__COLOCATED_TEMPLATE__, SidebarHeaderHomeLinkComponent);
});
;define("vault/components/sidebar/nav/access", ["exports", "@ember/component", "@ember/template-factory", "@ember/component/template-only"], function (_exports, _component, _templateFactory, _templateOnly) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars",0,"@ember/component/template-only"eaimeta@70e063a35619d71f

  const __COLOCATED_TEMPLATE__ = (0, _templateFactory.createTemplateFactory)(
  /*
    <Hds::SideNav::Portal @ariaLabel="Access Navigation Links" data-test-sidebar-nav-panel="Access" as |Nav|>
    <Nav.BackLink
      @route="vault.cluster"
      @current-when={{false}}
      @icon="arrow-left"
      @text="Back to main navigation"
      data-test-sidebar-nav-link="Back to main navigation"
    />
  
    {{#if (has-permission "access" routeParams=(array "methods" "mfa" "oidc"))}}
      <Nav.Title data-test-sidebar-nav-heading="Authentication">Authentication</Nav.Title>
    {{/if}}
    {{#if (has-permission "access" routeParams="methods")}}
      <Nav.Link
        @route="vault.cluster.access.methods"
        @current-when="vault.cluster.access.methods vault.cluster.access.method"
        @text="Authentication methods"
        data-test-sidebar-nav-link="Authentication methods"
      />
    {{/if}}
    {{#if (has-permission "access" routeParams="mfa")}}
      <Nav.Link
        @route="vault.cluster.access.mfa.methods"
        @current-when="vault.cluster.access.mfa.methods vault.cluster.access.mfa.enforcements vault.cluster.access.mfa.index"
        @text="Multi-factor authentication"
        data-test-sidebar-nav-link="Multi-factor authentication"
      />
    {{/if}}
    {{#if (has-permission "access" routeParams="oidc")}}
      <Nav.Link @route="vault.cluster.access.oidc" @text="OIDC provider" data-test-sidebar-nav-link="OIDC provider" />
    {{/if}}
  
    {{#if (has-permission "access" routeParams=(array "namespaces" "groups" "entities"))}}
      <Nav.Title data-test-sidebar-nav-heading="Organization">Organization</Nav.Title>
    {{/if}}
    {{#if (has-permission "access" routeParams="groups")}}
      <Nav.Link @route="vault.cluster.access.identity" @model="groups" @text="Groups" data-test-sidebar-nav-link="Groups" />
    {{/if}}
    {{#if (has-permission "access" routeParams="entities")}}
      <Nav.Link
        @route="vault.cluster.access.identity"
        @model="entities"
        @text="Entities"
        data-test-sidebar-nav-link="Entities"
      />
    {{/if}}
  
    {{#if (has-permission "access" routeParams="leases")}}
      <Nav.Title data-test-sidebar-nav-heading="Administration">Administration</Nav.Title>
      <Nav.Link @route="vault.cluster.access.leases" @text="Leases" data-test-sidebar-nav-link="Leases" />
    {{/if}}
  </Hds::SideNav::Portal>
  */
  {
    "id": "zj9eu/kV",
    "block": "[[[8,[39,0],[[24,\"data-test-sidebar-nav-panel\",\"Access\"]],[[\"@ariaLabel\"],[\"Access Navigation Links\"]],[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"BackLink\"]],[[24,\"data-test-sidebar-nav-link\",\"Back to main navigation\"]],[[\"@route\",\"@current-when\",\"@icon\",\"@text\"],[\"vault.cluster\",false,\"arrow-left\",\"Back to main navigation\"]],null],[1,\"\\n\\n\"],[41,[28,[37,2],[\"access\"],[[\"routeParams\"],[[28,[37,3],[\"methods\",\"mfa\",\"oidc\"],null]]]],[[[1,\"    \"],[8,[30,1,[\"Title\"]],[[24,\"data-test-sidebar-nav-heading\",\"Authentication\"]],null,[[\"default\"],[[[[1,\"Authentication\"]],[]]]]],[1,\"\\n\"]],[]],null],[41,[28,[37,2],[\"access\"],[[\"routeParams\"],[\"methods\"]]],[[[1,\"    \"],[8,[30,1,[\"Link\"]],[[24,\"data-test-sidebar-nav-link\",\"Authentication methods\"]],[[\"@route\",\"@current-when\",\"@text\"],[\"vault.cluster.access.methods\",\"vault.cluster.access.methods vault.cluster.access.method\",\"Authentication methods\"]],null],[1,\"\\n\"]],[]],null],[41,[28,[37,2],[\"access\"],[[\"routeParams\"],[\"mfa\"]]],[[[1,\"    \"],[8,[30,1,[\"Link\"]],[[24,\"data-test-sidebar-nav-link\",\"Multi-factor authentication\"]],[[\"@route\",\"@current-when\",\"@text\"],[\"vault.cluster.access.mfa.methods\",\"vault.cluster.access.mfa.methods vault.cluster.access.mfa.enforcements vault.cluster.access.mfa.index\",\"Multi-factor authentication\"]],null],[1,\"\\n\"]],[]],null],[41,[28,[37,2],[\"access\"],[[\"routeParams\"],[\"oidc\"]]],[[[1,\"    \"],[8,[30,1,[\"Link\"]],[[24,\"data-test-sidebar-nav-link\",\"OIDC provider\"]],[[\"@route\",\"@text\"],[\"vault.cluster.access.oidc\",\"OIDC provider\"]],null],[1,\"\\n\"]],[]],null],[1,\"\\n\"],[41,[28,[37,2],[\"access\"],[[\"routeParams\"],[[28,[37,3],[\"namespaces\",\"groups\",\"entities\"],null]]]],[[[1,\"    \"],[8,[30,1,[\"Title\"]],[[24,\"data-test-sidebar-nav-heading\",\"Organization\"]],null,[[\"default\"],[[[[1,\"Organization\"]],[]]]]],[1,\"\\n\"]],[]],null],[41,[28,[37,2],[\"access\"],[[\"routeParams\"],[\"groups\"]]],[[[1,\"    \"],[8,[30,1,[\"Link\"]],[[24,\"data-test-sidebar-nav-link\",\"Groups\"]],[[\"@route\",\"@model\",\"@text\"],[\"vault.cluster.access.identity\",\"groups\",\"Groups\"]],null],[1,\"\\n\"]],[]],null],[41,[28,[37,2],[\"access\"],[[\"routeParams\"],[\"entities\"]]],[[[1,\"    \"],[8,[30,1,[\"Link\"]],[[24,\"data-test-sidebar-nav-link\",\"Entities\"]],[[\"@route\",\"@model\",\"@text\"],[\"vault.cluster.access.identity\",\"entities\",\"Entities\"]],null],[1,\"\\n\"]],[]],null],[1,\"\\n\"],[41,[28,[37,2],[\"access\"],[[\"routeParams\"],[\"leases\"]]],[[[1,\"    \"],[8,[30,1,[\"Title\"]],[[24,\"data-test-sidebar-nav-heading\",\"Administration\"]],null,[[\"default\"],[[[[1,\"Administration\"]],[]]]]],[1,\"\\n    \"],[8,[30,1,[\"Link\"]],[[24,\"data-test-sidebar-nav-link\",\"Leases\"]],[[\"@route\",\"@text\"],[\"vault.cluster.access.leases\",\"Leases\"]],null],[1,\"\\n\"]],[]],null]],[1]]]]]],[\"Nav\"],false,[\"hds/side-nav/portal\",\"if\",\"has-permission\",\"array\"]]",
    "moduleName": "vault/components/sidebar/nav/access.hbs",
    "isStrictMode": false
  });

  var _default = (0, _component.setComponentTemplate)(__COLOCATED_TEMPLATE__, (0, _templateOnly.default)());

  _exports.default = _default;
});
;define("vault/components/sidebar/nav/cluster", ["exports", "@ember/component", "@ember/template-factory", "@glimmer/component", "@ember/service"], function (_exports, _component, _templateFactory, _component2, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2, _descriptor3, _descriptor4;

  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars",0,"@glimmer/component",0,"@ember/service"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  const __COLOCATED_TEMPLATE__ = (0, _templateFactory.createTemplateFactory)(
  /*
    <Hds::SideNav::Portal @ariaLabel="Cluster Navigation Links" data-test-sidebar-nav-panel="Cluster" as |Nav|>
    <Nav.Title data-test-sidebar-nav-heading="OpenBao">OpenBao</Nav.Title>
  
    <Nav.Link
      @route="vault.cluster.secrets"
      @current-when="vault.cluster.secrets vault.cluster.settings.mount-secret-backend vault.cluster.settings.configure-secret-backend"
      @text="Secrets engines"
      data-test-sidebar-nav-link="Secrets engines"
    />
    {{#if (has-permission "access")}}
      <Nav.Link
        @route={{get (route-params-for "access") "route"}}
        @models={{get (route-params-for "access") "models"}}
        @current-when="vault.cluster.access vault.cluster.settings.auth"
        @text="Access"
        @hasSubItems={{true}}
        data-test-sidebar-nav-link="Access"
      />
    {{/if}}
    {{#if (has-permission "policies")}}
      <Nav.Link
        @route="vault.cluster.policies"
        @models={{get (route-params-for "policies") "models"}}
        @text="Policies"
        @hasSubItems={{true}}
        data-test-sidebar-nav-link="Policies"
      />
    {{/if}}
    {{#if (has-permission "tools")}}
      <Nav.Link
        @route="vault.cluster.tools.tool"
        @models={{get (route-params-for "tools") "models"}}
        @text="Tools"
        @hasSubItems={{true}}
        data-test-sidebar-nav-link="Tools"
      />
    {{/if}}
  
    {{#if (and this.namespace.inRootNamespace (has-permission "status" routeParams=(array "raft" "license" "seal")))}}
      <Nav.Title data-test-sidebar-nav-heading="Monitoring">Monitoring</Nav.Title>
    {{/if}}
    {{#if (and this.cluster.usingRaft this.namespace.inRootNamespace (has-permission "status" routeParams="raft"))}}
      <Nav.Link
        @route="vault.cluster.storage"
        @model={{this.cluster.name}}
        @text="Raft Storage"
        data-test-sidebar-nav-link="Raft Storage"
      />
    {{/if}}
    {{#if (and this.namespace.inRootNamespace (has-permission "status" routeParams="seal"))}}
      <Nav.Link
        @route="vault.cluster.settings.seal"
        @model={{this.cluster.name}}
        @text="Seal OpenBao"
        data-test-sidebar-nav-link="Seal OpenBao"
      />
    {{/if}}
  </Hds::SideNav::Portal>
  */
  {
    "id": "jMPxiyn7",
    "block": "[[[8,[39,0],[[24,\"data-test-sidebar-nav-panel\",\"Cluster\"]],[[\"@ariaLabel\"],[\"Cluster Navigation Links\"]],[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"Title\"]],[[24,\"data-test-sidebar-nav-heading\",\"OpenBao\"]],null,[[\"default\"],[[[[1,\"OpenBao\"]],[]]]]],[1,\"\\n\\n  \"],[8,[30,1,[\"Link\"]],[[24,\"data-test-sidebar-nav-link\",\"Secrets engines\"]],[[\"@route\",\"@current-when\",\"@text\"],[\"vault.cluster.secrets\",\"vault.cluster.secrets vault.cluster.settings.mount-secret-backend vault.cluster.settings.configure-secret-backend\",\"Secrets engines\"]],null],[1,\"\\n\"],[41,[28,[37,2],[\"access\"],null],[[[1,\"    \"],[8,[30,1,[\"Link\"]],[[24,\"data-test-sidebar-nav-link\",\"Access\"]],[[\"@route\",\"@models\",\"@current-when\",\"@text\",\"@hasSubItems\"],[[28,[37,3],[[28,[37,4],[\"access\"],null],\"route\"],null],[28,[37,3],[[28,[37,4],[\"access\"],null],\"models\"],null],\"vault.cluster.access vault.cluster.settings.auth\",\"Access\",true]],null],[1,\"\\n\"]],[]],null],[41,[28,[37,2],[\"policies\"],null],[[[1,\"    \"],[8,[30,1,[\"Link\"]],[[24,\"data-test-sidebar-nav-link\",\"Policies\"]],[[\"@route\",\"@models\",\"@text\",\"@hasSubItems\"],[\"vault.cluster.policies\",[28,[37,3],[[28,[37,4],[\"policies\"],null],\"models\"],null],\"Policies\",true]],null],[1,\"\\n\"]],[]],null],[41,[28,[37,2],[\"tools\"],null],[[[1,\"    \"],[8,[30,1,[\"Link\"]],[[24,\"data-test-sidebar-nav-link\",\"Tools\"]],[[\"@route\",\"@models\",\"@text\",\"@hasSubItems\"],[\"vault.cluster.tools.tool\",[28,[37,3],[[28,[37,4],[\"tools\"],null],\"models\"],null],\"Tools\",true]],null],[1,\"\\n\"]],[]],null],[1,\"\\n\"],[41,[28,[37,5],[[30,0,[\"namespace\",\"inRootNamespace\"]],[28,[37,2],[\"status\"],[[\"routeParams\"],[[28,[37,6],[\"raft\",\"license\",\"seal\"],null]]]]],null],[[[1,\"    \"],[8,[30,1,[\"Title\"]],[[24,\"data-test-sidebar-nav-heading\",\"Monitoring\"]],null,[[\"default\"],[[[[1,\"Monitoring\"]],[]]]]],[1,\"\\n\"]],[]],null],[41,[28,[37,5],[[30,0,[\"cluster\",\"usingRaft\"]],[30,0,[\"namespace\",\"inRootNamespace\"]],[28,[37,2],[\"status\"],[[\"routeParams\"],[\"raft\"]]]],null],[[[1,\"    \"],[8,[30,1,[\"Link\"]],[[24,\"data-test-sidebar-nav-link\",\"Raft Storage\"]],[[\"@route\",\"@model\",\"@text\"],[\"vault.cluster.storage\",[30,0,[\"cluster\",\"name\"]],\"Raft Storage\"]],null],[1,\"\\n\"]],[]],null],[41,[28,[37,5],[[30,0,[\"namespace\",\"inRootNamespace\"]],[28,[37,2],[\"status\"],[[\"routeParams\"],[\"seal\"]]]],null],[[[1,\"    \"],[8,[30,1,[\"Link\"]],[[24,\"data-test-sidebar-nav-link\",\"Seal OpenBao\"]],[[\"@route\",\"@model\",\"@text\"],[\"vault.cluster.settings.seal\",[30,0,[\"cluster\",\"name\"]],\"Seal OpenBao\"]],null],[1,\"\\n\"]],[]],null]],[1]]]]]],[\"Nav\"],false,[\"hds/side-nav/portal\",\"if\",\"has-permission\",\"get\",\"route-params-for\",\"and\",\"array\"]]",
    "moduleName": "vault/components/sidebar/nav/cluster.hbs",
    "isStrictMode": false
  });

  let SidebarNavClusterComponent = (_class = class SidebarNavClusterComponent extends _component2.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "currentCluster", _descriptor, this);

      _initializerDefineProperty(this, "version", _descriptor2, this);

      _initializerDefineProperty(this, "auth", _descriptor3, this);

      _initializerDefineProperty(this, "namespace", _descriptor4, this);
    }

    get cluster() {
      return this.currentCluster.cluster;
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "currentCluster", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "version", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, "auth", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, "namespace", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class);
  _exports.default = SidebarNavClusterComponent;
  (0, _component.setComponentTemplate)(__COLOCATED_TEMPLATE__, SidebarNavClusterComponent);
});
;define("vault/components/sidebar/nav/policies", ["exports", "@ember/component", "@ember/template-factory", "@ember/component/template-only"], function (_exports, _component, _templateFactory, _templateOnly) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars",0,"@ember/component/template-only"eaimeta@70e063a35619d71f

  const __COLOCATED_TEMPLATE__ = (0, _templateFactory.createTemplateFactory)(
  /*
    <Hds::SideNav::Portal @ariaLabel="Policies Navigation Links" data-test-sidebar-nav-panel="Policies" as |Nav|>
    <Nav.BackLink
      @route="vault.cluster"
      @current-when={{false}}
      @icon="arrow-left"
      @text="Back to main navigation"
      data-test-sidebar-nav-link="Back to main navigation"
    />
  
    <Nav.Title data-test-sidebar-nav-heading="Policies">Policies</Nav.Title>
  
    {{#if (has-permission "policies" routeParams="acl")}}
      <Nav.Link
        @route="vault.cluster.policies"
        @model="acl"
        @current-when="vault.cluster.policies vault.cluster.policy"
        @text="ACL Policies"
        data-test-sidebar-nav-link="ACL Policies"
      />
    {{/if}}
  </Hds::SideNav::Portal>
  */
  {
    "id": "6UMPu7V/",
    "block": "[[[8,[39,0],[[24,\"data-test-sidebar-nav-panel\",\"Policies\"]],[[\"@ariaLabel\"],[\"Policies Navigation Links\"]],[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"BackLink\"]],[[24,\"data-test-sidebar-nav-link\",\"Back to main navigation\"]],[[\"@route\",\"@current-when\",\"@icon\",\"@text\"],[\"vault.cluster\",false,\"arrow-left\",\"Back to main navigation\"]],null],[1,\"\\n\\n  \"],[8,[30,1,[\"Title\"]],[[24,\"data-test-sidebar-nav-heading\",\"Policies\"]],null,[[\"default\"],[[[[1,\"Policies\"]],[]]]]],[1,\"\\n\\n\"],[41,[28,[37,2],[\"policies\"],[[\"routeParams\"],[\"acl\"]]],[[[1,\"    \"],[8,[30,1,[\"Link\"]],[[24,\"data-test-sidebar-nav-link\",\"ACL Policies\"]],[[\"@route\",\"@model\",\"@current-when\",\"@text\"],[\"vault.cluster.policies\",\"acl\",\"vault.cluster.policies vault.cluster.policy\",\"ACL Policies\"]],null],[1,\"\\n\"]],[]],null]],[1]]]]]],[\"Nav\"],false,[\"hds/side-nav/portal\",\"if\",\"has-permission\"]]",
    "moduleName": "vault/components/sidebar/nav/policies.hbs",
    "isStrictMode": false
  });

  var _default = (0, _component.setComponentTemplate)(__COLOCATED_TEMPLATE__, (0, _templateOnly.default)());

  _exports.default = _default;
});
;define("vault/components/sidebar/nav/tools", ["exports", "@ember/component", "@ember/template-factory", "@ember/component/template-only"], function (_exports, _component, _templateFactory, _templateOnly) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars",0,"@ember/component/template-only"eaimeta@70e063a35619d71f

  const __COLOCATED_TEMPLATE__ = (0, _templateFactory.createTemplateFactory)(
  /*
    <Hds::SideNav::Portal @ariaLabel="Tools Navigation Links" data-test-sidebar-nav-panel="Tools" as |Nav|>
    <Nav.BackLink
      @route="vault.cluster"
      @current-when={{false}}
      @icon="arrow-left"
      @text="Back to main navigation"
      data-test-sidebar-nav-link="Back to main navigation"
    />
  
    <Nav.Title data-test-sidebar-nav-heading="Tools">Tools</Nav.Title>
  
    {{#each (tools-actions) as |supportedAction|}}
      {{#if (has-permission "tools" routeParams=supportedAction)}}
        <Nav.Link
          @route="vault.cluster.tools.tool"
          @model={{supportedAction}}
          @text={{capitalize supportedAction}}
          data-test-sidebar-nav-link={{capitalize supportedAction}}
        />
      {{/if}}
    {{/each}}
  </Hds::SideNav::Portal>
  */
  {
    "id": "BMG1vRLt",
    "block": "[[[8,[39,0],[[24,\"data-test-sidebar-nav-panel\",\"Tools\"]],[[\"@ariaLabel\"],[\"Tools Navigation Links\"]],[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"BackLink\"]],[[24,\"data-test-sidebar-nav-link\",\"Back to main navigation\"]],[[\"@route\",\"@current-when\",\"@icon\",\"@text\"],[\"vault.cluster\",false,\"arrow-left\",\"Back to main navigation\"]],null],[1,\"\\n\\n  \"],[8,[30,1,[\"Title\"]],[[24,\"data-test-sidebar-nav-heading\",\"Tools\"]],null,[[\"default\"],[[[[1,\"Tools\"]],[]]]]],[1,\"\\n\\n\"],[42,[28,[37,2],[[28,[37,2],[[28,[37,3],null,null]],null]],null],null,[[[41,[28,[37,5],[\"tools\"],[[\"routeParams\"],[[30,2]]]],[[[1,\"      \"],[8,[30,1,[\"Link\"]],[[16,\"data-test-sidebar-nav-link\",[28,[37,6],[[30,2]],null]]],[[\"@route\",\"@model\",\"@text\"],[\"vault.cluster.tools.tool\",[30,2],[28,[37,6],[[30,2]],null]]],null],[1,\"\\n\"]],[]],null]],[2]],null]],[1]]]]]],[\"Nav\",\"supportedAction\"],false,[\"hds/side-nav/portal\",\"each\",\"-track-array\",\"tools-actions\",\"if\",\"has-permission\",\"capitalize\"]]",
    "moduleName": "vault/components/sidebar/nav/tools.hbs",
    "isStrictMode": false
  });

  var _default = (0, _component.setComponentTemplate)(__COLOCATED_TEMPLATE__, (0, _templateOnly.default)());

  _exports.default = _default;
});
;define("vault/components/sidebar/user-menu", ["exports", "@ember/component", "@ember/template-factory", "@glimmer/component", "@ember/service", "@ember/runloop", "@ember/object", "@glimmer/tracking"], function (_exports, _component, _templateFactory, _component2, _service, _runloop, _object, _tracking) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2, _descriptor3, _descriptor4;

  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars",0,"@glimmer/component",0,"@ember/service",0,"@ember/runloop",0,"@ember/object",0,"@glimmer/tracking"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  const __COLOCATED_TEMPLATE__ = (0, _templateFactory.createTemplateFactory)(
  /*
    <BasicDropdown
    @horizontalPosition="right"
    @verticalPosition="below"
    @renderInPlace={{true}}
    class="sidebar-user-menu"
    data-test-user-menu
    as |Dropdown|
  >
    <Dropdown.Trigger data-test-user-menu-trigger>
      <Hds::SideNav::Header::IconButton @icon="user" @ariaLabel="User menu" class="sidebar-button" />
    </Dropdown.Trigger>
    <Dropdown.Content>
      <Confirm as |c|>
        <div class="popup-menu-content" data-test-user-menu-content>
          <div class="box">
            <div class="menu-label">
              {{capitalize this.auth.authData.displayName}}
            </div>
            <nav class="menu">
              <ul class="menu-list">
                {{#if this.auth.allowExpiration}}
                  <li class="token-alert is-flex" data-test-user-menu-item="token alert">
                    <span><Icon @name="alert-triangle-fill" class="has-text-highlight" /></span>
                    <span class="is-size-8 has-text-semibold">
                      We've stopped auto-renewing your token due to inactivity. It will expire on
                      {{date-format this.auth.tokenExpirationDate "MMMM do yyyy, h:mm:ss a"}}.
                    </span>
                  </li>
                {{/if}}
                {{#if this.hasEntityId}}
                  <li class="action">
                    <LinkTo @route="vault.cluster.mfa-setup" data-test-user-menu-item="mfa">
                      Multi-factor authentication
                    </LinkTo>
                  </li>
                {{/if}}
                <li class="action" id="container">
                  <CopyButton
                    @clipboardText={{this.auth.currentToken}}
                    class="link"
                    @buttonType="button"
                    @success={{action (set-flash-message "Token copied!")}}
                    @container="#container"
                  >
                    Copy token
                  </CopyButton>
                </li>
                {{#if (is-before (now interval=1000) this.auth.tokenExpirationDate)}}
                  {{#if this.auth.authData.renewable}}
                    <li class="action">
                      <button
                        type="button"
                        {{on "click" this.renewToken}}
                        class="link button {{if this.isRenewing 'is-loading'}}"
                        data-test-user-menu-item="renew token"
                      >
                        Renew token
                      </button>
                    </li>
                  {{/if}}
                  <li class="action">
                    <c.Message
                      @id={{get this.auth "authData.displayName"}}
                      @title={{concat "Revoke " (get this.auth "authData.displayName") "?"}}
                      @onConfirm={{action "revokeToken"}}
                      @message="You will not be able to log in again with this token."
                      @triggerText="Revoke token"
                      @confirmButtonText="Revoke"
                      data-test-user-menu-item="revoke token"
                    />
                  </li>
                {{/if}}
                <li class="action">
                  <LinkTo @route="vault.cluster.logout" @model={{this.currentCluster.cluster.name}} id="logout">
                    Log out
                  </LinkTo>
                </li>
              </ul>
            </nav>
          </div>
        </div>
      </Confirm>
    </Dropdown.Content>
  </BasicDropdown>
  */
  {
    "id": "yrbAoIbc",
    "block": "[[[8,[39,0],[[24,0,\"sidebar-user-menu\"],[24,\"data-test-user-menu\",\"\"]],[[\"@horizontalPosition\",\"@verticalPosition\",\"@renderInPlace\"],[\"right\",\"below\",true]],[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"Trigger\"]],[[24,\"data-test-user-menu-trigger\",\"\"]],null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,1],[[24,0,\"sidebar-button\"]],[[\"@icon\",\"@ariaLabel\"],[\"user\",\"User menu\"]],null],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[30,1,[\"Content\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,2],null,null,[[\"default\"],[[[[1,\"\\n      \"],[10,0],[14,0,\"popup-menu-content\"],[14,\"data-test-user-menu-content\",\"\"],[12],[1,\"\\n        \"],[10,0],[14,0,\"box\"],[12],[1,\"\\n          \"],[10,0],[14,0,\"menu-label\"],[12],[1,\"\\n            \"],[1,[28,[35,3],[[30,0,[\"auth\",\"authData\",\"displayName\"]]],null]],[1,\"\\n          \"],[13],[1,\"\\n          \"],[10,\"nav\"],[14,0,\"menu\"],[12],[1,\"\\n            \"],[10,\"ul\"],[14,0,\"menu-list\"],[12],[1,\"\\n\"],[41,[30,0,[\"auth\",\"allowExpiration\"]],[[[1,\"                \"],[10,\"li\"],[14,0,\"token-alert is-flex\"],[14,\"data-test-user-menu-item\",\"token alert\"],[12],[1,\"\\n                  \"],[10,1],[12],[8,[39,5],[[24,0,\"has-text-highlight\"]],[[\"@name\"],[\"alert-triangle-fill\"]],null],[13],[1,\"\\n                  \"],[10,1],[14,0,\"is-size-8 has-text-semibold\"],[12],[1,\"\\n                    We've stopped auto-renewing your token due to inactivity. It will expire on\\n                    \"],[1,[28,[35,6],[[30,0,[\"auth\",\"tokenExpirationDate\"]],\"MMMM do yyyy, h:mm:ss a\"],null]],[1,\".\\n                  \"],[13],[1,\"\\n                \"],[13],[1,\"\\n\"]],[]],null],[41,[30,0,[\"hasEntityId\"]],[[[1,\"                \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                  \"],[8,[39,7],[[24,\"data-test-user-menu-item\",\"mfa\"]],[[\"@route\"],[\"vault.cluster.mfa-setup\"]],[[\"default\"],[[[[1,\"\\n                    Multi-factor authentication\\n                  \"]],[]]]]],[1,\"\\n                \"],[13],[1,\"\\n\"]],[]],null],[1,\"              \"],[10,\"li\"],[14,0,\"action\"],[14,1,\"container\"],[12],[1,\"\\n                \"],[8,[39,8],[[24,0,\"link\"]],[[\"@clipboardText\",\"@buttonType\",\"@success\",\"@container\"],[[30,0,[\"auth\",\"currentToken\"]],\"button\",[28,[37,9],[[30,0],[28,[37,10],[\"Token copied!\"],null]],null],\"#container\"]],[[\"default\"],[[[[1,\"\\n                  Copy token\\n                \"]],[]]]]],[1,\"\\n              \"],[13],[1,\"\\n\"],[41,[28,[37,11],[[28,[37,12],null,[[\"interval\"],[1000]]],[30,0,[\"auth\",\"tokenExpirationDate\"]]],null],[[[41,[30,0,[\"auth\",\"authData\",\"renewable\"]],[[[1,\"                  \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                    \"],[11,\"button\"],[16,0,[29,[\"link button \",[52,[30,0,[\"isRenewing\"]],\"is-loading\"]]]],[24,\"data-test-user-menu-item\",\"renew token\"],[24,4,\"button\"],[4,[38,13],[\"click\",[30,0,[\"renewToken\"]]],null],[12],[1,\"\\n                      Renew token\\n                    \"],[13],[1,\"\\n                  \"],[13],[1,\"\\n\"]],[]],null],[1,\"                \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                  \"],[8,[30,2,[\"Message\"]],[[24,\"data-test-user-menu-item\",\"revoke token\"]],[[\"@id\",\"@title\",\"@onConfirm\",\"@message\",\"@triggerText\",\"@confirmButtonText\"],[[28,[37,14],[[30,0,[\"auth\"]],\"authData.displayName\"],null],[28,[37,15],[\"Revoke \",[28,[37,14],[[30,0,[\"auth\"]],\"authData.displayName\"],null],\"?\"],null],[28,[37,9],[[30,0],\"revokeToken\"],null],\"You will not be able to log in again with this token.\",\"Revoke token\",\"Revoke\"]],null],[1,\"\\n                \"],[13],[1,\"\\n\"]],[]],null],[1,\"              \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                \"],[8,[39,7],[[24,1,\"logout\"]],[[\"@route\",\"@model\"],[\"vault.cluster.logout\",[30,0,[\"currentCluster\",\"cluster\",\"name\"]]]],[[\"default\"],[[[[1,\"\\n                  Log out\\n                \"]],[]]]]],[1,\"\\n              \"],[13],[1,\"\\n            \"],[13],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"]],[2]]]]],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]]],[\"Dropdown\",\"c\"],false,[\"basic-dropdown\",\"hds/side-nav/header/icon-button\",\"confirm\",\"capitalize\",\"if\",\"icon\",\"date-format\",\"link-to\",\"copy-button\",\"action\",\"set-flash-message\",\"is-before\",\"now\",\"on\",\"get\",\"concat\"]]",
    "moduleName": "vault/components/sidebar/user-menu.hbs",
    "isStrictMode": false
  });

  let SidebarUserMenuComponent = (_class = class SidebarUserMenuComponent extends _component2.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "auth", _descriptor, this);

      _initializerDefineProperty(this, "currentCluster", _descriptor2, this);

      _initializerDefineProperty(this, "router", _descriptor3, this);

      _initializerDefineProperty(this, "fakeRenew", _descriptor4, this);
    }

    get hasEntityId() {
      // root users will not have an entity_id because they are not associated with an entity.
      // in order to use the MFA end user setup they need an entity_id
      return !!this.auth.authData?.entity_id;
    }

    get isRenewing() {
      return this.fakeRenew || this.auth.isRenewing;
    }

    transitionToRoute() {
      this.router.transitionTo(...arguments);
    }

    renewToken() {
      this.fakeRenew = true;
      (0, _runloop.later)(() => {
        this.auth.renew().then(() => {
          this.fakeRenew = this.auth.isRenewing;
        });
      }, 200);
    }

    revokeToken() {
      this.auth.revokeCurrentToken().then(() => {
        this.transitionToRoute('vault.cluster.logout');
      });
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "auth", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "currentCluster", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, "router", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, "fakeRenew", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return false;
    }
  }), _applyDecoratedDescriptor(_class.prototype, "renewToken", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "renewToken"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "revokeToken", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "revokeToken"), _class.prototype)), _class);
  _exports.default = SidebarUserMenuComponent;
  (0, _component.setComponentTemplate)(__COLOCATED_TEMPLATE__, SidebarUserMenuComponent);
});
;define("vault/components/splash-page", ["exports", "@glimmer/component", "@ember/service"], function (_exports, _component, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2, _descriptor3;

  0; //eaimeta@70e063a35619d71f0,"@glimmer/component",0,"@ember/service"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let SplashPage = (_class = class SplashPage extends _component.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "version", _descriptor, this);

      _initializerDefineProperty(this, "auth", _descriptor2, this);

      _initializerDefineProperty(this, "store", _descriptor3, this);
    }

    get showTruncatedNavBar() {
      // default is true unless showTruncatedNavBar is defined as false
      return this.args.showTruncatedNavBar === false ? false : true;
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "version", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "auth", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class);
  _exports.default = SplashPage;
});
;define("vault/components/splash-page/splash-content", ["exports", "@ember/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/component"eaimeta@70e063a35619d71f

  var _default = _component.default.extend({
    tagName: ''
  });

  _exports.default = _default;
});
;define("vault/components/splash-page/splash-footer", ["exports", "@ember/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/component"eaimeta@70e063a35619d71f

  var _default = _component.default.extend({
    tagName: ''
  });

  _exports.default = _default;
});
;define("vault/components/splash-page/splash-header", ["exports", "@ember/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/component"eaimeta@70e063a35619d71f

  var _default = _component.default.extend({
    tagName: ''
  });

  _exports.default = _default;
});
;define("vault/components/stat-text", ["exports", "core/components/stat-text"], function (_exports, _statText) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _statText.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/stat-text"eaimeta@70e063a35619d71f
});
;define("vault/components/string-list", ["exports", "core/components/string-list"], function (_exports, _stringList) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _stringList.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/string-list"eaimeta@70e063a35619d71f
});
;define("vault/components/text-file", ["exports", "core/components/text-file"], function (_exports, _textFile) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _textFile.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/text-file"eaimeta@70e063a35619d71f
});
;define("vault/components/toggle-button", ["exports", "core/components/toggle-button"], function (_exports, _toggleButton) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _toggleButton.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/toggle-button"eaimeta@70e063a35619d71f
});
;define("vault/components/toggle", ["exports", "core/components/toggle"], function (_exports, _toggle) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _toggle.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/toggle"eaimeta@70e063a35619d71f
});
;define("vault/components/token-expire-warning", ["exports", "@glimmer/component", "@ember/service"], function (_exports, _component, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor;

  0; //eaimeta@70e063a35619d71f0,"@glimmer/component",0,"@ember/service"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let TokenExpireWarning = (_class = class TokenExpireWarning extends _component.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "router", _descriptor, this);
    }

    get showWarning() {
      const currentRoute = this.router.currentRouteName;

      if ('vault.cluster.oidc-provider' === currentRoute) {
        return false;
      }

      return !!this.args.expirationDate;
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "router", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class);
  _exports.default = TokenExpireWarning;
});
;define("vault/components/tool-actions-form", ["exports", "@ember/object/computed", "@ember/polyfills", "@ember/service", "@ember/component", "@ember/object", "date-fns", "@ember/array"], function (_exports, _computed, _polyfills, _service, _component, _object, _dateFns, _array) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/object/computed",0,"@ember/polyfills",0,"@ember/service",0,"@ember/component",0,"@ember/object",0,"date-fns",0,"@ember/array"eaimeta@70e063a35619d71f

  const DEFAULTS = {
    token: null,
    rewrap_token: null,
    errors: (0, _array.A)(),
    wrap_info: null,
    creation_time: null,
    creation_ttl: null,
    data: '{\n}',
    unwrap_data: null,
    details: null,
    wrapTTL: null,
    sum: null,
    random_bytes: null,
    input: null
  };
  const WRAPPING_ENDPOINTS = ['lookup', 'wrap', 'unwrap', 'rewrap'];

  var _default = _component.default.extend(DEFAULTS, {
    store: (0, _service.inject)(),
    // putting these attrs here so they don't get reset when you click back
    //random
    bytes: 32,
    //hash
    format: 'base64',
    algorithm: 'sha2-256',
    tagName: '',
    unwrapActiveTab: 'data',

    didReceiveAttrs() {
      this._super(...arguments);

      this.checkAction();
    },

    selectedAction: null,

    reset() {
      if (this.isDestroyed || this.isDestroying) {
        return;
      }

      (0, _object.setProperties)(this, DEFAULTS);
    },

    checkAction() {
      const currentAction = this.selectedAction;
      const oldAction = this.oldSelectedAction;

      if (currentAction !== oldAction) {
        this.reset();
      }

      (0, _object.set)(this, 'oldSelectedAction', currentAction);
    },

    dataIsEmpty: (0, _computed.match)('data', new RegExp(DEFAULTS.data)),
    expirationDate: (0, _object.computed)('creation_time', 'creation_ttl', function () {
      const {
        creation_time,
        creation_ttl
      } = this;

      if (!(creation_time && creation_ttl)) {
        return null;
      } // returns new Date with seconds added.


      return (0, _dateFns.addSeconds)((0, _dateFns.parseISO)(creation_time), creation_ttl);
    }),

    handleError(e) {
      (0, _object.set)(this, 'errors', e.errors);
    },

    handleSuccess(resp, action) {
      let props = {};
      const secret = resp && resp.data || resp.auth;

      if (secret && action === 'unwrap') {
        const details = {
          'Request ID': resp.request_id,
          'Lease ID': resp.lease_id || 'None',
          Renewable: resp.renewable ? 'Yes' : 'No',
          'Lease Duration': resp.lease_duration || 'None'
        };
        props = (0, _polyfills.assign)({}, props, {
          unwrap_data: secret
        }, {
          details: details
        });
      }

      props = (0, _polyfills.assign)({}, props, secret);

      if (resp && resp.wrap_info) {
        const keyName = action === 'rewrap' ? 'rewrap_token' : 'token';
        props = (0, _polyfills.assign)({}, props, {
          [keyName]: resp.wrap_info.token
        });
      }

      (0, _object.setProperties)(this, props);
    },

    getData() {
      const action = this.selectedAction;

      if (WRAPPING_ENDPOINTS.includes(action)) {
        return this.dataIsEmpty ? {
          token: (this.token || '').trim()
        } : JSON.parse(this.data);
      }

      if (action === 'random') {
        return {
          bytes: this.bytes,
          format: this.format
        };
      }

      if (action === 'hash') {
        return {
          input: this.input,
          format: this.format,
          algorithm: this.algorithm
        };
      }
    },

    actions: {
      doSubmit(evt) {
        var _this = this;

        evt.preventDefault();
        const action = this.selectedAction;
        const wrapTTL = action === 'wrap' ? this.wrapTTL : null;
        const data = this.getData();
        (0, _object.setProperties)(this, {
          errors: null,
          wrap_info: null,
          creation_time: null,
          creation_ttl: null
        });
        this.store.adapterFor('tools').toolAction(action, data, {
          wrapTTL
        }).then(resp => this.handleSuccess(resp, action), function () {
          return _this.handleError(...arguments);
        });
      },

      onClear() {
        this.reset();
      },

      updateTtl(ttl) {
        (0, _object.set)(this, 'wrapTTL', ttl);
      },

      codemirrorUpdated(val, hasErrors) {
        (0, _object.setProperties)(this, {
          buttonDisabled: hasErrors,
          data: val
        });
      }

    }
  });

  _exports.default = _default;
});
;define("vault/components/tool-hash", ["exports", "@glimmer/component", "@ember/object"], function (_exports, _component, _object) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class;

  0; //eaimeta@70e063a35619d71f0,"@glimmer/component",0,"@ember/object"eaimeta@70e063a35619d71f

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  /**
   * @module ToolHash
   * ToolHash components are components that sys/wrapping/hash functionality.  Most of the functionality is passed through as actions from the tool-actions-form and then called back with properties.
   *
   * @example
   * ```js
   * <ToolHash
   *  @onClear={{action "onClear"}}
   *  @sum={{sum}}
   *  @algorithm={{algorithm}}
   *  @format={{format}}
   *  @errors={{errors}}/>
   * ```
   * @param onClear {Function} - parent action that is passed through. Must be passed as {{action "onClear"}}
   * @param sum=null {String} - property passed from parent to child and then passed back up to parent.
   * @param algorithm {String} - property returned from parent.
   * @param format {String} - property returned from parent.
   * @param error=null {Object} - errors passed from parent as default then from child back to parent.
   */
  let ToolHash = (_class = class ToolHash extends _component.default {
    onClear() {
      this.args.onClear();
    }

  }, (_applyDecoratedDescriptor(_class.prototype, "onClear", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "onClear"), _class.prototype)), _class);
  _exports.default = ToolHash;
});
;define("vault/components/tool-lookup", ["exports", "@glimmer/component", "@ember/object"], function (_exports, _component, _object) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class;

  0; //eaimeta@70e063a35619d71f0,"@glimmer/component",0,"@ember/object"eaimeta@70e063a35619d71f

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  /**
   * @module ToolLookup
   * ToolLookup components are components that sys/wrapping/lookup functionality.  Most of the functionality is passed through as actions from the tool-actions-form and then called back with properties.
   *
   * @example
   * ```js
   * <ToolLookup
   *  @creation_time={{creation_time}}
   *  @creation_ttl={{creation_ttl}}
   *  @creation_path={{creation_path}}
   *  @expirationDate={{expirationDate}}
   *  @selectedAction={{selectedAction}}
   *  @token={{token}}
   *  @onClear={{action "onClear"}}
   *  @errors={{errors}}/>
   * ```
   * @param creation_time {Function} - parent action that is passed through.
   * @param creation_ttl {Function} - parent action that is passed through.
   * @param creation_path {Function} - parent action that is passed through.
   * @param expirationDate='' {String} - value returned from lookup.
   * @param selectedAction="wrap" - passed in from parent.  This is the wrap action, others include hash, etc.
   * @param token=null {String} - property passed from parent to child and then passed back up to parent
   * @param onClear {Function} - parent action that is passed through. Must be passed as {{action "onClear"}}
   * @param error=null {Object} - errors passed from parent as default then from child back to parent.
   */
  let ToolLookup = (_class = class ToolLookup extends _component.default {
    onClear() {
      this.args.onClear();
    }

  }, (_applyDecoratedDescriptor(_class.prototype, "onClear", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "onClear"), _class.prototype)), _class);
  _exports.default = ToolLookup;
});
;define("vault/components/tool-random", ["exports", "@glimmer/component", "@ember/object"], function (_exports, _component, _object) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class;

  0; //eaimeta@70e063a35619d71f0,"@glimmer/component",0,"@ember/object"eaimeta@70e063a35619d71f

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  /**
   * @module ToolRandom
   * ToolRandom components are components that sys/wrapping/random functionality.  Most of the functionality is passed through as actions from the tool-actions-form and then called back with properties.
   *
   * @example
   * ```js
   * <ToolRandom
   *  @onClear={{action "onClear"}}
   *  @format={{format}}
   *  @bytes={{bytes}}
   *  @random_bytes={{random_bytes}}
   *  @errors={{errors}}/>
   * ```
   * @param onClear {Function} - parent action that is passed through. Must be passed as {{action "onClear"}}
   * @param format {String} - property returned from parent.
   * @param bytes {String} - property returned from parent.
   * @param random_bytes {String} - property returned from parent.
   * @param error=null {Object} - errors passed from parent as default then from child back to parent.
   */
  let ToolRandom = (_class = class ToolRandom extends _component.default {
    onClear() {
      this.args.onClear();
    }

  }, (_applyDecoratedDescriptor(_class.prototype, "onClear", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "onClear"), _class.prototype)), _class);
  _exports.default = ToolRandom;
});
;define("vault/components/tool-rewrap", ["exports", "@glimmer/component", "@ember/object"], function (_exports, _component, _object) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class;

  0; //eaimeta@70e063a35619d71f0,"@glimmer/component",0,"@ember/object"eaimeta@70e063a35619d71f

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  /**
   * @module ToolRewrap
   * ToolRewrap components are components that sys/wrapping/rewrap functionality.  Most of the functionality is passed through as actions from the tool-actions-form and then called back with properties.
   *
   * @example
   * ```js
   * <ToolRewrap
   *  @onClear={{action "onClear"}}
   *  @token={{token}}
   *  @rewrap_token={{rewrap_token}}
   *  @selectedAction={{selectedAction}}
   *  @bytes={{bytes}}
   *  @errors={{errors}}/>
   * ```
   * @param onClear {Function} - parent action that is passed through. Must be passed as {{action "onClear"}}
   * @param token=null {String} - property passed from parent to child and then passed back up to parent
   * @param rewrap_token {String} - property returned from parent.
   * @param selectedAction {String} - property returned from parent.
   * @param bytes {String} - property returned from parent.
   * @param error=null {Object} - errors passed from parent as default then from child back to parent.
   */
  let ToolRewrap = (_class = class ToolRewrap extends _component.default {
    onClear() {
      this.args.onClear();
    }

  }, (_applyDecoratedDescriptor(_class.prototype, "onClear", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "onClear"), _class.prototype)), _class);
  _exports.default = ToolRewrap;
});
;define("vault/components/tool-tip", ["exports", "core/components/tool-tip"], function (_exports, _toolTip) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _toolTip.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/tool-tip"eaimeta@70e063a35619d71f
});
;define("vault/components/tool-unwrap", ["exports", "@glimmer/component", "@ember/object"], function (_exports, _component, _object) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class;

  0; //eaimeta@70e063a35619d71f0,"@glimmer/component",0,"@ember/object"eaimeta@70e063a35619d71f

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  /**
   * @module ToolUnwrap
   * ToolUnwrap components are components that sys/wrapping/unwrap functionality.  Most of the functionality is passed through as actions from the tool-actions-form and then called back with properties.
   *
   * @example
   * ```js
   * <ToolUnwrap
   *  @onClear={{action "onClear"}}
   *  @token={{token}}
   *  @unwrap_data={{unwrap_data}}
   *  @unwrapActiveTab={{unwrapActiveTab}}
   *  @details={{details}}
   *  @errors={{errors}}/>
   * ```
   * @param onClear {Function} - parent action that is passed through. Must be passed as {{action "onClear"}}
   * @param token=null {String} - property passed from parent to child and then passed back up to parent
   * @param unwrap_data {String} - property returned from parent.
   * @param unwrapActiveTab {String} - property returned from parent.
   * @param details {String} - property returned from parent.
   * @param error=null {Object} - errors passed from parent as default then from child back to parent.
   */
  let ToolUnwrap = (_class = class ToolUnwrap extends _component.default {
    onClear() {
      this.args.onClear();
    }

  }, (_applyDecoratedDescriptor(_class.prototype, "onClear", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "onClear"), _class.prototype)), _class);
  _exports.default = ToolUnwrap;
});
;define("vault/components/tool-wrap", ["exports", "@glimmer/component", "@ember/object", "@glimmer/tracking"], function (_exports, _component, _object, _tracking) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2;

  0; //eaimeta@70e063a35619d71f0,"@glimmer/component",0,"@ember/object",0,"@glimmer/tracking"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  /**
   * @module ToolWrap
   * ToolWrap components are components that sys/wrapping/wrap functionality.  Most of the functionality is passed through as actions from the tool-actions-form and then called back with properties.
   *
   * @example
   * ```js
   * <ToolWrap
   *  @onClear={{action "onClear"}}
   *  @token={{token}}
   *  @selectedAction="wrap"
   *  @codemirrorUpdated={{action "codemirrorUpdated"}}
   *  @updateTtl={{action "updateTtl"}}
   *  @buttonDisabled={{buttonDisabled}}
   *  @errors={{errors}}/>
   * ```
   * @param onClear {Function} - parent action that is passed through. Must be passed as {{action "onClear"}}
   * @param token=null {String} - property passed from parent to child and then passed back up to parent
   * @param selectedAction="wrap" - passed in from parent.  This is the wrap action, others include hash, etc.
   * @param codemirrorUpdated {Function} - parent action that is passed through. Must be passed as {{action "codemirrorUpdated"}}.
   * @param updateTtl {Function} - parent action that is passed through. Must be passed as {{action "updateTtl"}}
   * @param buttonDisabled=false {Boolean} - false default and if there is an error on codemirror it turns to true.
   * @param error=null {Object} - errors passed from parent as default then from child back to parent.
   */
  let ToolWrap = (_class = class ToolWrap extends _component.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "data", _descriptor, this);

      _initializerDefineProperty(this, "buttonDisabled", _descriptor2, this);
    }

    onClear() {
      this.args.onClear();
    }

    updateTtl(evt) {
      if (!evt) return;
      const ttl = evt.enabled ? `${evt.seconds}s` : '30m';
      this.args.updateTtl(ttl);
    }

    codemirrorUpdated(val, codemirror) {
      codemirror.performLint();
      const hasErrors = codemirror?.state.lint.marked?.length > 0;
      this.data = val;
      this.buttonDisabled = hasErrors;
      this.args.codemirrorUpdated(val, hasErrors);
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "data", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return '{\n}';
    }
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "buttonDisabled", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return false;
    }
  }), _applyDecoratedDescriptor(_class.prototype, "onClear", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "onClear"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "updateTtl", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "updateTtl"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "codemirrorUpdated", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "codemirrorUpdated"), _class.prototype)), _class);
  _exports.default = ToolWrap;
});
;define("vault/components/toolbar-actions", ["exports", "core/components/toolbar-actions"], function (_exports, _toolbarActions) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _toolbarActions.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/toolbar-actions"eaimeta@70e063a35619d71f
});
;define("vault/components/toolbar-filters", ["exports", "core/components/toolbar-filters"], function (_exports, _toolbarFilters) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _toolbarFilters.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/toolbar-filters"eaimeta@70e063a35619d71f
});
;define("vault/components/toolbar-link", ["exports", "core/components/toolbar-link"], function (_exports, _toolbarLink) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _toolbarLink.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/toolbar-link"eaimeta@70e063a35619d71f
});
;define("vault/components/toolbar-secret-link", ["exports", "@glimmer/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@glimmer/component"eaimeta@70e063a35619d71f

  /**
   * @module ToolbarSecretLink
   * `ToolbarSecretLink` styles SecretLink for the Toolbar.
   * It should only be used inside of `Toolbar`.
   *
   * @example
   * ```js
   * <Toolbar>
   *   <ToolbarActions>
   *     <ToolbarSecretLink @params={{array 'vault.cluster.policies.create'}} @type="add">
   *       Create policy
   *     </ToolbarSecretLink>
   *   </ToolbarActions>
   * </Toolbar>
   * ```
   *
   * @param type="" {String} - Use "add" to change icon
   */
  class ToolbarSecretLink extends _component.default {
    get glyph() {
      return this.args.type === 'add' ? 'plus' : 'chevron-right';
    }

  }

  _exports.default = ToolbarSecretLink;
});
;define("vault/components/toolbar", ["exports", "core/components/toolbar"], function (_exports, _toolbar) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _toolbar.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/toolbar"eaimeta@70e063a35619d71f
});
;define("vault/components/transit-edit", ["exports", "@ember/service", "@ember/object/computed", "@ember/utils", "@ember/component", "ember-concurrency", "@ember/object", "vault/mixins/focus-on-insert", "vault/lib/keycodes"], function (_exports, _service, _computed, _utils, _component, _emberConcurrency, _object, _focusOnInsert, _keycodes) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@ember/object/computed",0,"@ember/utils",0,"@ember/component",0,"ember-concurrency",0,"@ember/object",0,"vault/mixins/focus-on-insert",0,"vault/lib/keycodes"eaimeta@70e063a35619d71f

  const LIST_ROOT_ROUTE = 'vault.cluster.secrets.backend.list-root';
  const SHOW_ROUTE = 'vault.cluster.secrets.backend.show';

  var _default = _component.default.extend(_focusOnInsert.default, {
    router: (0, _service.inject)(),
    mode: null,

    onDataChange() {},

    onRefresh() {},

    key: null,
    autoRotateInvalid: false,
    requestInFlight: (0, _computed.or)('key.isLoading', 'key.isReloading', 'key.isSaving'),

    willDestroyElement() {
      this._super(...arguments);

      if (this.key && this.key.isError) {
        this.key.rollbackAttributes();
      }
    },

    waitForKeyUp: (0, _emberConcurrency.task)(function* () {
      while (true) {
        const event = yield (0, _emberConcurrency.waitForEvent)(document.body, 'keyup');
        this.onEscape(event);
      }
    }).on('didInsertElement').cancelOn('willDestroyElement'),

    transitionToRoute() {
      this.router.transitionTo(...arguments);
    },

    onEscape(e) {
      if (e.keyCode !== _keycodes.default.ESC || this.mode !== 'show') {
        return;
      }

      this.transitionToRoute(LIST_ROOT_ROUTE);
    },

    hasDataChanges() {
      this.onDataChange(this.key.hasDirtyAttributes);
    },

    persistKey(method, successCallback) {
      const key = this.key;
      return key[method]().then(() => {
        if (!key.isError) {
          successCallback(key);
        }
      });
    },

    actions: {
      createOrUpdateKey(type, event) {
        event.preventDefault();
        const keyId = this.key.id || this.key.name; // prevent from submitting if there's no key
        // maybe do something fancier later

        if (type === 'create' && (0, _utils.isBlank)(keyId)) {
          return;
        }

        this.persistKey('save', () => {
          this.hasDataChanges();
          this.transitionToRoute(SHOW_ROUTE, keyId);
        }, type === 'create');
      },

      setValueOnKey(key, event) {
        (0, _object.set)(this.key, key, event.target.checked);
      },

      handleAutoRotateChange(ttlObj) {
        if (ttlObj.enabled) {
          (0, _object.set)(this.key, 'autoRotatePeriod', ttlObj.goSafeTimeString);
          this.set('autoRotateInvalid', ttlObj.seconds < 3600);
        } else {
          (0, _object.set)(this.key, 'autoRotatePeriod', 0);
        }
      },

      derivedChange(val) {
        this.key.setDerived(val);
      },

      convergentEncryptionChange(val) {
        this.key.setConvergentEncryption(val);
      },

      refresh() {
        this.onRefresh();
      },

      deleteKey() {
        this.persistKey('destroyRecord', () => {
          this.hasDataChanges();
          this.transitionToRoute(LIST_ROOT_ROUTE);
        });
      }

    }
  });

  _exports.default = _default;
});
;define("vault/components/transit-key-action/export", ["exports", "@glimmer/component", "@glimmer/tracking"], function (_exports, _component, _tracking) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2;

  0; //eaimeta@70e063a35619d71f0,"@glimmer/component",0,"@glimmer/tracking"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let ExportComponent = (_class = class ExportComponent extends _component.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "wrapTTL", _descriptor, this);

      _initializerDefineProperty(this, "exportVersion", _descriptor2, this);
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "wrapTTL", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return null;
    }
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "exportVersion", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return false;
    }
  })), _class);
  _exports.default = ExportComponent;
});
;define("vault/components/transit-key-actions", ["exports", "@ember/polyfills", "ember-copy", "@ember/debug", "@ember/service", "@ember/component", "@ember/object", "vault/utils/b64"], function (_exports, _polyfills, _emberCopy, _debug, _service, _component, _object, _b) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/polyfills",0,"ember-copy",0,"@ember/debug",0,"@ember/service",0,"@ember/component",0,"@ember/object",0,"vault/utils/b64"eaimeta@70e063a35619d71f

  const TRANSIT_PARAMS = {
    hash_algorithm: 'sha2-256',
    algorithm: 'sha2-256',
    signature_algorithm: 'pss',
    bits: 256,
    bytes: 32,
    ciphertext: null,
    context: null,
    format: 'base64',
    hmac: null,
    input: null,
    key_version: 0,
    keys: null,
    nonce: null,
    param: 'wrapped',
    prehashed: false,
    plaintext: null,
    random_bytes: null,
    signature: null,
    sum: null,
    encodedBase64: false,
    exportKeyType: null,
    exportKeyVersion: null,
    wrappedToken: null,
    valid: null,
    plaintextOriginal: null,
    didDecode: false,
    verification: 'Signature'
  };
  const PARAMS_FOR_ACTION = {
    sign: ['input', 'hash_algorithm', 'key_version', 'prehashed', 'signature_algorithm'],
    verify: ['input', 'hmac', 'signature', 'hash_algorithm', 'prehashed'],
    hmac: ['input', 'algorithm', 'key_version'],
    encrypt: ['plaintext', 'context', 'nonce', 'key_version'],
    decrypt: ['ciphertext', 'context', 'nonce'],
    rewrap: ['ciphertext', 'context', 'nonce', 'key_version']
  };
  const SUCCESS_MESSAGE_FOR_ACTION = {
    sign: 'Signed your data',
    // the verify action doesn't trigger a success message
    hmac: 'Created your hash output',
    encrypt: 'Created a wrapped token for your data',
    decrypt: 'Decrypted the data from your token',
    rewrap: 'Created a new token for your data',
    datakey: 'Generated your key',
    export: 'Exported your key'
  };

  var _default = _component.default.extend(TRANSIT_PARAMS, {
    store: (0, _service.inject)(),
    flashMessages: (0, _service.inject)(),
    // public attrs
    selectedAction: null,
    key: null,
    isModalActive: false,

    onRefresh() {},

    init() {
      this._super(...arguments); // TODO figure out why get is needed here Ember Upgrade
      // eslint-disable-next-line ember/no-get


      if (this.selectedAction) {
        return;
      } // eslint-disable-next-line ember/no-get


      (0, _object.set)(this, 'selectedAction', (0, _object.get)(this, 'key.supportedActions.firstObject'));
      (true && !(this.getModelInfo()) && (0, _debug.assert)('`key` is required for `' + this.toString() + '`.', this.getModelInfo()));
    },

    didReceiveAttrs() {
      this._super(...arguments);

      this.checkAction();

      if (this.selectedAction === 'export') {
        this.setExportKeyDefaults();
      }
    },

    setExportKeyDefaults() {
      const exportKeyType = this.key.exportKeyTypes.firstObject;
      const exportKeyVersion = this.key.validKeyVersions.lastObject;
      this.setProperties({
        exportKeyType,
        exportKeyVersion
      });
    },

    keyIsRSA: (0, _object.computed)('key.type', function () {
      const type = this.key.type;
      return type === 'rsa-2048' || type === 'rsa-3072' || type === 'rsa-4096';
    }),

    getModelInfo() {
      const model = this.key || this.backend;

      if (!model) {
        return null;
      }

      const backend = model.backend || model.id;
      const id = model.id;
      return {
        backend,
        id
      };
    },

    checkAction() {
      const currentAction = this.selectedAction;
      const oldAction = this.oldSelectedAction;
      this.resetParams(oldAction, currentAction);
      (0, _object.set)(this, 'oldSelectedAction', currentAction);
    },

    resetParams(oldAction, action) {
      const params = (0, _emberCopy.copy)(TRANSIT_PARAMS);
      let paramsToKeep;
      const clearWithoutCheck = !oldAction || // don't save values from datakey
      oldAction === 'datakey' || // can rewrap signatures — using that as a ciphertext later would be problematic
      oldAction === 'rewrap' && !this.key.supportsEncryption;

      if (!clearWithoutCheck && action) {
        paramsToKeep = PARAMS_FOR_ACTION[action];
      }

      if (paramsToKeep) {
        paramsToKeep.forEach(param => delete params[param]);
      } //resets params still left in the object to defaults


      this.clearErrors();
      this.setProperties(params);

      if (action === 'export') {
        this.setExportKeyDefaults();
      }
    },

    handleError(e) {
      this.set('errors', e.errors);
    },

    clearErrors() {
      this.set('errors', null);
    },

    triggerSuccessMessage(action) {
      const message = SUCCESS_MESSAGE_FOR_ACTION[action];
      if (!message) return;
      this.flashMessages.success(message);
    },

    handleSuccess(resp, options, action) {
      let props = {};

      if (resp && resp.data) {
        if (action === 'export' && resp.data.keys) {
          const {
            keys,
            type,
            name
          } = resp.data;
          resp.data.keys = {
            keys,
            type,
            name
          };
        }

        props = (0, _polyfills.assign)({}, props, resp.data);
      }

      if (options.wrapTTL) {
        props = (0, _polyfills.assign)({}, props, {
          wrappedToken: resp.wrap_info.token
        });
      }

      if (!this.isDestroyed && !this.isDestroying) {
        this.toggleProperty('isModalActive');
        this.setProperties(props);
      }

      if (action === 'rotate') {
        this.onRefresh();
      }

      this.triggerSuccessMessage(action);
    },

    compactData(data) {
      const type = this.key.type;
      const isRSA = type === 'rsa-2048' || type === 'rsa-3072' || type === 'rsa-4096';
      return Object.keys(data).reduce((result, key) => {
        if (key === 'signature_algorithm' && !isRSA) {
          return result;
        }

        if (data[key]) {
          result[key] = data[key];
        }

        return result;
      }, {});
    },

    actions: {
      onActionChange(action) {
        (0, _object.set)(this, 'selectedAction', action);
        this.checkAction();
      },

      onClear() {
        this.resetParams(null, this.selectedAction);
      },

      clearParams(params) {
        const arr = Array.isArray(params) ? params : [params];
        arr.forEach(param => this.set(param, null));
      },

      toggleModal(successMessage) {
        if (!!successMessage && typeof successMessage === 'string') {
          this.flashMessages.success(successMessage);
        }

        this.toggleProperty('isModalActive');
      },

      doSubmit(data) {
        var _this = this;

        let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        let maybeEvent = arguments.length > 2 ? arguments[2] : undefined;
        const event = options.type === 'submit' ? options : maybeEvent;

        if (event) {
          event.preventDefault();
        }

        const {
          backend,
          id
        } = this.getModelInfo();
        const action = this.selectedAction;
        const {
          encodedBase64,
          ...formData
        } = data || {};

        if (!encodedBase64) {
          if (action === 'encrypt' && !!formData.plaintext) {
            formData.plaintext = (0, _b.encodeString)(formData.plaintext);
          }

          if ((action === 'hmac' || action === 'verify' || action === 'sign') && !!formData.input) {
            formData.input = (0, _b.encodeString)(formData.input);
          }
        }

        const payload = formData ? this.compactData(formData) : null;
        this.setProperties({
          errors: null,
          result: null
        });
        this.store.adapterFor('transit-key').keyAction(action, {
          backend,
          id,
          payload
        }, options).then(resp => this.handleSuccess(resp, options, action), function () {
          return _this.handleError(...arguments);
        });
      }

    }
  });

  _exports.default = _default;
});
;define("vault/components/ttl-picker", ["exports", "core/components/ttl-picker"], function (_exports, _ttlPicker) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _ttlPicker.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/ttl-picker"eaimeta@70e063a35619d71f
});
;define("vault/components/ui-wizard", ["exports", "@ember/service", "@ember/object/computed", "@ember/component", "xstate"], function (_exports, _service, _computed, _component, _xstate) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@ember/object/computed",0,"@ember/component",0,"xstate"eaimeta@70e063a35619d71f

  var _default = _component.default.extend({
    classNames: ['ui-wizard-container'],
    wizard: (0, _service.inject)(),
    auth: (0, _service.inject)(),
    router: (0, _service.inject)(),
    shouldRender: (0, _computed.or)('auth.currentToken', 'wizard.showWhenUnauthenticated'),
    currentState: (0, _computed.alias)('wizard.currentState'),
    featureState: (0, _computed.alias)('wizard.featureState'),
    featureComponent: (0, _computed.alias)('wizard.featureComponent'),
    tutorialComponent: (0, _computed.alias)('wizard.tutorialComponent'),
    componentState: (0, _computed.alias)('wizard.componentState'),
    nextFeature: (0, _computed.alias)('wizard.nextFeature'),
    nextStep: (0, _computed.alias)('wizard.nextStep'),
    currentRouteName: (0, _computed.alias)('router.currentRouteName'),
    actions: {
      dismissWizard() {
        this.wizard.transitionTutorialMachine(this.currentState, 'DISMISS');
      },

      advanceWizard() {
        const inInit = (0, _xstate.matchesState)('init', this.wizard.currentState);
        const event = inInit ? this.wizard.initEvent || 'CONTINUE' : 'CONTINUE';
        this.wizard.transitionTutorialMachine(this.currentState, event);
      },

      advanceFeature() {
        this.wizard.transitionFeatureMachine(this.featureState, 'CONTINUE');
      },

      finishFeature() {
        this.wizard.transitionFeatureMachine(this.featureState, 'DONE');
      },

      repeatStep() {
        this.wizard.transitionFeatureMachine(this.featureState, 'REPEAT', this.componentState);
      },

      resetFeature() {
        this.wizard.transitionFeatureMachine(this.featureState, 'RESET', this.componentState);
      },

      pauseWizard() {
        this.wizard.transitionTutorialMachine(this.currentState, 'PAUSE');
      }

    }
  });

  _exports.default = _default;
});
;define("vault/components/vault-logo-spinner", ["exports", "core/components/openbao-logo-spinner"], function (_exports, _openbaoLogoSpinner) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _openbaoLogoSpinner.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/components/openbao-logo-spinner"eaimeta@70e063a35619d71f
});
;define("vault/components/wizard-content", ["exports", "@ember/object/computed", "@ember/service", "@ember/component", "@ember/object", "vault/helpers/wizard-constants"], function (_exports, _computed, _service, _component, _object, _wizardConstants) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/object/computed",0,"@ember/service",0,"@ember/component",0,"@ember/object",0,"vault/helpers/wizard-constants"eaimeta@70e063a35619d71f

  var _default = _component.default.extend({
    wizard: (0, _service.inject)(),
    classNames: ['ui-wizard'],
    glyph: null,
    headerText: null,
    selectProgress: null,
    currentMachine: (0, _computed.alias)('wizard.currentMachine'),
    tutorialState: (0, _computed.alias)('wizard.currentState'),
    tutorialComponent: (0, _computed.alias)('wizard.tutorialComponent'),
    showProgress: (0, _object.computed)('tutorialComponent', 'tutorialState', 'wizard.{featureComponent,featureMachineHistory}', function () {
      if (!this.tutorialComponent) return;
      return this.tutorialComponent.includes('active') && (this.tutorialState.includes('init.active') || this.wizard.featureComponent && this.wizard.featureMachineHistory);
    }),
    featureMachineHistory: (0, _computed.alias)('wizard.featureMachineHistory'),
    totalFeatures: (0, _computed.reads)('wizard.featureList.length'),
    completedFeatures: (0, _object.computed)('wizard.currentMachine', function () {
      return this.wizard.getCompletedFeatures();
    }),
    currentFeatureProgress: (0, _object.computed)('currentMachine', 'featureMachineHistory.[]', 'tutorialState', function () {
      if (this.tutorialState.includes('active.feature')) {
        let totalSteps = _wizardConstants.FEATURE_MACHINE_STEPS[this.currentMachine];

        if (this.currentMachine === 'secrets') {
          if (this.featureMachineHistory.includes('secret')) {
            totalSteps = totalSteps['secret']['secret'];
          }

          if (this.featureMachineHistory.includes('list')) {
            totalSteps = totalSteps['secret']['list'];
          }

          if (this.featureMachineHistory.includes('encryption')) {
            totalSteps = totalSteps['encryption'];
          }

          if (this.featureMachineHistory.includes('role') || typeof totalSteps === 'object') {
            totalSteps = totalSteps['role'];
          }
        }

        return {
          percentage: this.featureMachineHistory.length / totalSteps * 100,
          feature: this.currentMachine,
          text: `Step ${this.featureMachineHistory.length} of ${totalSteps}`
        };
      }

      return null;
    }),
    currentTutorialProgress: (0, _object.computed)('tutorialState', function () {
      if (this.tutorialState.includes('init.active')) {
        const currentStepName = this.tutorialState.split('.')[2];
        const currentStepNumber = _wizardConstants.INIT_STEPS.indexOf(currentStepName) + 1;
        return {
          percentage: currentStepNumber / _wizardConstants.INIT_STEPS.length * 100,
          text: `Step ${currentStepNumber} of ${_wizardConstants.INIT_STEPS.length}`
        };
      }

      return null;
    }),
    progressBar: (0, _object.computed)('completedFeatures', 'currentFeature', 'currentFeatureProgress.percentage', 'currentMachine', 'currentTutorialProgress.percentage', 'wizard.featureList', function () {
      const bar = [];

      if (this.currentTutorialProgress) {
        bar.push({
          style: `width:${this.currentTutorialProgress.percentage}%;`,
          completed: false,
          showIcon: true
        });
      } else {
        if (this.currentFeatureProgress) {
          this.completedFeatures.forEach(feature => {
            bar.push({
              style: 'width:100%;',
              completed: true,
              feature: feature,
              showIcon: true
            });
          });
          this.wizard.featureList.forEach(feature => {
            if (feature === this.currentMachine) {
              bar.push({
                style: `width:${this.currentFeatureProgress.percentage}%;`,
                completed: this.currentFeatureProgress.percentage == 100 ? true : false,
                feature: feature,
                showIcon: true
              });
            } else {
              bar.push({
                style: 'width:0%;',
                completed: false,
                feature: feature,
                showIcon: true
              });
            }
          });
        }
      }

      return bar;
    }),
    actions: {
      dismissWizard() {
        this.wizard.transitionTutorialMachine(this.wizard.currentState, 'DISMISS');
      }

    }
  });

  _exports.default = _default;
});
;define("vault/components/wizard/features-selection", ["exports", "@ember/object/computed", "@ember/service", "@ember/component", "@ember/object", "vault/helpers/wizard-constants"], function (_exports, _computed, _service, _component, _object, _wizardConstants) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/object/computed",0,"@ember/service",0,"@ember/component",0,"@ember/object",0,"vault/helpers/wizard-constants"eaimeta@70e063a35619d71f

  var _default = _component.default.extend({
    wizard: (0, _service.inject)(),
    permissions: (0, _service.inject)(),

    init() {
      this._super(...arguments);

      this.maybeHideFeatures();
    },

    maybeHideFeatures() {
      const features = this.allFeatures;
      features.forEach(feat => {
        feat.disabled = this.doesNotHavePermission(feat.requiredPermissions);
      });
    },

    doesNotHavePermission(requiredPermissions) {
      // requiredPermissions is an object of paths and capabilities defined within allFeatures.
      // the expected shape is:
      // {
      //   'example/path': ['capability'],
      //   'second/example/path': ['update', 'sudo'],
      // }
      return !Object.keys(requiredPermissions).every(path => {
        return this.permissions.hasPermission(path, requiredPermissions[path]);
      });
    },

    estimatedTime: (0, _object.computed)('selectedFeatures', function () {
      let time = 0;

      for (const feature of Object.keys(_wizardConstants.FEATURE_MACHINE_TIME)) {
        if (this.selectedFeatures.includes(feature)) {
          time += _wizardConstants.FEATURE_MACHINE_TIME[feature];
        }
      }

      return time;
    }),
    selectProgress: (0, _object.computed)('selectedFeatures', function () {
      let bar = this.selectedFeatures.map(feature => {
        return {
          style: 'width:0%;',
          completed: false,
          showIcon: true,
          feature: feature
        };
      });

      if (bar.length === 0) {
        bar = [{
          style: 'width:0%;',
          showIcon: false
        }];
      }

      return bar;
    }),
    allFeatures: (0, _object.computed)(function () {
      return [{
        key: 'secrets',
        name: 'Secrets',
        steps: ['Enabling a Secrets Engine', 'Adding a secret'],
        selected: false,
        show: true,
        disabled: false,
        requiredPermissions: {
          'sys/mounts/example': ['update']
        }
      }, {
        key: 'authentication',
        name: 'Authentication',
        steps: ['Enabling an Auth Method', 'Managing your Auth Method'],
        selected: false,
        show: true,
        disabled: false,
        requiredPermissions: {
          'sys/auth': ['read'],
          'sys/auth/foo': ['update', 'sudo']
        }
      }, {
        key: 'policies',
        name: 'Policies',
        steps: ['Choosing a policy type', 'Creating a policy', 'Deleting your policy', 'Other types of policies'],
        selected: false,
        show: true,
        disabled: false,
        requiredPermissions: {
          'sys/policies/acl': ['list']
        }
      }, {
        key: 'tools',
        name: 'Tools',
        steps: ['Wrapping data', 'Lookup wrapped data', 'Rewrapping your data', 'Unwrapping your data'],
        selected: false,
        show: true,
        disabled: false,
        requiredPermissions: {
          'sys/wrapping/wrap': ['update'],
          'sys/wrapping/lookup': ['update'],
          'sys/wrapping/unwrap': ['update'],
          'sys/wrapping/rewrap': ['update']
        }
      }];
    }),
    selectedFeatures: (0, _object.computed)('allFeatures.@each.selected', function () {
      return this.allFeatures.filterBy('selected').mapBy('key');
    }),
    cannotStartWizard: (0, _computed.not)('selectedFeatures.length'),
    actions: {
      saveFeatures() {
        const wizard = this.wizard;
        wizard.saveFeatures(this.selectedFeatures);
        wizard.transitionTutorialMachine('active.select', 'CONTINUE');
      }

    }
  });

  _exports.default = _default;
});
;define("vault/components/wizard/mounts-wizard", ["exports", "@ember/service", "@ember/object/computed", "@ember/component", "@ember/object", "vault/helpers/mountable-secret-engines", "vault/helpers/mountable-auth-methods", "vault/helpers/supported-secret-backends", "vault/helpers/supported-auth-backends"], function (_exports, _service, _computed, _component, _object, _mountableSecretEngines, _mountableAuthMethods, _supportedSecretBackends, _supportedAuthBackends) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@ember/object/computed",0,"@ember/component",0,"@ember/object",0,"vault/helpers/mountable-secret-engines",0,"vault/helpers/mountable-auth-methods",0,"vault/helpers/supported-secret-backends",0,"vault/helpers/supported-auth-backends"eaimeta@70e063a35619d71f

  const supportedSecrets = (0, _supportedSecretBackends.supportedSecretBackends)();
  const supportedAuth = (0, _supportedAuthBackends.supportedAuthBackends)();

  var _default = _component.default.extend({
    wizard: (0, _service.inject)(),
    featureState: (0, _computed.alias)('wizard.featureState'),
    currentState: (0, _computed.alias)('wizard.currentState'),
    currentMachine: (0, _computed.alias)('wizard.currentMachine'),
    mountSubtype: (0, _computed.alias)('wizard.componentState'),
    fullNextStep: (0, _computed.alias)('wizard.nextStep'),
    nextFeature: (0, _computed.alias)('wizard.nextFeature'),
    nextStep: (0, _object.computed)('fullNextStep', function () {
      return this.fullNextStep.split('.').lastObject;
    }),
    needsConnection: (0, _computed.equal)('mountSubtype', 'database'),
    needsEncryption: (0, _computed.equal)('mountSubtype', 'transit'),
    stepComponent: (0, _computed.alias)('wizard.stepComponent'),
    detailsComponent: (0, _object.computed)('currentMachine', 'mountSubtype', function () {
      const suffix = this.currentMachine === 'secrets' ? 'engine' : 'method';
      return this.mountSubtype ? `wizard/${this.mountSubtype}-${suffix}` : null;
    }),
    isSupported: (0, _object.computed)('currentMachine', 'mountSubtype', function () {
      if (this.currentMachine === 'secrets') {
        return supportedSecrets.includes(this.mountSubtype);
      } else {
        return supportedAuth.includes(this.mountSubtype);
      }
    }),
    mountName: (0, _object.computed)('currentMachine', 'mountSubtype', function () {
      if (this.currentMachine === 'secrets') {
        const secret = (0, _mountableSecretEngines.mountableEngines)().find(engine => {
          return engine.type === this.mountSubtype;
        });

        if (secret) {
          return secret.displayName;
        }
      } else {
        var auth = (0, _mountableAuthMethods.methods)().find(method => {
          return method.type === this.mountSubtype;
        });

        if (auth) {
          return auth.displayName;
        }
      }

      return null;
    }),
    actionText: (0, _object.computed)('mountSubtype', function () {
      switch (this.mountSubtype) {
        case 'aws':
          return 'Generate credential';

        case 'ssh':
          return 'Sign keys';

        case 'pki':
          return 'Generate certificate';

        default:
          return null;
      }
    }),

    onAdvance() {},

    onRepeat() {},

    onReset() {},

    onDone() {}

  });

  _exports.default = _default;
});
;define("vault/components/wizard/secrets-keymgmt", ["exports", "@glimmer/component"], function (_exports, _component) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@glimmer/component"eaimeta@70e063a35619d71f

  class WizardSecretsKeymgmtComponent extends _component.default {
    get headerText() {
      return {
        provider: 'Creating a provider',
        displayProvider: 'Distributing a key',
        distribute: 'Creating a key'
      }[this.args.featureState];
    }

    get body() {
      return {
        provider: 'This process connects an external provider to OpenBao. You will need its credentials.',
        displayProvider: 'A key can now be created and distributed to this destination.',
        distribute: 'This process creates a key and distributes it to your provider.'
      }[this.args.featureState];
    }

    get instructions() {
      return {
        provider: 'Enter your provider details and click “Create provider“.',
        displayProvider: 'Click “Distribute key” in the toolbar.',
        distribute: 'Enter your key details and click “Distribute key”.'
      }[this.args.featureState];
    }

  }

  _exports.default = WizardSecretsKeymgmtComponent;
});
;define("vault/components/wrap-ttl", ["exports", "@ember/component", "@ember/template-factory", "@ember/debug", "@glimmer/component", "@ember/object", "@glimmer/tracking"], function (_exports, _component, _templateFactory, _debug, _component2, _object, _tracking) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor;

  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars",0,"@ember/debug",0,"@glimmer/component",0,"@ember/object",0,"@glimmer/tracking"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  const __COLOCATED_TEMPLATE__ = (0, _templateFactory.createTemplateFactory)(
  /*
    <div class="field">
    <TtlPicker
      @label="Wrap response"
      @helperTextDisabled="Will not wrap response"
      @helperTextEnabled="Will wrap response with a lease of"
      @initialEnabled={{true}}
      @initialValue="30m"
      @onChange={{this.changedValue}}
      @changeOnInit={{true}}
      data-test-wrap-ttl-picker
    />
  </div>
  */
  {
    "id": "Tg2HIPZ9",
    "block": "[[[10,0],[14,0,\"field\"],[12],[1,\"\\n  \"],[8,[39,0],[[24,\"data-test-wrap-ttl-picker\",\"\"]],[[\"@label\",\"@helperTextDisabled\",\"@helperTextEnabled\",\"@initialEnabled\",\"@initialValue\",\"@onChange\",\"@changeOnInit\"],[\"Wrap response\",\"Will not wrap response\",\"Will wrap response with a lease of\",true,\"30m\",[30,0,[\"changedValue\"]],true]],null],[1,\"\\n\"],[13]],[],false,[\"ttl-picker\"]]",
    "moduleName": "vault/components/wrap-ttl.hbs",
    "isStrictMode": false
  });
  /**
   * Copyright (c) HashiCorp, Inc.
   * SPDX-License-Identifier: MPL-2.0
   */


  let WrapTtlComponent = (_class = class WrapTtlComponent extends _component2.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "wrapResponse", _descriptor, this);

      (true && !(this.args.onChange) && (0, _debug.assert)('`onChange` handler is a required attr in `' + this.toString() + '`.', this.args.onChange));
    }

    get wrapTTL() {
      const {
        wrapResponse,
        ttl
      } = this;
      return wrapResponse ? ttl : null;
    }

    changedValue(ttlObj) {
      this.wrapResponse = ttlObj.enabled;
      this.ttl = ttlObj.goSafeTimeString;
      this.args.onChange(this.wrapTTL);
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "wrapResponse", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return true;
    }
  }), _applyDecoratedDescriptor(_class.prototype, "changedValue", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "changedValue"), _class.prototype)), _class);
  _exports.default = WrapTtlComponent;
  (0, _component.setComponentTemplate)(__COLOCATED_TEMPLATE__, WrapTtlComponent);
});
;define("vault/config/asset-manifest", ["exports", "require", "vault/config/environment"], function (_exports, _require, _environment) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"require",0,"vault/config/environment"eaimeta@70e063a35619d71f

  const modulePrefix = _environment.default.modulePrefix;
  const metaName = `${modulePrefix}/config/asset-manifest`;
  const nodeName = `${modulePrefix}/config/node-asset-manifest`;
  let config = {};

  try {
    // If we have a Node version of the asset manifest, use that for FastBoot and
    // similar environments.
    if (_require.default.has(nodeName)) {
      config = (0, _require.default)(nodeName).default; // eslint-disable-line
    } else {
      const rawConfig = document.querySelector('meta[name="' + metaName + '"]').getAttribute('content');
      config = JSON.parse(unescape(rawConfig));
    }
  } catch (err) {
    throw new Error('Failed to load asset manifest. For browser environments, verify the meta tag with name "' + metaName + '" is present. For non-browser environments, verify that you included the node-asset-manifest module.');
  }

  var _default = config;
  _exports.default = _default;
});
;define("vault/controllers/application", ["exports", "@ember/service", "@ember/controller", "vault/config/environment"], function (_exports, _service, _controller, _environment) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@ember/controller",0,"vault/config/environment"eaimeta@70e063a35619d71f

  var _default = _controller.default.extend({
    env: _environment.default.environment,
    auth: (0, _service.inject)(),
    store: (0, _service.inject)()
  });

  _exports.default = _default;
});
;define("vault/controllers/vault", ["exports", "@ember/service", "@ember/controller", "vault/config/environment"], function (_exports, _service, _controller, _environment) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@ember/controller",0,"vault/config/environment"eaimeta@70e063a35619d71f

  var _default = _controller.default.extend({
    queryParams: [{
      wrappedToken: 'wrapped_token',
      redirectTo: 'redirect_to'
    }],
    wrappedToken: '',
    redirectTo: '',
    env: _environment.default.environment,
    auth: (0, _service.inject)(),
    store: (0, _service.inject)()
  });

  _exports.default = _default;
});
;define("vault/controllers/vault/cluster", ["exports", "@ember/service", "@ember/object/computed", "@ember/controller", "@ember/object"], function (_exports, _service, _computed, _controller, _object) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@ember/object/computed",0,"@ember/controller",0,"@ember/object"eaimeta@70e063a35619d71f

  var _default = _controller.default.extend({
    auth: (0, _service.inject)(),
    store: (0, _service.inject)(),
    media: (0, _service.inject)(),
    router: (0, _service.inject)(),
    permissions: (0, _service.inject)(),
    namespaceService: (0, _service.inject)('namespace'),
    flashMessages: (0, _service.inject)(),
    vaultVersion: (0, _service.inject)('version'),
    console: (0, _service.inject)(),
    queryParams: [{
      namespaceQueryParam: {
        scope: 'controller',
        as: 'namespace'
      }
    }],
    namespaceQueryParam: '',
    onQPChange: (0, _object.observer)('namespaceQueryParam', function () {
      this.namespaceService.setNamespace(this.namespaceQueryParam);
    }),
    consoleOpen: (0, _computed.alias)('console.isOpen'),
    activeCluster: (0, _computed.alias)('auth.activeCluster'),
    actions: {
      toggleConsole() {
        this.toggleProperty('consoleOpen');
      }

    }
  });

  _exports.default = _default;
});
;define("vault/controllers/vault/cluster/access/control-groups-configure", ["exports", "@ember/controller"], function (_exports, _controller) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/controller"eaimeta@70e063a35619d71f

  var _default = _controller.default.extend({
    actions: {
      onSave(_ref) {
        let {
          saveType
        } = _ref;

        if (saveType === 'destroyRecord') {
          this.send('reload');
        }
      }

    }
  });

  _exports.default = _default;
});
;define("vault/controllers/vault/cluster/access/identity/aliases/add", ["exports", "vault/controllers/vault/cluster/access/identity/create"], function (_exports, _create) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/controllers/vault/cluster/access/identity/create"eaimeta@70e063a35619d71f

  var _default = _create.default.extend({
    showRoute: 'vault.cluster.access.identity.aliases.show'
  });

  _exports.default = _default;
});
;define("vault/controllers/vault/cluster/access/identity/aliases/edit", ["exports", "vault/controllers/vault/cluster/access/identity/aliases/add"], function (_exports, _add) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/controllers/vault/cluster/access/identity/aliases/add"eaimeta@70e063a35619d71f

  var _default = _add.default.extend();

  _exports.default = _default;
});
;define("vault/controllers/vault/cluster/access/identity/aliases/index", ["exports", "@ember/controller", "core/mixins/list-controller"], function (_exports, _controller, _listController) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/controller",0,"core/mixins/list-controller"eaimeta@70e063a35619d71f

  var _default = _controller.default.extend(_listController.default, {
    actions: {
      onDelete() {
        this.send('reload');
      }

    }
  });

  _exports.default = _default;
});
;define("vault/controllers/vault/cluster/access/identity/create", ["exports", "@ember/controller", "ember-concurrency"], function (_exports, _controller, _emberConcurrency) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/controller",0,"ember-concurrency"eaimeta@70e063a35619d71f

  var _default = _controller.default.extend({
    showRoute: 'vault.cluster.access.identity.show',
    showTab: 'details',
    navAfterSave: (0, _emberConcurrency.task)(function* (_ref) {
      let {
        saveType,
        model
      } = _ref;
      const isDelete = saveType === 'delete';
      const type = model.get('identityType');
      const listRoutes = {
        'entity-alias': 'vault.cluster.access.identity.aliases.index',
        'group-alias': 'vault.cluster.access.identity.aliases.index',
        group: 'vault.cluster.access.identity.index',
        entity: 'vault.cluster.access.identity.index'
      };
      const routeName = listRoutes[type];

      if (!isDelete) {
        yield this.transitionToRoute(this.showRoute, model.id, this.showTab);
        return;
      }

      yield this.transitionToRoute(routeName);
    })
  });

  _exports.default = _default;
});
;define("vault/controllers/vault/cluster/access/identity/edit", ["exports", "vault/controllers/vault/cluster/access/identity/create"], function (_exports, _create) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/controllers/vault/cluster/access/identity/create"eaimeta@70e063a35619d71f

  var _default = _create.default.extend();

  _exports.default = _default;
});
;define("vault/controllers/vault/cluster/access/identity/index", ["exports", "@ember/service", "@ember/controller", "core/mixins/list-controller"], function (_exports, _service, _controller, _listController) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@ember/controller",0,"core/mixins/list-controller"eaimeta@70e063a35619d71f

  var _default = _controller.default.extend(_listController.default, {
    flashMessages: (0, _service.inject)(),
    actions: {
      delete(model) {
        const type = model.get('identityType');
        const id = model.id;
        return model.destroyRecord().then(() => {
          this.send('reload');
          this.flashMessages.success(`Successfully deleted ${type}: ${id}`);
        }).catch(e => {
          this.flashMessages.success(`There was a problem deleting ${type}: ${id} - ${e.errors.join(' ') || e.message}`);
        });
      },

      toggleDisabled(model) {
        const action = model.get('disabled') ? ['enabled', 'enabling'] : ['disabled', 'disabling'];
        const type = model.get('identityType');
        const id = model.id;
        model.toggleProperty('disabled');
        model.save().then(() => {
          this.flashMessages.success(`Successfully ${action[0]} ${type}: ${id}`);
        }).catch(e => {
          this.flashMessages.success(`There was a problem ${action[1]} ${type}: ${id} - ${e.errors.join(' ') || e.message}`);
        });
      },

      reloadRecord(model) {
        model.reload();
      }

    }
  });

  _exports.default = _default;
});
;define("vault/controllers/vault/cluster/access/identity/merge", ["exports", "vault/controllers/vault/cluster/access/identity/create"], function (_exports, _create) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/controllers/vault/cluster/access/identity/create"eaimeta@70e063a35619d71f

  var _default = _create.default.extend();

  _exports.default = _default;
});
;define("vault/controllers/vault/cluster/access/leases/index", ["exports", "@ember/controller"], function (_exports, _controller) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/controller"eaimeta@70e063a35619d71f

  var _default = _controller.default.extend({
    actions: {
      lookupLease(id) {
        this.transitionToRoute('vault.cluster.access.leases.show', id);
      }

    }
  });

  _exports.default = _default;
});
;define("vault/controllers/vault/cluster/access/leases/list-root", ["exports", "vault/controllers/vault/cluster/access/leases/list"], function (_exports, _list) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _list.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"vault/controllers/vault/cluster/access/leases/list"eaimeta@70e063a35619d71f
});
;define("vault/controllers/vault/cluster/access/leases/list", ["exports", "@ember/service", "@ember/object", "@ember/controller", "vault/lib/key-utils", "core/mixins/list-controller"], function (_exports, _service, _object, _controller, _keyUtils, _listController) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@ember/object",0,"@ember/controller",0,"vault/lib/key-utils",0,"core/mixins/list-controller"eaimeta@70e063a35619d71f

  var _default = _controller.default.extend(_listController.default, {
    flashMessages: (0, _service.inject)(),
    store: (0, _service.inject)(),
    clusterController: (0, _controller.inject)('vault.cluster'),
    backendCrumb: (0, _object.computed)('clusterController.model.name', function () {
      return {
        label: 'leases',
        text: 'leases',
        path: 'vault.cluster.access.leases.list-root',
        model: this.clusterController.model.name
      };
    }),
    isLoading: false,
    filterIsFolder: (0, _object.computed)('filter', function () {
      return !!_keyUtils.default.keyIsFolder(this.filter);
    }),
    emptyTitle: (0, _object.computed)('baseKey.id', 'filter', 'filterIsFolder', function () {
      const id = this.baseKey.id;
      const filter = this.filter;

      if (id === '') {
        return 'There are currently no leases.';
      }

      if (this.filterIsFolder) {
        if (filter === id) {
          return `There are no leases under &quot;${filter}&quot;.`;
        } else {
          return `We couldn't find a prefix matching &quot;${filter}&quot;.`;
        }
      }

      return '';
    }),
    actions: {
      revokePrefix(prefix, isForce) {
        const adapter = this.store.adapterFor('lease');
        const method = isForce ? 'forceRevokePrefix' : 'revokePrefix';
        const fn = adapter[method];
        fn.call(adapter, prefix).then(() => {
          return this.transitionToRoute('vault.cluster.access.leases.list-root').then(() => {
            this.flashMessages.success(`All of the leases under ${prefix} will be revoked.`);
          });
        }).catch(e => {
          const errString = e.errors.join('.');
          this.flashMessages.danger(`There was an error attempting to revoke the prefix: ${prefix}. ${errString}.`);
        });
      }

    }
  });

  _exports.default = _default;
});
;define("vault/controllers/vault/cluster/access/leases/show", ["exports", "@ember/runloop", "@ember/service", "@ember/object", "@ember/controller"], function (_exports, _runloop, _service, _object, _controller) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/runloop",0,"@ember/service",0,"@ember/object",0,"@ember/controller"eaimeta@70e063a35619d71f

  var _default = _controller.default.extend({
    clusterController: (0, _controller.inject)('vault.cluster'),
    backendCrumb: (0, _object.computed)('clusterController.model.name', function () {
      return {
        label: 'leases',
        text: 'leases',
        path: 'vault.cluster.access.leases.list-root',
        model: this.clusterController.model.name
      };
    }),
    flashMessages: (0, _service.inject)(),
    actions: {
      revokeLease(model) {
        return model.destroyRecord().then(() => {
          return this.transitionToRoute('vault.cluster.access.leases.list-root');
        });
      },

      renewLease(model, increment) {
        const adapter = model.store.adapterFor('lease');
        const flash = this.flashMessages;
        adapter.renew(model.id, increment?.seconds).then(() => {
          this.send('refreshModel'); // lol this is terrible, but there's no way to get the promise from the route refresh

          (0, _runloop.next)(() => {
            flash.success(`The lease ${model.id} was successfully renewed.`);
          });
        }).catch(e => {
          const errString = e.errors.join('.');
          flash.danger(`There was an error renewing the lease: ${errString}`);
        });
      }

    }
  });

  _exports.default = _default;
});
;define("vault/controllers/vault/cluster/access/method/item/list", ["exports", "@ember/controller", "vault/mixins/list-controller"], function (_exports, _controller, _listController) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/controller",0,"vault/mixins/list-controller"eaimeta@70e063a35619d71f

  var _default = _controller.default.extend(_listController.default, {});

  _exports.default = _default;
});
;define("vault/controllers/vault/cluster/access/methods", ["exports", "@ember/controller", "ember-concurrency", "@ember/service", "@ember/object", "@glimmer/tracking"], function (_exports, _controller, _emberConcurrency, _service, _object, _tracking) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2, _descriptor3, _descriptor4;

  0; //eaimeta@70e063a35619d71f0,"@ember/controller",0,"ember-concurrency",0,"@ember/service",0,"@ember/object",0,"@glimmer/tracking"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let VaultClusterAccessMethodsController = (_class = class VaultClusterAccessMethodsController extends _controller.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "flashMessages", _descriptor, this);

      _initializerDefineProperty(this, "authMethodOptions", _descriptor2, this);

      _initializerDefineProperty(this, "selectedAuthType", _descriptor3, this);

      _initializerDefineProperty(this, "selectedAuthName", _descriptor4, this);

      _defineProperty(this, "queryParams", ['page, pageFilter']);

      _defineProperty(this, "page", 1);

      _defineProperty(this, "pageFilter", null);

      _defineProperty(this, "filter", null);
    }

    get authMethodList() {
      // return an options list to filter by engine type, ex: 'kv'
      if (this.selectedAuthType) {
        // check first if the user has also filtered by name.
        // names are individualized across type so you can't have the same name for an aws auth method and userpass.
        // this means it's fine to filter by first type and then name or just name.
        if (this.selectedAuthName) {
          return this.model.filter(method => this.selectedAuthName === method.id);
        } // otherwise filter by auth type


        return this.model.filter(method => this.selectedAuthType === method.type);
      } // return an options list to filter by auth name, ex: 'my-userpass'


      if (this.selectedAuthName) {
        return this.model.filter(method => this.selectedAuthName === method.id);
      } // no filters, return full sorted list.


      return this.model;
    }

    get authMethodArrayByType() {
      const arrayOfAllAuthTypes = this.authMethodList.map(modelObject => modelObject.type); // filter out repeated auth types (e.g. [userpass, userpass] => [userpass])

      const arrayOfUniqueAuthTypes = [...new Set(arrayOfAllAuthTypes)];
      return arrayOfUniqueAuthTypes.map(authType => ({
        name: authType,
        id: authType
      }));
    }

    get authMethodArrayByName() {
      return this.authMethodList.map(modelObject => ({
        name: modelObject.id,
        id: modelObject.id
      }));
    }

    filterAuthType(_ref) {
      let [type] = _ref;
      this.selectedAuthType = type;
    }

    filterAuthName(_ref2) {
      let [name] = _ref2;
      this.selectedAuthName = name;
    }

    *disableMethod(method) {
      const {
        type,
        path
      } = method;

      try {
        yield method.destroyRecord();
        this.flashMessages.success(`The ${type} Auth Method at ${path} has been disabled.`);
      } catch (err) {
        this.flashMessages.danger(`There was an error disabling Auth Method at ${path}: ${err.errors.join(' ')}.`);
      }
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "flashMessages", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "authMethodOptions", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return [];
    }
  }), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, "selectedAuthType", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return null;
    }
  }), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, "selectedAuthName", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return null;
    }
  }), _applyDecoratedDescriptor(_class.prototype, "filterAuthType", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "filterAuthType"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "filterAuthName", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "filterAuthName"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "disableMethod", [_emberConcurrency.dropTask], Object.getOwnPropertyDescriptor(_class.prototype, "disableMethod"), _class.prototype)), _class);
  _exports.default = VaultClusterAccessMethodsController;
});
;define("vault/controllers/vault/cluster/access/mfa/enforcements/enforcement/index", ["exports", "@ember/controller", "@glimmer/tracking", "@ember/object", "@ember/service"], function (_exports, _controller, _tracking, _object, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2, _descriptor3, _descriptor4;

  0; //eaimeta@70e063a35619d71f0,"@ember/controller",0,"@glimmer/tracking",0,"@ember/object",0,"@ember/service"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let MfaLoginEnforcementIndexController = (_class = class MfaLoginEnforcementIndexController extends _controller.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "router", _descriptor, this);

      _initializerDefineProperty(this, "flashMessages", _descriptor2, this);

      _defineProperty(this, "queryParams", ['tab']);

      _defineProperty(this, "tab", 'targets');

      _initializerDefineProperty(this, "showDeleteConfirmation", _descriptor3, this);

      _initializerDefineProperty(this, "deleteError", _descriptor4, this);
    }

    async delete() {
      try {
        await this.model.destroyRecord();
        this.showDeleteConfirmation = false;
        this.flashMessages.success('MFA login enforcement deleted successfully');
        this.router.transitionTo('vault.cluster.access.mfa.enforcements');
      } catch (error) {
        this.deleteError = error;
      }
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "router", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "flashMessages", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, "showDeleteConfirmation", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return false;
    }
  }), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, "deleteError", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _applyDecoratedDescriptor(_class.prototype, "delete", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "delete"), _class.prototype)), _class);
  _exports.default = MfaLoginEnforcementIndexController;
});
;define("vault/controllers/vault/cluster/access/mfa/enforcements/index", ["exports", "@ember/controller"], function (_exports, _controller) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/controller"eaimeta@70e063a35619d71f

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  class MfaEnforcementListController extends _controller.default {
    constructor() {
      super(...arguments);

      _defineProperty(this, "queryParams", ['page']);

      _defineProperty(this, "page", 1);
    }

  }

  _exports.default = MfaEnforcementListController;
});
;define("vault/controllers/vault/cluster/access/mfa/methods", ["exports", "@ember/controller"], function (_exports, _controller) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/controller"eaimeta@70e063a35619d71f

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  class MfaMethodsListController extends _controller.default {
    constructor() {
      super(...arguments);

      _defineProperty(this, "queryParams", ['page']);

      _defineProperty(this, "page", 1);
    }

  }

  _exports.default = MfaMethodsListController;
});
;define("vault/controllers/vault/cluster/access/mfa/methods/create", ["exports", "@ember/controller", "@ember/service", "@glimmer/tracking", "@ember/object", "@ember/string", "ember-concurrency"], function (_exports, _controller, _service, _tracking, _object, _string, _emberConcurrency) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9;

  0; //eaimeta@70e063a35619d71f0,"@ember/controller",0,"@ember/service",0,"@glimmer/tracking",0,"@ember/object",0,"@ember/string",0,"ember-concurrency"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let MfaMethodCreateController = (_class = class MfaMethodCreateController extends _controller.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);

      _initializerDefineProperty(this, "flashMessages", _descriptor2, this);

      _initializerDefineProperty(this, "router", _descriptor3, this);

      _defineProperty(this, "queryParams", ['type']);

      _defineProperty(this, "methodNames", ['TOTP', 'Duo', 'Okta', 'PingID']);

      _initializerDefineProperty(this, "type", _descriptor4, this);

      _initializerDefineProperty(this, "method", _descriptor5, this);

      _initializerDefineProperty(this, "enforcement", _descriptor6, this);

      _initializerDefineProperty(this, "enforcementPreference", _descriptor7, this);

      _initializerDefineProperty(this, "methodErrors", _descriptor8, this);

      _initializerDefineProperty(this, "enforcementErrors", _descriptor9, this);
    }

    get description() {
      if (this.type === 'totp') {
        return `Once set up, TOTP requires a passcode to be presented alongside a Vault token when invoking an API request.
        The passcode will be validated against the TOTP key present in the identity of the caller in Vault.`;
      }

      return `Once set up, the ${this.formattedType} MFA method will require a push confirmation on mobile before login.`;
    }

    get formattedType() {
      if (!this.type) return '';
      return this.type === 'totp' ? this.type.toUpperCase() : (0, _string.capitalize)(this.type);
    }

    get isTotp() {
      return this.type === 'totp';
    }

    get showForms() {
      return this.type && this.method;
    }

    onTypeSelect(type) {
      // set any form related properties to default values
      this.method = null;
      this.enforcement = null;
      this.methodErrors = null;
      this.enforcementErrors = null;
      this.enforcementPreference = 'new';
      this.type = type;
    }

    createModels() {
      if (this.method) {
        this.method.unloadRecord();
      }

      if (this.enforcement) {
        this.enforcement.unloadRecord();
      }

      this.method = this.store.createRecord('mfa-method', {
        type: this.type
      });
      this.enforcement = this.store.createRecord('mfa-login-enforcement');
    }

    onEnforcementPreferenceChange(preference) {
      if (preference === 'new') {
        this.enforcement = this.store.createRecord('mfa-login-enforcement');
      } else if (this.enforcement) {
        this.enforcement.unloadRecord();
        this.enforcement = null;
      }

      this.enforcementPreference = preference;
    }

    cancel() {
      this.method = null;
      this.enforcement = null;
      this.enforcementPreference = null;
      this.router.transitionTo('vault.cluster.access.mfa.methods');
    }

    *save() {
      const isValid = this.checkValidityState();

      if (isValid) {
        try {
          // first save method
          yield this.method.save();

          if (this.enforcement) {
            this.enforcement.mfa_methods.addObject(this.method);

            try {
              // now save enforcement and catch error separately
              yield this.enforcement.save();
            } catch (error) {
              this.handleError(error, 'Error saving enforcement. You can still create an enforcement separately and add this method to it.');
            }
          }

          this.router.transitionTo('vault.cluster.access.mfa.methods.method', this.method.id);
        } catch (error) {
          this.handleError(error, 'Error saving method');
        }
      }
    }

    checkValidityState() {
      // block saving models if either is in an invalid state
      let isEnforcementValid = true;
      const methodValidations = this.method.validate();

      if (!methodValidations.isValid) {
        this.methodErrors = methodValidations.state;
      } // only validate enforcement if creating new


      if (this.enforcementPreference === 'new') {
        const enforcementValidations = this.enforcement.validate(); // since we are adding the method after it has been saved ignore mfa_methods validation state

        const {
          name,
          targets
        } = enforcementValidations.state;
        isEnforcementValid = name.isValid && targets.isValid;

        if (!enforcementValidations.isValid) {
          this.enforcementErrors = enforcementValidations.state;
        }
      }

      return methodValidations.isValid && isEnforcementValid;
    }

    handleError(error, message) {
      const errorMessage = error?.errors ? `${message}: ${error.errors.join(', ')}` : message;
      this.flashMessages.danger(errorMessage);
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "flashMessages", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, "router", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, "type", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return null;
    }
  }), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, "method", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return null;
    }
  }), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, "enforcement", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, "enforcementPreference", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return 'new';
    }
  }), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, "methodErrors", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, "enforcementErrors", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _applyDecoratedDescriptor(_class.prototype, "onTypeSelect", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "onTypeSelect"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "createModels", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "createModels"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "onEnforcementPreferenceChange", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "onEnforcementPreferenceChange"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "cancel", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "cancel"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "save", [_emberConcurrency.task], Object.getOwnPropertyDescriptor(_class.prototype, "save"), _class.prototype)), _class);
  _exports.default = MfaMethodCreateController;
});
;define("vault/controllers/vault/cluster/access/mfa/methods/method/index", ["exports", "@ember/controller", "@ember/service", "@ember/object"], function (_exports, _controller, _service, _object) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2;

  0; //eaimeta@70e063a35619d71f0,"@ember/controller",0,"@ember/service",0,"@ember/object"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let MfaMethodController = (_class = class MfaMethodController extends _controller.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "router", _descriptor, this);

      _initializerDefineProperty(this, "flashMessages", _descriptor2, this);

      _defineProperty(this, "queryParams", ['tab']);

      _defineProperty(this, "tab", 'config');
    }

    async deleteMethod() {
      try {
        await this.model.method.destroyRecord();
        this.flashMessages.success('MFA method deleted successfully.');
        this.router.transitionTo('vault.cluster.access.mfa.methods');
      } catch (error) {
        this.flashMessages.danger(`There was an error deleting this MFA method.`);
      }
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "router", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "flashMessages", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _applyDecoratedDescriptor(_class.prototype, "deleteMethod", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "deleteMethod"), _class.prototype)), _class);
  _exports.default = MfaMethodController;
});
;define("vault/controllers/vault/cluster/access/namespaces/create", ["exports", "@ember/service", "@ember/controller"], function (_exports, _service, _controller) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@ember/controller"eaimeta@70e063a35619d71f

  var _default = _controller.default.extend({
    namespaceService: (0, _service.inject)('namespace'),
    actions: {
      onSave(_ref) {
        let {
          saveType
        } = _ref;

        if (saveType === 'save') {
          // fetch new namespaces for the namespace picker
          this.namespaceService.findNamespacesForUser.perform();
          return this.transitionToRoute('vault.cluster.access.namespaces.index');
        }
      }

    }
  });

  _exports.default = _default;
});
;define("vault/controllers/vault/cluster/access/namespaces/index", ["exports", "@ember/service", "@ember/object/computed", "@ember/controller"], function (_exports, _service, _computed, _controller) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@ember/object/computed",0,"@ember/controller"eaimeta@70e063a35619d71f

  var _default = _controller.default.extend({
    namespaceService: (0, _service.inject)('namespace'),
    accessibleNamespaces: (0, _computed.alias)('namespaceService.accessibleNamespaces'),
    currentNamespace: (0, _computed.alias)('namespaceService.path'),
    actions: {
      refreshNamespaceList() {
        // fetch new namespaces for the namespace picker
        this.namespaceService.findNamespacesForUser.perform();
        this.send('reload');
      }

    }
  });

  _exports.default = _default;
});
;define("vault/controllers/vault/cluster/access/oidc", ["exports", "@ember/controller", "@ember/service", "@glimmer/tracking"], function (_exports, _controller, _service, _tracking) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2;

  0; //eaimeta@70e063a35619d71f0,"@ember/controller",0,"@ember/service",0,"@glimmer/tracking"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let OidcConfigureController = (_class = class OidcConfigureController extends _controller.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "router", _descriptor, this);

      _initializerDefineProperty(this, "header", _descriptor2, this);

      this.router.on('routeDidChange', transition => this.setHeader(transition));
    }

    setHeader(transition) {
      // set correct header state based on child route
      // when no clients have been created, display create button as call to action
      // list views share the same header with tabs as resource links
      // the remaining routes are responsible for their own header
      const routeName = transition.to.name;

      if (routeName.includes('oidc.index')) {
        this.header = 'cta';
      } else {
        const isList = ['clients', 'assignments', 'keys', 'scopes', 'providers'].find(resource => {
          return routeName.includes(`${resource}.index`);
        });
        this.header = isList ? 'list' : null;
      }
    }

    get isCta() {
      return this.header === 'cta';
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "router", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "header", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return null;
    }
  })), _class);
  _exports.default = OidcConfigureController;
});
;define("vault/controllers/vault/cluster/access/oidc/assignments/assignment/details", ["exports", "@ember/controller", "@ember/object", "@ember/service"], function (_exports, _controller, _object, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2;

  0; //eaimeta@70e063a35619d71f0,"@ember/controller",0,"@ember/object",0,"@ember/service"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let OidcAssignmentDetailsController = (_class = class OidcAssignmentDetailsController extends _controller.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "router", _descriptor, this);

      _initializerDefineProperty(this, "flashMessages", _descriptor2, this);
    }

    async delete() {
      try {
        await this.model.destroyRecord();
        this.flashMessages.success('Assignment deleted successfully');
        this.router.transitionTo('vault.cluster.access.oidc.assignments');
      } catch (error) {
        this.model.rollbackAttributes();
        const message = error.errors ? error.errors.join('. ') : error.message;
        this.flashMessages.danger(message);
      }
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "router", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "flashMessages", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _applyDecoratedDescriptor(_class.prototype, "delete", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "delete"), _class.prototype)), _class);
  _exports.default = OidcAssignmentDetailsController;
});
;define("vault/controllers/vault/cluster/access/oidc/clients/client", ["exports", "@ember/controller", "@ember/service", "@glimmer/tracking"], function (_exports, _controller, _service, _tracking) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2;

  0; //eaimeta@70e063a35619d71f0,"@ember/controller",0,"@ember/service",0,"@glimmer/tracking"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let OidcClientController = (_class = class OidcClientController extends _controller.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "router", _descriptor, this);

      _initializerDefineProperty(this, "isEditRoute", _descriptor2, this);

      this.router.on('routeDidChange', _ref => {
        let {
          targetName
        } = _ref;
        return this.isEditRoute = targetName.includes('edit') ? true : false;
      });
    }

    get showHeader() {
      // hide header when rendering the edit form
      return !this.isEditRoute;
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "router", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "isEditRoute", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class);
  _exports.default = OidcClientController;
});
;define("vault/controllers/vault/cluster/access/oidc/clients/client/details", ["exports", "@ember/controller", "@ember/object", "@ember/service"], function (_exports, _controller, _object, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2;

  0; //eaimeta@70e063a35619d71f0,"@ember/controller",0,"@ember/object",0,"@ember/service"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let OidcClientDetailsController = (_class = class OidcClientDetailsController extends _controller.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "router", _descriptor, this);

      _initializerDefineProperty(this, "flashMessages", _descriptor2, this);
    }

    async delete() {
      try {
        await this.model.destroyRecord();
        this.flashMessages.success('Application deleted successfully');
        this.router.transitionTo('vault.cluster.access.oidc.clients');
      } catch (error) {
        this.model.rollbackAttributes();
        const message = error.errors ? error.errors.join('. ') : error.message;
        this.flashMessages.danger(message);
      }
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "router", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "flashMessages", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _applyDecoratedDescriptor(_class.prototype, "delete", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "delete"), _class.prototype)), _class);
  _exports.default = OidcClientDetailsController;
});
;define("vault/controllers/vault/cluster/access/oidc/keys/key", ["exports", "@ember/controller", "@ember/service", "@glimmer/tracking"], function (_exports, _controller, _service, _tracking) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2;

  0; //eaimeta@70e063a35619d71f0,"@ember/controller",0,"@ember/service",0,"@glimmer/tracking"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let OidcKeyController = (_class = class OidcKeyController extends _controller.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "router", _descriptor, this);

      _initializerDefineProperty(this, "isEditRoute", _descriptor2, this);

      this.router.on('routeDidChange', _ref => {
        let {
          targetName
        } = _ref;
        return this.isEditRoute = targetName.includes('edit') ? true : false;
      });
    }

    get showHeader() {
      // hide header when rendering the edit form
      return !this.isEditRoute;
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "router", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "isEditRoute", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class);
  _exports.default = OidcKeyController;
});
;define("vault/controllers/vault/cluster/access/oidc/keys/key/details", ["exports", "@ember/controller", "@ember/object", "@ember/service", "ember-concurrency", "@ember/test-waiters"], function (_exports, _controller, _object, _service, _emberConcurrency, _testWaiters) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2, _descriptor3;

  0; //eaimeta@70e063a35619d71f0,"@ember/controller",0,"@ember/object",0,"@ember/service",0,"ember-concurrency",0,"@ember/test-waiters"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let OidcKeyDetailsController = (_class = class OidcKeyDetailsController extends _controller.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);

      _initializerDefineProperty(this, "router", _descriptor2, this);

      _initializerDefineProperty(this, "flashMessages", _descriptor3, this);
    }

    *rotateKey() {
      const adapter = this.store.adapterFor('oidc/key');
      yield adapter.rotate(this.model.name, this.model.verificationTtl).then(() => {
        this.flashMessages.success(`Success: ${this.model.name} connection was rotated.`);
      }).catch(e => {
        this.flashMessages.danger(e.errors);
      });
    }

    async delete() {
      try {
        await this.model.destroyRecord();
        this.flashMessages.success('Key deleted successfully');
        this.router.transitionTo('vault.cluster.access.oidc.keys');
      } catch (error) {
        this.model.rollbackAttributes();
        const message = error.errors ? error.errors.join('. ') : error.message;
        this.flashMessages.danger(message);
      }
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "router", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, "flashMessages", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _applyDecoratedDescriptor(_class.prototype, "rotateKey", [_emberConcurrency.task, _testWaiters.waitFor], Object.getOwnPropertyDescriptor(_class.prototype, "rotateKey"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "delete", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "delete"), _class.prototype)), _class);
  _exports.default = OidcKeyDetailsController;
});
;define("vault/controllers/vault/cluster/access/oidc/providers/provider", ["exports", "@ember/controller", "@ember/service", "@glimmer/tracking"], function (_exports, _controller, _service, _tracking) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2;

  0; //eaimeta@70e063a35619d71f0,"@ember/controller",0,"@ember/service",0,"@glimmer/tracking"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let OidcProviderController = (_class = class OidcProviderController extends _controller.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "router", _descriptor, this);

      _initializerDefineProperty(this, "isEditRoute", _descriptor2, this);

      this.router.on('routeDidChange', _ref => {
        let {
          targetName
        } = _ref;
        return this.isEditRoute = targetName.includes('edit') ? true : false;
      });
    }

    get showHeader() {
      // hide header when rendering the edit form
      return !this.isEditRoute;
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "router", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "isEditRoute", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class);
  _exports.default = OidcProviderController;
});
;define("vault/controllers/vault/cluster/access/oidc/providers/provider/details", ["exports", "@ember/controller", "@ember/object", "@ember/service"], function (_exports, _controller, _object, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2;

  0; //eaimeta@70e063a35619d71f0,"@ember/controller",0,"@ember/object",0,"@ember/service"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let OidcProviderDetailsController = (_class = class OidcProviderDetailsController extends _controller.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "router", _descriptor, this);

      _initializerDefineProperty(this, "flashMessages", _descriptor2, this);
    }

    async delete() {
      try {
        await this.model.destroyRecord();
        this.flashMessages.success('Provider deleted successfully');
        this.router.transitionTo('vault.cluster.access.oidc.providers');
      } catch (error) {
        this.model.rollbackAttributes();
        const message = error.errors ? error.errors.join('. ') : error.message;
        this.flashMessages.danger(message);
      }
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "router", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "flashMessages", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _applyDecoratedDescriptor(_class.prototype, "delete", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "delete"), _class.prototype)), _class);
  _exports.default = OidcProviderDetailsController;
});
;define("vault/controllers/vault/cluster/access/oidc/scopes/scope/details", ["exports", "@ember/controller", "@ember/object", "@ember/service"], function (_exports, _controller, _object, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2;

  0; //eaimeta@70e063a35619d71f0,"@ember/controller",0,"@ember/object",0,"@ember/service"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let OidcScopeDetailsController = (_class = class OidcScopeDetailsController extends _controller.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "router", _descriptor, this);

      _initializerDefineProperty(this, "flashMessages", _descriptor2, this);
    }

    async delete() {
      try {
        await this.model.destroyRecord();
        this.flashMessages.success('Scope deleted successfully');
        this.router.transitionTo('vault.cluster.access.oidc.scopes');
      } catch (error) {
        this.model.rollbackAttributes();
        const message = error.errors ? error.errors.join('. ') : error.message;
        this.flashMessages.danger(message);
      }
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "router", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "flashMessages", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _applyDecoratedDescriptor(_class.prototype, "delete", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "delete"), _class.prototype)), _class);
  _exports.default = OidcScopeDetailsController;
});
;define("vault/controllers/vault/cluster/auth", ["exports", "@ember/service", "@ember/object/computed", "@ember/controller", "ember-concurrency"], function (_exports, _service, _computed, _controller, _emberConcurrency) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@ember/object/computed",0,"@ember/controller",0,"ember-concurrency"eaimeta@70e063a35619d71f

  var _default = _controller.default.extend({
    flashMessages: (0, _service.inject)(),
    vaultController: (0, _controller.inject)('vault'),
    clusterController: (0, _controller.inject)('vault.cluster'),
    namespaceService: (0, _service.inject)('namespace'),
    featureFlagService: (0, _service.inject)('featureFlag'),
    auth: (0, _service.inject)(),
    router: (0, _service.inject)(),
    queryParams: [{
      authMethod: 'with',
      oidcProvider: 'o'
    }],
    namespaceQueryParam: (0, _computed.alias)('clusterController.namespaceQueryParam'),
    wrappedToken: (0, _computed.alias)('vaultController.wrappedToken'),
    redirectTo: (0, _computed.alias)('vaultController.redirectTo'),
    managedNamespaceRoot: (0, _computed.alias)('featureFlagService.managedNamespaceRoot'),
    authMethod: '',
    oidcProvider: '',

    get managedNamespaceChild() {
      const fullParam = this.namespaceQueryParam;
      const split = fullParam.split('/');

      if (split.length > 1) {
        split.shift();
        return `/${split.join('/')}`;
      }

      return '';
    },

    updateManagedNamespace: (0, _emberConcurrency.task)(function* (value) {
      // debounce
      yield (0, _emberConcurrency.timeout)(500); // TODO: Move this to shared fn

      const newNamespace = `${this.managedNamespaceRoot}${value}`;
      this.namespaceService.setNamespace(newNamespace, true);
      this.set('namespaceQueryParam', newNamespace);
    }).restartable(),
    updateNamespace: (0, _emberConcurrency.task)(function* (value) {
      // debounce
      yield (0, _emberConcurrency.timeout)(500);
      this.namespaceService.setNamespace(value, true);
      this.set('namespaceQueryParam', value);
    }).restartable(),

    authSuccess(_ref) {
      let {
        isRoot,
        namespace
      } = _ref;
      let transition;

      if (this.redirectTo) {
        // here we don't need the namespace because it will be encoded in redirectTo
        transition = this.router.transitionTo(this.redirectTo); // reset the value on the controller because it's bound here

        this.set('redirectTo', '');
      } else {
        transition = this.router.transitionTo('vault.cluster', {
          queryParams: {
            namespace
          }
        });
      }

      transition.followRedirects().then(() => {
        if (isRoot) {
          this.flashMessages.warning('You have logged in with a root token. As a security precaution, this root token will not be stored by your browser and you will need to re-authenticate after the window is closed or refreshed.');
        }
      });
    },

    actions: {
      onAuthResponse(authResponse, backend, data) {
        const {
          mfa_requirement
        } = authResponse; // if an mfa requirement exists further action is required

        if (mfa_requirement) {
          this.set('mfaAuthData', {
            mfa_requirement,
            backend,
            data
          });
        } else {
          this.authSuccess(authResponse);
        }
      },

      onMfaSuccess(authResponse) {
        this.authSuccess(authResponse);
      },

      onMfaErrorDismiss() {
        this.setProperties({
          mfaAuthData: null,
          mfaErrors: null
        });
      },

      cancelAuthentication() {
        this.set('cancelAuth', true);
        this.set('waitingForOktaNumberChallenge', false);
      }

    }
  });

  _exports.default = _default;
});
;define("vault/controllers/vault/cluster/init", ["exports", "@ember/object", "@ember/controller"], function (_exports, _object, _controller) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/object",0,"@ember/controller"eaimeta@70e063a35619d71f

  const DEFAULTS = {
    keyData: null,
    secret_shares: null,
    secret_threshold: null,
    pgp_keys: null,
    use_pgp: false,
    loading: false
  };

  var _default = _controller.default.extend(DEFAULTS, {
    reset() {
      this.setProperties(DEFAULTS);
    },

    initSuccess(resp) {
      this.set('loading', false);
      this.set('keyData', resp);
      this.model.reload();
    },

    initError(e) {
      this.set('loading', false);

      if (e.httpStatus === 400) {
        this.set('errors', e.errors);
      } else {
        throw e;
      }
    },

    keyFilename: (0, _object.computed)('model.name', function () {
      return `vault-cluster-${this.model.name}`;
    }),
    actions: {
      initCluster(data) {
        var _this = this;

        const isCloudSeal = !!this.model.sealType && this.model.sealType !== 'shamir';

        if (data.secret_shares) {
          const shares = parseInt(data.secret_shares, 10);
          data.secret_shares = shares;

          if (isCloudSeal) {
            data.stored_shares = 1;
            data.recovery_shares = shares;
            delete data.secret_shares; // API will throw an error if secret_shares is passed for seal types other than shamir (transit, AWSKMS etc.)
          }
        }

        if (data.secret_threshold) {
          const threshold = parseInt(data.secret_threshold, 10);
          data.secret_threshold = threshold;

          if (isCloudSeal) {
            data.recovery_threshold = threshold;
            delete data.secret_threshold; // API will throw an error if secret_threshold is passed for seal types other than shamir (transit, AWSKMS etc.)
          }
        }

        if (!data.use_pgp) {
          delete data.pgp_keys;
        }

        if (data.use_pgp && isCloudSeal) {
          data.recovery_pgp_keys = data.pgp_keys;
        }

        if (!data.use_pgp_for_root) {
          delete data.root_token_pgp_key;
        }

        delete data.use_pgp;
        delete data.use_pgp_for_root;
        const store = this.model.store;
        this.setProperties({
          loading: true,
          errors: null
        });
        store.adapterFor('cluster').initCluster(data).then(resp => this.initSuccess(resp), function () {
          return _this.initError(...arguments);
        });
      },

      setKeys(data) {
        this.set('pgp_keys', data);
      },

      setRootKey(_ref) {
        let [key] = _ref;
        this.set('root_token_pgp_key', key);
      }

    }
  });

  _exports.default = _default;
});
;define("vault/controllers/vault/cluster/mfa-setup", ["exports", "@ember/controller", "@ember/service", "@ember/object", "@glimmer/tracking"], function (_exports, _controller, _service, _object, _tracking) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5;

  0; //eaimeta@70e063a35619d71f0,"@ember/controller",0,"@ember/service",0,"@ember/object",0,"@glimmer/tracking"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let VaultClusterMfaSetupController = (_class = class VaultClusterMfaSetupController extends _controller.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "auth", _descriptor, this);

      _initializerDefineProperty(this, "onStep", _descriptor2, this);

      _initializerDefineProperty(this, "warning", _descriptor3, this);

      _initializerDefineProperty(this, "uuid", _descriptor4, this);

      _initializerDefineProperty(this, "qrCode", _descriptor5, this);
    }

    get entityId() {
      return this.auth.authData.entity_id;
    }

    isUUIDVerified(verified) {
      this.warning = ''; // clear the warning, otherwise it persists.

      if (verified) {
        this.onStep = 2;
      } else {
        this.restartFlow();
      }
    }

    restartFlow() {
      this.onStep = 1;
    }

    saveUUIDandQrCode(uuid, qrCode) {
      // qrCode could be an empty string if the admin-generate was not successful
      this.uuid = uuid;
      this.qrCode = qrCode;
    }

    showWarning(warning) {
      this.warning = warning;
      this.onStep = 2;
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "auth", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "onStep", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return 1;
    }
  }), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, "warning", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return '';
    }
  }), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, "uuid", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return '';
    }
  }), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, "qrCode", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return '';
    }
  }), _applyDecoratedDescriptor(_class.prototype, "isUUIDVerified", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "isUUIDVerified"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "restartFlow", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "restartFlow"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "saveUUIDandQrCode", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "saveUUIDandQrCode"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "showWarning", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "showWarning"), _class.prototype)), _class);
  _exports.default = VaultClusterMfaSetupController;
});
;define("vault/controllers/vault/cluster/oidc-callback", ["exports", "@ember/controller"], function (_exports, _controller) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/controller"eaimeta@70e063a35619d71f

  var _default = _controller.default.extend({
    queryParams: ['state', 'code'],
    code: null,
    state: null
  });

  _exports.default = _default;
});
;define("vault/controllers/vault/cluster/oidc-provider-ns", ["exports", "vault/controllers/vault/cluster/oidc-provider"], function (_exports, _oidcProvider) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/controllers/vault/cluster/oidc-provider"eaimeta@70e063a35619d71f

  // Use same params as the base oidc-provider route
  class VaultClusterOidcProviderNsController extends _oidcProvider.default {}

  _exports.default = VaultClusterOidcProviderNsController;
});
;define("vault/controllers/vault/cluster/oidc-provider", ["exports", "@ember/controller"], function (_exports, _controller) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/controller"eaimeta@70e063a35619d71f

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  class VaultClusterOidcProviderController extends _controller.default {
    constructor() {
      super(...arguments);

      _defineProperty(this, "queryParams", ['scope', // *
      'response_type', // *
      'client_id', // *
      'redirect_uri', // *
      'state', // *
      'nonce', // *
      'display', 'prompt', 'max_age', 'code_challenge', 'code_challenge_method', 'request', 'request_uri']);

      _defineProperty(this, "scope", null);

      _defineProperty(this, "response_type", null);

      _defineProperty(this, "client_id", null);

      _defineProperty(this, "redirect_uri", null);

      _defineProperty(this, "state", null);

      _defineProperty(this, "nonce", null);

      _defineProperty(this, "display", null);

      _defineProperty(this, "prompt", null);

      _defineProperty(this, "max_age", null);

      _defineProperty(this, "code_challenge", null);

      _defineProperty(this, "code_challenge_method", null);

      _defineProperty(this, "request", null);

      _defineProperty(this, "request_uri", null);
    }

  }

  _exports.default = VaultClusterOidcProviderController;
});
;define("vault/controllers/vault/cluster/policies/index", ["exports", "@ember/service", "@ember/object", "@ember/controller"], function (_exports, _service, _object, _controller) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@ember/object",0,"@ember/controller"eaimeta@70e063a35619d71f

  var _default = _controller.default.extend({
    flashMessages: (0, _service.inject)(),
    queryParams: {
      page: 'page',
      pageFilter: 'pageFilter'
    },
    filter: null,
    page: 1,
    pageFilter: null,
    filterFocused: false,
    // set via the route `loading` action
    isLoading: false,
    filterMatchesKey: (0, _object.computed)('filter', 'model', 'model.[]', function () {
      var filter = this.filter;
      var content = this.model;
      return !!(content && content.length && content.findBy('id', filter));
    }),
    firstPartialMatch: (0, _object.computed)('filter', 'model', 'model.[]', 'filterMatchesKey', function () {
      var filter = this.filter;
      var content = this.model;

      if (!content) {
        return;
      }

      var filterMatchesKey = this.filterMatchesKey;
      var re = new RegExp('^' + filter);
      return filterMatchesKey ? null : content.find(function (key) {
        return re.test(key.get('id'));
      });
    }),
    actions: {
      setFilter: function (val) {
        this.set('filter', val);
      },
      setFilterFocus: function (bool) {
        this.set('filterFocused', bool);
      },

      deletePolicy(model) {
        const policyType = model.get('policyType');
        const name = model.id;
        const flash = this.flashMessages;
        model.destroyRecord().then(() => {
          // this will clear the dataset cache on the store
          this.send('reload');
          flash.success(`${policyType.toUpperCase()} policy "${name}" was successfully deleted.`);
        }).catch(e => {
          const errors = e.errors ? e.errors.join('') : e.message;
          flash.danger(`There was an error deleting the ${policyType.toUpperCase()} policy "${name}": ${errors}.`);
        });
      }

    }
  });

  _exports.default = _default;
});
;define("vault/controllers/vault/cluster/policy/edit", ["exports", "@ember/controller", "@ember/object", "@ember/service"], function (_exports, _controller, _object, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2;

  0; //eaimeta@70e063a35619d71f0,"@ember/controller",0,"@ember/object",0,"@ember/service"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let PolicyEditController = (_class = class PolicyEditController extends _controller.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "router", _descriptor, this);

      _initializerDefineProperty(this, "flashMessages", _descriptor2, this);
    }

    async deletePolicy() {
      const {
        policyType,
        name
      } = this.model;

      try {
        await this.model.destroyRecord();
        this.flashMessages.success(`${policyType.toUpperCase()} policy "${name}" was successfully deleted.`);
        this.router.transitionTo('vault.cluster.policies', policyType);
      } catch (error) {
        this.model.rollbackAttributes();
        const errors = error.errors ? error.errors.join('. ') : error.message;
        const message = `There was an error deleting the ${policyType.toUpperCase()} policy "${name}": ${errors}.`;
        this.flashMessages.danger(message);
      }
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "router", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "flashMessages", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _applyDecoratedDescriptor(_class.prototype, "deletePolicy", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "deletePolicy"), _class.prototype)), _class);
  _exports.default = PolicyEditController;
});
;define("vault/controllers/vault/cluster/secrets/backend", ["exports", "@ember/controller"], function (_exports, _controller) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/controller"eaimeta@70e063a35619d71f

  var _default = _controller.default.extend({
    preferAdvancedEdit: false
  });

  _exports.default = _default;
});
;define("vault/controllers/vault/cluster/secrets/backend/actions-root", ["exports", "vault/controllers/vault/cluster/secrets/backend/actions"], function (_exports, _actions) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _actions.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"vault/controllers/vault/cluster/secrets/backend/actions"eaimeta@70e063a35619d71f
});
;define("vault/controllers/vault/cluster/secrets/backend/actions", ["exports", "@ember/controller", "vault/mixins/backend-crumb"], function (_exports, _controller, _backendCrumb) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/controller",0,"vault/mixins/backend-crumb"eaimeta@70e063a35619d71f

  var _default = _controller.default.extend(_backendCrumb.default, {
    queryParams: {
      selectedAction: 'action'
    },
    actions: {
      refresh: function () {
        // closure actions don't bubble to routes,
        // so we have to manually bubble here
        this.send('refreshModel');
      }
    }
  });

  _exports.default = _default;
});
;define("vault/controllers/vault/cluster/secrets/backend/configuration", ["exports", "@ember/object", "@ember/controller"], function (_exports, _object, _controller) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/object",0,"@ember/controller"eaimeta@70e063a35619d71f

  var _default = _controller.default.extend({
    isConfigurable: (0, _object.computed)('model.type', function () {
      const configurableEngines = ['aws', 'ssh'];
      return configurableEngines.includes(this.model.type);
    })
  });

  _exports.default = _default;
});
;define("vault/controllers/vault/cluster/secrets/backend/create-root", ["exports", "vault/controllers/vault/cluster/secrets/backend/create"], function (_exports, _create) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _create.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"vault/controllers/vault/cluster/secrets/backend/create"eaimeta@70e063a35619d71f
});
;define("vault/controllers/vault/cluster/secrets/backend/create", ["exports", "@ember/controller", "vault/mixins/backend-crumb"], function (_exports, _controller, _backendCrumb) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/controller",0,"vault/mixins/backend-crumb"eaimeta@70e063a35619d71f

  var _default = _controller.default.extend(_backendCrumb.default, {
    backendController: (0, _controller.inject)('vault.cluster.secrets.backend'),
    queryParams: ['initialKey', 'itemType'],
    initialKey: '',
    itemType: '',
    actions: {
      refresh: function () {
        this.send('refreshModel');
      },

      toggleAdvancedEdit(bool) {
        this.set('preferAdvancedEdit', bool);
        this.backendController.set('preferAdvancedEdit', bool);
      }

    }
  });

  _exports.default = _default;
});
;define("vault/controllers/vault/cluster/secrets/backend/credentials-root", ["exports", "vault/controllers/vault/cluster/secrets/backend/credentials"], function (_exports, _credentials) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _credentials.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"vault/controllers/vault/cluster/secrets/backend/credentials"eaimeta@70e063a35619d71f
});
;define("vault/controllers/vault/cluster/secrets/backend/credentials", ["exports", "@ember/controller"], function (_exports, _controller) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/controller"eaimeta@70e063a35619d71f

  var _default = _controller.default.extend({
    queryParams: ['action', 'roleType'],
    action: '',
    roleType: '',

    reset() {
      this.set('action', '');
      this.set('roleType', '');
    }

  });

  _exports.default = _default;
});
;define("vault/controllers/vault/cluster/secrets/backend/diff", ["exports", "@ember/controller", "vault/mixins/backend-crumb"], function (_exports, _controller, _backendCrumb) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/controller",0,"vault/mixins/backend-crumb"eaimeta@70e063a35619d71f

  class DiffController extends _controller.default.extend(_backendCrumb.default) {}

  _exports.default = DiffController;
});
;define("vault/controllers/vault/cluster/secrets/backend/edit-root", ["exports", "vault/controllers/vault/cluster/secrets/backend/edit"], function (_exports, _edit) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _edit.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"vault/controllers/vault/cluster/secrets/backend/edit"eaimeta@70e063a35619d71f
});
;define("vault/controllers/vault/cluster/secrets/backend/edit", ["exports", "@ember/controller", "vault/mixins/backend-crumb"], function (_exports, _controller, _backendCrumb) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/controller",0,"vault/mixins/backend-crumb"eaimeta@70e063a35619d71f

  var _default = _controller.default.extend(_backendCrumb.default, {
    backendController: (0, _controller.inject)('vault.cluster.secrets.backend'),
    queryParams: ['version', 'itemType'],
    version: '',
    itemType: '',

    reset() {
      this.set('version', '');
      this.set('itemType', '');
    },

    actions: {
      refresh: function () {
        // closure actions don't bubble to routes,
        // so we have to manually bubble here
        this.send('refreshModel');
      },

      toggleAdvancedEdit(bool) {
        this.set('preferAdvancedEdit', bool);
        this.backendController.set('preferAdvancedEdit', bool);
      }

    }
  });

  _exports.default = _default;
});
;define("vault/controllers/vault/cluster/secrets/backend/list-root", ["exports", "vault/controllers/vault/cluster/secrets/backend/list"], function (_exports, _list) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _list.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"vault/controllers/vault/cluster/secrets/backend/list"eaimeta@70e063a35619d71f
});
;define("vault/controllers/vault/cluster/secrets/backend/list", ["exports", "@ember/object/computed", "@ember/object", "@ember/service", "@ember/controller", "vault/lib/key-utils", "vault/mixins/backend-crumb", "vault/mixins/with-nav-to-nearest-ancestor", "core/mixins/list-controller"], function (_exports, _computed, _object, _service, _controller, _keyUtils, _backendCrumb, _withNavToNearestAncestor, _listController) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/object/computed",0,"@ember/object",0,"@ember/service",0,"@ember/controller",0,"vault/lib/key-utils",0,"vault/mixins/backend-crumb",0,"vault/mixins/with-nav-to-nearest-ancestor",0,"core/mixins/list-controller"eaimeta@70e063a35619d71f

  var _default = _controller.default.extend(_listController.default, _backendCrumb.default, _withNavToNearestAncestor.default, {
    flashMessages: (0, _service.inject)(),
    queryParams: ['page', 'pageFilter', 'tab'],
    tab: '',
    filterIsFolder: (0, _object.computed)('filter', function () {
      return !!_keyUtils.default.keyIsFolder(this.filter);
    }),
    isConfigurableTab: (0, _computed.or)('isCertTab', 'isConfigure'),
    actions: {
      chooseAction(action) {
        this.set('selectedAction', action);
      },

      toggleZeroAddress(item, backend) {
        item.toggleProperty('zeroAddress');
        this.set('loading-' + item.id, true);
        backend.saveZeroAddressConfig().catch(e => {
          item.set('zeroAddress', false);
          this.flashMessages.danger(e.message);
        }).finally(() => {
          this.set('loading-' + item.id, false);
        });
      },

      delete(item, type) {
        const name = item.id;
        item.destroyRecord().then(() => {
          this.flashMessages.success(`${name} was successfully deleted.`);
          this.send('reload');

          if (type === 'secret') {
            this.navToNearestAncestor.perform(name);
          }
        }).catch(e => {
          const error = e.errors ? e.errors.join('. ') : e.message;
          this.flashMessages.danger(error);
        });
      }

    }
  });

  _exports.default = _default;
});
;define("vault/controllers/vault/cluster/secrets/backend/metadata", ["exports", "@ember/controller", "vault/mixins/backend-crumb", "@ember/object"], function (_exports, _controller, _backendCrumb, _object) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class;

  0; //eaimeta@70e063a35619d71f0,"@ember/controller",0,"vault/mixins/backend-crumb",0,"@ember/object"eaimeta@70e063a35619d71f

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  let MetadataController = (_class = class MetadataController extends _controller.default.extend(_backendCrumb.default) {
    refreshModel() {
      this.send('refreshModel');
    }

  }, (_applyDecoratedDescriptor(_class.prototype, "refreshModel", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "refreshModel"), _class.prototype)), _class);
  _exports.default = MetadataController;
});
;define("vault/controllers/vault/cluster/secrets/backend/show-root", ["exports", "vault/controllers/vault/cluster/secrets/backend/show"], function (_exports, _show) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _show.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"vault/controllers/vault/cluster/secrets/backend/show"eaimeta@70e063a35619d71f
});
;define("vault/controllers/vault/cluster/secrets/backend/show", ["exports", "@ember/controller", "vault/mixins/backend-crumb"], function (_exports, _controller, _backendCrumb) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/controller",0,"vault/mixins/backend-crumb"eaimeta@70e063a35619d71f

  var _default = _controller.default.extend(_backendCrumb.default, {
    backendController: (0, _controller.inject)('vault.cluster.secrets.backend'),
    queryParams: ['tab', 'version', 'type', 'itemType', 'page'],
    version: '',
    tab: '',
    type: '',
    itemType: '',

    reset() {
      this.set('tab', '');
      this.set('version', '');
      this.set('type', '');
      this.set('itemType', '');
    },

    actions: {
      refresh: function () {
        // closure actions don't bubble to routes,
        // so we have to manually bubble here
        this.send('refreshModel');
      },

      toggleAdvancedEdit(bool) {
        this.set('preferAdvancedEdit', bool);
        this.backendController.set('preferAdvancedEdit', bool);
      }

    }
  });

  _exports.default = _default;
});
;define("vault/controllers/vault/cluster/secrets/backend/sign-root", ["exports", "vault/controllers/vault/cluster/secrets/backend/sign"], function (_exports, _sign) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _sign.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"vault/controllers/vault/cluster/secrets/backend/sign"eaimeta@70e063a35619d71f
});
;define("vault/controllers/vault/cluster/secrets/backend/sign", ["exports", "@ember/service", "@ember/controller", "@ember/object"], function (_exports, _service, _controller, _object) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@ember/controller",0,"@ember/object"eaimeta@70e063a35619d71f

  var _default = _controller.default.extend({
    store: (0, _service.inject)(),
    loading: false,
    emptyData: '{\n}',
    actions: {
      sign() {
        this.set('loading', true);
        this.model.save().finally(() => {
          this.set('loading', false);
        });
      },

      codemirrorUpdated(attr, val, codemirror) {
        codemirror.performLint();
        const hasErrors = codemirror.state.lint.marked.length > 0;

        if (!hasErrors) {
          (0, _object.set)(this.model, attr, JSON.parse(val));
        }
      },

      updateTtl(path, val) {
        const model = this.model;
        const valueToSet = val.enabled === true ? `${val.seconds}s` : undefined;
        (0, _object.set)(model, path, valueToSet);
      },

      newModel() {
        const model = this.model;
        const roleModel = model.get('role');
        model.unloadRecord();
        const newModel = this.store.createRecord('ssh-sign', {
          role: roleModel,
          id: `${roleModel.backend}-${roleModel.name}`
        });
        this.set('model', newModel);
      }

    }
  });

  _exports.default = _default;
});
;define("vault/controllers/vault/cluster/secrets/backends", ["exports", "@ember/controller", "@ember/service", "@ember/object", "@glimmer/tracking", "@ember/object/computed", "ember-concurrency"], function (_exports, _controller, _service, _object, _tracking, _computed, _emberConcurrency) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5;

  0; //eaimeta@70e063a35619d71f0,"@ember/controller",0,"@ember/service",0,"@ember/object",0,"@glimmer/tracking",0,"@ember/object/computed",0,"ember-concurrency"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let VaultClusterSecretsBackendController = (_dec = (0, _computed.filterBy)('model', 'shouldIncludeInList'), (_class = class VaultClusterSecretsBackendController extends _controller.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "flashMessages", _descriptor, this);

      _initializerDefineProperty(this, "displayableBackends", _descriptor2, this);

      _initializerDefineProperty(this, "secretEngineOptions", _descriptor3, this);

      _initializerDefineProperty(this, "selectedEngineType", _descriptor4, this);

      _initializerDefineProperty(this, "selectedEngineName", _descriptor5, this);
    }

    get sortedDisplayableBackends() {
      // show supported secret engines first and then organize those by id.
      const sortedBackends = this.displayableBackends.sort((a, b) => b.isSupportedBackend - a.isSupportedBackend || a.id - b.id); // return an options list to filter by engine type, ex: 'kv'

      if (this.selectedEngineType) {
        // check first if the user has also filtered by name.
        if (this.selectedEngineName) {
          return sortedBackends.filter(backend => this.selectedEngineName === backend.id);
        } // otherwise filter by engine type


        return sortedBackends.filter(backend => this.selectedEngineType === backend.engineType);
      } // return an options list to filter by engine name, ex: 'secret'


      if (this.selectedEngineName) {
        return sortedBackends.filter(backend => this.selectedEngineName === backend.id);
      } // no filters, return full sorted list.


      return sortedBackends;
    }

    get secretEngineArrayByType() {
      const arrayOfAllEngineTypes = this.sortedDisplayableBackends.map(modelObject => modelObject.engineType); // filter out repeated engineTypes (e.g. [kv, kv] => [kv])

      const arrayOfUniqueEngineTypes = [...new Set(arrayOfAllEngineTypes)];
      return arrayOfUniqueEngineTypes.map(engineType => ({
        name: engineType,
        id: engineType
      }));
    }

    get secretEngineArrayByName() {
      return this.sortedDisplayableBackends.map(modelObject => ({
        name: modelObject.id,
        id: modelObject.id
      }));
    }

    filterEngineType(_ref) {
      let [type] = _ref;
      this.selectedEngineType = type;
    }

    filterEngineName(_ref2) {
      let [name] = _ref2;
      this.selectedEngineName = name;
    }

    *disableEngine(engine) {
      const {
        engineType,
        path
      } = engine;

      try {
        yield engine.destroyRecord();
        this.flashMessages.success(`The ${engineType} Secrets Engine at ${path} has been disabled.`);
      } catch (err) {
        this.flashMessages.danger(`There was an error disabling the ${engineType} Secrets Engine at ${path}: ${err.errors.join(' ')}.`);
      }
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "flashMessages", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "displayableBackends", [_dec], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, "secretEngineOptions", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return [];
    }
  }), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, "selectedEngineType", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return null;
    }
  }), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, "selectedEngineName", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return null;
    }
  }), _applyDecoratedDescriptor(_class.prototype, "filterEngineType", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "filterEngineType"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "filterEngineName", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "filterEngineName"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "disableEngine", [_emberConcurrency.dropTask], Object.getOwnPropertyDescriptor(_class.prototype, "disableEngine"), _class.prototype)), _class));
  _exports.default = VaultClusterSecretsBackendController;
});
;define("vault/controllers/vault/cluster/settings", ["exports", "@ember/service", "@ember/controller"], function (_exports, _service, _controller) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@ember/controller"eaimeta@70e063a35619d71f

  var _default = _controller.default.extend({
    namespaceService: (0, _service.inject)('namespace')
  });

  _exports.default = _default;
});
;define("vault/controllers/vault/cluster/settings/auth/enable", ["exports", "@ember/controller"], function (_exports, _controller) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/controller"eaimeta@70e063a35619d71f

  var _default = _controller.default.extend({
    actions: {
      onMountSuccess: function (type, path) {
        const transition = this.transitionToRoute('vault.cluster.settings.auth.configure', path);
        return transition.followRedirects();
      }
    }
  });

  _exports.default = _default;
});
;define("vault/controllers/vault/cluster/settings/configure-secret-backend", ["exports", "@ember/utils", "@ember/service", "@ember/controller"], function (_exports, _utils, _service, _controller) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/utils",0,"@ember/service",0,"@ember/controller"eaimeta@70e063a35619d71f

  const CONFIG_ATTRS = {
    // ssh
    configured: false,
    // aws root config
    iamEndpoint: null,
    stsEndpoint: null,
    accessKey: null,
    secretKey: null,
    region: ''
  };

  var _default = _controller.default.extend(CONFIG_ATTRS, {
    queryParams: ['tab'],
    tab: '',
    flashMessages: (0, _service.inject)(),
    loading: false,

    reset() {
      this.model.rollbackAttributes();
      this.setProperties(CONFIG_ATTRS);
    },

    actions: {
      saveConfig() {
        let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
          delete: false
        };
        const isDelete = options.delete;

        if (this.model.type === 'ssh') {
          this.set('loading', true);
          this.model.saveCA({
            isDelete
          }).then(() => {
            this.send('refreshRoute');
            this.set('configured', !isDelete);

            if (isDelete) {
              this.flashMessages.success('SSH Certificate Authority Configuration deleted!');
            } else {
              this.flashMessages.success('SSH Certificate Authority Configuration saved!');
            }
          }).catch(error => {
            const errorMessage = error.errors ? error.errors.join('. ') : error;
            this.flashMessages.danger(errorMessage);
          }).finally(() => {
            this.set('loading', false);
          });
        }
      },

      save(method, data) {
        this.set('loading', true);
        const hasData = Object.keys(data).some(key => {
          return (0, _utils.isPresent)(data[key]);
        });

        if (!hasData) {
          return;
        }

        this.model.save({
          adapterOptions: {
            adapterMethod: method,
            data
          }
        }).then(() => {
          this.reset();
          this.flashMessages.success('The backend configuration saved successfully!');
        }).finally(() => {
          this.set('loading', false);
        });
      }

    }
  });

  _exports.default = _default;
});
;define("vault/controllers/vault/cluster/settings/mount-secret-backend", ["exports", "@ember/service", "@ember/controller", "vault/helpers/supported-secret-backends", "vault/helpers/mountable-secret-engines", "@ember/object"], function (_exports, _service, _controller, _supportedSecretBackends, _mountableSecretEngines, _object) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor;

  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@ember/controller",0,"vault/helpers/supported-secret-backends",0,"vault/helpers/mountable-secret-engines",0,"@ember/object"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  const SUPPORTED_BACKENDS = (0, _supportedSecretBackends.supportedSecretBackends)();
  let MountSecretBackendController = (_class = class MountSecretBackendController extends _controller.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "router", _descriptor, this);
    }

    onMountSuccess(type, path) {
      let transition;

      if (SUPPORTED_BACKENDS.includes(type)) {
        const engineInfo = (0, _mountableSecretEngines.allEngines)().findBy('type', type);

        if (engineInfo?.engineRoute) {
          transition = this.router.transitionTo(`vault.cluster.secrets.backend.${engineInfo.engineRoute}`, path);
        } else {
          const queryParams = engineInfo?.routeQueryParams || {};
          transition = this.router.transitionTo('vault.cluster.secrets.backend.index', path, {
            queryParams
          });
        }
      } else {
        transition = this.router.transitionTo('vault.cluster.secrets.backends');
      }

      return transition.followRedirects();
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "router", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _applyDecoratedDescriptor(_class.prototype, "onMountSuccess", [_object.action], Object.getOwnPropertyDescriptor(_class.prototype, "onMountSuccess"), _class.prototype)), _class);
  _exports.default = MountSecretBackendController;
});
;define("vault/controllers/vault/cluster/settings/seal", ["exports", "@ember/service", "@ember/controller"], function (_exports, _service, _controller) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@ember/controller"eaimeta@70e063a35619d71f

  var _default = _controller.default.extend({
    auth: (0, _service.inject)(),
    actions: {
      seal() {
        return this.model.cluster.store.adapterFor('cluster').seal().then(() => {
          this.model.cluster.get('leaderNode').set('sealed', true);
          this.auth.deleteCurrentToken();
          return this.transitionToRoute('vault.cluster.unseal');
        });
      }

    }
  });

  _exports.default = _default;
});
;define("vault/controllers/vault/cluster/unseal", ["exports", "@ember/controller"], function (_exports, _controller) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/controller"eaimeta@70e063a35619d71f

  var _default = _controller.default.extend({
    actions: {
      transitionToCluster() {
        return this.model.reload().then(() => {
          return this.transitionToRoute('vault.cluster', this.model.name);
        });
      },

      isUnsealed(data) {
        return data.sealed === false;
      }

    }
  });

  _exports.default = _default;
});
;define("vault/data-adapter", ["exports", "@ember-data/debug"], function (_exports, _debug) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _debug.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@ember-data/debug"eaimeta@70e063a35619d71f
});
;define("vault/decorators/confirm-leave", ["exports", "core/decorators/confirm-leave"], function (_exports, _confirmLeave) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "withConfirmLeave", {
    enumerable: true,
    get: function () {
      return _confirmLeave.withConfirmLeave;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/decorators/confirm-leave"eaimeta@70e063a35619d71f
});
;define("vault/decorators/model-expanded-attributes", ["exports", "vault/utils/field-to-attrs", "@ember-data/model", "@ember/debug"], function (_exports, _fieldToAttrs, _model, _debug) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.withExpandedAttributes = withExpandedAttributes;
  0; //eaimeta@70e063a35619d71f0,"vault/utils/field-to-attrs",0,"@ember-data/model",0,"@ember/debug"eaimeta@70e063a35619d71f

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  /**
   * sets allByKey properties on model class. These are all the attributes on the model
   * and any belongsTo models, expanded with attribute metadata. The value returned is an
   * object where the key is the attribute name, and the value is the expanded attribute
   * metadata.
   * This decorator also exposes a helper function `_expandGroups` which, when given groups
   * as expected in field-to-attrs util, will return a similar object with the expanded
   * attributes in place of the strings in the array.
   */
  function withExpandedAttributes() {
    return function decorator(SuperClass) {
      if (!Object.prototype.isPrototypeOf.call(_model.default, SuperClass)) {
        // eslint-disable-next-line
        console.error('withExpandedAttributes decorator must be used on instance of ember-data Model class. Decorator not applied to returned class');
        return SuperClass;
      }

      return class ModelExpandedAttrs extends SuperClass {
        constructor() {
          super(...arguments);

          _defineProperty(this, "_allByKey", null);
        }

        // Helper method for expanding dynamic groups on model
        _expandGroups(groups) {
          if (!Array.isArray(groups)) {
            throw new Error('_expandGroups expects an array of objects');
          }
          /* Expects group shape to be something like:
          [
            { default: ['ttl', 'maxTtl'] },
            { "Method Options": ['other', 'fieldNames'] },
          ]*/


          return groups.map(obj => {
            const [key, stringArray] = Object.entries(obj)[0];
            const expanded = stringArray.map(fieldName => this.allByKey[fieldName]).filter(f => !!f);
            (true && !(expanded.length === stringArray.length) && (0, _debug.assert)(`all fields found in allByKey for group ${key}`, expanded.length === stringArray.length));
            return {
              [key]: expanded
            };
          });
        }

        get allByKey() {
          // Caching like this ensures allByKey only gets calculated once
          if (!this._allByKey) {
            const byKey = {}; // First, get attr names which are on the model directly
            // By this time, OpenAPI should have populated non-explicit attrs

            const mainFields = [];
            this.eachAttribute(function (key) {
              mainFields.push(key);
            });
            const expanded = (0, _fieldToAttrs.expandAttributeMeta)(this, mainFields);
            expanded.forEach(attr => {
              // Add expanded attributes from the model
              byKey[attr.name] = attr;
            }); // Next, fetch and expand attrs for related models

            this.eachRelationship(function (name, descriptor) {
              // We don't worry about getting hasMany relationships
              if (descriptor.kind !== 'belongsTo') return;
              const rModel = this[name];
              const rAttrNames = [];
              rModel.eachAttribute(function (key) {
                rAttrNames.push(key);
              });
              const expanded = (0, _fieldToAttrs.expandAttributeMeta)(rModel, rAttrNames);
              expanded.forEach(attr => {
                byKey[`${name}.${attr.name}`] = { ...attr,
                  options: { ...attr.options,
                    // This ensures the correct path is updated in FormField
                    fieldValue: `${name}.${attr.fieldValue || attr.name}`
                  }
                };
              });
            }, this);
            this._allByKey = byKey;
          }

          return this._allByKey;
        }

      };
    };
  }
});
;define("vault/decorators/model-form-fields", ["exports", "vault/utils/field-to-attrs", "@ember-data/model"], function (_exports, _fieldToAttrs, _model) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.withFormFields = withFormFields;
  0; //eaimeta@70e063a35619d71f0,"vault/utils/field-to-attrs",0,"@ember-data/model"eaimeta@70e063a35619d71f

  /**
   * sets formFields and/or formFieldGroups properties on model class based on attr options
   *
   * propertyNames must be an array of brace expansion supported strings that represent model attr names
   * groupPropertyNames must be an array of objects where the keys represent the group names and the values are propertyNames
   *
   * reference the field-to-attrs util for more information on expected format for fields and groups
   */
  function withFormFields(propertyNames, groupPropertyNames) {
    return function decorator(SuperClass) {
      if (!Object.prototype.isPrototypeOf.call(_model.default, SuperClass)) {
        // eslint-disable-next-line
        console.error('withFormFields decorator must be used on instance of ember-data Model class. Decorator not applied to returned class');
        return SuperClass;
      }

      return class ModelFormFields extends SuperClass {
        constructor() {
          super(...arguments);

          if (propertyNames) {
            this.formFields = (0, _fieldToAttrs.expandAttributeMeta)(this, propertyNames);
          }

          if (groupPropertyNames) {
            this.formFieldGroups = (0, _fieldToAttrs.default)(this, groupPropertyNames);
          }

          const allFields = [];
          this.eachAttribute(function (key) {
            allFields.push(key);
          });
          this.allFields = (0, _fieldToAttrs.expandAttributeMeta)(this, allFields);
        }

      };
    };
  }
});
;define("vault/decorators/model-validations", ["exports", "vault/utils/validators", "@ember/object"], function (_exports, _validators, _object) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.withModelValidations = withModelValidations;
  0; //eaimeta@70e063a35619d71f0,"vault/utils/validators",0,"@ember/object"eaimeta@70e063a35619d71f

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  /**
   * used to validate properties on a class
   *
   * decorator expects validations object with the following shape:
   * { [propertyKeyName]: [{ type, options, message, level, validator }] }
   * each key in the validations object should refer to the property on the class to apply the validation to
   *
   * type - string referring to the type of validation to apply -- must be exported from validators util for lookup
   *
   * options - an optional object for given validator -- min, max, nullable etc. -- see validators in util
   *
   * message - string added to the errors array and returned from the validate method if validation fails
   * function may also be provided with model as single argument that returns a string
   *
   * level - optional string that defaults to 'error'. Currently the only other accepted value is 'warn'
   *
   * validator - function that may be used in place of type that is invoked in the validate method
   * useful when specific validations are needed (dependent on other class properties etc.)
   * must be passed as function that takes the class context (this) as the only argument and returns true or false
   * each property supports multiple validations provided as an array -- for example, presence and length for string
   *
   * validations must be invoked using the validate method which is added directly to the decorated class
   * const { isValid, state } = this.model.validate();
   * isValid represents the validity of the full class -- if no properties provided in the validations object are invalid this will be true
   * state represents the error state of the properties defined in the validations object
   * const { isValid, errors } = state[propertyKeyName];
   * isValid represents the validity of the property
   * errors will be populated with messages defined in the validations object when validations fail. message must be a complete sentence (and include punctuation)
   * since a property can have multiple validations, errors is always returned as an array
   *
   *** basic example
   *
   * import Model from '@ember-data/model';
   * import withModelValidations from 'vault/decorators/model-validations';
   *
   * Notes: all messages need to have a period at the end of them.
   * const validations = { foo: [{ type: 'presence', message: 'foo is a required field.' }] };
   * @withModelValidations(validations)
   * class SomeModel extends Model { foo = null; }
   *
   * const model = new SomeModel();
   * const { isValid, state } = model.validate();
   * -> isValid = false;
   * -> state.foo.isValid = false;
   * -> state.foo.errors = ['foo is a required field'];
   *
   *** example using custom validator
   *
   * const validations = { foo: [{ validator: (model) => model.bar.includes('test') ? model.foo : false, message: 'foo is required if bar includes test.' }] };
   * @withModelValidations(validations)
   * class SomeModel extends Model { foo = false; bar = ['foo', 'baz']; }
   *
   * const model = new SomeModel();
   * const { isValid, state } = model.validate();
   * -> isValid = false;
   * -> state.foo.isValid = false;
   * -> state.foo.errors = ['foo is required if bar includes test.'];
   *
   * *** example adding class in hbs file
   *
   * all form-validations need to have a red border around them. Add this by adding a conditional class 'has-error-border'
   * class="input field {{if this.errors.name.errors 'has-error-border'}}"
   */
  function withModelValidations(validations) {
    return function decorator(SuperClass) {
      var _class, _temp;

      return _temp = _class = class ModelValidations extends SuperClass {
        constructor() {
          super(...arguments);

          if (!validations || typeof validations !== 'object') {
            throw new Error('Validations object must be provided to constructor for setup');
          }

          this._validations = validations;
        }

        validate() {
          let isValid = true;
          const state = {};
          let errorCount = 0;

          for (const key in this._validations) {
            const rules = this._validations[key];

            if (!Array.isArray(rules)) {
              console.error(`Must provide validations as an array for property "${key}" on ${this.modelName} model`);
              continue;
            }

            state[key] = {
              errors: [],
              warnings: []
            };

            for (const rule of rules) {
              const {
                type,
                options,
                level,
                message,
                validator: customValidator
              } = rule; // check for custom validator or lookup in validators util by type

              const useCustomValidator = typeof customValidator === 'function';
              const validator = useCustomValidator ? customValidator : _validators.default[type];

              if (!validator) {
                console.error(!type ? 'Validator not found. Define either type or pass custom validator function under "validator" key in validations object' : `Validator type: "${type}" not found. Available validators: ${Object.keys(_validators.default).join(', ')}`);
                continue;
              }

              const passedValidation = useCustomValidator ? validator(this) : validator((0, _object.get)(this, key), options); // dot notation may be used to define key for nested property

              if (!passedValidation) {
                // message can also be a function
                const validationMessage = typeof message === 'function' ? message(this) : message; // consider setting a prop like validationErrors directly on the model
                // for now return an errors object

                if (level === 'warn') {
                  state[key].warnings.push(validationMessage);
                } else {
                  state[key].errors.push(validationMessage);

                  if (isValid) {
                    isValid = false;
                  }
                }
              }
            }

            errorCount += state[key].errors.length;
            state[key].isValid = !state[key].errors.length;
          }

          return {
            isValid,
            state,
            invalidFormMessage: this.generateErrorCountMessage(errorCount)
          };
        }

        generateErrorCountMessage(errorCount) {
          if (errorCount < 1) return null; // returns count specific message: 'There is an error/are N errors with this form.'

          const isPlural = errorCount > 1 ? `are ${errorCount} errors` : false;
          return `There ${isPlural ? isPlural : 'is an error'} with this form.`;
        }

      }, _defineProperty(_class, "_validations", void 0), _temp;
    };
  }
});
;define("vault/flash/object", ["exports", "ember-cli-flash/flash/object"], function (_exports, _object) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _object.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-cli-flash/flash/object"eaimeta@70e063a35619d71f
});
;define("vault/helpers/-date-base", ["exports", "@ember/runloop", "@ember/component/helper", "ember"], function (_exports, _runloop, _helper, _ember) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/runloop",0,"@ember/component/helper",0,"ember"eaimeta@70e063a35619d71f

  var _default = _helper.default.extend({
    disableInterval: false,

    compute(value, _ref) {
      let {
        interval
      } = _ref;

      if (_ember.default.testing) {
        // issues with flaky test, suspect it has to the do with the run loop not being cleared as intended farther down.
        return;
      }

      if (this.disableInterval) {
        return;
      }

      this.clearTimer();

      if (interval) {
        /*
         * NOTE: intentionally a setTimeout so tests do not block on it
         * as the run loop queue is never clear so tests will stay locked waiting
         * for queue to clear.
         */
        this.intervalTimer = setTimeout(() => {
          (0, _runloop.run)(() => this.recompute());
        }, parseInt(interval, 10));
      }
    },

    clearTimer() {
      clearTimeout(this.intervalTimer);
    },

    destroy() {
      this.clearTimer();

      this._super(...arguments);
    }

  });

  _exports.default = _default;
});
;define("vault/helpers/add-to-array", ["exports", "@ember/component/helper", "@ember/debug"], function (_exports, _helper, _debug) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.addToArray = addToArray;
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/component/helper",0,"@ember/debug"eaimeta@70e063a35619d71f

  function dedupe(items) {
    return items.filter((v, i) => items.indexOf(v) === i);
  }

  function addToArray(_ref) {
    let [array, string] = _ref;

    if (!Array.isArray(array)) {
      (true && !(false) && (0, _debug.assert)(`Value provided is not an array`, false));
    }

    const newArray = [...array];
    newArray.push(string);
    return dedupe(newArray);
  }

  var _default = (0, _helper.helper)(addToArray);

  _exports.default = _default;
});
;define("vault/helpers/add", ["exports", "@ember/component/helper"], function (_exports, _helper) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.add = add;
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/component/helper"eaimeta@70e063a35619d71f

  function add(params) {
    return params.reduce((sum, param) => parseInt(param, 0) + sum, 0);
  }

  var _default = (0, _helper.helper)(add);

  _exports.default = _default;
});
;define("vault/helpers/all-features", ["exports", "@ember/component/helper"], function (_exports, _helper) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.allFeatures = allFeatures;
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/component/helper"eaimeta@70e063a35619d71f

  const ALL_FEATURES = ['HSM', 'MFA', 'Seal Wrapping', 'Control Groups', 'Performance Standby', 'Namespaces', 'KMIP', 'Entropy Augmentation', 'Transform Secrets Engine'];

  function allFeatures() {
    return ALL_FEATURES;
  }

  var _default = (0, _helper.helper)(allFeatures);

  _exports.default = _default;
});
;define("vault/helpers/and", ["exports", "ember-truth-helpers/helpers/and"], function (_exports, _and) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "and", {
    enumerable: true,
    get: function () {
      return _and.and;
    }
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _and.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-truth-helpers/helpers/and"eaimeta@70e063a35619d71f
});
;define("vault/helpers/append", ["exports", "ember-composable-helpers/helpers/append"], function (_exports, _append) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "append", {
    enumerable: true,
    get: function () {
      return _append.append;
    }
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _append.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-composable-helpers/helpers/append"eaimeta@70e063a35619d71f
});
;define("vault/helpers/assign", ["exports", "ember-assign-helper/helpers/assign"], function (_exports, _assign) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "assign", {
    enumerable: true,
    get: function () {
      return _assign.assign;
    }
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _assign.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-assign-helper/helpers/assign"eaimeta@70e063a35619d71f
});
;define("vault/helpers/await", ["exports", "@ember/component/helper", "rsvp"], function (_exports, _helper, _rsvp) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/component/helper",0,"rsvp"eaimeta@70e063a35619d71f

  class AwaitHelper extends _helper.default {
    compute(_ref) {
      let [promise] = _ref;

      if (!promise || typeof promise.then !== 'function') {
        return promise;
      }

      if (promise !== this.lastPromise) {
        this.lastPromise = promise;
        this.value = null;
        this.resolve(promise);
      }

      return this.value;
    }

    async resolve(promise) {
      let value;

      try {
        value = await _rsvp.Promise.resolve(promise);
      } catch (error) {
        value = error;
      } finally {
        // ensure this promise is still the newest promise
        // otherwise avoid firing recompute since a newer promise is in flight
        if (promise === this.lastPromise) {
          this.value = value;
          this.recompute();
        }
      }
    }

  }

  _exports.default = AwaitHelper;
});
;define("vault/helpers/aws-regions", ["exports", "@ember/component/helper"], function (_exports, _helper) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  _exports.regions = regions;
  0; //eaimeta@70e063a35619d71f0,"@ember/component/helper"eaimeta@70e063a35619d71f

  //list from http://docs.aws.amazon.com/general/latest/gr/rande.html#sts_region
  const REGIONS = ['us-east-1', 'us-east-2', 'us-west-1', 'us-west-2', 'ca-central-1', 'ap-south-1', 'ap-northeast-1', 'ap-northeast-2', 'ap-southeast-1', 'ap-southeast-2', 'eu-central-1', 'eu-west-1', 'eu-west-2', 'sa-east-1'];

  function regions() {
    return REGIONS.slice(0);
  }

  var _default = (0, _helper.helper)(regions);

  _exports.default = _default;
});
;define("vault/helpers/call", ["exports", "ember-composable-helpers/helpers/call"], function (_exports, _call) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "call", {
    enumerable: true,
    get: function () {
      return _call.call;
    }
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _call.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-composable-helpers/helpers/call"eaimeta@70e063a35619d71f
});
;define("vault/helpers/camelize", ["exports", "ember-cli-string-helpers/helpers/camelize"], function (_exports, _camelize) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "camelize", {
    enumerable: true,
    get: function () {
      return _camelize.camelize;
    }
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _camelize.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-cli-string-helpers/helpers/camelize"eaimeta@70e063a35619d71f
});
;define("vault/helpers/cancel-all", ["exports", "ember-concurrency/helpers/cancel-all"], function (_exports, _cancelAll) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _cancelAll.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-concurrency/helpers/cancel-all"eaimeta@70e063a35619d71f
});
;define("vault/helpers/capitalize", ["exports", "ember-cli-string-helpers/helpers/capitalize"], function (_exports, _capitalize) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "capitalize", {
    enumerable: true,
    get: function () {
      return _capitalize.capitalize;
    }
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _capitalize.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-cli-string-helpers/helpers/capitalize"eaimeta@70e063a35619d71f
});
;define("vault/helpers/changelog-url-for", ["exports", "core/helpers/changelog-url-for"], function (_exports, _changelogUrlFor) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "changelogUrlFor", {
    enumerable: true,
    get: function () {
      return _changelogUrlFor.changelogUrlFor;
    }
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _changelogUrlFor.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/helpers/changelog-url-for"eaimeta@70e063a35619d71f
});
;define("vault/helpers/chunk", ["exports", "ember-composable-helpers/helpers/chunk"], function (_exports, _chunk) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "chunk", {
    enumerable: true,
    get: function () {
      return _chunk.chunk;
    }
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _chunk.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-composable-helpers/helpers/chunk"eaimeta@70e063a35619d71f
});
;define("vault/helpers/classify", ["exports", "ember-cli-string-helpers/helpers/classify"], function (_exports, _classify) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "classify", {
    enumerable: true,
    get: function () {
      return _classify.classify;
    }
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _classify.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-cli-string-helpers/helpers/classify"eaimeta@70e063a35619d71f
});
;define("vault/helpers/cluster-states", ["exports", "core/helpers/cluster-states"], function (_exports, _clusterStates) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "CLUSTER_STATES", {
    enumerable: true,
    get: function () {
      return _clusterStates.CLUSTER_STATES;
    }
  });
  Object.defineProperty(_exports, "clusterStates", {
    enumerable: true,
    get: function () {
      return _clusterStates.clusterStates;
    }
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _clusterStates.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/helpers/cluster-states"eaimeta@70e063a35619d71f
});
;define("vault/helpers/coerce-eq", ["exports", "@ember/component/helper"], function (_exports, _helper) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.coerceEq = coerceEq;
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/component/helper"eaimeta@70e063a35619d71f

  function coerceEq(params) {
    return params[0] == params[1];
  }

  var _default = (0, _helper.helper)(coerceEq);

  _exports.default = _default;
});
;define("vault/helpers/compact", ["exports", "ember-composable-helpers/helpers/compact"], function (_exports, _compact) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _compact.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-composable-helpers/helpers/compact"eaimeta@70e063a35619d71f
});
;define("vault/helpers/compute", ["exports", "ember-composable-helpers/helpers/compute"], function (_exports, _compute) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "compute", {
    enumerable: true,
    get: function () {
      return _compute.compute;
    }
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _compute.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-composable-helpers/helpers/compute"eaimeta@70e063a35619d71f
});
;define("vault/helpers/contains", ["exports", "ember-composable-helpers/helpers/contains"], function (_exports, _contains) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "contains", {
    enumerable: true,
    get: function () {
      return _contains.contains;
    }
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _contains.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-composable-helpers/helpers/contains"eaimeta@70e063a35619d71f
});
;define("vault/helpers/dasherize", ["exports", "ember-cli-string-helpers/helpers/dasherize"], function (_exports, _dasherize) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "dasherize", {
    enumerable: true,
    get: function () {
      return _dasherize.dasherize;
    }
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _dasherize.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-cli-string-helpers/helpers/dasherize"eaimeta@70e063a35619d71f
});
;define("vault/helpers/date-format", ["exports", "core/helpers/date-format"], function (_exports, _dateFormat) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _dateFormat.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/helpers/date-format"eaimeta@70e063a35619d71f
});
;define("vault/helpers/date-from-now", ["exports", "@ember/component/helper", "date-fns"], function (_exports, _helper, _dateFns) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.dateFromNow = dateFromNow;
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/component/helper",0,"date-fns"eaimeta@70e063a35619d71f

  function dateFromNow(_ref) {
    let [date] = _ref;
    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    // check first if string. If it is, it could be ISO format or UTC, either way create a new date object
    // otherwise it's a number or object and just return
    const newDate = typeof date === 'string' ? new Date(date) : date;
    return (0, _dateFns.formatDistanceToNow)(newDate, { ...options
    });
  }

  var _default = (0, _helper.helper)(dateFromNow);

  _exports.default = _default;
});
;define("vault/helpers/dec", ["exports", "ember-composable-helpers/helpers/dec"], function (_exports, _dec) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "dec", {
    enumerable: true,
    get: function () {
      return _dec.dec;
    }
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _dec.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-composable-helpers/helpers/dec"eaimeta@70e063a35619d71f
});
;define("vault/helpers/drop", ["exports", "ember-composable-helpers/helpers/drop"], function (_exports, _drop) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _drop.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-composable-helpers/helpers/drop"eaimeta@70e063a35619d71f
});
;define("vault/helpers/element", ["exports", "ember-element-helper/helpers/element"], function (_exports, _element) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _element.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-element-helper/helpers/element"eaimeta@70e063a35619d71f
});
;define("vault/helpers/ember-power-select-is-group", ["exports", "ember-power-select/helpers/ember-power-select-is-group"], function (_exports, _emberPowerSelectIsGroup) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _emberPowerSelectIsGroup.default;
    }
  });
  Object.defineProperty(_exports, "emberPowerSelectIsGroup", {
    enumerable: true,
    get: function () {
      return _emberPowerSelectIsGroup.emberPowerSelectIsGroup;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-power-select/helpers/ember-power-select-is-group"eaimeta@70e063a35619d71f
});
;define("vault/helpers/ember-power-select-is-selected", ["exports", "ember-power-select/helpers/ember-power-select-is-selected"], function (_exports, _emberPowerSelectIsSelected) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _emberPowerSelectIsSelected.default;
    }
  });
  Object.defineProperty(_exports, "emberPowerSelectIsSelected", {
    enumerable: true,
    get: function () {
      return _emberPowerSelectIsSelected.emberPowerSelectIsSelected;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-power-select/helpers/ember-power-select-is-selected"eaimeta@70e063a35619d71f
});
;define("vault/helpers/ensure-safe-component", ["exports", "@embroider/util"], function (_exports, _util) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _util.EnsureSafeComponentHelper;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@embroider/util"eaimeta@70e063a35619d71f
});
;define("vault/helpers/entries", ["exports", "ember-composable-helpers/helpers/entries"], function (_exports, _entries) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _entries.default;
    }
  });
  Object.defineProperty(_exports, "entries", {
    enumerable: true,
    get: function () {
      return _entries.entries;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-composable-helpers/helpers/entries"eaimeta@70e063a35619d71f
});
;define("vault/helpers/eq", ["exports", "ember-truth-helpers/helpers/equal"], function (_exports, _equal) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _equal.default;
    }
  });
  Object.defineProperty(_exports, "equal", {
    enumerable: true,
    get: function () {
      return _equal.equal;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-truth-helpers/helpers/equal"eaimeta@70e063a35619d71f
});
;define("vault/helpers/filter-by", ["exports", "ember-composable-helpers/helpers/filter-by"], function (_exports, _filterBy) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _filterBy.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-composable-helpers/helpers/filter-by"eaimeta@70e063a35619d71f
});
;define("vault/helpers/filter-wildcard", ["exports", "@ember/component/helper"], function (_exports, _helper) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  _exports.filterWildcard = filterWildcard;
  0; //eaimeta@70e063a35619d71f0,"@ember/component/helper"eaimeta@70e063a35619d71f

  function filterWildcard(_ref) {
    let [string, array] = _ref;

    if (!string || !array) {
      return;
    }

    if (!string.id && string) {
      string = {
        id: string
      };
    }

    const stringId = string.id;

    const filterBy = stringId => array.filter(item => new RegExp('^' + stringId.replace(/\*/g, '.*') + '$').test(item));

    return filterBy(stringId).length;
  }

  var _default = (0, _helper.helper)(filterWildcard);

  _exports.default = _default;
});
;define("vault/helpers/filter", ["exports", "ember-composable-helpers/helpers/filter"], function (_exports, _filter) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _filter.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-composable-helpers/helpers/filter"eaimeta@70e063a35619d71f
});
;define("vault/helpers/find-by", ["exports", "ember-composable-helpers/helpers/find-by"], function (_exports, _findBy) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _findBy.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-composable-helpers/helpers/find-by"eaimeta@70e063a35619d71f
});
;define("vault/helpers/flatten", ["exports", "ember-composable-helpers/helpers/flatten"], function (_exports, _flatten) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _flatten.default;
    }
  });
  Object.defineProperty(_exports, "flatten", {
    enumerable: true,
    get: function () {
      return _flatten.flatten;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-composable-helpers/helpers/flatten"eaimeta@70e063a35619d71f
});
;define("vault/helpers/format-duration", ["exports", "core/helpers/format-duration"], function (_exports, _formatDuration) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _formatDuration.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/helpers/format-duration"eaimeta@70e063a35619d71f
});
;define("vault/helpers/format-number", ["exports", "core/helpers/format-number"], function (_exports, _formatNumber) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _formatNumber.default;
    }
  });
  Object.defineProperty(_exports, "formatNumber", {
    enumerable: true,
    get: function () {
      return _formatNumber.formatNumber;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/helpers/format-number"eaimeta@70e063a35619d71f
});
;define("vault/helpers/from-entries", ["exports", "ember-composable-helpers/helpers/from-entries"], function (_exports, _fromEntries) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _fromEntries.default;
    }
  });
  Object.defineProperty(_exports, "fromEntries", {
    enumerable: true,
    get: function () {
      return _fromEntries.fromEntries;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-composable-helpers/helpers/from-entries"eaimeta@70e063a35619d71f
});
;define("vault/helpers/group-by", ["exports", "ember-composable-helpers/helpers/group-by"], function (_exports, _groupBy) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _groupBy.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-composable-helpers/helpers/group-by"eaimeta@70e063a35619d71f
});
;define("vault/helpers/gt", ["exports", "ember-truth-helpers/helpers/gt"], function (_exports, _gt) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _gt.default;
    }
  });
  Object.defineProperty(_exports, "gt", {
    enumerable: true,
    get: function () {
      return _gt.gt;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-truth-helpers/helpers/gt"eaimeta@70e063a35619d71f
});
;define("vault/helpers/gte", ["exports", "ember-truth-helpers/helpers/gte"], function (_exports, _gte) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _gte.default;
    }
  });
  Object.defineProperty(_exports, "gte", {
    enumerable: true,
    get: function () {
      return _gte.gte;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-truth-helpers/helpers/gte"eaimeta@70e063a35619d71f
});
;define("vault/helpers/has-next", ["exports", "ember-composable-helpers/helpers/has-next"], function (_exports, _hasNext) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _hasNext.default;
    }
  });
  Object.defineProperty(_exports, "hasNext", {
    enumerable: true,
    get: function () {
      return _hasNext.hasNext;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-composable-helpers/helpers/has-next"eaimeta@70e063a35619d71f
});
;define("vault/helpers/has-permission", ["exports", "@ember/component/helper", "@ember/service", "@ember/object"], function (_exports, _helper, _service, _object) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/component/helper",0,"@ember/service",0,"@ember/object"eaimeta@70e063a35619d71f

  var _default = _helper.default.extend({
    permissions: (0, _service.inject)(),
    onPermissionsChange: (0, _object.observer)('permissions.exactPaths', 'permissions.globPaths', 'permissions.canViewAll', function () {
      this.recompute();
    }),

    compute(_ref, params) {
      let [route] = _ref;
      const {
        routeParams,
        requireAll
      } = params;
      const permissions = this.permissions;
      return permissions.hasNavPermission(route, routeParams, requireAll);
    }

  });

  _exports.default = _default;
});
;define("vault/helpers/has-previous", ["exports", "ember-composable-helpers/helpers/has-previous"], function (_exports, _hasPrevious) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _hasPrevious.default;
    }
  });
  Object.defineProperty(_exports, "hasPrevious", {
    enumerable: true,
    get: function () {
      return _hasPrevious.hasPrevious;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-composable-helpers/helpers/has-previous"eaimeta@70e063a35619d71f
});
;define("vault/helpers/hds-link-to-models", ["exports", "@hashicorp/design-system-components/helpers/hds-link-to-models"], function (_exports, _hdsLinkToModels) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _hdsLinkToModels.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/helpers/hds-link-to-models"eaimeta@70e063a35619d71f
});
;define("vault/helpers/hds-link-to-query", ["exports", "@hashicorp/design-system-components/helpers/hds-link-to-query"], function (_exports, _hdsLinkToQuery) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _hdsLinkToQuery.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/helpers/hds-link-to-query"eaimeta@70e063a35619d71f
});
;define("vault/helpers/html-safe", ["exports", "ember-cli-string-helpers/helpers/html-safe"], function (_exports, _htmlSafe) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _htmlSafe.default;
    }
  });
  Object.defineProperty(_exports, "htmlSafe", {
    enumerable: true,
    get: function () {
      return _htmlSafe.htmlSafe;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-cli-string-helpers/helpers/html-safe"eaimeta@70e063a35619d71f
});
;define("vault/helpers/humanize", ["exports", "ember-cli-string-helpers/helpers/humanize"], function (_exports, _humanize) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _humanize.default;
    }
  });
  Object.defineProperty(_exports, "humanize", {
    enumerable: true,
    get: function () {
      return _humanize.humanize;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-cli-string-helpers/helpers/humanize"eaimeta@70e063a35619d71f
});
;define("vault/helpers/if-key", ["exports", "ember-keyboard/helpers/if-key.js"], function (_exports, _ifKey) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _ifKey.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-keyboard/helpers/if-key.js"eaimeta@70e063a35619d71f
});
;define("vault/helpers/ignore-children", ["exports", "ember-modal-dialog/helpers/ignore-children"], function (_exports, _ignoreChildren) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _ignoreChildren.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-modal-dialog/helpers/ignore-children"eaimeta@70e063a35619d71f
});
;define("vault/helpers/img-path", ["exports", "core/helpers/img-path"], function (_exports, _imgPath) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _imgPath.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/helpers/img-path"eaimeta@70e063a35619d71f
});
;define("vault/helpers/inc", ["exports", "ember-composable-helpers/helpers/inc"], function (_exports, _inc) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _inc.default;
    }
  });
  Object.defineProperty(_exports, "inc", {
    enumerable: true,
    get: function () {
      return _inc.inc;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-composable-helpers/helpers/inc"eaimeta@70e063a35619d71f
});
;define("vault/helpers/includes", ["exports", "ember-composable-helpers/helpers/includes"], function (_exports, _includes) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _includes.default;
    }
  });
  Object.defineProperty(_exports, "includes", {
    enumerable: true,
    get: function () {
      return _includes.includes;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-composable-helpers/helpers/includes"eaimeta@70e063a35619d71f
});
;define("vault/helpers/intersect", ["exports", "ember-composable-helpers/helpers/intersect"], function (_exports, _intersect) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _intersect.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-composable-helpers/helpers/intersect"eaimeta@70e063a35619d71f
});
;define("vault/helpers/invoke", ["exports", "ember-composable-helpers/helpers/invoke"], function (_exports, _invoke) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _invoke.default;
    }
  });
  Object.defineProperty(_exports, "invoke", {
    enumerable: true,
    get: function () {
      return _invoke.invoke;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-composable-helpers/helpers/invoke"eaimeta@70e063a35619d71f
});
;define("vault/helpers/is-active-route", ["exports", "core/helpers/is-active-route"], function (_exports, _isActiveRoute) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _isActiveRoute.default;
    }
  });
  Object.defineProperty(_exports, "isActiveRoute", {
    enumerable: true,
    get: function () {
      return _isActiveRoute.isActiveRoute;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/helpers/is-active-route"eaimeta@70e063a35619d71f
});
;define("vault/helpers/is-active", ["exports", "ember-router-helpers/helpers/is-active"], function (_exports, _isActive) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _isActive.default;
    }
  });
  Object.defineProperty(_exports, "isActive", {
    enumerable: true,
    get: function () {
      return _isActive.isActive;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-router-helpers/helpers/is-active"eaimeta@70e063a35619d71f
});
;define("vault/helpers/is-after", ["exports", "vault/helpers/-date-base", "date-fns"], function (_exports, _dateBase, _dateFns) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/helpers/-date-base",0,"date-fns"eaimeta@70e063a35619d71f

  var _default = _dateBase.default.extend({
    compute: function (_ref) {
      let [date1, date2] = _ref;

      this._super(...arguments);

      return (0, _dateFns.isAfter)(date1, date2);
    }
  });

  _exports.default = _default;
});
;define("vault/helpers/is-array", ["exports", "ember-truth-helpers/helpers/is-array"], function (_exports, _isArray) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _isArray.default;
    }
  });
  Object.defineProperty(_exports, "isArray", {
    enumerable: true,
    get: function () {
      return _isArray.isArray;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-truth-helpers/helpers/is-array"eaimeta@70e063a35619d71f
});
;define("vault/helpers/is-before", ["exports", "vault/helpers/-date-base", "date-fns"], function (_exports, _dateBase, _dateFns) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/helpers/-date-base",0,"date-fns"eaimeta@70e063a35619d71f

  var _default = _dateBase.default.extend({
    compute: function (_ref) {
      let [date1, date2] = _ref;

      this._super(...arguments);

      return (0, _dateFns.isBefore)(date1, date2);
    }
  });

  _exports.default = _default;
});
;define("vault/helpers/is-clipboard-supported", ["exports", "ember-cli-clipboard/helpers/is-clipboard-supported"], function (_exports, _isClipboardSupported) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _isClipboardSupported.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-cli-clipboard/helpers/is-clipboard-supported"eaimeta@70e063a35619d71f
});
;define("vault/helpers/is-empty-value", ["exports", "@ember/component/helper"], function (_exports, _helper) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/component/helper"eaimeta@70e063a35619d71f

  var _default = (0, _helper.helper)(function isEmptyValue(_ref, _ref2) {
    let [value] = _ref;
    let {
      hasDefault = false
    } = _ref2;

    if (hasDefault) {
      value = hasDefault;
    }

    if (typeof value === 'object' && value !== null) {
      return Object.keys(value).length === 0;
    }

    return value == null || value === '';
  });

  _exports.default = _default;
});
;define("vault/helpers/is-empty", ["exports", "ember-truth-helpers/helpers/is-empty"], function (_exports, _isEmpty) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _isEmpty.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-truth-helpers/helpers/is-empty"eaimeta@70e063a35619d71f
});
;define("vault/helpers/is-equal", ["exports", "ember-truth-helpers/helpers/is-equal"], function (_exports, _isEqual) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _isEqual.default;
    }
  });
  Object.defineProperty(_exports, "isEqual", {
    enumerable: true,
    get: function () {
      return _isEqual.isEqual;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-truth-helpers/helpers/is-equal"eaimeta@70e063a35619d71f
});
;define("vault/helpers/is-wildcard-string", ["exports", "@ember/component/helper"], function (_exports, _helper) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  _exports.isWildcardString = isWildcardString;
  0; //eaimeta@70e063a35619d71f0,"@ember/component/helper"eaimeta@70e063a35619d71f

  function isWildcardString(_ref) {
    let [string] = _ref;

    if (!string) {
      return false;
    } // string is actually an object which is what comes in in the searchSelect component


    if (typeof string === 'object') {
      // if the dropdown is used the object is a class which cannot be converted into a string
      if (Object.prototype.hasOwnProperty.call(string, 'store')) {
        return false;
      }

      string = Object.values(string).toString();
    }

    return string.includes('*');
  }

  var _default = (0, _helper.helper)(isWildcardString);

  _exports.default = _default;
});
;define("vault/helpers/join", ["exports", "ember-composable-helpers/helpers/join"], function (_exports, _join) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _join.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-composable-helpers/helpers/join"eaimeta@70e063a35619d71f
});
;define("vault/helpers/jsonify", ["exports", "@ember/component/helper"], function (_exports, _helper) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  _exports.jsonify = jsonify;
  0; //eaimeta@70e063a35619d71f0,"@ember/component/helper"eaimeta@70e063a35619d71f

  function jsonify(_ref) {
    let [target] = _ref;
    // aws secret engine needs to be able to send an empty json value on the field policy_document
    if (!target) return;
    return JSON.parse(target);
  }

  var _default = (0, _helper.helper)(jsonify);

  _exports.default = _default;
});
;define("vault/helpers/keys", ["exports", "ember-composable-helpers/helpers/keys"], function (_exports, _keys) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _keys.default;
    }
  });
  Object.defineProperty(_exports, "keys", {
    enumerable: true,
    get: function () {
      return _keys.keys;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-composable-helpers/helpers/keys"eaimeta@70e063a35619d71f
});
;define("vault/helpers/loose-equal", ["exports", "core/helpers/loose-equal"], function (_exports, _looseEqual) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _looseEqual.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/helpers/loose-equal"eaimeta@70e063a35619d71f
});
;define("vault/helpers/lowercase", ["exports", "ember-cli-string-helpers/helpers/lowercase"], function (_exports, _lowercase) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _lowercase.default;
    }
  });
  Object.defineProperty(_exports, "lowercase", {
    enumerable: true,
    get: function () {
      return _lowercase.lowercase;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-cli-string-helpers/helpers/lowercase"eaimeta@70e063a35619d71f
});
;define("vault/helpers/lt", ["exports", "ember-truth-helpers/helpers/lt"], function (_exports, _lt) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _lt.default;
    }
  });
  Object.defineProperty(_exports, "lt", {
    enumerable: true,
    get: function () {
      return _lt.lt;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-truth-helpers/helpers/lt"eaimeta@70e063a35619d71f
});
;define("vault/helpers/lte", ["exports", "ember-truth-helpers/helpers/lte"], function (_exports, _lte) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _lte.default;
    }
  });
  Object.defineProperty(_exports, "lte", {
    enumerable: true,
    get: function () {
      return _lte.lte;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-truth-helpers/helpers/lte"eaimeta@70e063a35619d71f
});
;define("vault/helpers/map-by", ["exports", "ember-composable-helpers/helpers/map-by"], function (_exports, _mapBy) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _mapBy.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-composable-helpers/helpers/map-by"eaimeta@70e063a35619d71f
});
;define("vault/helpers/map", ["exports", "ember-composable-helpers/helpers/map"], function (_exports, _map) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _map.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-composable-helpers/helpers/map"eaimeta@70e063a35619d71f
});
;define("vault/helpers/media", ["exports", "ember-responsive/helpers/media"], function (_exports, _media) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _media.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-responsive/helpers/media"eaimeta@70e063a35619d71f
});
;define("vault/helpers/message-types", ["exports", "core/helpers/message-types"], function (_exports, _messageTypes) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "MESSAGE_TYPES", {
    enumerable: true,
    get: function () {
      return _messageTypes.MESSAGE_TYPES;
    }
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _messageTypes.default;
    }
  });
  Object.defineProperty(_exports, "messageTypes", {
    enumerable: true,
    get: function () {
      return _messageTypes.messageTypes;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/helpers/message-types"eaimeta@70e063a35619d71f
});
;define("vault/helpers/mountable-auth-methods", ["exports", "@ember/component/helper"], function (_exports, _helper) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  _exports.methods = methods;
  0; //eaimeta@70e063a35619d71f0,"@ember/component/helper"eaimeta@70e063a35619d71f

  const MOUNTABLE_AUTH_METHODS = [{
    displayName: 'AppRole',
    value: 'approle',
    type: 'approle',
    category: 'generic'
  }, {
    displayName: 'JWT',
    value: 'jwt',
    type: 'jwt',
    glyph: 'auth',
    category: 'generic'
  }, {
    displayName: 'OIDC',
    value: 'oidc',
    type: 'oidc',
    glyph: 'auth',
    category: 'generic'
  }, {
    displayName: 'Kubernetes',
    value: 'kubernetes',
    type: 'kubernetes',
    category: 'infra',
    glyph: 'kubernetes-color'
  }, {
    displayName: 'LDAP',
    value: 'ldap',
    type: 'ldap',
    glyph: 'auth',
    category: 'infra'
  }, {
    displayName: 'RADIUS',
    value: 'radius',
    type: 'radius',
    glyph: 'auth',
    category: 'infra'
  }, {
    displayName: 'TLS Certificates',
    value: 'cert',
    type: 'cert',
    category: 'generic'
  }, {
    displayName: 'Username & Password',
    value: 'userpass',
    type: 'userpass',
    category: 'generic'
  }];

  function methods() {
    return MOUNTABLE_AUTH_METHODS.slice();
  }

  var _default = (0, _helper.helper)(methods);

  _exports.default = _default;
});
;define("vault/helpers/mountable-secret-engines", ["exports", "@ember/component/helper"], function (_exports, _helper) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.allEngines = allEngines;
  _exports.default = void 0;
  _exports.mountableEngines = mountableEngines;
  0; //eaimeta@70e063a35619d71f0,"@ember/component/helper"eaimeta@70e063a35619d71f

  const MOUNTABLE_SECRET_ENGINES = [{
    displayName: 'Databases',
    type: 'database',
    category: 'infra'
  }, {
    displayName: 'KV',
    type: 'kv',
    category: 'generic'
  }, {
    displayName: 'PKI Certificates',
    type: 'pki',
    engineRoute: 'pki.overview',
    category: 'generic'
  }, {
    displayName: 'RabbitMQ',
    type: 'rabbitmq',
    category: 'infra'
  }, {
    displayName: 'SSH',
    type: 'ssh',
    category: 'generic'
  }, {
    displayName: 'Transit',
    type: 'transit',
    category: 'generic'
  }, {
    displayName: 'TOTP',
    type: 'totp',
    category: 'generic'
  }, {
    displayName: 'Kubernetes',
    value: 'kubernetes',
    type: 'kubernetes',
    engineRoute: 'kubernetes.overview',
    category: 'generic',
    glyph: 'kubernetes-color'
  }];

  function mountableEngines() {
    return MOUNTABLE_SECRET_ENGINES.slice();
  }

  function allEngines() {
    return [...MOUNTABLE_SECRET_ENGINES];
  }

  var _default = (0, _helper.helper)(mountableEngines);

  _exports.default = _default;
});
;define("vault/helpers/multi-line-join", ["exports", "@ember/component/helper"], function (_exports, _helper) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  _exports.multiLineJoin = multiLineJoin;
  0; //eaimeta@70e063a35619d71f0,"@ember/component/helper"eaimeta@70e063a35619d71f

  function multiLineJoin(_ref) {
    let [arr] = _ref;
    return arr.join('\n');
  }

  var _default = (0, _helper.helper)(multiLineJoin);

  _exports.default = _default;
});
;define("vault/helpers/nav-to-route", ["exports", "@ember/service", "@ember/component/helper"], function (_exports, _service, _helper) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@ember/component/helper"eaimeta@70e063a35619d71f

  var _default = _helper.default.extend({
    router: (0, _service.inject)(),

    compute(_ref, _ref2) {
      let [routeName, ...models] = _ref;
      let {
        replace = false
      } = _ref2;
      return () => {
        const router = this.router;
        const method = replace ? router.replaceWith : router.transitionTo;
        return method.call(router, routeName, ...models);
      };
    }

  });

  _exports.default = _default;
});
;define("vault/helpers/next", ["exports", "ember-composable-helpers/helpers/next"], function (_exports, _next) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _next.default;
    }
  });
  Object.defineProperty(_exports, "next", {
    enumerable: true,
    get: function () {
      return _next.next;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-composable-helpers/helpers/next"eaimeta@70e063a35619d71f
});
;define("vault/helpers/noop", ["exports", "ember-composable-helpers/helpers/noop"], function (_exports, _noop) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _noop.default;
    }
  });
  Object.defineProperty(_exports, "noop", {
    enumerable: true,
    get: function () {
      return _noop.noop;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-composable-helpers/helpers/noop"eaimeta@70e063a35619d71f
});
;define("vault/helpers/not-eq", ["exports", "ember-truth-helpers/helpers/not-equal"], function (_exports, _notEqual) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _notEqual.default;
    }
  });
  Object.defineProperty(_exports, "notEqualHelper", {
    enumerable: true,
    get: function () {
      return _notEqual.notEqualHelper;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-truth-helpers/helpers/not-equal"eaimeta@70e063a35619d71f
});
;define("vault/helpers/not", ["exports", "ember-truth-helpers/helpers/not"], function (_exports, _not) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _not.default;
    }
  });
  Object.defineProperty(_exports, "not", {
    enumerable: true,
    get: function () {
      return _not.not;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-truth-helpers/helpers/not"eaimeta@70e063a35619d71f
});
;define("vault/helpers/now", ["exports", "vault/helpers/-date-base"], function (_exports, _dateBase) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/helpers/-date-base"eaimeta@70e063a35619d71f

  var _default = _dateBase.default.extend({
    compute() {
      this._super(...arguments);

      return Date.now();
    }

  });

  _exports.default = _default;
});
;define("vault/helpers/number-to-word", ["exports", "@ember/component/helper"], function (_exports, _helper) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  _exports.numberToWord = numberToWord;
  0; //eaimeta@70e063a35619d71f0,"@ember/component/helper"eaimeta@70e063a35619d71f

  function numberToWord(number, capitalize) {
    const word = {
      0: 'zero',
      1: 'one',
      2: 'two',
      3: 'three',
      4: 'four',
      5: 'five',
      6: 'six',
      7: 'seven',
      8: 'eight',
      9: 'nine'
    }[number] || number;
    return capitalize && typeof word === 'string' ? `${word.charAt(0).toUpperCase()}${word.slice(1)}` : word;
  }

  var _default = (0, _helper.helper)(function (_ref, _ref2) {
    let [number] = _ref;
    let {
      capitalize
    } = _ref2;
    return numberToWord(number, capitalize);
  });

  _exports.default = _default;
});
;define("vault/helpers/object-at", ["exports", "ember-composable-helpers/helpers/object-at"], function (_exports, _objectAt) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _objectAt.default;
    }
  });
  Object.defineProperty(_exports, "objectAt", {
    enumerable: true,
    get: function () {
      return _objectAt.objectAt;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-composable-helpers/helpers/object-at"eaimeta@70e063a35619d71f
});
;define("vault/helpers/on-key", ["exports", "ember-keyboard/helpers/on-key.js"], function (_exports, _onKey) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _onKey.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-keyboard/helpers/on-key.js"eaimeta@70e063a35619d71f
});
;define("vault/helpers/optional", ["exports", "ember-composable-helpers/helpers/optional"], function (_exports, _optional) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _optional.default;
    }
  });
  Object.defineProperty(_exports, "optional", {
    enumerable: true,
    get: function () {
      return _optional.optional;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-composable-helpers/helpers/optional"eaimeta@70e063a35619d71f
});
;define("vault/helpers/options-for-backend", ["exports", "core/helpers/options-for-backend"], function (_exports, _optionsForBackend) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _optionsForBackend.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/helpers/options-for-backend"eaimeta@70e063a35619d71f
});
;define("vault/helpers/or", ["exports", "ember-truth-helpers/helpers/or"], function (_exports, _or) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _or.default;
    }
  });
  Object.defineProperty(_exports, "or", {
    enumerable: true,
    get: function () {
      return _or.or;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-truth-helpers/helpers/or"eaimeta@70e063a35619d71f
});
;define("vault/helpers/page-title", ["exports", "ember-page-title/helpers/page-title"], function (_exports, _pageTitle) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-page-title/helpers/page-title"eaimeta@70e063a35619d71f

  var _default = _pageTitle.default;
  _exports.default = _default;
});
;define("vault/helpers/path-or-array", ["exports", "core/helpers/path-or-array"], function (_exports, _pathOrArray) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _pathOrArray.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/helpers/path-or-array"eaimeta@70e063a35619d71f
});
;define("vault/helpers/perform", ["exports", "ember-concurrency/helpers/perform"], function (_exports, _perform) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _perform.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-concurrency/helpers/perform"eaimeta@70e063a35619d71f
});
;define("vault/helpers/pick", ["exports", "ember-composable-helpers/helpers/pick"], function (_exports, _pick) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _pick.default;
    }
  });
  Object.defineProperty(_exports, "pick", {
    enumerable: true,
    get: function () {
      return _pick.pick;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-composable-helpers/helpers/pick"eaimeta@70e063a35619d71f
});
;define("vault/helpers/pipe-action", ["exports", "ember-composable-helpers/helpers/pipe-action"], function (_exports, _pipeAction) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _pipeAction.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-composable-helpers/helpers/pipe-action"eaimeta@70e063a35619d71f
});
;define("vault/helpers/pipe", ["exports", "ember-composable-helpers/helpers/pipe"], function (_exports, _pipe) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _pipe.default;
    }
  });
  Object.defineProperty(_exports, "pipe", {
    enumerable: true,
    get: function () {
      return _pipe.pipe;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-composable-helpers/helpers/pipe"eaimeta@70e063a35619d71f
});
;define("vault/helpers/pluralize", ["exports", "ember-inflector/lib/helpers/pluralize"], function (_exports, _pluralize) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-inflector/lib/helpers/pluralize"eaimeta@70e063a35619d71f

  var _default = _pluralize.default;
  _exports.default = _default;
});
;define("vault/helpers/previous", ["exports", "ember-composable-helpers/helpers/previous"], function (_exports, _previous) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _previous.default;
    }
  });
  Object.defineProperty(_exports, "previous", {
    enumerable: true,
    get: function () {
      return _previous.previous;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-composable-helpers/helpers/previous"eaimeta@70e063a35619d71f
});
;define("vault/helpers/queue", ["exports", "ember-composable-helpers/helpers/queue"], function (_exports, _queue) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _queue.default;
    }
  });
  Object.defineProperty(_exports, "queue", {
    enumerable: true,
    get: function () {
      return _queue.queue;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-composable-helpers/helpers/queue"eaimeta@70e063a35619d71f
});
;define("vault/helpers/range", ["exports", "ember-composable-helpers/helpers/range"], function (_exports, _range) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _range.default;
    }
  });
  Object.defineProperty(_exports, "range", {
    enumerable: true,
    get: function () {
      return _range.range;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-composable-helpers/helpers/range"eaimeta@70e063a35619d71f
});
;define("vault/helpers/reduce", ["exports", "ember-composable-helpers/helpers/reduce"], function (_exports, _reduce) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _reduce.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-composable-helpers/helpers/reduce"eaimeta@70e063a35619d71f
});
;define("vault/helpers/reject-by", ["exports", "ember-composable-helpers/helpers/reject-by"], function (_exports, _rejectBy) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _rejectBy.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-composable-helpers/helpers/reject-by"eaimeta@70e063a35619d71f
});
;define("vault/helpers/remove-from-array", ["exports", "@ember/component/helper", "@ember/debug"], function (_exports, _helper, _debug) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  _exports.removeFromArray = removeFromArray;
  0; //eaimeta@70e063a35619d71f0,"@ember/component/helper",0,"@ember/debug"eaimeta@70e063a35619d71f

  function dedupe(items) {
    return items.filter((v, i) => items.indexOf(v) === i);
  }

  function removeFromArray(_ref) {
    let [array, string] = _ref;

    if (!Array.isArray(array)) {
      (true && !(false) && (0, _debug.assert)(`Value provided is not an array`, false));
    }

    const newArray = [...array];
    const idx = newArray.indexOf(string);

    if (idx >= 0) {
      newArray.splice(idx, 1);
    }

    return dedupe(newArray);
  }

  var _default = (0, _helper.helper)(removeFromArray);

  _exports.default = _default;
});
;define("vault/helpers/repeat", ["exports", "ember-composable-helpers/helpers/repeat"], function (_exports, _repeat) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _repeat.default;
    }
  });
  Object.defineProperty(_exports, "repeat", {
    enumerable: true,
    get: function () {
      return _repeat.repeat;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-composable-helpers/helpers/repeat"eaimeta@70e063a35619d71f
});
;define("vault/helpers/reverse", ["exports", "ember-composable-helpers/helpers/reverse"], function (_exports, _reverse) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _reverse.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-composable-helpers/helpers/reverse"eaimeta@70e063a35619d71f
});
;define("vault/helpers/root-url", ["exports", "ember-router-helpers/helpers/root-url"], function (_exports, _rootUrl) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _rootUrl.default;
    }
  });
  Object.defineProperty(_exports, "rootUrl", {
    enumerable: true,
    get: function () {
      return _rootUrl.rootUrl;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-router-helpers/helpers/root-url"eaimeta@70e063a35619d71f
});
;define("vault/helpers/route-params-for", ["exports", "@ember/component/helper", "@ember/service"], function (_exports, _helper, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/component/helper",0,"@ember/service"eaimeta@70e063a35619d71f

  var _default = _helper.default.extend({
    permissions: (0, _service.inject)(),

    compute(_ref) {
      let [navItem] = _ref;
      const permissions = this.permissions;
      return permissions.navPathParams(navItem);
    }

  });

  _exports.default = _default;
});
;define("vault/helpers/route-params", ["exports", "ember-router-helpers/helpers/route-params"], function (_exports, _routeParams) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _routeParams.default;
    }
  });
  Object.defineProperty(_exports, "routeParams", {
    enumerable: true,
    get: function () {
      return _routeParams.routeParams;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-router-helpers/helpers/route-params"eaimeta@70e063a35619d71f
});
;define("vault/helpers/sanitized-html", ["exports", "core/helpers/sanitized-html"], function (_exports, _sanitizedHtml) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _sanitizedHtml.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/helpers/sanitized-html"eaimeta@70e063a35619d71f
});
;define("vault/helpers/secret-query-params", ["exports", "@ember/component/helper"], function (_exports, _helper) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  _exports.secretQueryParams = secretQueryParams;
  0; //eaimeta@70e063a35619d71f0,"@ember/component/helper"eaimeta@70e063a35619d71f

  function secretQueryParams(_ref, _ref2) {
    let [backendType, type = ''] = _ref;
    let {
      asQueryParams
    } = _ref2;
    const values = {
      transit: {
        tab: 'actions'
      },
      database: {
        type
      },
      keymgmt: {
        itemType: type === 'provider' ? 'provider' : 'key'
      }
    }[backendType]; // format required when using LinkTo with positional params

    if (values && asQueryParams) {
      return {
        isQueryParams: true,
        values
      };
    }

    return values;
  }

  var _default = (0, _helper.helper)(secretQueryParams);

  _exports.default = _default;
});
;define("vault/helpers/set-flash-message", ["exports", "core/helpers/set-flash-message"], function (_exports, _setFlashMessage) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _setFlashMessage.default;
    }
  });
  Object.defineProperty(_exports, "setFlashMessage", {
    enumerable: true,
    get: function () {
      return _setFlashMessage.setFlashMessage;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/helpers/set-flash-message"eaimeta@70e063a35619d71f
});
;define("vault/helpers/sha2-digest-sizes", ["exports", "@ember/component/helper"], function (_exports, _helper) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  _exports.sha2DigestSizes = sha2DigestSizes;
  0; //eaimeta@70e063a35619d71f0,"@ember/component/helper"eaimeta@70e063a35619d71f

  const SHA2_DIGEST_SIZES = ['sha2-224', 'sha2-256', 'sha2-384', 'sha2-512'];

  function sha2DigestSizes() {
    return SHA2_DIGEST_SIZES;
  }

  var _default = (0, _helper.helper)(sha2DigestSizes);

  _exports.default = _default;
});
;define("vault/helpers/shuffle", ["exports", "ember-composable-helpers/helpers/shuffle"], function (_exports, _shuffle) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _shuffle.default;
    }
  });
  Object.defineProperty(_exports, "shuffle", {
    enumerable: true,
    get: function () {
      return _shuffle.shuffle;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-composable-helpers/helpers/shuffle"eaimeta@70e063a35619d71f
});
;define("vault/helpers/singularize", ["exports", "ember-inflector/lib/helpers/singularize"], function (_exports, _singularize) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-inflector/lib/helpers/singularize"eaimeta@70e063a35619d71f

  var _default = _singularize.default;
  _exports.default = _default;
});
;define("vault/helpers/slice", ["exports", "ember-composable-helpers/helpers/slice"], function (_exports, _slice) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _slice.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-composable-helpers/helpers/slice"eaimeta@70e063a35619d71f
});
;define("vault/helpers/sort-by", ["exports", "ember-composable-helpers/helpers/sort-by"], function (_exports, _sortBy) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _sortBy.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-composable-helpers/helpers/sort-by"eaimeta@70e063a35619d71f
});
;define("vault/helpers/split-object", ["exports", "@ember/component/helper"], function (_exports, _helper) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  _exports.splitObject = splitObject;
  0; //eaimeta@70e063a35619d71f0,"@ember/component/helper"eaimeta@70e063a35619d71f

  function splitObject(originalObject, array) {
    const object1 = {};
    const object2 = {}; // convert object to key's array

    const keys = Object.keys(originalObject);
    keys.forEach(key => {
      if (array.includes(key)) {
        object1[key] = originalObject[key];
      } else {
        object2[key] = originalObject[key];
      }
    });
    return [object1, object2];
  }

  var _default = (0, _helper.helper)(splitObject);

  _exports.default = _default;
});
;define("vault/helpers/stringify", ["exports", "@ember/component/helper"], function (_exports, _helper) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  _exports.stringify = stringify;
  0; //eaimeta@70e063a35619d71f0,"@ember/component/helper"eaimeta@70e063a35619d71f

  function stringify(_ref, _ref2) {
    let [target] = _ref;
    let {
      skipFormat
    } = _ref2;

    if (skipFormat) {
      return JSON.stringify(target);
    }

    return JSON.stringify(target, null, 2);
  }

  var _default = (0, _helper.helper)(stringify);

  _exports.default = _default;
});
;define("vault/helpers/sub", ["exports", "@ember/component/helper"], function (_exports, _helper) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/component/helper"eaimeta@70e063a35619d71f

  var _default = (0, _helper.helper)(function (_ref) {
    let [a, ...toSubtract] = _ref;
    return toSubtract.reduce((total, value) => total - parseInt(value, 0), a);
  });

  _exports.default = _default;
});
;define("vault/helpers/supported-auth-backends", ["exports", "@ember/component/helper"], function (_exports, _helper) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  _exports.supportedAuthBackends = supportedAuthBackends;
  0; //eaimeta@70e063a35619d71f0,"@ember/component/helper"eaimeta@70e063a35619d71f

  const SUPPORTED_AUTH_BACKENDS = [{
    type: 'token',
    typeDisplay: 'Token',
    description: 'Token authentication.',
    tokenPath: 'id',
    displayNamePath: 'display_name',
    formAttributes: ['token']
  }, {
    type: 'userpass',
    typeDisplay: 'Username',
    description: 'A simple username and password backend.',
    tokenPath: 'client_token',
    displayNamePath: 'metadata.username',
    formAttributes: ['username', 'password']
  }, {
    type: 'ldap',
    typeDisplay: 'LDAP',
    description: 'LDAP authentication.',
    tokenPath: 'client_token',
    displayNamePath: 'metadata.username',
    formAttributes: ['username', 'password']
  }, {
    type: 'jwt',
    typeDisplay: 'JWT',
    description: 'Authenticate using JWT or OIDC provider.',
    tokenPath: 'client_token',
    displayNamePath: 'display_name',
    formAttributes: ['role', 'jwt']
  }, {
    type: 'oidc',
    typeDisplay: 'OIDC',
    description: 'Authenticate using JWT or OIDC provider.',
    tokenPath: 'client_token',
    displayNamePath: 'display_name',
    formAttributes: ['role', 'jwt']
  }, {
    type: 'radius',
    typeDisplay: 'RADIUS',
    description: 'Authenticate with your RADIUS username and password.',
    tokenPath: 'client_token',
    displayNamePath: 'metadata.username',
    formAttributes: ['username', 'password']
  }];

  function supportedAuthBackends() {
    return SUPPORTED_AUTH_BACKENDS;
  }

  var _default = (0, _helper.helper)(supportedAuthBackends);

  _exports.default = _default;
});
;define("vault/helpers/supported-managed-auth-backends", ["exports", "@ember/component/helper"], function (_exports, _helper) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  _exports.supportedManagedAuthBackends = supportedManagedAuthBackends;
  0; //eaimeta@70e063a35619d71f0,"@ember/component/helper"eaimeta@70e063a35619d71f

  const MANAGED_AUTH_BACKENDS = ['cert', 'userpass', 'ldap', 'okta', 'radius'];

  function supportedManagedAuthBackends() {
    return MANAGED_AUTH_BACKENDS;
  }

  var _default = (0, _helper.helper)(supportedManagedAuthBackends);

  _exports.default = _default;
});
;define("vault/helpers/supported-secret-backends", ["exports", "@ember/component/helper"], function (_exports, _helper) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  _exports.supportedSecretBackends = supportedSecretBackends;
  0; //eaimeta@70e063a35619d71f0,"@ember/component/helper"eaimeta@70e063a35619d71f

  const SUPPORTED_SECRET_BACKENDS = ['database', 'cubbyhole', 'generic', 'kv', 'pki', 'ssh', 'transit', 'kubernetes'];

  function supportedSecretBackends() {
    return SUPPORTED_SECRET_BACKENDS;
  }

  var _default = (0, _helper.helper)(supportedSecretBackends);

  _exports.default = _default;
});
;define("vault/helpers/svg-jar", ["exports", "ember-svg-jar/helpers/svg-jar"], function (_exports, _svgJar) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _svgJar.default;
    }
  });
  Object.defineProperty(_exports, "svgJar", {
    enumerable: true,
    get: function () {
      return _svgJar.svgJar;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-svg-jar/helpers/svg-jar"eaimeta@70e063a35619d71f
});
;define("vault/helpers/tabs-for-auth-section", ["exports", "@ember/component/helper", "ember-inflector", "@ember/string"], function (_exports, _helper, _emberInflector, _string) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  _exports.tabsForAuthSection = tabsForAuthSection;
  0; //eaimeta@70e063a35619d71f0,"@ember/component/helper",0,"ember-inflector",0,"@ember/string"eaimeta@70e063a35619d71f

  const TABS_FOR_SETTINGS = {
    aws: [{
      label: 'Client',
      routeParams: ['vault.cluster.settings.auth.configure.section', 'client']
    }, {
      label: 'Identity Allow List Tidy',
      routeParams: ['vault.cluster.settings.auth.configure.section', 'identity-accesslist']
    }, {
      label: 'Role Tag Deny List Tidy',
      routeParams: ['vault.cluster.settings.auth.configure.section', 'roletag-denylist']
    }],
    azure: [{
      label: 'Configuration',
      routeParams: ['vault.cluster.settings.auth.configure.section', 'configuration']
    }],
    github: [{
      label: 'Configuration',
      routeParams: ['vault.cluster.settings.auth.configure.section', 'configuration']
    }],
    gcp: [{
      label: 'Configuration',
      routeParams: ['vault.cluster.settings.auth.configure.section', 'configuration']
    }],
    jwt: [{
      label: 'Configuration',
      routeParams: ['vault.cluster.settings.auth.configure.section', 'configuration']
    }],
    oidc: [{
      label: 'Configuration',
      routeParams: ['vault.cluster.settings.auth.configure.section', 'configuration']
    }],
    kubernetes: [{
      label: 'Configuration',
      routeParams: ['vault.cluster.settings.auth.configure.section', 'configuration']
    }],
    ldap: [{
      label: 'Configuration',
      routeParams: ['vault.cluster.settings.auth.configure.section', 'configuration']
    }],
    okta: [{
      label: 'Configuration',
      routeParams: ['vault.cluster.settings.auth.configure.section', 'configuration']
    }],
    radius: [{
      label: 'Configuration',
      routeParams: ['vault.cluster.settings.auth.configure.section', 'configuration']
    }]
  };
  const TABS_FOR_SHOW = {};

  function tabsForAuthSection(_ref) {
    let [model, sectionType = 'authSettings', paths] = _ref;
    let tabs;

    if (sectionType === 'authSettings') {
      tabs = (TABS_FOR_SETTINGS[model.type] || []).slice();
      tabs.push({
        label: 'Method Options',
        routeParams: ['vault.cluster.settings.auth.configure.section', 'options']
      });
      return tabs;
    }

    if (paths || model.paths) {
      if (model.paths) {
        paths = model.paths.paths.filter(path => path.navigation);
      } // TODO: we're unsure if we actually need compact here
      // but are leaving it just in case OpenAPI ever returns an empty thing


      tabs = paths.compact().map(path => {
        return {
          label: (0, _string.capitalize)((0, _emberInflector.pluralize)(path.itemName)),
          routeParams: ['vault.cluster.access.method.item.list', path.itemType]
        };
      });
    } else {
      tabs = (TABS_FOR_SHOW[model.type] || []).slice();
    }

    tabs.push({
      label: 'Configuration',
      routeParams: ['vault.cluster.access.method.section', 'configuration']
    });
    return tabs;
  }

  var _default = (0, _helper.helper)(tabsForAuthSection);

  _exports.default = _default;
});
;define("vault/helpers/tabs-for-identity-show", ["exports", "@ember/component/helper"], function (_exports, _helper) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = _exports.TABS = void 0;
  _exports.tabsForIdentityShow = tabsForIdentityShow;
  0; //eaimeta@70e063a35619d71f0,"@ember/component/helper"eaimeta@70e063a35619d71f

  const TABS = {
    entity: ['details', 'aliases', 'policies', 'groups', 'metadata'],
    'entity-alias': ['details', 'metadata'],
    //group will be used in the model hook of the route
    group: ['details', 'aliases', 'policies', 'members', 'parent-groups', 'metadata'],
    'group-internal': ['details', 'policies', 'members', 'parent-groups', 'metadata'],
    'group-external': ['details', 'aliases', 'policies', 'members', 'parent-groups', 'metadata'],
    'group-alias': ['details']
  };
  _exports.TABS = TABS;

  function tabsForIdentityShow(_ref) {
    let [modelType, groupType] = _ref;
    let key = modelType;

    if (groupType) {
      key = `${key}-${groupType}`;
    }

    return TABS[key];
  }

  var _default = (0, _helper.helper)(tabsForIdentityShow);

  _exports.default = _default;
});
;define("vault/helpers/take", ["exports", "ember-composable-helpers/helpers/take"], function (_exports, _take) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _take.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-composable-helpers/helpers/take"eaimeta@70e063a35619d71f
});
;define("vault/helpers/task", ["exports", "ember-concurrency/helpers/task"], function (_exports, _task) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _task.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-concurrency/helpers/task"eaimeta@70e063a35619d71f
});
;define("vault/helpers/titleize", ["exports", "ember-cli-string-helpers/helpers/titleize"], function (_exports, _titleize) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _titleize.default;
    }
  });
  Object.defineProperty(_exports, "titleize", {
    enumerable: true,
    get: function () {
      return _titleize.titleize;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-cli-string-helpers/helpers/titleize"eaimeta@70e063a35619d71f
});
;define("vault/helpers/to-label", ["exports", "@ember/component/helper", "vault/helpers/capitalize", "vault/helpers/humanize", "vault/helpers/dasherize"], function (_exports, _helper, _capitalize, _humanize, _dasherize) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  _exports.toLabel = toLabel;
  0; //eaimeta@70e063a35619d71f0,"@ember/component/helper",0,"vault/helpers/capitalize",0,"vault/helpers/humanize",0,"vault/helpers/dasherize"eaimeta@70e063a35619d71f

  function toLabel(val) {
    return (0, _capitalize.capitalize)([(0, _humanize.humanize)([(0, _dasherize.dasherize)(val)])]);
  }

  var _default = (0, _helper.helper)(toLabel);

  _exports.default = _default;
});
;define("vault/helpers/toggle-action", ["exports", "ember-composable-helpers/helpers/toggle-action"], function (_exports, _toggleAction) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _toggleAction.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-composable-helpers/helpers/toggle-action"eaimeta@70e063a35619d71f
});
;define("vault/helpers/toggle", ["exports", "ember-composable-helpers/helpers/toggle"], function (_exports, _toggle) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _toggle.default;
    }
  });
  Object.defineProperty(_exports, "toggle", {
    enumerable: true,
    get: function () {
      return _toggle.toggle;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-composable-helpers/helpers/toggle"eaimeta@70e063a35619d71f
});
;define("vault/helpers/tools-actions", ["exports", "@ember/component/helper"], function (_exports, _helper) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  _exports.toolsActions = toolsActions;
  0; //eaimeta@70e063a35619d71f0,"@ember/component/helper"eaimeta@70e063a35619d71f

  const TOOLS_ACTIONS = ['wrap', 'lookup', 'unwrap', 'rewrap', 'random', 'hash'];

  function toolsActions() {
    return TOOLS_ACTIONS;
  }

  var _default = (0, _helper.helper)(toolsActions);

  _exports.default = _default;
});
;define("vault/helpers/transition-to", ["exports", "ember-router-helpers/helpers/transition-to"], function (_exports, _transitionTo) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _transitionTo.default;
    }
  });
  Object.defineProperty(_exports, "transitionTo", {
    enumerable: true,
    get: function () {
      return _transitionTo.transitionTo;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-router-helpers/helpers/transition-to"eaimeta@70e063a35619d71f
});
;define("vault/helpers/trim", ["exports", "ember-cli-string-helpers/helpers/trim"], function (_exports, _trim) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _trim.default;
    }
  });
  Object.defineProperty(_exports, "trim", {
    enumerable: true,
    get: function () {
      return _trim.trim;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-cli-string-helpers/helpers/trim"eaimeta@70e063a35619d71f
});
;define("vault/helpers/truncate", ["exports", "ember-cli-string-helpers/helpers/truncate"], function (_exports, _truncate) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _truncate.default;
    }
  });
  Object.defineProperty(_exports, "truncate", {
    enumerable: true,
    get: function () {
      return _truncate.truncate;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-cli-string-helpers/helpers/truncate"eaimeta@70e063a35619d71f
});
;define("vault/helpers/underscore", ["exports", "ember-cli-string-helpers/helpers/underscore"], function (_exports, _underscore) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _underscore.default;
    }
  });
  Object.defineProperty(_exports, "underscore", {
    enumerable: true,
    get: function () {
      return _underscore.underscore;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-cli-string-helpers/helpers/underscore"eaimeta@70e063a35619d71f
});
;define("vault/helpers/union", ["exports", "ember-composable-helpers/helpers/union"], function (_exports, _union) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _union.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-composable-helpers/helpers/union"eaimeta@70e063a35619d71f
});
;define("vault/helpers/uppercase", ["exports", "ember-cli-string-helpers/helpers/uppercase"], function (_exports, _uppercase) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _uppercase.default;
    }
  });
  Object.defineProperty(_exports, "uppercase", {
    enumerable: true,
    get: function () {
      return _uppercase.uppercase;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-cli-string-helpers/helpers/uppercase"eaimeta@70e063a35619d71f
});
;define("vault/helpers/url-for", ["exports", "ember-router-helpers/helpers/url-for"], function (_exports, _urlFor) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _urlFor.default;
    }
  });
  Object.defineProperty(_exports, "urlFor", {
    enumerable: true,
    get: function () {
      return _urlFor.urlFor;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-router-helpers/helpers/url-for"eaimeta@70e063a35619d71f
});
;define("vault/helpers/values", ["exports", "ember-composable-helpers/helpers/values"], function (_exports, _values) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _values.default;
    }
  });
  Object.defineProperty(_exports, "values", {
    enumerable: true,
    get: function () {
      return _values.values;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-composable-helpers/helpers/values"eaimeta@70e063a35619d71f
});
;define("vault/helpers/w", ["exports", "ember-cli-string-helpers/helpers/w"], function (_exports, _w) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _w.default;
    }
  });
  Object.defineProperty(_exports, "w", {
    enumerable: true,
    get: function () {
      return _w.w;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-cli-string-helpers/helpers/w"eaimeta@70e063a35619d71f
});
;define("vault/helpers/without", ["exports", "ember-composable-helpers/helpers/without"], function (_exports, _without) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _without.default;
    }
  });
  Object.defineProperty(_exports, "without", {
    enumerable: true,
    get: function () {
      return _without.without;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-composable-helpers/helpers/without"eaimeta@70e063a35619d71f
});
;define("vault/helpers/wizard-constants", ["exports", "vault/machines/tutorial-machine", "vault/machines/secrets-machine", "vault/machines/policies-machine", "vault/machines/tools-machine", "vault/machines/auth-machine"], function (_exports, _tutorialMachine, _secretsMachine, _policiesMachine, _toolsMachine, _authMachine) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.STORAGE_KEYS = _exports.MACHINES = _exports.INIT_STEPS = _exports.FEATURE_MACHINE_TIME = _exports.FEATURE_MACHINE_STEPS = _exports.DEFAULTS = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/machines/tutorial-machine",0,"vault/machines/secrets-machine",0,"vault/machines/policies-machine",0,"vault/machines/tools-machine",0,"vault/machines/auth-machine"eaimeta@70e063a35619d71f

  const STORAGE_KEYS = {
    TUTORIAL_STATE: 'vault:ui-tutorial-state',
    FEATURE_LIST: 'vault:ui-feature-list',
    FEATURE_STATE: 'vault:ui-feature-state',
    FEATURE_STATE_HISTORY: 'vault:ui-feature-state-history',
    COMPLETED_FEATURES: 'vault:ui-completed-list',
    COMPONENT_STATE: 'vault:ui-component-state',
    RESUME_URL: 'vault:ui-tutorial-resume-url',
    RESUME_ROUTE: 'vault:ui-tutorial-resume-route'
  };
  _exports.STORAGE_KEYS = STORAGE_KEYS;
  const MACHINES = {
    tutorial: _tutorialMachine.default,
    secrets: _secretsMachine.default,
    policies: _policiesMachine.default,
    tools: _toolsMachine.default,
    authentication: _authMachine.default
  };
  _exports.MACHINES = MACHINES;
  const DEFAULTS = {
    currentState: null,
    featureList: null,
    featureState: null,
    currentMachine: null,
    tutorialComponent: null,
    featureComponent: null,
    stepComponent: null,
    detailsComponent: null,
    componentState: null,
    nextFeature: null,
    nextStep: null,
    featureMachineHistory: null
  };
  _exports.DEFAULTS = DEFAULTS;
  const FEATURE_MACHINE_STEPS = {
    secrets: {
      encryption: 5,
      secret: {
        list: 4,
        secret: 5
      },
      role: 7,
      provider: 8
    },
    policies: 5,
    tools: 8,
    authentication: 4
  };
  _exports.FEATURE_MACHINE_STEPS = FEATURE_MACHINE_STEPS;
  const INIT_STEPS = ['setup', 'save', 'unseal', 'login'];
  _exports.INIT_STEPS = INIT_STEPS;
  const FEATURE_MACHINE_TIME = {
    secrets: 7,
    policies: 5,
    tools: 8,
    authentication: 5
  };
  _exports.FEATURE_MACHINE_TIME = FEATURE_MACHINE_TIME;
});
;define("vault/helpers/xor", ["exports", "ember-truth-helpers/helpers/xor"], function (_exports, _xor) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _xor.default;
    }
  });
  Object.defineProperty(_exports, "xor", {
    enumerable: true,
    get: function () {
      return _xor.xor;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-truth-helpers/helpers/xor"eaimeta@70e063a35619d71f
});
;define("vault/initializers/deprecation-filter", ["exports", "@ember/debug"], function (_exports, _debug) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  _exports.initialize = initialize;
  0; //eaimeta@70e063a35619d71f0,"@ember/debug"eaimeta@70e063a35619d71f

  // https://guides.emberjs.com/release/configuring-ember/handling-deprecations/#toc_filtering-deprecations
  function initialize() {
    (0, _debug.registerDeprecationHandler)((message, options, next) => {
      // filter deprecations that are scheduled to be removed in a specific version
      // when upgrading or addressing deprecation warnings be sure to update this or remove if not needed
      if (options?.until !== '5.0.0') {
        next(message, options);
      }

      return;
    });
  }

  var _default = {
    initialize
  };
  _exports.default = _default;
});
;define("vault/initializers/disable-ember-inspector", ["exports", "vault/config/environment"], function (_exports, _environment) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/config/environment"eaimeta@70e063a35619d71f

  var _default = {
    name: 'ember-inspect-disable',
    initialize: function () {
      if (_environment.default.environment === 'production') {
        // disables ember inspector
        window.NO_EMBER_DEBUG = true;
      }
    }
  };
  _exports.default = _default;
});
;define("vault/initializers/ember-cli-mirage", ["exports", "vault/config/environment", "ember-cli-mirage/get-rfc232-test-context", "ember-cli-mirage/start-mirage", "vault/mirage/config"], function (_exports, _environment, _getRfc232TestContext, _startMirage, config) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  _exports.startMirage = startMirage;
  0; //eaimeta@70e063a35619d71f0,"vault/config/environment",0,"ember-cli-mirage/get-rfc232-test-context",0,"ember-cli-mirage/start-mirage",0,"vault/mirage/config"eaimeta@70e063a35619d71f

  const {
    default: baseConfig,
    testConfig,
    makeServer
  } = config; //
  // This initializer does two things:
  //
  // 1. Pulls the mirage config objects from the application's config and
  //    registers them in the container so `ember-cli-mirage/start-mirage` can
  //    find them (since it doesn't have access to the app's namespace).
  // 2. Provides legacy support for auto-starting mirage in pre-rfc268 acceptance
  //    tests.
  //

  var _default = {
    name: 'ember-cli-mirage',

    initialize(application) {
      if (baseConfig) {
        application.register('mirage:base-config', baseConfig, {
          instantiate: false
        });
      }

      if (testConfig) {
        application.register('mirage:test-config', testConfig, {
          instantiate: false
        });
      }

      if (makeServer) {
        application.register('mirage:make-server', makeServer, {
          instantiate: false
        });
      }

      _environment.default['ember-cli-mirage'] = _environment.default['ember-cli-mirage'] || {};

      if (_shouldUseMirage(_environment.default.environment, _environment.default['ember-cli-mirage'])) {
        startMirage(_environment.default);
      }
    }

  };
  _exports.default = _default;

  function startMirage() {
    let env = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _environment.default;
    return (0, _startMirage.default)(null, {
      env,
      baseConfig,
      testConfig,
      makeServer
    });
  }

  function _shouldUseMirage(env, addonConfig) {
    if (typeof FastBoot !== 'undefined') {
      return false;
    }

    if ((0, _getRfc232TestContext.default)()) {
      return false;
    }

    let userDeclaredEnabled = typeof addonConfig.enabled !== 'undefined';

    let defaultEnabled = _defaultEnabled(env, addonConfig);

    return userDeclaredEnabled ? addonConfig.enabled : defaultEnabled;
  }
  /*
    Returns a boolean specifying the default behavior for whether
    to initialize Mirage.
  */


  function _defaultEnabled(env, addonConfig) {
    let usingInDev = env === 'development' && !addonConfig.usingProxy;
    let usingInTest = env === 'test';
    return usingInDev || usingInTest;
  }
});
;define("vault/initializers/ember-data-data-adapter", ["exports", "@ember-data/debug/setup"], function (_exports, _setup) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _setup.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@ember-data/debug/setup"eaimeta@70e063a35619d71f
});
;define("vault/initializers/ember-data-identifiers", ["exports", "@ember-data/store", "@ember/string", "uuid"], function (_exports, _store, _string, _uuid) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  _exports.initialize = initialize;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/store",0,"@ember/string",0,"uuid"eaimeta@70e063a35619d71f

  function initialize() {
    // see this GH issue for more information https://github.com/emberjs/data/issues/8106
    // Ember Data uses uuidv4 library to generate ids which relies on the crypto API which is no available in unsecure contexts
    // the suggested polyfill was added in 4.6.2 so until we upgrade we need to define our own id generation method
    // https://api.emberjs.com/ember-data/4.5/classes/IdentifierCache/methods/getOrCreateRecordIdentifier?anchor=getOrCreateRecordIdentifier
    // the uuid library was brought in to replace other usages of crypto in the app so it is safe to use in unsecure contexts
    // adapted from defaultGenerationMethod -- https://github.com/emberjs/data/blob/v4.5.0/packages/store/addon/-private/identifier-cache.ts#LL82-L94C2
    (0, _store.setIdentifierGenerationMethod)(data => {
      if (data.lid) {
        return data.lid;
      }

      if (data.id) {
        return `@lid:${(0, _string.dasherize)(data.type)}-${data.id}`;
      }

      return (0, _uuid.v4)();
    });
  }

  var _default = {
    name: 'ember-data-identifiers',
    initialize
  };
  _exports.default = _default;
});
;define("vault/initializers/ember-data", ["exports", "ember-data", "ember-data/setup-container"], function (_exports, _emberData, _setupContainer) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-data",0,"ember-data/setup-container"eaimeta@70e063a35619d71f

  /*
    This code initializes EmberData in an Ember application.
  */
  var _default = {
    name: 'ember-data',
    initialize: _setupContainer.default
  };
  _exports.default = _default;
});
;define("vault/initializers/ember-responsive-breakpoints", ["exports", "ember-responsive/initializers/responsive"], function (_exports, _responsive) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-responsive/initializers/responsive"eaimeta@70e063a35619d71f

  var _default = _responsive.default;
  _exports.default = _default;
});
;define("vault/initializers/enable-engines", ["exports", "vault/config/environment"], function (_exports, _environment) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  _exports.initialize = initialize;
  0; //eaimeta@70e063a35619d71f0,"vault/config/environment"eaimeta@70e063a35619d71f

  function
    /* application */
  initialize() {
    // attach mount hooks to the environment config
    // context will be the router DSL
    _environment.default.addRootMounts = function () {};
  }

  var _default = {
    initialize
  };
  _exports.default = _default;
});
;define("vault/initializers/engines", ["exports", "ember-engines/initializers/engines"], function (_exports, _engines) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _engines.default;
    }
  });
  Object.defineProperty(_exports, "initialize", {
    enumerable: true,
    get: function () {
      return _engines.initialize;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-engines/initializers/engines"eaimeta@70e063a35619d71f
});
;define("vault/initializers/export-application-global", ["exports", "ember", "vault/config/environment"], function (_exports, _ember, _environment) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  _exports.initialize = initialize;
  0; //eaimeta@70e063a35619d71f0,"ember",0,"vault/config/environment"eaimeta@70e063a35619d71f

  function initialize() {
    var application = arguments[1] || arguments[0];

    if (_environment.default.exportApplicationGlobal !== false) {
      var theGlobal;

      if (typeof window !== 'undefined') {
        theGlobal = window;
      } else if (typeof global !== 'undefined') {
        theGlobal = global;
      } else if (typeof self !== 'undefined') {
        theGlobal = self;
      } else {
        // no reasonable global, just bail
        return;
      }

      var value = _environment.default.exportApplicationGlobal;
      var globalName;

      if (typeof value === 'string') {
        globalName = value;
      } else {
        globalName = _ember.default.String.classify(_environment.default.modulePrefix);
      }

      if (!theGlobal[globalName]) {
        theGlobal[globalName] = application;
        application.reopen({
          willDestroy: function () {
            this._super.apply(this, arguments);

            delete theGlobal[globalName];
          }
        });
      }
    }
  }

  var _default = {
    name: 'export-application-global',
    initialize: initialize
  };
  _exports.default = _default;
});
;define("vault/instance-initializers/add-modals-container", ["exports", "ember-modal-dialog/instance-initializers/add-modals-container"], function (_exports, _addModalsContainer) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-modal-dialog/instance-initializers/add-modals-container"eaimeta@70e063a35619d71f

  var _default = {
    name: 'add-modals-container',
    initialize: _addModalsContainer.default
  };
  _exports.default = _default;
});
;define("vault/instance-initializers/ember-cli-mirage-autostart", ["exports", "ember-cli-mirage/instance-initializers/ember-cli-mirage-autostart"], function (_exports, _emberCliMirageAutostart) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _emberCliMirageAutostart.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-cli-mirage/instance-initializers/ember-cli-mirage-autostart"eaimeta@70e063a35619d71f
});
;define("vault/instance-initializers/ember-data", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71feaimeta@70e063a35619d71f

  /* exists only for things that historically used "after" or "before" */
  var _default = {
    name: 'ember-data',

    initialize() {}

  };
  _exports.default = _default;
});
;define("vault/instance-initializers/load-asset-manifest", ["exports", "vault/config/asset-manifest"], function (_exports, _assetManifest) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  _exports.initialize = initialize;
  0; //eaimeta@70e063a35619d71f0,"vault/config/asset-manifest"eaimeta@70e063a35619d71f

  /**
   * Initializes the AssetLoader service with a generated asset-manifest.
   */
  function initialize(instance) {
    const service = instance.lookup('service:asset-loader');
    service.pushManifest(_assetManifest.default);
  }

  var _default = {
    name: 'load-asset-manifest',
    initialize
  };
  _exports.default = _default;
});
;define("vault/instance-initializers/load-sprite", ["exports", "@hashicorp/ember-flight-icons/instance-initializers/load-sprite"], function (_exports, _loadSprite) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _loadSprite.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/ember-flight-icons/instance-initializers/load-sprite"eaimeta@70e063a35619d71f
});
;define("vault/instance-initializers/track-csp-event", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  _exports.initialize = initialize;
  0; //eaimeta@70e063a35619d71feaimeta@70e063a35619d71f

  /**
   * Copyright (c) HashiCorp, Inc.
   * SPDX-License-Identifier: MPL-2.0
   */
  function initialize(appInstance) {
    const service = appInstance.lookup('service:csp-event');
    service.attach();
  }

  var _default = {
    name: 'track-csp-event',
    initialize
  };
  _exports.default = _default;
});
;define("vault/lib/arg-tokenizer", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = _default;
  0; //eaimeta@70e063a35619d71feaimeta@70e063a35619d71f

  /**
   * Copyright (c) HashiCorp, Inc.
   * SPDX-License-Identifier: MPL-2.0
   */
  // taken from https://github.com/yargs/yargs-parser/blob/v13.1.0/lib/tokenize-arg-string.js to get around import issue
  // take an un-split argv string and tokenize it.
  function _default(argString) {
    if (Array.isArray(argString)) return argString;
    argString = argString.trim();
    var i = 0;
    var prevC = null;
    var c = null;
    var opening = null;
    var args = [];

    for (var ii = 0; ii < argString.length; ii++) {
      prevC = c;
      c = argString.charAt(ii); // split on spaces unless we're in quotes.

      if (c === ' ' && !opening) {
        if (!(prevC === ' ')) {
          i++;
        }

        continue;
      } // don't split the string if we're in matching
      // opening or closing single and double quotes.


      if (c === opening) {
        if (!args[i]) args[i] = '';
        opening = null;
      } else if ((c === "'" || c === '"') && !opening) {
        opening = c;
      }

      if (!args[i]) args[i] = '';
      args[i] += c;
    }

    return args;
  }
});
;define("vault/lib/attach-capabilities", ["exports", "@ember-data/model", "@ember/debug", "@ember/utils", "@ember/array"], function (_exports, _model, _debug, _utils, _array) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = attachCapabilities;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"@ember/debug",0,"@ember/utils",0,"@ember/array"eaimeta@70e063a35619d71f

  /*
   *
   * attachCapabilities
   *
   * @param modelClass = An Ember Data model class
   * @param capabilities - an Object whose keys will added to the model class as related 'capabilities' models
   * and whose values should be functions that return the id of the related capabilities model
   *
   * definition of capabilities be done shorthand with the apiPath tagged template function
   *
   *
   * @usage
   *
   * let Model = DS.Model.extend({
   *   backend: attr(),
   *   scope: attr(),
   * });
   *
   * export default attachCapabilities(Model, {
   *   updatePath: apiPath`${'backend'}/scope/${'scope'}/role/${'id'}`,
   * });
   *
   */
  function attachCapabilities(modelClass, capabilities) {
    const capabilityKeys = Object.keys(capabilities);
    const newRelationships = capabilityKeys.reduce((ret, key) => {
      ret[key] = (0, _model.belongsTo)('capabilities');
      return ret;
    }, {}); //TODO: move this to the application serializer and do it JIT instead of on app boot

    (0, _debug.debug)(`adding new relationships: ${capabilityKeys.join(', ')} to ${modelClass.toString()}`);
    modelClass.reopen(newRelationships);
    modelClass.reopenClass({
      // relatedCapabilities is called in the application serializer's
      // normalizeResponse hook to add the capabilities relationships to the
      // JSON-API document used by Ember Data
      relatedCapabilities(jsonAPIDoc) {
        let {
          data,
          included
        } = jsonAPIDoc;

        if (!data) {
          data = jsonAPIDoc;
        }

        if ((0, _array.isArray)(data)) {
          const newData = data.map(this.relatedCapabilities);
          return {
            data: newData,
            included
          };
        }

        const context = {
          id: data.id,
          ...data.attributes
        };

        for (const newCapability of capabilityKeys) {
          const templateFn = capabilities[newCapability];
          const type = (0, _utils.typeOf)(templateFn);
          (true && !(type === 'function') && (0, _debug.assert)(`expected value of ${newCapability} to be a function but found ${type}.`, type === 'function'));
          data.relationships[newCapability] = {
            data: {
              type: 'capabilities',
              id: templateFn(context)
            }
          };
        }

        if (included) {
          return {
            data,
            included
          };
        } else {
          return data;
        }
      }

    });
    return modelClass;
  }
});
;define("vault/lib/console-helpers", ["exports", "vault/lib/keycodes", "shell-quote", "vault/lib/arg-tokenizer"], function (_exports, _keycodes, _shellQuote, _argTokenizer) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.executeUICommand = executeUICommand;
  _exports.extractDataFromStrings = extractDataFromStrings;
  _exports.extractFlagsFromStrings = extractFlagsFromStrings;
  _exports.formattedErrorFromInput = formattedErrorFromInput;
  _exports.logFromError = logFromError;
  _exports.logFromResponse = logFromResponse;
  _exports.parseCommand = parseCommand;
  _exports.shiftCommandIndex = shiftCommandIndex;
  0; //eaimeta@70e063a35619d71f0,"vault/lib/keycodes",0,"shell-quote",0,"vault/lib/arg-tokenizer"eaimeta@70e063a35619d71f

  // Add new commands to `log-help` component for visibility
  const supportedCommands = ['read', 'write', 'list', 'delete', 'kv-get'];
  const uiCommands = ['api', 'clearall', 'clear', 'fullscreen', 'refresh'];

  function extractDataFromStrings(dataArray) {
    if (!dataArray) return {};
    return dataArray.reduce((accumulator, val) => {
      // will be "key=value" or "foo=bar=baz"
      // split on the first =
      // default to value of empty string
      const [item = '', value = ''] = val.split(/=(.+)?/);
      if (!item) return accumulator; // if it exists in data already, then we have multiple
      // foo=bar in the list and need to make it an array

      const existingValue = accumulator[item];

      if (existingValue) {
        accumulator[item] = Array.isArray(existingValue) ? [...existingValue, value] : [existingValue, value];
        return accumulator;
      }

      accumulator[item] = value;
      return accumulator;
    }, {});
  }

  function extractFlagsFromStrings(flagArray, method) {
    if (!flagArray) return {};
    return flagArray.reduce((accumulator, val) => {
      // val will be "-flag=value" or "--force"
      // split on the first =
      // default to value or true
      const [item, value] = val.split(/=(.+)?/);
      if (!item) return accumulator;
      let flagName = item.replace(/^-/, '');

      if (flagName === 'wrap-ttl') {
        flagName = 'wrapTTL';
      } else if (method === 'write') {
        if (flagName === 'f' || flagName === '-force') {
          flagName = 'force';
        }
      }

      accumulator[flagName] = value || true;
      return accumulator;
    }, {});
  }

  function executeUICommand(command, logAndOutput, commandFns) {
    const cmd = command.startsWith('api') ? 'api' : command;
    const isUICommand = uiCommands.includes(cmd);

    if (isUICommand) {
      logAndOutput(command);
    }

    const execCommand = commandFns[cmd];

    if (execCommand && typeof execCommand === 'function') {
      execCommand();
    }

    return isUICommand;
  }

  function parseCommand(command) {
    const args = (0, _argTokenizer.default)((0, _shellQuote.parse)(command));

    if (args[0] === 'vault' || args[0] === 'bao') {
      args.shift();
    }

    const [method = '', ...rest] = args;
    let path = '';
    const flags = [];
    const data = [];
    rest.forEach(arg => {
      if (arg.startsWith('-')) {
        flags.push(arg);
      } else {
        if (path) {
          const strippedArg = arg // we'll have arg=something or arg="lol I need spaces", so need to split on the first =
          .split(/=(.+)/) // if there were quotes, there's an empty string as the last member in the array that we don't want,
          // so filter it out
          .filter(str => str !== '') // glue the data back together
          .join('=');
          data.push(strippedArg);
        } else {
          path = arg;
        }
      }
    });

    if (!supportedCommands.includes(method)) {
      throw new Error('invalid command');
    }

    return {
      method,
      flagArray: flags,
      path,
      dataArray: data
    };
  }

  function logFromResponse(response, path, method, flags) {
    const {
      format,
      field
    } = flags;
    const respData = response && (response.auth || response.data || response.wrap_info);
    const secret = respData || response;

    if (!respData) {
      if (method === 'write') {
        return {
          type: 'success',
          content: `Success! Data written to: ${path}`
        };
      } else if (method === 'delete') {
        return {
          type: 'success',
          content: `Success! Data deleted (if it existed) at: ${path}`
        };
      }
    }

    if (field) {
      const fieldValue = secret[field];
      let response;

      if (fieldValue) {
        if (format && format === 'json') {
          return {
            type: 'json',
            content: fieldValue
          };
        }

        if (typeof fieldValue == 'string') {
          response = {
            type: 'text',
            content: fieldValue
          };
        } else if (typeof fieldValue == 'number') {
          response = {
            type: 'text',
            content: JSON.stringify(fieldValue)
          };
        } else if (typeof fieldValue == 'boolean') {
          response = {
            type: 'text',
            content: JSON.stringify(fieldValue)
          };
        } else if (Array.isArray(fieldValue)) {
          response = {
            type: 'text',
            content: JSON.stringify(fieldValue)
          };
        } else {
          response = {
            type: 'object',
            content: fieldValue
          };
        }
      } else {
        response = {
          type: 'error',
          content: `Field "${field}" not present in secret`
        };
      }

      return response;
    }

    if (format && format === 'json') {
      // just print whole response
      return {
        type: 'json',
        content: response
      };
    }

    if (method === 'list') {
      return {
        type: 'list',
        content: secret
      };
    }

    return {
      type: 'object',
      content: secret
    };
  }

  function logFromError(error, vaultPath, method) {
    let content;
    const {
      httpStatus,
      path
    } = error;
    const verbClause = {
      read: 'reading from',
      'kv-get': 'reading secret',
      write: 'writing to',
      list: 'listing',
      delete: 'deleting at'
    }[method];
    content = `Error ${verbClause}: ${vaultPath}.\nURL: ${path}\nCode: ${httpStatus}`;

    if (typeof error.errors[0] === 'string') {
      content = `${content}\nErrors:\n  ${error.errors.join('\n  ')}`;
    }

    return {
      type: 'error',
      content
    };
  }

  function shiftCommandIndex(keyCode, history, index) {
    let newInputValue;
    const commandHistoryLength = history.length;

    if (!commandHistoryLength) {
      return [];
    }

    if (keyCode === _keycodes.default.UP) {
      index -= 1;

      if (index < 0) {
        index = commandHistoryLength - 1;
      }
    } else {
      index += 1;

      if (index === commandHistoryLength) {
        newInputValue = '';
      }

      if (index > commandHistoryLength) {
        index -= 1;
      }
    }

    if (newInputValue !== '') {
      newInputValue = history.objectAt(index)?.content;
    }

    return [index, newInputValue];
  }

  function formattedErrorFromInput(path, method, flags, dataArray) {
    if (path === undefined) {
      return {
        type: 'error',
        content: 'A path is required to make a request.'
      };
    }

    if (method === 'write' && !flags.force && dataArray.length === 0) {
      return {
        type: 'error',
        content: 'Must supply data or use -force'
      };
    }

    return;
  }
});
;define("vault/lib/control-group-error", ["exports", "@ember-data/adapter/error"], function (_exports, _error) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/adapter/error"eaimeta@70e063a35619d71f

  class ControlGroupError extends _error.default {
    constructor(wrapInfo) {
      const {
        accessor,
        creation_path,
        creation_time,
        token,
        ttl
      } = wrapInfo;
      super();
      this.message = 'Control Group encountered'; // add items from the wrapInfo object to the error

      this.token = token;
      this.accessor = accessor;
      this.creation_path = creation_path;
      this.creation_time = creation_time;
      this.ttl = ttl;
    }

  }

  _exports.default = ControlGroupError;
});
;define("vault/lib/key-utils", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71feaimeta@70e063a35619d71f

  /**
   * Copyright (c) HashiCorp, Inc.
   * SPDX-License-Identifier: MPL-2.0
   */
  function keyIsFolder(key) {
    return key ? !!key.match(/\/$/) : false;
  }

  function keyPartsForKey(key) {
    if (!key) {
      return null;
    }

    var isFolder = keyIsFolder(key);
    var parts = key.split('/');

    if (isFolder) {
      parts.pop();
    }

    return parts.length > 1 ? parts : null;
  }

  function parentKeyForKey(key) {
    var parts = keyPartsForKey(key);

    if (!parts) {
      return null;
    }

    return parts.slice(0, -1).join('/') + '/';
  }

  function keyWithoutParentKey(key) {
    return key ? key.replace(parentKeyForKey(key), '') : null;
  }

  function ancestorKeysForKey(key) {
    var ancestors = [],
        parentKey = parentKeyForKey(key);

    while (parentKey) {
      ancestors.unshift(parentKey);
      parentKey = parentKeyForKey(parentKey);
    }

    return ancestors;
  }

  var _default = {
    keyIsFolder,
    keyPartsForKey,
    parentKeyForKey,
    keyWithoutParentKey,
    ancestorKeysForKey
  };
  _exports.default = _default;
});
;define("vault/lib/keycodes", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71feaimeta@70e063a35619d71f

  /**
   * Copyright (c) HashiCorp, Inc.
   * SPDX-License-Identifier: MPL-2.0
   */
  // a map of keyCode for use in keyboard event handlers
  var _default = {
    ENTER: 13,
    ESC: 27,
    TAB: 9,
    LEFT: 37,
    UP: 38,
    RIGHT: 39,
    DOWN: 40,
    T: 116
  };
  _exports.default = _default;
});
;define("vault/lib/kv-object", ["exports", "@ember/array/proxy", "@ember/utils", "@ember/object/internals"], function (_exports, _proxy, _utils, _internals) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/array/proxy",0,"@ember/utils",0,"@ember/object/internals"eaimeta@70e063a35619d71f

  var _default = _proxy.default.extend({
    fromJSON(json) {
      if (json && (0, _utils.typeOf)(json) !== 'object') {
        throw new Error('OpenBao expects data to be formatted as an JSON object.');
      }

      const contents = Object.keys(json || []).map(key => {
        const obj = {
          name: key,
          value: json[key]
        };
        (0, _internals.guidFor)(obj);
        return obj;
      });
      this.setObjects(contents.sort((a, b) => {
        if (a.name === '') {
          return 1;
        }

        if (b.name === '') {
          return -1;
        }

        return a.name.localeCompare(b.name);
      }));
      return this;
    },

    fromJSONString(jsonString) {
      return this.fromJSON(JSON.parse(jsonString));
    },

    toJSON() {
      let includeBlanks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      return this.reduce((obj, item) => {
        if (!includeBlanks && item.value === '' && item.name === '') {
          return obj;
        }

        const val = typeof item.value === 'undefined' ? '' : item.value;
        obj[item.name || ''] = val;
        return obj;
      }, {});
    },

    toJSONString(includeBlanks) {
      return JSON.stringify(this.toJSON(includeBlanks), null, 2);
    },

    isAdvanced() {
      return this.any(item => typeof item.value !== 'string');
    }

  });

  _exports.default = _default;
});
;define("vault/lib/local-storage", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71feaimeta@70e063a35619d71f

  /**
   * Copyright (c) HashiCorp, Inc.
   * SPDX-License-Identifier: MPL-2.0
   */
  var _default = {
    isLocalStorageSupported() {
      try {
        const key = `__storage__test`;
        window.localStorage.setItem(key, null);
        window.localStorage.removeItem(key);
        return true;
      } catch (e) {
        // modify the e object so we can customize the error message.
        // e.message is readOnly.
        e.errors = [`This is likely due to your browser's cookie settings.`];
        throw e;
      }
    },

    getItem(key) {
      const item = window.localStorage.getItem(key);
      return item && JSON.parse(item);
    },

    setItem(key, val) {
      window.localStorage.setItem(key, JSON.stringify(val));
    },

    removeItem(key) {
      return window.localStorage.removeItem(key);
    },

    keys() {
      return Object.keys(window.localStorage);
    },

    cleanupStorage(string, keyToKeep) {
      if (!string) return;
      const relevantKeys = this.keys().filter(str => str.startsWith(string));
      relevantKeys?.forEach(key => {
        if (key !== keyToKeep) {
          localStorage.removeItem(key);
        }
      });
    }

  };
  _exports.default = _default;
});
;define("vault/lib/memory-storage", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71feaimeta@70e063a35619d71f

  /**
   * Copyright (c) HashiCorp, Inc.
   * SPDX-License-Identifier: MPL-2.0
   */
  const cache = {};
  var _default = {
    getItem(key) {
      var item = cache[key];
      return item && JSON.parse(item);
    },

    setItem(key, val) {
      cache[key] = JSON.stringify(val);
    },

    removeItem(key) {
      delete cache[key];
    },

    keys() {
      return Object.keys(cache);
    }

  };
  _exports.default = _default;
});
;define("vault/lib/path-to-tree", ["exports", "flat", "deepmerge"], function (_exports, _flat, _deepmerge) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = _default;
  0; //eaimeta@70e063a35619d71f0,"flat",0,"deepmerge"eaimeta@70e063a35619d71f

  const {
    unflatten
  } = _flat.default;
  const DOT_REPLACEMENT = '☃'; //function that takes a list of path and returns a deeply nested object
  //representing a tree of all of those paths
  //
  //
  // given ["foo", "bar", "foo1", "foo/bar", "foo/baz", "foo/bar/baz"]
  //
  // returns {
  //    bar: null,
  //    foo: {
  //      bar: {
  //        baz: null
  //      },
  //      baz: null,
  //    },
  //    foo1: null,
  // }

  function _default(paths) {
    // first sort the list by length, then alphanumeric
    const list = paths.slice(0).sort((a, b) => b.length - a.length || b.localeCompare(a)); // then reduce to an array
    // and we remove all of the items that have a string
    // that starts with the same prefix from the list
    // so if we have "foo/bar/baz", both "foo" and "foo/bar"
    // won't be included in the list

    let tree = list.reduce((accumulator, ns) => {
      const nsWithPrefix = accumulator.find(path => path.startsWith(ns)); // we need to make sure it's a match for the full path part

      const isFullMatch = nsWithPrefix && nsWithPrefix.charAt(ns.length) === '/';

      if (!isFullMatch) {
        accumulator.push(ns);
      }

      return accumulator;
    }, []);
    tree = tree.sort((a, b) => a.localeCompare(b)); // after the reduction we're left with an array that contains
    // strings that represent the longest branches
    // we'll replace the dots in the paths, then expand the path
    // to a nested object that we can then query with Ember.get

    return _deepmerge.default.all(tree.map(p => {
      p = p.replace(/\.+/g, DOT_REPLACEMENT);
      return unflatten({
        [p]: null
      }, {
        delimiter: '/',
        object: true
      });
    }));
  }
});
;define("vault/lib/route-paths", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.UNSEAL = _exports.REDIRECT = _exports.OIDC_PROVIDER = _exports.OIDC_CALLBACK = _exports.NS_OIDC_PROVIDER = _exports.INIT = _exports.EXCLUDED_REDIRECT_URLS = _exports.CLUSTER_INDEX = _exports.CLUSTER = _exports.AUTH = void 0;
  0; //eaimeta@70e063a35619d71feaimeta@70e063a35619d71f

  /**
   * Copyright (c) HashiCorp, Inc.
   * SPDX-License-Identifier: MPL-2.0
   */
  const INIT = 'vault.cluster.init';
  _exports.INIT = INIT;
  const UNSEAL = 'vault.cluster.unseal';
  _exports.UNSEAL = UNSEAL;
  const AUTH = 'vault.cluster.auth';
  _exports.AUTH = AUTH;
  const REDIRECT = 'vault.cluster.redirect';
  _exports.REDIRECT = REDIRECT;
  const CLUSTER = 'vault.cluster';
  _exports.CLUSTER = CLUSTER;
  const CLUSTER_INDEX = 'vault.cluster.index';
  _exports.CLUSTER_INDEX = CLUSTER_INDEX;
  const OIDC_CALLBACK = 'vault.cluster.oidc-callback';
  _exports.OIDC_CALLBACK = OIDC_CALLBACK;
  const OIDC_PROVIDER = 'vault.cluster.oidc-provider';
  _exports.OIDC_PROVIDER = OIDC_PROVIDER;
  const NS_OIDC_PROVIDER = 'vault.cluster.oidc-provider-ns';
  _exports.NS_OIDC_PROVIDER = NS_OIDC_PROVIDER;
  const EXCLUDED_REDIRECT_URLS = ['/vault/logout'];
  _exports.EXCLUDED_REDIRECT_URLS = EXCLUDED_REDIRECT_URLS;
});
;define("vault/lib/token-storage", ["exports", "vault/lib/local-storage", "vault/lib/memory-storage"], function (_exports, _localStorage, _memoryStorage) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = _default;
  0; //eaimeta@70e063a35619d71f0,"vault/lib/local-storage",0,"vault/lib/memory-storage"eaimeta@70e063a35619d71f

  function _default(type) {
    if (type === 'memory') {
      return _memoryStorage.default;
    }

    let storage;

    try {
      window.localStorage.getItem('test');
      storage = _localStorage.default;
    } catch (e) {
      storage = _memoryStorage.default;
    }

    return storage;
  }
});
;define("vault/machines/auth-machine", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71feaimeta@70e063a35619d71f

  /**
   * Copyright (c) HashiCorp, Inc.
   * SPDX-License-Identifier: MPL-2.0
   */
  var _default = {
    key: 'auth',
    initial: 'idle',
    on: {
      RESET: 'idle',
      DONE: 'complete'
    },
    states: {
      idle: {
        onEntry: [{
          type: 'routeTransition',
          params: ['vault.cluster.settings.auth.enable']
        }, {
          type: 'render',
          level: 'feature',
          component: 'wizard/mounts-wizard'
        }, {
          type: 'render',
          level: 'step',
          component: 'wizard/auth-idle'
        }],
        on: {
          CONTINUE: 'enable'
        }
      },
      enable: {
        onEntry: [{
          type: 'render',
          level: 'feature',
          component: 'wizard/mounts-wizard'
        }, {
          type: 'render',
          level: 'step',
          component: 'wizard/auth-enable'
        }],
        on: {
          CONTINUE: 'config'
        }
      },
      config: {
        onEntry: [{
          type: 'render',
          level: 'feature',
          component: 'wizard/mounts-wizard'
        }, {
          type: 'render',
          level: 'step',
          component: 'wizard/auth-config'
        }],
        on: {
          CONTINUE: 'details'
        }
      },
      details: {
        onEntry: [{
          type: 'render',
          level: 'step',
          component: 'wizard/auth-details'
        }, {
          type: 'render',
          level: 'feature',
          component: 'wizard/mounts-wizard'
        }],
        on: {
          CONTINUE: 'complete'
        }
      },
      complete: {
        onEntry: ['completeFeature']
      }
    }
  };
  _exports.default = _default;
});
;define("vault/machines/policies-machine", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71feaimeta@70e063a35619d71f

  /**
   * Copyright (c) HashiCorp, Inc.
   * SPDX-License-Identifier: MPL-2.0
   */
  var _default = {
    key: 'policies',
    initial: 'idle',
    states: {
      idle: {
        onEntry: [{
          type: 'routeTransition',
          params: ['vault.cluster.policies.index', 'acl']
        }, {
          type: 'render',
          level: 'feature',
          component: 'wizard/policies-intro'
        }],
        on: {
          CONTINUE: 'create'
        }
      },
      create: {
        on: {
          CONTINUE: 'details'
        },
        onEntry: [{
          type: 'render',
          level: 'feature',
          component: 'wizard/policies-create'
        }]
      },
      details: {
        on: {
          CONTINUE: 'delete'
        },
        onEntry: [{
          type: 'render',
          level: 'feature',
          component: 'wizard/policies-details'
        }]
      },
      delete: {
        on: {
          CONTINUE: 'others'
        },
        onEntry: [{
          type: 'render',
          level: 'feature',
          component: 'wizard/policies-delete'
        }]
      },
      others: {
        on: {
          CONTINUE: 'complete'
        },
        onEntry: [{
          type: 'render',
          level: 'feature',
          component: 'wizard/policies-others'
        }]
      },
      complete: {
        onEntry: ['completeFeature']
      }
    }
  };
  _exports.default = _default;
});
;define("vault/machines/secrets-machine", ["exports", "vault/helpers/supported-secret-backends"], function (_exports, _supportedSecretBackends) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/helpers/supported-secret-backends"eaimeta@70e063a35619d71f

  const supportedBackends = (0, _supportedSecretBackends.supportedSecretBackends)();
  var _default = {
    key: 'secrets',
    initial: 'idle',
    on: {
      RESET: 'idle',
      DONE: 'complete',
      ERROR: 'error'
    },
    states: {
      idle: {
        onEntry: [{
          type: 'routeTransition',
          params: ['vault.cluster.settings.mount-secret-backend']
        }, {
          type: 'render',
          level: 'feature',
          component: 'wizard/mounts-wizard'
        }, {
          type: 'render',
          level: 'step',
          component: 'wizard/secrets-idle'
        }],
        on: {
          CONTINUE: 'enable'
        }
      },
      enable: {
        onEntry: [{
          type: 'render',
          level: 'feature',
          component: 'wizard/mounts-wizard'
        }, {
          type: 'render',
          level: 'step',
          component: 'wizard/secrets-enable'
        }],
        on: {
          CONTINUE: {
            details: {
              cond: type => supportedBackends.includes(type)
            },
            list: {
              cond: type => !supportedBackends.includes(type)
            }
          }
        }
      },
      details: {
        onEntry: [{
          type: 'render',
          level: 'feature',
          component: 'wizard/mounts-wizard'
        }, {
          type: 'render',
          level: 'step',
          component: 'wizard/secrets-details'
        }],
        on: {
          CONTINUE: {
            connection: {
              cond: type => type === 'database'
            },
            role: {
              cond: type => ['pki', 'aws', 'ssh'].includes(type)
            },
            secret: {
              cond: type => ['kv'].includes(type)
            },
            encryption: {
              cond: type => type === 'transit'
            },
            provider: {
              cond: type => type === 'keymgmt'
            }
          }
        }
      },
      connection: {
        onEntry: [{
          type: 'render',
          level: 'step',
          component: 'wizard/secrets-connection'
        }, {
          type: 'render',
          level: 'feature',
          component: 'wizard/mounts-wizard'
        }],
        on: {
          CONTINUE: 'displayConnection'
        }
      },
      encryption: {
        onEntry: [{
          type: 'render',
          level: 'feature',
          component: 'wizard/mounts-wizard'
        }, {
          type: 'render',
          level: 'step',
          component: 'wizard/secrets-encryption'
        }],
        on: {
          CONTINUE: 'display'
        }
      },
      credentials: {
        onEntry: [{
          type: 'render',
          level: 'step',
          component: 'wizard/secrets-credentials'
        }, {
          type: 'render',
          level: 'feature',
          component: 'wizard/mounts-wizard'
        }],
        on: {
          CONTINUE: 'display'
        }
      },
      role: {
        onEntry: [{
          type: 'render',
          level: 'step',
          component: 'wizard/secrets-role'
        }, {
          type: 'render',
          level: 'feature',
          component: 'wizard/mounts-wizard'
        }],
        on: {
          CONTINUE: 'displayRole'
        }
      },
      displayRole: {
        onEntry: [{
          type: 'render',
          level: 'step',
          component: 'wizard/secrets-display-role'
        }, {
          type: 'render',
          level: 'feature',
          component: 'wizard/mounts-wizard'
        }],
        on: {
          CONTINUE: 'credentials'
        }
      },
      displayConnection: {
        onEntry: [{
          type: 'render',
          level: 'step',
          component: 'wizard/secrets-connection-show'
        }, {
          type: 'render',
          level: 'feature',
          component: 'wizard/mounts-wizard'
        }],
        on: {
          CONTINUE: 'displayRoleDatabase'
        }
      },
      displayRoleDatabase: {
        onEntry: [{
          type: 'render',
          level: 'step',
          component: 'wizard/secrets-display-database-role'
        }, {
          type: 'render',
          level: 'feature',
          component: 'wizard/mounts-wizard'
        }],
        on: {
          CONTINUE: 'display'
        }
      },
      secret: {
        onEntry: [{
          type: 'render',
          level: 'step',
          component: 'wizard/secrets-secret'
        }, {
          type: 'render',
          level: 'feature',
          component: 'wizard/mounts-wizard'
        }],
        on: {
          CONTINUE: 'display'
        }
      },
      provider: {
        onEntry: [{
          type: 'render',
          level: 'step',
          component: 'wizard/secrets-keymgmt'
        }, {
          type: 'render',
          level: 'feature',
          component: 'wizard/mounts-wizard'
        }],
        on: {
          CONTINUE: 'displayProvider'
        }
      },
      displayProvider: {
        onEntry: [{
          type: 'render',
          level: 'step',
          component: 'wizard/secrets-keymgmt'
        }, {
          type: 'render',
          level: 'feature',
          component: 'wizard/mounts-wizard'
        }],
        on: {
          CONTINUE: 'distribute'
        }
      },
      distribute: {
        onEntry: [{
          type: 'render',
          level: 'step',
          component: 'wizard/secrets-keymgmt'
        }, {
          type: 'render',
          level: 'feature',
          component: 'wizard/mounts-wizard'
        }],
        on: {
          CONTINUE: 'display'
        }
      },
      display: {
        onEntry: [{
          type: 'render',
          level: 'step',
          component: 'wizard/secrets-display'
        }, {
          type: 'render',
          level: 'feature',
          component: 'wizard/mounts-wizard'
        }],
        on: {
          REPEAT: {
            connection: {
              cond: type => type === 'database',
              actions: [{
                type: 'routeTransition',
                params: ['vault.cluster.secrets.backend.create-root']
              }]
            },
            role: {
              cond: type => ['pki', 'aws', 'ssh'].includes(type),
              actions: [{
                type: 'routeTransition',
                params: ['vault.cluster.secrets.backend.create-root']
              }]
            },
            secret: {
              cond: type => ['kv'].includes(type),
              actions: [{
                type: 'routeTransition',
                params: ['vault.cluster.secrets.backend.create-root']
              }]
            },
            encryption: {
              cond: type => type === 'transit',
              actions: [{
                type: 'routeTransition',
                params: ['vault.cluster.secrets.backend.create-root']
              }]
            },
            provider: {
              cond: type => type === 'keymgmt',
              actions: [{
                type: 'routeTransition',
                params: ['vault.cluster.secrets.backend.create-root', {
                  queryParams: {
                    itemType: 'provider'
                  }
                }]
              }]
            }
          }
        }
      },
      list: {
        onEntry: [{
          type: 'render',
          level: 'step',
          component: 'wizard/secrets-list'
        }, {
          type: 'render',
          level: 'feature',
          component: 'wizard/mounts-wizard'
        }],
        on: {
          CONTINUE: 'display'
        }
      },
      error: {
        onEntry: [{
          type: 'render',
          level: 'step',
          component: 'wizard/tutorial-error'
        }, {
          type: 'render',
          level: 'feature',
          component: 'wizard/mounts-wizard'
        }],
        on: {
          CONTINUE: 'complete'
        }
      },
      complete: {
        onEntry: ['completeFeature']
      }
    }
  };
  _exports.default = _default;
});
;define("vault/machines/tools-machine", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71feaimeta@70e063a35619d71f

  /**
   * Copyright (c) HashiCorp, Inc.
   * SPDX-License-Identifier: MPL-2.0
   */
  var _default = {
    key: 'tools',
    initial: 'wrap',
    states: {
      wrap: {
        onEntry: [{
          type: 'routeTransition',
          params: ['vault.cluster.tools']
        }, {
          type: 'render',
          level: 'feature',
          component: 'wizard/tools-wrap'
        }],
        on: {
          CONTINUE: 'wrapped'
        }
      },
      wrapped: {
        onEntry: [{
          type: 'render',
          level: 'feature',
          component: 'wizard/tools-wrapped'
        }],
        on: {
          LOOKUP: 'lookup'
        }
      },
      lookup: {
        onEntry: [{
          type: 'render',
          level: 'feature',
          component: 'wizard/tools-lookup'
        }],
        on: {
          CONTINUE: 'info'
        }
      },
      info: {
        onEntry: [{
          type: 'render',
          level: 'feature',
          component: 'wizard/tools-info'
        }],
        on: {
          REWRAP: 'rewrap'
        }
      },
      rewrap: {
        onEntry: [{
          type: 'render',
          level: 'feature',
          component: 'wizard/tools-rewrap'
        }],
        on: {
          CONTINUE: 'rewrapped'
        }
      },
      rewrapped: {
        onEntry: [{
          type: 'render',
          level: 'feature',
          component: 'wizard/tools-rewrapped'
        }],
        on: {
          UNWRAP: 'unwrap'
        }
      },
      unwrap: {
        onEntry: [{
          type: 'render',
          level: 'feature',
          component: 'wizard/tools-unwrap'
        }],
        on: {
          CONTINUE: 'unwrapped'
        }
      },
      unwrapped: {
        onEntry: [{
          type: 'render',
          level: 'feature',
          component: 'wizard/tools-unwrapped'
        }],
        on: {
          CONTINUE: 'complete'
        }
      },
      complete: {
        onEntry: ['completeFeature']
      }
    }
  };
  _exports.default = _default;
});
;define("vault/machines/tutorial-machine", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71feaimeta@70e063a35619d71f

  /**
   * Copyright (c) HashiCorp, Inc.
   * SPDX-License-Identifier: MPL-2.0
   */
  var _default = {
    key: 'tutorial',
    initial: 'idle',
    on: {
      DISMISS: 'dismissed',
      DONE: 'complete',
      PAUSE: 'paused'
    },
    states: {
      init: {
        key: 'init',
        initial: 'idle',
        on: {
          INITDONE: 'active.select'
        },
        onEntry: ['showTutorialAlways', {
          type: 'render',
          level: 'tutorial',
          component: 'wizard/tutorial-idle'
        }, {
          type: 'render',
          level: 'feature',
          component: null
        }],
        onExit: ['showTutorialWhenAuthenticated', 'clearFeatureData'],
        states: {
          idle: {
            on: {
              START: 'active.setup',
              SAVE: 'active.save',
              UNSEAL: 'active.unseal',
              LOGIN: 'active.login'
            }
          },
          active: {
            onEntry: {
              type: 'render',
              level: 'tutorial',
              component: 'wizard/tutorial-active'
            },
            states: {
              setup: {
                on: {
                  TOSAVE: 'save'
                },
                onEntry: {
                  type: 'render',
                  level: 'feature',
                  component: 'wizard/init-setup'
                }
              },
              save: {
                on: {
                  TOUNSEAL: 'unseal',
                  TOLOGIN: 'login'
                },
                onEntry: {
                  type: 'render',
                  level: 'feature',
                  component: 'wizard/init-save-keys'
                }
              },
              unseal: {
                on: {
                  TOLOGIN: 'login'
                },
                onEntry: {
                  type: 'render',
                  level: 'feature',
                  component: 'wizard/init-unseal'
                }
              },
              login: {
                onEntry: {
                  type: 'render',
                  level: 'feature',
                  component: 'wizard/init-login'
                }
              }
            }
          }
        }
      },
      active: {
        key: 'feature',
        initial: 'select',
        onEntry: {
          type: 'render',
          level: 'tutorial',
          component: 'wizard/tutorial-active'
        },
        states: {
          select: {
            on: {
              CONTINUE: 'feature'
            },
            onEntry: {
              type: 'render',
              level: 'feature',
              component: 'wizard/features-selection'
            }
          },
          feature: {}
        }
      },
      idle: {
        on: {
          INIT: 'init.idle',
          AUTH: 'active.select',
          CONTINUE: 'active'
        },
        onEntry: [{
          type: 'render',
          level: 'feature',
          component: null
        }, {
          type: 'render',
          level: 'step',
          component: null
        }, {
          type: 'render',
          level: 'detail',
          component: null
        }, {
          type: 'render',
          level: 'tutorial',
          component: 'wizard/tutorial-idle'
        }]
      },
      dismissed: {
        onEntry: [{
          type: 'render',
          level: 'tutorial',
          component: null
        }, {
          type: 'render',
          level: 'feature',
          component: null
        }, {
          type: 'render',
          level: 'step',
          component: null
        }, {
          type: 'render',
          level: 'detail',
          component: null
        }, 'handleDismissed']
      },
      paused: {
        on: {
          CONTINUE: 'active.feature'
        },
        onEntry: [{
          type: 'render',
          level: 'feature',
          component: null
        }, {
          type: 'render',
          level: 'step',
          component: null
        }, {
          type: 'render',
          level: 'detail',
          component: null
        }, {
          type: 'render',
          level: 'tutorial',
          component: 'wizard/tutorial-paused'
        }, 'handlePaused'],
        onExit: ['handleResume']
      },
      complete: {
        onEntry: [{
          type: 'render',
          level: 'feature',
          component: null
        }, {
          type: 'render',
          level: 'step',
          component: null
        }, {
          type: 'render',
          level: 'detail',
          component: null
        }, {
          type: 'render',
          level: 'tutorial',
          component: 'wizard/tutorial-complete'
        }]
      }
    }
  };
  _exports.default = _default;
});
;define("vault/macros/identity-capabilities", ["exports", "vault/macros/lazy-capabilities"], function (_exports, _lazyCapabilities) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = _default;
  0; //eaimeta@70e063a35619d71f0,"vault/macros/lazy-capabilities"eaimeta@70e063a35619d71f

  function _default() {
    return (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`identity/${'identityType'}/id/${'id'}`, 'id', 'identityType');
  }
});
;define("vault/macros/lazy-capabilities", ["exports", "vault/macros/maybe-query-record"], function (_exports, _maybeQueryRecord) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.apiPath = apiPath;
  _exports.default = _default;
  0; //eaimeta@70e063a35619d71f0,"vault/macros/maybe-query-record"eaimeta@70e063a35619d71f

  function apiPath(strings) {
    for (var _len = arguments.length, keys = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      keys[_key - 1] = arguments[_key];
    }

    return function (data) {
      const dict = data || {};
      const result = [strings[0]];
      keys.forEach((key, i) => {
        result.push(dict[key], strings[i + 1]);
      });
      return result.join('');
    };
  }

  function _default() {
    const [templateFn, ...keys] = arguments;
    return (0, _maybeQueryRecord.maybeQueryRecord)('capabilities', context => {
      // pull all context attrs
      const contextObject = context.getProperties(...keys); // remove empty ones

      const nonEmptyContexts = Object.keys(contextObject).reduce((ret, key) => {
        if (contextObject[key] != null) {
          ret[key] = contextObject[key];
        }

        return ret;
      }, {}); // if all of them aren't present, cancel the fetch

      if (Object.keys(nonEmptyContexts).length !== keys.length) {
        return;
      } // otherwise proceed with the capabilities check


      return {
        id: templateFn(nonEmptyContexts)
      };
    }, ...keys);
  }
});
;define("vault/macros/maybe-query-record", ["exports", "@ember/object", "@ember/object/proxy", "@ember/object/promise-proxy-mixin", "rsvp"], function (_exports, _object, _proxy, _promiseProxyMixin, _rsvp) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.maybeQueryRecord = maybeQueryRecord;
  0; //eaimeta@70e063a35619d71f0,"@ember/object",0,"@ember/object/proxy",0,"@ember/object/promise-proxy-mixin",0,"rsvp"eaimeta@70e063a35619d71f

  function maybeQueryRecord(modelName) {
    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    for (var _len = arguments.length, keys = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      keys[_key - 2] = arguments[_key];
    }

    return (0, _object.computed)(...keys, 'store', {
      get() {
        const query = typeof options === 'function' ? options(this) : options;

        const PromiseObject = _proxy.default.extend(_promiseProxyMixin.default);

        return PromiseObject.create({
          promise: query ? this.store.queryRecord(modelName, query) : (0, _rsvp.resolve)({})
        });
      }

    });
  }
});
;define("vault/mirage/config", ["exports", "vault/config/environment", "vault/mirage/handlers"], function (_exports, _environment, _handlers) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = _default;
  0; //eaimeta@70e063a35619d71f0,"vault/config/environment",0,"vault/mirage/handlers"eaimeta@70e063a35619d71f

  // remember to export handler name from mirage/handlers/index.js file
  function _default() {
    this.namespace = 'v1'; // start ember in development running mirage -> yarn start:mirage handlerName
    // if handler is not provided, general config will be used
    // this is useful for feature development when a specific and limited config is required

    const {
      handler
    } = _environment.default['ember-cli-mirage'];
    const handlerName = handler in _handlers.default ? handler : 'base';

    _handlers.default[handlerName](this);

    this.logging = false; // disables passthrough logging which spams the console

    console.log(`⚙ Using ${handlerName} Mirage request handlers ⚙`); // eslint-disable-line
    // passthrough all unhandled requests

    this.passthrough();
  }
});
;define("vault/mirage/factories/configuration", ["exports", "ember-cli-mirage"], function (_exports, _emberCliMirage) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-mirage"eaimeta@70e063a35619d71f

  var _default = _emberCliMirage.Factory.extend({
    auth: null,
    data: null,
    // populated via traits
    lease_duration: 0,
    lease_id: '',
    renewable: true,
    request_id: '22068a49-a504-41ad-b5b0-1eac71659190',
    warnings: null,
    wrap_info: null,
    // add servers to test raft storage configuration
    withRaft: (0, _emberCliMirage.trait)({
      afterCreate(config, server) {
        if (!config.data) {
          config.data = {
            config: {
              index: 0,
              servers: server.serializerOrRegistry.serialize(server.createList('server', 2))
            }
          };
        }
      }

    })
  });

  _exports.default = _default;
});
;define("vault/mirage/factories/feature", ["exports", "ember-cli-mirage"], function (_exports, _emberCliMirage) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-mirage"eaimeta@70e063a35619d71f

  var _default = _emberCliMirage.Factory.extend({
    feature_flags() {
      return []; // VAULT_CLOUD_ADMIN_NAMESPACE
    }

  });

  _exports.default = _default;
});
;define("vault/mirage/factories/kubernetes-config", ["exports", "ember-cli-mirage"], function (_exports, _emberCliMirage) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-mirage"eaimeta@70e063a35619d71f

  var _default = _emberCliMirage.Factory.extend({
    kubernetes_host: 'https://192.168.99.100:8443',
    kubernetes_ca_cert: '-----BEGIN CERTIFICATE-----\nMIIDNTCCAh2gApGgAwIBAgIULNEk+01LpkDeJujfsAgIULNEkAgIULNEckApGgAwIBAg+01LpkDeJuj\n-----END CERTIFICATE-----',
    disable_local_ca_jwt: true,
    // property used only for record lookup and filtered from response payload
    path: null
  });

  _exports.default = _default;
});
;define("vault/mirage/factories/kubernetes-role", ["exports", "ember-cli-mirage"], function (_exports, _emberCliMirage) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-mirage"eaimeta@70e063a35619d71f

  const generated_role_rules = `rules:
- apiGroups: [""]
  resources: ["secrets", "services"]
  verbs: ["get", "watch", "list", "create", "delete", "deletecollection", "patch", "update"]
`;
  const name_template = '{{.FieldName | lowercase}}';
  const extra_annotations = {
    foo: 'bar',
    baz: 'qux'
  };
  const extra_labels = {
    foobar: 'baz',
    barbaz: 'foo'
  };

  var _default = _emberCliMirage.Factory.extend({
    name: i => `role-${i}`,
    allowed_kubernetes_namespaces: '*',
    allowed_kubernetes_namespace_selector: '',
    token_max_ttl: 86400,
    token_default_ttl: 600,
    service_account_name: 'default',
    kubernetes_role_name: '',
    kubernetes_role_type: 'Role',
    generated_role_rules: '',
    name_template: '',
    extra_annotations: null,
    extra_labels: null,

    afterCreate(record) {
      // only one of these three props can be defined
      if (record.generated_role_rules) {
        record.service_account_name = null;
        record.kubernetes_role_name = null;
      } else if (record.kubernetes_role_name) {
        record.service_account_name = null;
        record.generated_role_rules = null;
      } else if (record.service_account_name) {
        record.generated_role_rules = null;
        record.kubernetes_role_name = null;
      }
    },

    withRoleName: (0, _emberCliMirage.trait)({
      service_account_name: null,
      generated_role_rules: null,
      kubernetes_role_name: 'vault-k8s-secrets-role',
      extra_annotations,
      name_template
    }),
    withRoleRules: (0, _emberCliMirage.trait)({
      service_account_name: null,
      kubernetes_role_name: null,
      generated_role_rules,
      extra_annotations,
      extra_labels,
      name_template
    })
  });

  _exports.default = _default;
});
;define("vault/mirage/factories/mfa-duo-method", ["exports", "ember-cli-mirage"], function (_exports, _emberCliMirage) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-mirage"eaimeta@70e063a35619d71f

  var _default = _emberCliMirage.Factory.extend({
    api_hostname: 'api-foobar.duosecurity.com',
    mount_accessor: '',
    name: '',
    // returned but cannot be set at this time
    namespace_id: 'root',
    pushinfo: '',
    type: 'duo',
    use_passcode: false,
    username_template: '',

    afterCreate(record) {
      if (record.name) {
        console.warn('Endpoint ignored these unrecognized parameters: [name]'); // eslint-disable-line

        record.name = '';
      }
    }

  });

  _exports.default = _default;
});
;define("vault/mirage/factories/mfa-login-enforcement", ["exports", "ember-cli-mirage"], function (_exports, _emberCliMirage) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-mirage"eaimeta@70e063a35619d71f

  var _default = _emberCliMirage.Factory.extend({
    auth_method_accessors: null,
    auth_method_types: null,
    identity_entity_ids: null,
    identity_group_ids: null,
    mfa_method_ids: null,
    name: null,
    namespace_id: 'root',

    afterCreate(record, server) {
      // initialize arrays and stub some data if not provided
      if (!record.name) {
        // use random string for generated name
        record.update('name', (Math.random() + 1).toString(36).substring(2));
      }

      if (!record.mfa_method_ids) {
        // aggregate all existing methods and choose a random one
        const methods = ['Totp', 'Duo', 'Okta', 'Pingid'].reduce((methods, type) => {
          const records = server.schema.db[`mfa${type}Methods`].where({});

          if (records.length) {
            methods.push(...records);
          }

          return methods;
        }, []); // if no methods were found create one since it is a required for login enforcements

        if (!methods.length) {
          methods.push(server.create('mfa-totp-method'));
        }

        const method = methods.length ? methods[Math.floor(Math.random() * methods.length)] : null;
        record.update('mfa_method_ids', method ? [method.id] : []);
      }

      const targets = {
        auth_method_accessors: ['auth_userpass_bb95c2b1'],
        auth_method_types: ['userpass'],
        identity_group_ids: ['34db6b52-591e-bc22-8af0-4add5e167326'],
        identity_entity_ids: ['f831667b-7392-7a1c-c0fc-33d48cb1c57d']
      };

      for (const key in targets) {
        if (!record.key) {
          record.update(key, targets[key]);
        }
      }
    }

  });

  _exports.default = _default;
});
;define("vault/mirage/factories/mfa-method", ["exports", "ember-cli-mirage"], function (_exports, _emberCliMirage) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-mirage"eaimeta@70e063a35619d71f

  var _default = _emberCliMirage.Factory.extend({
    type: 'okta',
    uses_passcode: false,

    afterCreate(mfaMethod) {
      if (mfaMethod.type === 'totp') {
        mfaMethod.uses_passcode = true;
      }
    }

  });

  _exports.default = _default;
});
;define("vault/mirage/factories/mfa-okta-method", ["exports", "ember-cli-mirage"], function (_exports, _emberCliMirage) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-mirage"eaimeta@70e063a35619d71f

  var _default = _emberCliMirage.Factory.extend({
    base_url: 'okta.com',
    mount_accessor: '',
    name: '',
    // returned but cannot be set at this time
    namespace_id: 'root',
    org_name: 'dev-foobar',
    type: 'okta',
    username_template: '',

    // returned but cannot be set at this time
    afterCreate(record) {
      if (record.name) {
        console.warn('Endpoint ignored these unrecognized parameters: [name]'); // eslint-disable-line

        record.name = '';
      }
    }

  });

  _exports.default = _default;
});
;define("vault/mirage/factories/mfa-pingid-method", ["exports", "ember-cli-mirage"], function (_exports, _emberCliMirage) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-mirage"eaimeta@70e063a35619d71f

  var _default = _emberCliMirage.Factory.extend({
    use_signature: true,
    idp_url: 'https://foobar.pingidentity.com/pingid',
    admin_url: 'https://foobar.pingidentity.com/pingid',
    authenticator_url: 'https://authenticator.pingone.com/pingid/ppm',
    org_alias: 'foobarbaz',
    type: 'pingid',
    username_template: '',
    namespace_id: 'root'
  });

  _exports.default = _default;
});
;define("vault/mirage/factories/mfa-totp-method", ["exports", "ember-cli-mirage"], function (_exports, _emberCliMirage) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-mirage"eaimeta@70e063a35619d71f

  var _default = _emberCliMirage.Factory.extend({
    algorithm: 'SHA1',
    digits: 6,
    issuer: 'OpenBao',
    key_size: 20,
    max_validation_attempts: 5,
    name: '',
    // returned but cannot be set at this time
    namespace_id: 'root',
    period: 30,
    qr_size: 200,
    skew: 1,
    type: 'totp',

    afterCreate(record) {
      if (record.name) {
        console.warn('Endpoint ignored these unrecognized parameters: [name]'); // eslint-disable-line

        record.name = '';
      }
    }

  });

  _exports.default = _default;
});
;define("vault/mirage/factories/open-api-explorer", ["exports", "ember-cli-mirage"], function (_exports, _emberCliMirage) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-mirage"eaimeta@70e063a35619d71f

  /* eslint-disable ember/avoid-leaking-state-in-ember-objects */
  var _default = _emberCliMirage.Factory.extend({
    openapi: '3.0.2',
    info: {
      title: 'HashiCorp OpenBao API',
      description: 'HTTP API that gives you full access to OpenBao. All API routes are prefixed with `/v1/`.',
      version: '1.0.0',
      license: {
        name: 'Mozilla Public License 2.0',
        url: 'https://www.mozilla.org/en-US/MPL/2.0'
      }
    },
    paths: {
      '/auth/token/create': {
        description: 'The token create path is used to create new tokens.',
        post: {
          summary: 'The token create path is used to create new tokens.',
          tags: ['auth'],
          responses: {
            200: {
              description: 'OK'
            }
          }
        }
      },
      '/secret/data/{path}': {
        description: 'Location of a secret.',
        post: {
          summary: 'Location of a secret.',
          tags: ['secret'],
          responses: {
            200: {
              description: 'OK'
            }
          }
        }
      }
    }
  });

  _exports.default = _default;
});
;define("vault/mirage/factories/secret-engine", ["exports", "ember-cli-mirage"], function (_exports, _emberCliMirage) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-mirage"eaimeta@70e063a35619d71f

  var _default = _emberCliMirage.Factory.extend({
    path: 'foo/',
    description: 'secret-engine generated by mirage',
    local: true,
    sealWrap: true,
    // set in afterCreate
    accessor: 'type_7f52940',
    type: 'kv',
    options: null,

    afterCreate(secretEngine) {
      if (!secretEngine.options && ['generic', 'kv'].includes(secretEngine.type)) {
        secretEngine.options = {
          version: '2'
        };
      }
    }

  });

  _exports.default = _default;
});
;define("vault/mirage/factories/server", ["exports", "ember-cli-mirage"], function (_exports, _emberCliMirage) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-mirage"eaimeta@70e063a35619d71f

  var _default = _emberCliMirage.Factory.extend({
    address: '127.0.0.1',
    node_id: i => `raft_node_${i}`,
    protocol_version: '3',
    voter: true,
    leader: true
  });

  _exports.default = _default;
});
;define("vault/mirage/handlers/base", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = _default;
  0; //eaimeta@70e063a35619d71feaimeta@70e063a35619d71f

  /**
   * Copyright (c) HashiCorp, Inc.
   * SPDX-License-Identifier: MPL-2.0
   */
  // base handlers used in mirage config when a specific handler is not specified
  const EXPIRY_DATE = '2021-05-12T23:20:50.52Z';

  function _default(server) {
    server.get('/sys/internal/ui/feature-flags', db => {
      const featuresResponse = db.features.first();
      return {
        data: {
          feature_flags: featuresResponse ? featuresResponse.feature_flags : null
        }
      };
    });
    server.get('/sys/health', function () {
      return {
        initialized: true,
        sealed: false,
        standby: false,
        license: {
          expiry: '2021-05-12T23:20:50.52Z',
          state: 'stored'
        },
        performance_standby: false,
        server_time_utc: 1622562585,
        version: '1.9.0+ent',
        cluster_name: 'vault-cluster-e779cd7c',
        cluster_id: '5f20f5ab-acea-0481-787e-71ec2ff5a60b',
        last_wal: 121
      };
    });
    server.get('/sys/license/status', function () {
      return {
        data: {
          autoloading_used: false,
          persisted_autoload: {
            expiration_time: EXPIRY_DATE,
            features: ['Namespaces', 'Lease Count Quotas', 'Automated Snapshots'],
            license_id: '0eca7ef8-ebc0-f875-315e-3cc94a7870cf',
            performance_standby_count: 0,
            start_time: '2020-04-28T00:00:00Z'
          },
          autoloaded: {
            expiration_time: EXPIRY_DATE,
            features: ['Namespaces', 'Lease Count Quotas', 'Automated Snapshots'],
            license_id: '0eca7ef8-ebc0-f875-315e-3cc94a7870cf',
            performance_standby_count: 0,
            start_time: '2020-04-28T00:00:00Z'
          }
        }
      };
    });
    server.get('sys/namespaces', function () {
      return {
        data: {
          keys: ['ns1/', 'ns2/', 'ns3/', 'ns4/', 'ns5/', 'ns6/', 'ns7/', 'ns8/', 'ns9/', 'ns10/', 'ns11/', 'ns12/', 'ns13/', 'ns14/', 'ns15/', 'ns16/', 'ns17/', 'ns18/']
        }
      };
    });
  }
});
;define("vault/mirage/handlers/clients", ["exports", "date-fns", "core/utils/date-formatters"], function (_exports, _dateFns, _dateFormatters) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = _default;
  0; //eaimeta@70e063a35619d71f0,"date-fns",0,"core/utils/date-formatters"eaimeta@70e063a35619d71f

  // Matches mocked date in client-dashboard-test file
  const CURRENT_DATE = new Date('2023-01-13T14:15:00');
  const COUNTS_START = (0, _dateFns.subMonths)(CURRENT_DATE, 12); // pretend vault user started cluster 6 months ago
  // for testing, we're in the middle of a license/billing period

  const LICENSE_START = (0, _dateFns.startOfMonth)((0, _dateFns.subMonths)(CURRENT_DATE, 6)); // upgrade happened 1 month after license start

  const UPGRADE_DATE = (0, _dateFns.addMonths)(LICENSE_START, 1);

  function getSum(array, key) {
    return array.reduce((sum, _ref) => {
      let {
        counts
      } = _ref;
      return sum + counts[key];
    }, 0);
  }

  function getTotalCounts(array) {
    return {
      distinct_entities: getSum(array, 'entity_clients'),
      entity_clients: getSum(array, 'entity_clients'),
      non_entity_tokens: getSum(array, 'non_entity_clients'),
      non_entity_clients: getSum(array, 'non_entity_clients'),
      clients: getSum(array, 'clients')
    };
  }

  function randomBetween(min, max) {
    return Math.floor(Math.random() * (max - min + 1) + min);
  }

  function arrayOfCounts(max, arrayLength) {
    var result = [];
    var sum = 0;

    for (var i = 0; i < arrayLength - 1; i++) {
      result[i] = randomBetween(1, max - (arrayLength - i - 1) - sum);
      sum += result[i];
    }

    result[arrayLength - 1] = max - sum;
    return result.sort((a, b) => b - a);
  }

  function generateNamespaceBlock() {
    let idx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
    let isLowerCounts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    let ns = arguments.length > 2 ? arguments[2] : undefined;
    const min = isLowerCounts ? 10 : 50;
    const max = isLowerCounts ? 100 : 5000;
    const nsBlock = {
      namespace_id: ns?.namespace_id || (idx === 0 ? 'root' : Math.random().toString(36).slice(2, 7) + idx),
      namespace_path: ns?.namespace_path || (idx === 0 ? '' : `ns/${idx}`),
      counts: {}
    };
    const mounts = [];
    Array.from(Array(10)).forEach((mount, index) => {
      const mountClients = randomBetween(min, max);
      const [nonEntity, entity] = arrayOfCounts(mountClients, 2);
      mounts.push({
        mount_path: `auth/authid${index}`,
        counts: {
          clients: mountClients,
          entity_clients: entity,
          non_entity_clients: nonEntity,
          distinct_entities: entity,
          non_entity_tokens: nonEntity
        }
      });
    });
    mounts.sort((a, b) => b.counts.clients - a.counts.clients);
    nsBlock.mounts = mounts;
    nsBlock.counts = getTotalCounts(mounts);
    return nsBlock;
  }

  function generateMonths(startDate, endDate, namespaces) {
    const startDateObject = (0, _dateFns.startOfMonth)((0, _dateFormatters.parseAPITimestamp)(startDate));
    const endDateObject = (0, _dateFns.startOfMonth)((0, _dateFormatters.parseAPITimestamp)(endDate));
    const numberOfMonths = (0, _dateFns.differenceInCalendarMonths)(endDateObject, startDateObject) + 1;
    const months = [];

    if ((0, _dateFns.isBefore)(startDateObject, UPGRADE_DATE) && (0, _dateFns.isBefore)(endDateObject, UPGRADE_DATE)) {
      // months block is empty if dates do not span an upgrade
      return [];
    }

    for (let i = 0; i < numberOfMonths; i++) {
      const month = (0, _dateFns.addMonths)(startDateObject, i);
      const hasNoData = (0, _dateFns.isBefore)(month, UPGRADE_DATE);

      if (hasNoData) {
        months.push({
          timestamp: (0, _dateFns.formatRFC3339)(month),
          counts: null,
          namespaces: null,
          new_clients: null
        });
        continue;
      }

      const monthNs = namespaces.map((ns, idx) => generateNamespaceBlock(idx, true, ns));
      const newClients = namespaces.map((ns, idx) => generateNamespaceBlock(idx, true, ns));
      months.push({
        timestamp: (0, _dateFns.formatRFC3339)(month),
        counts: getTotalCounts(monthNs),
        namespaces: monthNs.sort((a, b) => b.counts.clients - a.counts.clients),
        new_clients: {
          counts: getTotalCounts(newClients),
          namespaces: newClients.sort((a, b) => b.counts.clients - a.counts.clients)
        }
      });
    }

    return months;
  }

  function generateActivityResponse(namespaces, startDate, endDate) {
    return {
      start_time: (0, _dateFns.isAfter)(new Date(startDate), COUNTS_START) ? startDate : (0, _dateFns.formatRFC3339)(COUNTS_START),
      end_time: endDate,
      by_namespace: namespaces.sort((a, b) => b.counts.clients - a.counts.clients),
      months: generateMonths(startDate, endDate, namespaces),
      total: getTotalCounts(namespaces)
    };
  }

  function _default(server) {
    server.get('sys/license/status', function () {
      return {
        request_id: 'my-license-request-id',
        data: {
          autoloaded: {
            license_id: 'my-license-id',
            start_time: (0, _dateFns.formatRFC3339)(LICENSE_START),
            expiration_time: (0, _dateFns.formatRFC3339)((0, _dateFns.endOfMonth)((0, _dateFns.addMonths)(CURRENT_DATE, 6)))
          }
        }
      };
    });
    server.get('sys/internal/counters/config', function () {
      return {
        request_id: 'some-config-id',
        data: {
          default_report_months: 12,
          enabled: 'default-enable',
          queries_available: true,
          retention_months: 24
        }
      };
    });
    server.get('/sys/internal/counters/activity', (schema, req) => {
      let {
        start_time,
        end_time
      } = req.queryParams; // backend returns a timestamp if given unix time, so first convert to timestamp string here

      if (!start_time.includes('T')) start_time = (0, _dateFns.fromUnixTime)(start_time).toISOString();
      if (!end_time.includes('T')) end_time = (0, _dateFns.fromUnixTime)(end_time).toISOString();
      const namespaces = Array.from(Array(12)).map((v, idx) => generateNamespaceBlock(idx));
      return {
        request_id: 'some-activity-id',
        lease_id: '',
        renewable: false,
        lease_duration: 0,
        data: generateActivityResponse(namespaces, start_time, end_time),
        wrap_info: null,
        warnings: null,
        auth: null
      };
    });
  }
});
;define("vault/mirage/handlers/db", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = _default;
  0; //eaimeta@70e063a35619d71feaimeta@70e063a35619d71f

  /**
   * Copyright (c) HashiCorp, Inc.
   * SPDX-License-Identifier: MPL-2.0
   */
  function _default(server) {
    server.get('/database/static-roles', function () {
      return {
        data: {
          keys: ['dev-static', 'prod-static']
        }
      };
    });
    server.get('/database/static-roles/:rolename', function (db, req) {
      if (req.params.rolename.includes('tester')) {
        return new Response(400);
      }

      return {
        data: {
          rotation_statements: ['{ "db": "admin", "roles": [{ "role": "readWrite" }, {"role": "read", "db": "foo"}] }'],
          db_name: 'connection',
          username: 'alice',
          rotation_period: '1h'
        }
      };
    });
    server.post('/database/rotate-role/:rolename', function () {
      return new Response(204);
    });
  }
});
;define("vault/mirage/handlers/index", ["exports", "vault/mirage/handlers/base", "vault/mirage/handlers/clients", "vault/mirage/handlers/db", "vault/mirage/handlers/kms", "vault/mirage/handlers/mfa-config", "vault/mirage/handlers/mfa-login", "vault/mirage/handlers/oidc-config", "vault/mirage/handlers/kubernetes"], function (_exports, _base, _clients, _db, _kms, _mfaConfig, _mfaLogin, _oidcConfig, _kubernetes) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "base", {
    enumerable: true,
    get: function () {
      return _base.default;
    }
  });
  Object.defineProperty(_exports, "clients", {
    enumerable: true,
    get: function () {
      return _clients.default;
    }
  });
  Object.defineProperty(_exports, "db", {
    enumerable: true,
    get: function () {
      return _db.default;
    }
  });
  Object.defineProperty(_exports, "kms", {
    enumerable: true,
    get: function () {
      return _kms.default;
    }
  });
  Object.defineProperty(_exports, "kubernetes", {
    enumerable: true,
    get: function () {
      return _kubernetes.default;
    }
  });
  Object.defineProperty(_exports, "mfaConfig", {
    enumerable: true,
    get: function () {
      return _mfaConfig.default;
    }
  });
  Object.defineProperty(_exports, "mfaLogin", {
    enumerable: true,
    get: function () {
      return _mfaLogin.default;
    }
  });
  Object.defineProperty(_exports, "oidcConfig", {
    enumerable: true,
    get: function () {
      return _oidcConfig.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"vault/mirage/handlers/base",0,"vault/mirage/handlers/clients",0,"vault/mirage/handlers/db",0,"vault/mirage/handlers/kms",0,"vault/mirage/handlers/mfa-config",0,"vault/mirage/handlers/mfa-login",0,"vault/mirage/handlers/oidc-config",0,"vault/mirage/handlers/kubernetes"eaimeta@70e063a35619d71f
});
;define("vault/mirage/handlers/kms", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = _default;
  0; //eaimeta@70e063a35619d71feaimeta@70e063a35619d71f

  /**
   * Copyright (c) HashiCorp, Inc.
   * SPDX-License-Identifier: MPL-2.0
   */
  function _default(server) {
    server.get('keymgmt/key?list=true', function () {
      return {
        data: {
          keys: ['example-1', 'example-2', 'example-3']
        }
      };
    });
    server.get('keymgmt/key/:name', function (_, request) {
      const name = request.params.name;
      return {
        data: {
          name,
          deletion_allowed: false,
          keys: {
            1: {
              creation_time: '2020-11-02T15:54:58.768473-08:00',
              public_key: '-----BEGIN PUBLIC KEY----- ... -----END PUBLIC KEY-----'
            },
            2: {
              creation_time: '2020-11-04T16:58:47.591718-08:00',
              public_key: '-----BEGIN PUBLIC KEY----- ... -----END PUBLIC KEY-----'
            }
          },
          latest_version: 2,
          min_enabled_version: 1,
          type: 'rsa-2048'
        }
      };
    });
    server.get('keymgmt/key/:name/kms', function () {
      return {
        data: {
          keys: ['example-kms']
        }
      };
    });
    server.post('keymgmt/key/:name', function () {
      return {};
    });
    server.put('keymgmt/key/:name', function () {
      return {};
    });
    server.get('/keymgmt/kms/:provider/key', () => {
      const keys = [];
      let i = 1;

      while (i <= 75) {
        keys.push(`testkey-${i}`);
        i++;
      }

      return {
        data: {
          keys
        }
      };
    });
  }
});
;define("vault/mirage/handlers/kubernetes", ["exports", "miragejs"], function (_exports, _miragejs) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = _default;
  0; //eaimeta@70e063a35619d71f0,"miragejs"eaimeta@70e063a35619d71f

  function _default(server) {
    const getRecord = (schema, req, dbKey) => {
      const {
        path,
        name
      } = req.params;
      const findBy = dbKey === 'kubernetesConfigs' ? {
        path
      } : {
        name
      };
      const record = schema.db[dbKey].findBy(findBy);

      if (record) {
        delete record.path;
        delete record.id;
      }

      return record ? {
        data: record
      } : new _miragejs.Response(404, {}, {
        errors: []
      });
    };

    const createRecord = (req, key) => {
      const data = JSON.parse(req.requestBody);

      if (key === 'kubernetes-config') {
        data.path = req.params.path;
      }

      server.create(key, data);
      return new _miragejs.Response(204);
    };

    const deleteRecord = (schema, req, dbKey) => {
      const {
        name
      } = req.params;
      const record = schema.db[dbKey].findBy({
        name
      });

      if (record) {
        schema.db[dbKey].remove(record.id);
      }

      return new _miragejs.Response(204);
    };

    server.get('/:path/config', (schema, req) => {
      return getRecord(schema, req, 'kubernetesConfigs');
    });
    server.post('/:path/config', (schema, req) => {
      return createRecord(req, 'kubernetes-config');
    });
    server.delete('/:path/config', (schema, req) => {
      return deleteRecord(schema, req, 'kubernetesConfigs');
    }); // endpoint for checking for environment variables necessary for inferred config

    server.get('/:path/check', () => {
      const response = {};
      const status = Math.random() > 0.5 ? 204 : 404;

      if (status === 404) {
        response.errors = ['Missing environment variables: KUBERNETES_SERVICE_HOST, KUBERNETES_SERVICE_PORT_HTTPS'];
      }

      return new _miragejs.Response(status, response);
    });
    server.get('/:path/roles', schema => {
      return {
        data: {
          keys: schema.db.kubernetesRoles.where({}).mapBy('name')
        }
      };
    });
    server.get('/:path/roles/:name', (schema, req) => {
      return getRecord(schema, req, 'kubernetesRoles');
    });
    server.post('/:path/roles/:name', (schema, req) => {
      return createRecord(req, 'kubernetes-role');
    });
    server.delete('/:path/roles/:name', (schema, req) => {
      return deleteRecord(schema, req, 'kubernetesRoles');
    });
    server.post('/:path/creds/:role', (schema, req) => {
      const {
        role
      } = req.params;
      const record = schema.db.kubernetesRoles.findBy({
        name: role
      });
      const data = JSON.parse(req.requestBody);
      let errors;

      if (!record) {
        errors = [`role '${role}' does not exist`];
      } else if (!data.kubernetes_namespace) {
        errors = ["'kubernetes_namespace' is required"];
      } // creds cannot be fetched after creation so we don't need to store them


      return errors ? new _miragejs.Response(400, {}, {
        errors
      }) : {
        request_id: '58fefc6c-5195-c17a-94f2-8f889f3df57c',
        lease_id: 'kubernetes/creds/default-role/aWczfcfJ7NKUdiirJrPXIs38',
        renewable: false,
        lease_duration: 3600,
        data: {
          service_account_name: 'default',
          service_account_namespace: 'default',
          service_account_token: 'eyJhbGciOiJSUzI1NiIsImtpZCI6Imlr'
        }
      };
    });
    server.get('/sys/internal/ui/mounts/kubernetes', () => ({
      data: {
        accessor: 'kubernetes_9f846a87',
        path: 'kubernetes/',
        type: 'kubernetes'
      }
    }));
  }
});
;define("vault/mirage/handlers/mfa-config", ["exports", "miragejs"], function (_exports, _miragejs) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = _default;
  0; //eaimeta@70e063a35619d71f0,"miragejs"eaimeta@70e063a35619d71f

  function _default(server) {
    const methods = ['totp', 'duo', 'okta', 'pingid'];
    const required = {
      totp: ['issuer'],
      duo: ['secret_key', 'integration_key', 'api_hostname'],
      okta: ['org_name', 'api_token'],
      pingid: ['settings_file_base64']
    };

    const validate = (type, data, cb) => {
      if (!methods.includes(type)) {
        return new _miragejs.Response(400, {}, {
          errors: [`Method ${type} not found`]
        });
      }

      if (data) {
        const missing = required[type].reduce((params, key) => {
          if (!data[key]) {
            params.push(key);
          }

          return params;
        }, []);

        if (missing.length) {
          return new _miragejs.Response(400, {}, {
            errors: [`Missing required parameters: [${missing.join(', ')}]`]
          });
        }
      }

      return cb();
    };

    const dbKeyFromType = type => `mfa${type.charAt(0).toUpperCase()}${type.slice(1)}Methods`;

    const generateListResponse = (schema, isMethod) => {
      let records = [];

      if (isMethod) {
        methods.forEach(method => {
          records.addObjects(schema.db[dbKeyFromType(method)].where({}));
        });
      } else {
        records = schema.db.mfaLoginEnforcements.where({});
      } // seed the db with a few records if none exist


      if (!records.length) {
        if (isMethod) {
          methods.forEach(type => {
            records.push(server.create(`mfa-${type}-method`));
          });
        } else {
          records = server.createList('mfa-login-enforcement', 4).toArray();
        }
      }

      const dataKey = isMethod ? 'id' : 'name';
      const data = records.reduce((resp, record) => {
        resp.key_info[record[dataKey]] = record;
        resp.keys.push(record[dataKey]);
        return resp;
      }, {
        key_info: {},
        keys: []
      });
      return {
        data
      };
    }; // list methods


    server.get('/identity/mfa/method/', schema => {
      return generateListResponse(schema, true);
    }); // fetch method by id

    server.get('/identity/mfa/method/:id', (schema, _ref) => {
      let {
        params: {
          id
        }
      } = _ref;
      let record;

      for (const method of methods) {
        record = schema.db[dbKeyFromType(method)].find(id);

        if (record) {
          break;
        }
      } // inconvenient when testing edit route to return a 404 on refresh since mirage memory is cleared
      // flip this variable to test 404 state if needed


      const shouldError = false; // create a new record so data is always returned

      if (!record && !shouldError) {
        return {
          data: server.create('mfa-totp-method')
        };
      }

      return !record ? new _miragejs.Response(404, {}, {
        errors: []
      }) : {
        data: record
      };
    }); // create method

    server.post('/identity/mfa/method/:type', (schema, _ref2) => {
      let {
        params: {
          type
        },
        requestBody
      } = _ref2;
      const data = JSON.parse(requestBody);
      return validate(type, data, () => {
        const record = server.create(`mfa-${type}-method`, data);
        return {
          data: {
            method_id: record.id
          }
        };
      });
    }); // update method

    server.post('/identity/mfa/method/:type/:id', (schema, _ref3) => {
      let {
        params: {
          type,
          id
        },
        requestBody
      } = _ref3;
      const data = JSON.parse(requestBody);
      return validate(type, data, () => {
        schema.db[dbKeyFromType(type)].update(id, data);
        return {};
      });
    }); // delete method

    server.delete('/identity/mfa/method/:type/:id', (schema, _ref4) => {
      let {
        params: {
          type,
          id
        }
      } = _ref4;
      return validate(type, null, () => {
        schema.db[dbKeyFromType(type)].remove(id);
        return {};
      });
    }); // list enforcements

    server.get('/identity/mfa/login-enforcement', schema => {
      return generateListResponse(schema);
    }); // fetch enforcement by name

    server.get('/identity/mfa/login-enforcement/:name', (schema, _ref5) => {
      let {
        params: {
          name
        }
      } = _ref5;
      const record = schema.db.mfaLoginEnforcements.findBy({
        name
      }); // inconvenient when testing edit route to return a 404 on refresh since mirage memory is cleared
      // flip this variable to test 404 state if needed

      const shouldError = false; // create a new record so data is always returned

      if (!record && !shouldError) {
        return {
          data: server.create('mfa-login-enforcement', {
            name
          })
        };
      }

      return !record ? new _miragejs.Response(404, {}, {
        errors: []
      }) : {
        data: record
      };
    }); // create/update enforcement

    server.post('/identity/mfa/login-enforcement/:name', (schema, _ref6) => {
      let {
        params: {
          name
        },
        requestBody
      } = _ref6;
      const data = JSON.parse(requestBody); // at least one method id is required

      if (!data.mfa_method_ids?.length) {
        return new _miragejs.Response(400, {}, {
          errors: ['missing method ids']
        });
      } // at least one of the following targets is required


      const required = ['auth_method_accessors', 'auth_method_types', 'identity_group_ids', 'identity_entity_ids'];
      let hasRequired = false;

      for (const key of required) {
        if (data[key]?.length) {
          hasRequired = true;
          break;
        }
      }

      if (!hasRequired) {
        return new _miragejs.Response(400, {}, {
          errors: ['One of auth_method_accessors, auth_method_types, identity_group_ids, identity_entity_ids must be specified']
        });
      }

      if (schema.db.mfaLoginEnforcements.findBy({
        name
      })) {
        schema.db.mfaLoginEnforcements.update({
          name
        }, data);
      } else {
        schema.db.mfaLoginEnforcements.insert(data);
      }

      return { ...data,
        id: data.name
      };
    }); // delete enforcement

    server.delete('/identity/mfa/login-enforcement/:name', (schema, _ref7) => {
      let {
        params: {
          name
        }
      } = _ref7;
      schema.db.mfaLoginEnforcements.remove({
        name
      });
      return {};
    }); // endpoints for target selection

    server.get('/identity/group/id', () => ({
      data: {
        key_info: {
          '34db6b52-591e-bc22-8af0-4add5e167326': {
            name: 'test-group'
          }
        },
        keys: ['34db6b52-591e-bc22-8af0-4add5e167326']
      }
    }));
    server.get('/identity/group/id/:id', () => ({
      data: {
        id: '34db6b52-591e-bc22-8af0-4add5e167326',
        name: 'test-group'
      }
    }));
    server.get('/identity/entity/id', () => ({
      data: {
        key_info: {
          'f831667b-7392-7a1c-c0fc-33d48cb1c57d': {
            name: 'test-entity'
          }
        },
        keys: ['f831667b-7392-7a1c-c0fc-33d48cb1c57d']
      }
    }));
    server.get('/identity/entity/id/:id', () => ({
      data: {
        id: 'f831667b-7392-7a1c-c0fc-33d48cb1c57d',
        name: 'test-entity'
      }
    }));
    server.get('/sys/auth', () => ({
      data: {
        'userpass/': {
          accessor: 'auth_userpass_bb95c2b1',
          type: 'userpass'
        }
      }
    }));
  }
});
;define("vault/mirage/handlers/mfa-login", ["exports", "miragejs", "ember", "fetch"], function (_exports, _miragejs, _ember, _fetch) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = _default;
  _exports.validationHandler = void 0;
  0; //eaimeta@70e063a35619d71f0,"miragejs",0,"ember",0,"fetch"eaimeta@70e063a35619d71f

  // initial auth response cache -- lookup by mfa_request_id key
  const authResponses = {}; // mfa requirement cache -- lookup by mfa_request_id key

  const mfaRequirement = {}; // may be imported in tests when the validation request needs to be intercepted to make assertions prior to returning a response
  // in that case it may be helpful to still use this validation logic to ensure to payload is as expected

  const validationHandler = (schema, req) => {
    try {
      const {
        mfa_request_id,
        mfa_payload
      } = JSON.parse(req.requestBody);
      const mfaRequest = mfaRequirement[mfa_request_id];

      if (!mfaRequest) {
        return new _miragejs.Response(404, {}, {
          errors: ['MFA Request ID not found']
        });
      } // validate request body


      for (const constraintId in mfa_payload) {
        // ensure ids were passed in map
        const method = mfaRequest.methods.find(_ref => {
          let {
            id
          } = _ref;
          return id === constraintId;
        });

        if (!method) {
          return new _miragejs.Response(400, {}, {
            errors: [`Invalid MFA constraint id ${constraintId} passed in map`]
          });
        } // test non-totp validation by rejecting all pingid requests


        if (method.type === 'pingid') {
          return new _miragejs.Response(403, {}, {
            errors: ['PingId MFA validation failed']
          });
        } // validate totp passcode


        const passcode = mfa_payload[constraintId][0];

        if (method.uses_passcode) {
          const expectedPasscode = method.type === 'duo' ? 'passcode=test' : 'test';

          if (passcode !== expectedPasscode) {
            const error = {
              used: 'code already used; new code is available in 30 seconds',
              limit: 'maximum TOTP validation attempts 4 exceeded the allowed attempts 3. Please try again in 15 seconds'
            }[passcode] || 'failed to validate';
            console.log(error); // eslint-disable-line

            return new _miragejs.Response(403, {}, {
              errors: [error]
            });
          }
        } else if (passcode) {
          // for okta and duo, reject if a passcode was provided
          return new _miragejs.Response(400, {}, {
            errors: ['Passcode should only be provided for TOTP MFA type']
          });
        }
      }

      return authResponses[mfa_request_id];
    } catch (error) {
      console.log(error); // eslint-disable-line

      return new _miragejs.Response(500, {}, {
        errors: ['Mirage Handler Error: /sys/mfa/validate']
      });
    }
  };

  _exports.validationHandler = validationHandler;

  function _default(server) {
    // generate different constraint scenarios and return mfa_requirement object
    const generateMfaRequirement = (req, res) => {
      const {
        user
      } = req.params; // uses_passcode automatically set to true in factory for totp type

      const m = function (type) {
        let uses_passcode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
        return server.create('mfa-method', {
          type,
          uses_passcode
        });
      };

      let mfa_constraints = {};
      let methods = []; // flat array of methods for easy lookup during validation

      function generator() {
        const methods = [];
        const constraintObj = [...arguments].reduce((obj, methodArray, index) => {
          obj[`test_${index}`] = {
            any: methodArray
          };
          methods.push(...methodArray);
          return obj;
        }, {});
        return [constraintObj, methods];
      }

      if (user === 'mfa-a') {
        [mfa_constraints, methods] = generator([m('totp')]); // 1 constraint 1 passcode
      } else if (user === 'mfa-b') {
        [mfa_constraints, methods] = generator([m('okta')]); // 1 constraint 1 non-passcode
      } else if (user === 'mfa-c') {
        [mfa_constraints, methods] = generator([m('totp'), m('duo', true)]); // 1 constraint 2 passcodes
      } else if (user === 'mfa-d') {
        [mfa_constraints, methods] = generator([m('okta'), m('duo')]); // 1 constraint 2 non-passcode
      } else if (user === 'mfa-e') {
        [mfa_constraints, methods] = generator([m('okta'), m('totp')]); // 1 constraint 1 passcode 1 non-passcode
      } else if (user === 'mfa-f') {
        [mfa_constraints, methods] = generator([m('totp')], [m('duo', true)]); // 2 constraints 1 passcode for each
      } else if (user === 'mfa-g') {
        [mfa_constraints, methods] = generator([m('okta')], [m('duo')]); // 2 constraints 1 non-passcode for each
      } else if (user === 'mfa-h') {
        [mfa_constraints, methods] = generator([m('totp')], [m('okta')]); // 2 constraints 1 passcode 1 non-passcode
      } else if (user === 'mfa-i') {
        [mfa_constraints, methods] = generator([m('okta'), m('totp')], [m('totp')]); // 2 constraints 1 passcode/1 non-passcode 1 non-passcode
      } else if (user === 'mfa-j') {
        [mfa_constraints, methods] = generator([m('pingid')]); // use to test push failures
      } else if (user === 'mfa-k') {
        [mfa_constraints, methods] = generator([m('duo', true)]); // test duo passcode and prepending passcode= to user input
      }

      const mfa_request_id = crypto.randomUUID();
      const mfa_requirement = {
        mfa_request_id,
        mfa_constraints
      }; // cache mfa requests to test different validation scenarios

      mfaRequirement[mfa_request_id] = {
        methods
      }; // cache auth response to be returned later by sys/mfa/validate

      authResponses[mfa_request_id] = { ...res
      };
      return mfa_requirement;
    }; // passthrough original request, cache response and return mfa stub


    const passthroughLogin = async (schema, req) => {
      // test totp not configured scenario
      if (req.params.user === 'totp-na') {
        return new _miragejs.Response(400, {}, {
          errors: ['TOTP mfa required but not configured']
        });
      }

      const mock = req.params.user ? req.params.user.includes('mfa') : null; // bypass mfa for users that do not match type

      if (!mock) {
        req.passthrough();
      } else if (_ember.default.testing) {
        // use root token in test environment
        const res = await (0, _fetch.default)('/v1/auth/token/lookup-self', {
          headers: {
            'X-Vault-Token': 'root'
          }
        });

        if (res.status < 300) {
          const json = res.json();

          if (_ember.default.testing) {
            json.auth = { ...json.data,
              policies: [],
              metadata: {
                username: 'foobar'
              }
            };
            json.data = null;
          }

          return {
            auth: {
              mfa_requirement: generateMfaRequirement(req, json)
            }
          };
        }

        return new _miragejs.Response(500, {}, {
          errors: ['Mirage error fetching root token in testing']
        });
      } else {
        const xhr = req.passthrough();

        xhr.onreadystatechange = () => {
          if (xhr.readyState === 4 && xhr.status < 300) {
            // XMLHttpRequest response prop only has a getter -- redefine as writable and set value
            Object.defineProperty(xhr, 'response', {
              writable: true,
              value: JSON.stringify({
                auth: {
                  mfa_requirement: generateMfaRequirement(req, JSON.parse(xhr.responseText))
                }
              })
            });
          }
        };
      }
    };

    server.post('/auth/:method/login/:user', passthroughLogin);
    server.post('/sys/mfa/validate', validationHandler);
  }
});
;define("vault/mirage/handlers/oidc-config", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = _default;
  0; //eaimeta@70e063a35619d71feaimeta@70e063a35619d71f

  /**
   * Copyright (c) HashiCorp, Inc.
   * SPDX-License-Identifier: MPL-2.0
   */
  function _default(server) {
    // ENTITY SEARCH SELECT
    server.get('/identity/entity/id', () => ({
      data: {
        key_info: {
          '1234-12345': {
            name: 'test-entity'
          }
        },
        keys: ['1234-12345']
      }
    })); // GROUP SEARCH SELECT

    server.get('/identity/group/id', () => ({
      data: {
        key_info: {
          'abcdef-123': {
            name: 'test-group'
          }
        },
        keys: ['abcdef-123']
      }
    }));
  }
});
;define("vault/mirage/helpers/modify-passthrough-response", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = _default;
  0; //eaimeta@70e063a35619d71feaimeta@70e063a35619d71f

  // passthrough request and modify response from server
  // pass object as second arg of properties in response to override
  function _default(req) {
    let props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    return new Promise(resolve => {
      const xhr = req.passthrough();

      xhr.onreadystatechange = () => {
        if (xhr.readyState === 4) {
          if (xhr.status < 300) {
            // XMLHttpRequest response prop only has a getter -- redefine as writable and set value
            Object.defineProperty(xhr, 'response', {
              writable: true,
              value: JSON.stringify({ ...JSON.parse(xhr.responseText),
                ...props
              })
            });
          }

          resolve();
        }
      };
    });
  }
});
;define("vault/mirage/identity-managers/application", ["exports", "vault/utils/identity-manager"], function (_exports, _identityManager) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/utils/identity-manager"eaimeta@70e063a35619d71f

  // to more closely match the Vault backend this will return UUIDs as identifiers for records in mirage
  var _default = _identityManager.default;
  _exports.default = _default;
});
;define("vault/mirage/models/feature", ["exports", "ember-cli-mirage"], function (_exports, _emberCliMirage) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-mirage"eaimeta@70e063a35619d71f

  var _default = _emberCliMirage.Model.extend({
    feature_flags: null
  });

  _exports.default = _default;
});
;define("vault/mirage/scenarios/default", ["exports", "vault/config/environment", "vault/mirage/scenarios/kubernetes"], function (_exports, _environment, _kubernetes) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = _default;
  0; //eaimeta@70e063a35619d71f0,"vault/config/environment",0,"vault/mirage/scenarios/kubernetes"eaimeta@70e063a35619d71f

  const {
    handler
  } = _environment.default['ember-cli-mirage'];

  function _default(server) {
    server.create('clients/config');
    server.create('feature', {
      feature_flags: ['SOME_FLAG', 'VAULT_CLOUD_ADMIN_NAMESPACE']
    });

    if (handler === 'kubernetes') {
      (0, _kubernetes.default)(server);
    }
  }
});
;define("vault/mirage/scenarios/kubernetes", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = _default;
  0; //eaimeta@70e063a35619d71feaimeta@70e063a35619d71f

  /**
   * Copyright (c) HashiCorp, Inc.
   * SPDX-License-Identifier: MPL-2.0
   */
  function _default(server) {
    let shouldConfigureRoles = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
    server.create('kubernetes-config', {
      path: 'kubernetes'
    });

    if (shouldConfigureRoles) {
      server.create('kubernetes-role');
      server.create('kubernetes-role', 'withRoleName');
      server.create('kubernetes-role', 'withRoleRules');
    }
  }
});
;define("vault/mirage/serializers/application", ["exports", "ember-cli-mirage"], function (_exports, _emberCliMirage) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-mirage"eaimeta@70e063a35619d71f

  var _default = _emberCliMirage.JSONAPISerializer.extend({
    typeKeyForModel(model) {
      return model.modelName;
    }

  });

  _exports.default = _default;
});
;define("vault/mixins/backend-crumb", ["exports", "@ember/object", "@ember/object/mixin"], function (_exports, _object, _mixin) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/object",0,"@ember/object/mixin"eaimeta@70e063a35619d71f

  var _default = _mixin.default.create({
    backendCrumb: (0, _object.computed)('backend', function () {
      const backend = this.backend;

      if (backend === undefined) {
        throw new Error('backend-crumb mixin requires backend to be set');
      }

      return {
        label: backend,
        text: backend,
        path: 'vault.cluster.secrets.backend.list-root',
        model: backend
      };
    })
  });

  _exports.default = _default;
});
;define("vault/mixins/cluster-route", ["exports", "@ember/service", "@ember/object/mixin", "rsvp", "vault/lib/route-paths"], function (_exports, _service, _mixin, _rsvp, _routePaths) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@ember/object/mixin",0,"rsvp",0,"vault/lib/route-paths"eaimeta@70e063a35619d71f

  var _default = _mixin.default.create({
    auth: (0, _service.inject)(),
    store: (0, _service.inject)(),
    router: (0, _service.inject)(),

    transitionToTargetRoute() {
      let transition = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      const targetRoute = this.targetRouteName(transition);

      if (targetRoute && targetRoute !== this.routeName && targetRoute !== transition.targetName && targetRoute !== this.router.currentRouteName) {
        // there may be query params so check for inclusion rather than exact match
        const isExcluded = _routePaths.EXCLUDED_REDIRECT_URLS.find(url => this.router.currentURL?.includes(url));

        if ( // only want to redirect if we're going to authenticate
        targetRoute === _routePaths.AUTH && transition.targetName !== _routePaths.CLUSTER_INDEX && !isExcluded) {
          return this.transitionTo(targetRoute, {
            queryParams: {
              redirect_to: this.router.currentURL
            }
          });
        }

        return this.transitionTo(targetRoute);
      }

      return _rsvp.default.resolve();
    },

    beforeModel(transition) {
      return this.transitionToTargetRoute(transition);
    },

    clusterModel() {
      return this.modelFor(_routePaths.CLUSTER) || this.store.peekRecord('cluster', 'vault');
    },

    authToken() {
      return this.auth.currentToken;
    },

    hasKeyData() {
      /* eslint-disable-next-line ember/no-controller-access-in-routes */
      return !!this.controllerFor(_routePaths.INIT).keyData;
    },

    targetRouteName(transition) {
      const cluster = this.clusterModel();
      const isAuthed = this.authToken();

      if (cluster.needsInit) {
        return _routePaths.INIT;
      }

      if (this.hasKeyData() && this.routeName !== _routePaths.UNSEAL && this.routeName !== _routePaths.AUTH) {
        return _routePaths.INIT;
      }

      if (cluster.sealed) {
        return _routePaths.UNSEAL;
      }

      if (!isAuthed) {
        if (transition && transition.targetName === _routePaths.OIDC_PROVIDER || this.routeName === _routePaths.OIDC_PROVIDER) {
          return _routePaths.OIDC_PROVIDER;
        }

        if (transition && transition.targetName === _routePaths.NS_OIDC_PROVIDER || this.routeName === _routePaths.NS_OIDC_PROVIDER) {
          return _routePaths.NS_OIDC_PROVIDER;
        }

        if (transition && transition.targetName === _routePaths.OIDC_CALLBACK || this.routeName === _routePaths.OIDC_CALLBACK) {
          return _routePaths.OIDC_CALLBACK;
        }

        return _routePaths.AUTH;
      }

      if (!cluster.needsInit && this.routeName === _routePaths.INIT || !cluster.sealed && this.routeName === _routePaths.UNSEAL) {
        return _routePaths.CLUSTER;
      }

      if (isAuthed && this.routeName === _routePaths.AUTH) {
        // if you're already authed and you wanna go to auth, you probably want to redirect
        return _routePaths.REDIRECT;
      }

      return null;
    }

  });

  _exports.default = _default;
});
;define("vault/mixins/focus-on-insert", ["exports", "@ember/runloop", "@ember/object/evented", "@ember/object/mixin"], function (_exports, _runloop, _evented, _mixin) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/runloop",0,"@ember/object/evented",0,"@ember/object/mixin"eaimeta@70e063a35619d71f

  var _default = _mixin.default.create({
    // selector passed to `this.$()` to find the element to focus
    // defaults to `'input'`
    focusOnInsertSelector: null,
    shouldFocus: true,
    // uses Ember.on so that we don't have to worry about calling _super if
    // didInsertElement is overridden
    focusOnInsert: (0, _evented.on)('didInsertElement', function () {
      (0, _runloop.schedule)('afterRender', this, 'focusOnInsertFocus');
    }),

    focusOnInsertFocus() {
      if (this.shouldFocus === false) {
        return;
      }

      this.forceFocus();
    },

    forceFocus() {
      var $targ = this.element.querySelectorAll(this.focusOnInsertSelector || 'input[type="text"]')[0];

      if ($targ && $targ !== document.activeElement) {
        $targ.focus();
      }
    }

  });

  _exports.default = _default;
});
;define("vault/mixins/key-mixin", ["exports", "@ember/object", "@ember/object/mixin", "vault/lib/key-utils"], function (_exports, _object, _mixin, _keyUtils) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/object",0,"@ember/object/mixin",0,"vault/lib/key-utils"eaimeta@70e063a35619d71f

  var _default = _mixin.default.create({
    // what attribute has the path for the key
    // will.be 'path' for v2 or 'id' v1
    pathAttr: 'path',
    flags: null,
    initialParentKey: null,
    isCreating: (0, _object.computed)('initialParentKey', function () {
      return this.initialParentKey != null;
    }),

    pathVal() {
      return this[this.pathAttr] || this.id;
    },

    // rather than using defineProperty for all of these,
    // we're just going to hardcode the known keys for the path ('id' and 'path')
    isFolder: (0, _object.computed)('id', 'path', function () {
      return _keyUtils.default.keyIsFolder(this.pathVal());
    }),
    keyParts: (0, _object.computed)('id', 'path', function () {
      return _keyUtils.default.keyPartsForKey(this.pathVal());
    }),
    parentKey: (0, _object.computed)('id', 'path', 'isCreating', {
      get: function () {
        return this.isCreating ? this.initialParentKey : _keyUtils.default.parentKeyForKey(this.pathVal());
      },
      set: function (_, value) {
        return value;
      }
    }),
    keyWithoutParent: (0, _object.computed)('id', 'path', 'parentKey', {
      get: function () {
        var key = this.pathVal();
        return key ? key.replace(this.parentKey, '') : null;
      },
      set: function (_, value) {
        if (value && value.trim()) {
          this.set(this.pathAttr, this.parentKey + value);
        } else {
          this.set(this.pathAttr, null);
        }

        return value;
      }
    })
  });

  _exports.default = _default;
});
;define("vault/mixins/list-controller", ["exports", "core/mixins/list-controller"], function (_exports, _listController) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _listController.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/mixins/list-controller"eaimeta@70e063a35619d71f
});
;define("vault/mixins/list-route", ["exports", "core/mixins/list-route"], function (_exports, _listRoute) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _listRoute.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/mixins/list-route"eaimeta@70e063a35619d71f
});
;define("vault/mixins/model-boundary-route", ["exports", "@ember/routing/route", "@ember/utils", "@ember/debug", "@ember/object/evented", "@ember/object/mixin"], function (_exports, _route, _utils, _debug, _evented, _mixin) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"@ember/utils",0,"@ember/debug",0,"@ember/object/evented",0,"@ember/object/mixin"eaimeta@70e063a35619d71f

  var _default = _mixin.default.create({
    modelType: null,
    modelTypes: null,
    verifyProps: (0, _evented.on)('init', function () {
      var modelType = this.modelType;
      var modelTypes = this.modelTypes;
      (true && (0, _debug.warn)('No `modelType` or `modelTypes` specified for `' + this.toString() + '`. Check to make sure you still need to use the `model-boundary-route` mixin.', (0, _utils.isPresent)(modelType) || (0, _utils.isPresent)(modelTypes), {
        id: 'model-boundary-init'
      }));
      (true && (0, _debug.warn)('Expected `model-boundary-route` to be used on an Ember.Route, not `' + this.toString() + '`.', this instanceof _route.default, {
        id: 'mode-boundary-is-route'
      }));
    }),
    clearModelCache: (0, _evented.on)('deactivate', function () {
      var modelType = this.modelType;
      var modelTypes = this.modelTypes;

      if (!modelType && !modelTypes) {
        (true && (0, _debug.warn)('Attempted to clear store clear store cache when leaving `' + this.routeName + '`, but no `modelType` or `modelTypes` was specified.', (0, _utils.isPresent)(modelType), {
          id: 'model-boundary-clear'
        }));
        return;
      }

      if (modelType) {
        this.store.unloadAll(modelType);
      }

      if (modelTypes) {
        modelTypes.forEach(type => {
          this.store.unloadAll(type);
        });
      }
    })
  });

  _exports.default = _default;
});
;define("vault/mixins/unload-model-route", ["exports", "@ember/object/mixin", "vault/utils/remove-record"], function (_exports, _mixin, _removeRecord) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/object/mixin",0,"vault/utils/remove-record"eaimeta@70e063a35619d71f

  // removes Ember Data records from the cache when the model
  // changes or you move away from the current route
  var _default = _mixin.default.create({
    modelPath: 'model',

    unloadModel() {
      const {
        modelPath
      } = this;
      /* eslint-disable-next-line ember/no-controller-access-in-routes */

      const model = this.controller.get(modelPath); // error is thrown when you attempt to unload a record that is inFlight (isSaving)

      if (!model || !model.unloadRecord || model.isSaving) {
        return;
      }

      (0, _removeRecord.default)(this.store, model);
      model.destroy(); // it's important to unset the model on the controller since controllers are singletons

      this.controller.set(modelPath, null);
    },

    actions: {
      willTransition() {
        this.unloadModel();
        return true;
      }

    }
  });

  _exports.default = _default;
});
;define("vault/mixins/unsaved-model-route", ["exports", "@ember/object/mixin"], function (_exports, _mixin) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/object/mixin"eaimeta@70e063a35619d71f

  // this mixin relies on `unload-model-route` also being used
  var _default = _mixin.default.create({
    actions: {
      willTransition(transition) {
        const model = this.controller.get('model');

        if (!model) {
          return true;
        }

        if (model.hasDirtyAttributes) {
          if (window.confirm('You have unsaved changes. Navigating away will discard these changes. Are you sure you want to discard your changes?')) {
            this.unloadModel();
            return true;
          } else {
            transition.abort();
            return false;
          }
        }

        return true;
      }

    }
  });

  _exports.default = _default;
});
;define("vault/mixins/with-nav-to-nearest-ancestor", ["exports", "@ember/object/mixin", "vault/lib/key-utils", "ember-concurrency"], function (_exports, _mixin, _keyUtils, _emberConcurrency) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/object/mixin",0,"vault/lib/key-utils",0,"ember-concurrency"eaimeta@70e063a35619d71f

  // This mixin is currently used in a controller and a component, but we
  // don't see cancellation of the task as the while loop runs in either
  // Controller in Ember are singletons so there's no cancellation there
  // during the loop. For components, it might be expected that the task would
  // be cancelled when we transitioned to a new route and a rerender occured, but this is not
  // the case since we are catching the error. Since Ember's route transitions are lazy
  // and we're catching any 404s, the loop continues until the transtion succeeds, or exhausts
  // the ancestors array and transitions to the root
  var _default = _mixin.default.create({
    navToNearestAncestor: (0, _emberConcurrency.task)(function* (key) {
      const ancestors = _keyUtils.default.ancestorKeysForKey(key);

      let errored = false;
      let nearest = ancestors.pop();

      while (nearest) {
        try {
          const transition = this.transitionToRoute('vault.cluster.secrets.backend.list', nearest);
          transition.data.isDeletion = true;
          yield transition.promise;
        } catch (e) {
          // in the route error event handler, we're only throwing when it's a 404,
          // other errors will be in the route and will not be caught, so the task will complete
          errored = true;
          nearest = ancestors.pop();
        } finally {
          if (!errored) {
            nearest = null; // eslint-disable-next-line

            return;
          }

          errored = false;
        }
      }

      yield this.transitionToRoute('vault.cluster.secrets.backend.list-root');
    })
  });

  _exports.default = _default;
});
;define("vault/models/auth-config", ["exports", "@ember-data/model"], function (_exports, _model) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/model"eaimeta@70e063a35619d71f

  var _default = _model.default.extend({
    backend: (0, _model.belongsTo)('auth-method', {
      inverse: 'authConfigs',
      readOnly: true,
      async: false
    }),
    getHelpUrl: function (backend) {
      return `/v1/auth/${backend}/config?help=1`;
    }
  });

  _exports.default = _default;
});
;define("vault/models/auth-config/approle", ["exports", "vault/models/auth-config"], function (_exports, _authConfig) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/models/auth-config"eaimeta@70e063a35619d71f

  var _default = _authConfig.default.extend({});

  _exports.default = _default;
});
;define("vault/models/auth-config/aws/client", ["exports", "@ember-data/model", "@ember/object", "vault/models/auth-config", "vault/utils/field-to-attrs"], function (_exports, _model, _object, _authConfig, _fieldToAttrs) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"@ember/object",0,"vault/models/auth-config",0,"vault/utils/field-to-attrs"eaimeta@70e063a35619d71f

  var _default = _authConfig.default.extend({
    secretKey: (0, _model.attr)('string'),
    accessKey: (0, _model.attr)('string'),
    endpoint: (0, _model.attr)('string', {
      label: 'EC2 Endpoint'
    }),
    iamEndpoint: (0, _model.attr)('string', {
      label: 'IAM Endpoint'
    }),
    stsEndpoint: (0, _model.attr)('string', {
      label: 'STS Endpoint'
    }),
    iamServerIdHeaderValue: (0, _model.attr)('string', {
      label: 'IAM Server ID Header Value'
    }),
    fieldGroups: (0, _object.computed)(function () {
      const groups = [{
        default: ['accessKey', 'secretKey']
      }, {
        'AWS Options': ['endpoint', 'iamEndpoint', 'stsEndpoint', 'iamServerIdHeaderValue']
      }];
      return (0, _fieldToAttrs.default)(this, groups);
    })
  });

  _exports.default = _default;
});
;define("vault/models/auth-config/aws/identity-accesslist", ["exports", "vault/models/auth-config/aws/tidy"], function (_exports, _tidy) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/models/auth-config/aws/tidy"eaimeta@70e063a35619d71f

  var _default = _tidy.default.extend();

  _exports.default = _default;
});
;define("vault/models/auth-config/aws/roletag-denylist", ["exports", "vault/models/auth-config/aws/tidy"], function (_exports, _tidy) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/models/auth-config/aws/tidy"eaimeta@70e063a35619d71f

  var _default = _tidy.default.extend();

  _exports.default = _default;
});
;define("vault/models/auth-config/aws/tidy", ["exports", "@ember-data/model", "@ember/object", "vault/utils/field-to-attrs", "vault/models/auth-config"], function (_exports, _model, _object, _fieldToAttrs, _authConfig) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"@ember/object",0,"vault/utils/field-to-attrs",0,"vault/models/auth-config"eaimeta@70e063a35619d71f

  var _default = _authConfig.default.extend({
    safetyBuffer: (0, _model.attr)({
      defaultValue: '72h',
      editType: 'ttl'
    }),
    disablePeriodicTidy: (0, _model.attr)('boolean', {
      defaultValue: false
    }),
    attrs: (0, _object.computed)(function () {
      return (0, _fieldToAttrs.expandAttributeMeta)(this, ['safetyBuffer', 'disablePeriodicTidy']);
    })
  });

  _exports.default = _default;
});
;define("vault/models/auth-config/azure", ["exports", "@ember-data/model", "@ember/object", "vault/models/auth-config", "vault/utils/openapi-to-attrs", "vault/utils/field-to-attrs"], function (_exports, _model, _object, _authConfig, _openapiToAttrs, _fieldToAttrs) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"@ember/object",0,"vault/models/auth-config",0,"vault/utils/openapi-to-attrs",0,"vault/utils/field-to-attrs"eaimeta@70e063a35619d71f

  var _default = _authConfig.default.extend({
    useOpenAPI: true,
    tenantId: (0, _model.attr)('string', {
      label: 'Tenant ID',
      helpText: 'The tenant ID for the Azure Active Directory organization'
    }),
    resource: (0, _model.attr)('string', {
      helpText: 'The configured URL for the application registered in Azure Active Directory'
    }),
    clientId: (0, _model.attr)('string', {
      label: 'Client ID',
      helpText: 'The client ID for credentials to query the Azure APIs. Currently read permissions to query compute resources are required.'
    }),
    clientSecret: (0, _model.attr)('string', {
      helpText: 'The client secret for credentials to query the Azure APIs'
    }),
    googleCertsEndpoint: (0, _model.attr)('string'),
    fieldGroups: (0, _object.computed)('newFields', function () {
      let groups = [{
        default: ['tenantId', 'resource']
      }, {
        'Azure Options': ['clientId', 'clientSecret']
      }];

      if (this.newFields) {
        groups = (0, _openapiToAttrs.combineFieldGroups)(groups, this.newFields, []);
      }

      return (0, _fieldToAttrs.default)(this, groups);
    })
  });

  _exports.default = _default;
});
;define("vault/models/auth-config/cert", ["exports", "vault/models/auth-config"], function (_exports, _authConfig) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/models/auth-config"eaimeta@70e063a35619d71f

  var _default = _authConfig.default.extend({});

  _exports.default = _default;
});
;define("vault/models/auth-config/jwt", ["exports", "@ember-data/model", "@ember/object", "vault/models/auth-config", "vault/utils/field-to-attrs", "vault/utils/openapi-to-attrs"], function (_exports, _model, _object, _authConfig, _fieldToAttrs, _openapiToAttrs) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"@ember/object",0,"vault/models/auth-config",0,"vault/utils/field-to-attrs",0,"vault/utils/openapi-to-attrs"eaimeta@70e063a35619d71f

  var _default = _authConfig.default.extend({
    useOpenAPI: true,
    oidcDiscoveryUrl: (0, _model.attr)('string', {
      label: 'OIDC discovery URL',
      helpText: 'The OIDC discovery URL, without any .well-known component (base path). Cannot be used with jwt_validation_pubkeys'
    }),
    oidcClientId: (0, _model.attr)('string', {
      label: 'OIDC client ID'
    }),
    oidcClientSecret: (0, _model.attr)('string', {
      label: 'OIDC client secret'
    }),
    oidcDiscoveryCaPem: (0, _model.attr)('string', {
      label: 'OIDC discovery CA PEM',
      editType: 'file',
      helpText: 'The CA certificate or chain of certificates, in PEM format, to use to validate connections to the OIDC Discovery URL. If not set, system certificates are used'
    }),
    jwtValidationPubkeys: (0, _model.attr)({
      label: 'JWT validation public keys',
      editType: 'stringArray'
    }),
    jwtSupportedAlgs: (0, _model.attr)({
      label: 'JWT supported algorithms'
    }),
    boundIssuer: (0, _model.attr)('string', {
      helpText: 'The value against which to match the iss claim in a JWT'
    }),
    fieldGroups: (0, _object.computed)('constructor.modelName', 'newFields', function () {
      const type = this.constructor.modelName.split('/')[1].toUpperCase();
      let groups = [{
        default: ['oidcDiscoveryUrl', 'defaultRole']
      }, {
        [`${type} Options`]: ['oidcClientId', 'oidcClientSecret', 'oidcDiscoveryCaPem', 'jwtValidationPubkeys', 'jwtSupportedAlgs', 'boundIssuer']
      }];

      if (this.newFields) {
        groups = (0, _openapiToAttrs.combineFieldGroups)(groups, this.newFields, []);
      }

      return (0, _fieldToAttrs.default)(this, groups);
    })
  });

  _exports.default = _default;
});
;define("vault/models/auth-config/kubernetes", ["exports", "@ember-data/model", "@ember/object", "vault/models/auth-config", "vault/utils/openapi-to-attrs", "vault/utils/field-to-attrs"], function (_exports, _model, _object, _authConfig, _openapiToAttrs, _fieldToAttrs) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"@ember/object",0,"vault/models/auth-config",0,"vault/utils/openapi-to-attrs",0,"vault/utils/field-to-attrs"eaimeta@70e063a35619d71f

  var _default = _authConfig.default.extend({
    useOpenAPI: true,
    kubernetesHost: (0, _model.attr)('string', {
      helpText: 'Host must be a host string, a host:port pair, or a URL to the base of the Kubernetes API server'
    }),
    kubernetesCaCert: (0, _model.attr)('string', {
      editType: 'file',
      helpText: 'PEM encoded CA cert for use by the TLS client used to talk with the Kubernetes API'
    }),
    tokenReviewerJwt: (0, _model.attr)('string', {
      helpText: 'A service account JWT used to access the TokenReview API to validate other JWTs during login. If not set the JWT used for login will be used to access the API'
    }),
    pemKeys: (0, _model.attr)({
      editType: 'stringArray'
    }),
    fieldGroups: (0, _object.computed)('newFields', function () {
      let groups = [{
        default: ['kubernetesHost', 'kubernetesCaCert']
      }, {
        'Kubernetes Options': ['tokenReviewerJwt', 'pemKeys']
      }];

      if (this.newFields) {
        groups = (0, _openapiToAttrs.combineFieldGroups)(groups, this.newFields, []);
      }

      return (0, _fieldToAttrs.default)(this, groups);
    })
  });

  _exports.default = _default;
});
;define("vault/models/auth-config/ldap", ["exports", "@ember-data/model", "@ember/object", "vault/models/auth-config", "vault/utils/field-to-attrs", "vault/utils/openapi-to-attrs"], function (_exports, _model, _object, _authConfig, _fieldToAttrs, _openapiToAttrs) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"@ember/object",0,"vault/models/auth-config",0,"vault/utils/field-to-attrs",0,"vault/utils/openapi-to-attrs"eaimeta@70e063a35619d71f

  var _default = _authConfig.default.extend({
    useOpenAPI: true,
    certificate: (0, _model.attr)({
      label: 'Certificate',
      editType: 'file'
    }),
    fieldGroups: (0, _object.computed)('newFields', function () {
      let groups = [{
        default: ['url']
      }, {
        'LDAP Options': ['starttls', 'insecureTls', 'discoverdn', 'denyNullBind', 'tlsMinVersion', 'tlsMaxVersion', 'certificate', 'clientTlsCert', 'clientTlsKey', 'userattr', 'upndomain', 'anonymousGroupSearch']
      }, {
        'Customize User Search': ['binddn', 'userdn', 'bindpass', 'userfilter']
      }, {
        'Customize Group Membership Search': ['groupfilter', 'groupattr', 'groupdn', 'useTokenGroups']
      }];

      if (this.newFields) {
        groups = (0, _openapiToAttrs.combineFieldGroups)(groups, this.newFields, []);
      }

      return (0, _fieldToAttrs.default)(this, groups);
    })
  });

  _exports.default = _default;
});
;define("vault/models/auth-config/oidc", ["exports", "vault/models/auth-config/jwt"], function (_exports, _jwt) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _jwt.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"vault/models/auth-config/jwt"eaimeta@70e063a35619d71f
});
;define("vault/models/auth-config/radius", ["exports", "@ember-data/model", "@ember/object", "vault/models/auth-config", "vault/utils/openapi-to-attrs", "vault/utils/field-to-attrs"], function (_exports, _model, _object, _authConfig, _openapiToAttrs, _fieldToAttrs) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"@ember/object",0,"vault/models/auth-config",0,"vault/utils/openapi-to-attrs",0,"vault/utils/field-to-attrs"eaimeta@70e063a35619d71f

  var _default = _authConfig.default.extend({
    useOpenAPI: true,
    host: (0, _model.attr)('string'),
    secret: (0, _model.attr)('string'),
    fieldGroups: (0, _object.computed)('newFields', function () {
      let groups = [{
        default: ['host', 'secret']
      }, {
        'RADIUS Options': ['port', 'nasPort', 'nasIdentifier', 'dialTimeout', 'unregisteredUserPolicies']
      }];

      if (this.newFields) {
        groups = (0, _openapiToAttrs.combineFieldGroups)(groups, this.newFields, []);
      }

      return (0, _fieldToAttrs.default)(this, groups);
    })
  });

  _exports.default = _default;
});
;define("vault/models/auth-config/userpass", ["exports", "vault/models/auth-config"], function (_exports, _authConfig) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/models/auth-config"eaimeta@70e063a35619d71f

  var _default = _authConfig.default.extend({});

  _exports.default = _default;
});
;define("vault/models/auth-method", ["exports", "@ember-data/model", "@ember/object/computed", "@ember/object", "@ember/service", "vault/utils/field-to-attrs", "vault/utils/api-path", "vault/lib/attach-capabilities", "vault/decorators/model-validations"], function (_exports, _model, _computed, _object, _service, _fieldToAttrs, _apiPath, _attachCapabilities, _modelValidations) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _class;

  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"@ember/object/computed",0,"@ember/object",0,"@ember/service",0,"vault/utils/field-to-attrs",0,"vault/utils/api-path",0,"vault/lib/attach-capabilities",0,"vault/decorators/model-validations"eaimeta@70e063a35619d71f

  const validations = {
    path: [{
      type: 'presence',
      message: "Path can't be blank."
    }, {
      type: 'containsWhiteSpace',
      message: "Path contains whitespace. If this is desired, you'll need to encode it with %20 in API requests.",
      level: 'warn'
    }]
  }; // unsure if ember-api-actions will work on native JS class model
  // for now create class to use validations and then use classic extend pattern

  let AuthMethodModel = (_dec = (0, _modelValidations.withModelValidations)(validations), _dec(_class = class AuthMethodModel extends _model.default {}) || _class);
  const ModelExport = AuthMethodModel.extend({
    store: (0, _service.inject)(),
    config: (0, _model.belongsTo)('mount-config', {
      async: false,
      inverse: null
    }),
    // one-to-none that replaces former fragment
    authConfigs: (0, _model.hasMany)('auth-config', {
      polymorphic: true,
      inverse: 'backend',
      async: false
    }),
    path: (0, _model.attr)('string'),
    accessor: (0, _model.attr)('string'),
    name: (0, _model.attr)('string'),
    type: (0, _model.attr)('string'),
    // namespaces introduced types with a `ns_` prefix for built-in engines
    // so we need to strip that to normalize the type
    methodType: (0, _object.computed)('type', function () {
      return this.type.replace(/^ns_/, '');
    }),
    description: (0, _model.attr)('string', {
      editType: 'textarea'
    }),
    local: (0, _model.attr)('boolean', {
      helpText: 'When Replication is enabled, a local mount will not be replicated across clusters. This can only be specified at mount time.'
    }),
    sealWrap: (0, _model.attr)('boolean', {
      helpText: 'When enabled - if a seal supporting seal wrapping is specified in the configuration, all critical security parameters (CSPs) in this backend will be seal wrapped. (For K/V mounts, all values will be seal wrapped.) This can only be specified at mount time.'
    }),
    // used when the `auth` prefix is important,
    // currently only when setting perf mount filtering
    apiPath: (0, _object.computed)('path', function () {
      return `auth/${this.path}`;
    }),
    localDisplay: (0, _object.computed)('local', function () {
      return this.local ? 'local' : 'replicated';
    }),
    tuneAttrs: (0, _object.computed)('path', function () {
      const {
        methodType
      } = this;
      let tuneAttrs; // token_type should not be tuneable for the token auth method

      if (methodType === 'token') {
        tuneAttrs = ['description', 'config.{listingVisibility,defaultLeaseTtl,maxLeaseTtl,auditNonHmacRequestKeys,auditNonHmacResponseKeys,passthroughRequestHeaders}'];
      } else {
        tuneAttrs = ['description', 'config.{listingVisibility,defaultLeaseTtl,maxLeaseTtl,tokenType,auditNonHmacRequestKeys,auditNonHmacResponseKeys,passthroughRequestHeaders}'];
      }

      return (0, _fieldToAttrs.expandAttributeMeta)(this, tuneAttrs);
    }),
    formFields: (0, _object.computed)(function () {
      return ['type', 'path', 'description', 'accessor', 'local', 'sealWrap', 'config.{listingVisibility,defaultLeaseTtl,maxLeaseTtl,tokenType,auditNonHmacRequestKeys,auditNonHmacResponseKeys,passthroughRequestHeaders}'];
    }),
    formFieldGroups: (0, _object.computed)(function () {
      return [{
        default: ['path']
      }, {
        'Method Options': ['description', 'config.listingVisibility', 'local', 'sealWrap', 'config.{defaultLeaseTtl,maxLeaseTtl,tokenType,auditNonHmacRequestKeys,auditNonHmacResponseKeys,passthroughRequestHeaders}']
      }];
    }),
    attrs: (0, _object.computed)('formFields', function () {
      return (0, _fieldToAttrs.expandAttributeMeta)(this, this.formFields);
    }),
    fieldGroups: (0, _object.computed)('formFieldGroups', function () {
      return (0, _fieldToAttrs.default)(this, this.formFieldGroups);
    }),
    canDisable: (0, _computed.alias)('deletePath.canDelete'),
    canEdit: (0, _computed.alias)('configPath.canUpdate'),

    tune(data) {
      return this.store.adapterFor('auth-method').tune(this.path, data);
    }

  });

  var _default = (0, _attachCapabilities.default)(ModelExport, {
    deletePath: (0, _apiPath.default)`sys/auth/${'id'}`,
    configPath: function (context) {
      if (context.type === 'aws') {
        return (0, _apiPath.default)`auth/${'id'}/config/client`.call(this, context);
      } else {
        return (0, _apiPath.default)`auth/${'id'}/config`.call(this, context);
      }
    }
  });

  _exports.default = _default;
});
;define("vault/models/aws-credential", ["exports", "@ember-data/model", "@ember/object", "vault/utils/field-to-attrs"], function (_exports, _model, _object, _fieldToAttrs) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"@ember/object",0,"vault/utils/field-to-attrs"eaimeta@70e063a35619d71f

  const CREDENTIAL_TYPES = [{
    value: 'iam_user',
    displayName: 'IAM User'
  }, {
    value: 'assumed_role',
    displayName: 'Assumed Role'
  }, {
    value: 'federation_token',
    displayName: 'Federation Token'
  }];
  const DISPLAY_FIELDS = ['accessKey', 'secretKey', 'securityToken', 'leaseId', 'renewable', 'leaseDuration'];

  var _default = _model.default.extend({
    helpText: 'For OpenBao roles of credential type iam_user, there are no inputs, just submit the form. Choose a type to change the input options.',
    role: (0, _model.attr)('object', {
      readOnly: true
    }),
    credentialType: (0, _model.attr)('string', {
      defaultValue: 'iam_user',
      possibleValues: CREDENTIAL_TYPES,
      readOnly: true
    }),
    roleArn: (0, _model.attr)('string', {
      label: 'Role ARN',
      helpText: 'The ARN of the role to assume if credential_type on the OpenBao role is assumed_role. Optional if the role has a single role ARN; required otherwise.'
    }),
    ttl: (0, _model.attr)({
      editType: 'ttl',
      defaultValue: '3600s',
      setDefault: true,
      label: 'TTL',
      helpText: 'Specifies the TTL for the use of the STS token. Valid only when credential_type is assumed_role or federation_token.'
    }),
    leaseId: (0, _model.attr)('string'),
    renewable: (0, _model.attr)('boolean'),
    leaseDuration: (0, _model.attr)('number'),
    accessKey: (0, _model.attr)('string'),
    secretKey: (0, _model.attr)('string'),
    securityToken: (0, _model.attr)('string'),
    attrs: (0, _object.computed)('credentialType', 'accessKey', 'securityToken', function () {
      const type = this.credentialType;
      const fieldsForType = {
        iam_user: ['credentialType'],
        assumed_role: ['credentialType', 'ttl', 'roleArn'],
        federation_token: ['credentialType', 'ttl']
      };

      if (this.accessKey || this.securityToken) {
        return (0, _fieldToAttrs.expandAttributeMeta)(this, DISPLAY_FIELDS.slice(0));
      }

      return (0, _fieldToAttrs.expandAttributeMeta)(this, fieldsForType[type].slice(0));
    }),
    toCreds: (0, _object.computed)('accessKey', 'secretKey', 'securityToken', 'leaseId', function () {
      const props = {
        accessKey: this.accessKey,
        secretKey: this.secretKey,
        securityToken: this.securityToken,
        leaseId: this.leaseId
      };
      const propsWithVals = Object.keys(props).reduce((ret, prop) => {
        if (props[prop]) {
          ret[prop] = props[prop];
          return ret;
        }

        return ret;
      }, {});
      return JSON.stringify(propsWithVals, null, 2);
    })
  });

  _exports.default = _default;
});
;define("vault/models/capabilities", ["exports", "@ember-data/model", "@ember/object"], function (_exports, _model, _object) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = _exports.SUDO_PATH_PREFIXES = _exports.SUDO_PATHS = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"@ember/object"eaimeta@70e063a35619d71f

  const SUDO_PATHS = ['sys/seal', 'sys/leases/lookup/'];
  _exports.SUDO_PATHS = SUDO_PATHS;
  const SUDO_PATH_PREFIXES = ['sys/leases/revoke-prefix', 'sys/leases/revoke-force'];
  _exports.SUDO_PATH_PREFIXES = SUDO_PATH_PREFIXES;

  const computedCapability = function (capability) {
    return (0, _object.computed)('path', 'capabilities', 'capabilities.[]', function () {
      const capabilities = this.capabilities;
      const path = this.path;

      if (!capabilities) {
        return false;
      }

      if (capabilities.includes('root')) {
        return true;
      }

      if (capabilities.includes('deny')) {
        return false;
      } // if the path is sudo protected, they'll need sudo + the appropriate capability


      if (SUDO_PATHS.includes(path) || SUDO_PATH_PREFIXES.find(item => path.startsWith(item))) {
        return capabilities.includes('sudo') && capabilities.includes(capability);
      }

      return capabilities.includes(capability);
    });
  };

  var _default = _model.default.extend({
    path: (0, _model.attr)('string'),
    capabilities: (0, _model.attr)('array'),
    canSudo: computedCapability('sudo'),
    canRead: computedCapability('read'),
    canCreate: computedCapability('create'),
    canUpdate: computedCapability('update'),
    canDelete: computedCapability('delete'),
    canList: computedCapability('list'),
    allowedParameters: (0, _model.attr)(),
    deniedParameters: (0, _model.attr)()
  });

  _exports.default = _default;
});
;define("vault/models/cluster", ["exports", "@ember-data/model", "@ember/service", "@ember/object/computed", "@ember/object"], function (_exports, _model, _service, _computed, _object) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"@ember/service",0,"@ember/object/computed",0,"@ember/object"eaimeta@70e063a35619d71f

  var _default = _model.default.extend({
    version: (0, _service.inject)(),
    nodes: (0, _model.hasMany)('nodes', {
      async: false
    }),
    name: (0, _model.attr)('string'),
    status: (0, _model.attr)('string'),
    standby: (0, _model.attr)('boolean'),
    type: (0, _model.attr)('string'),
    license: (0, _model.attr)('object'),
    needsInit: (0, _object.computed)('nodes', 'nodes.@each.initialized', function () {
      // needs init if no nodes are initialized
      return this.nodes.isEvery('initialized', false);
    }),
    unsealed: (0, _object.computed)('nodes', 'nodes.{[],@each.sealed}', function () {
      // unsealed if there's at least one unsealed node
      return !!this.nodes.findBy('sealed', false);
    }),
    sealed: (0, _computed.not)('unsealed'),
    leaderNode: (0, _object.computed)('nodes', 'nodes.[]', function () {
      const nodes = this.nodes;

      if (nodes.get('length') === 1) {
        return nodes.get('firstObject');
      } else {
        return nodes.findBy('isLeader');
      }
    }),
    sealThreshold: (0, _computed.alias)('leaderNode.sealThreshold'),
    sealProgress: (0, _computed.alias)('leaderNode.progress'),
    sealType: (0, _computed.alias)('leaderNode.type'),
    storageType: (0, _computed.alias)('leaderNode.storageType'),
    hasProgress: (0, _computed.gte)('sealProgress', 1),
    usingRaft: (0, _computed.equal)('storageType', 'raft'),
    //replication mode - will only ever be 'unsupported'
    //otherwise the particular mode will have the relevant mode attr through replication-attributes
    mode: (0, _model.attr)('string')
  });

  _exports.default = _default;
});
;define("vault/models/control-group-config", ["exports", "@ember-data/model", "@ember/object/computed", "@ember/object", "vault/macros/lazy-capabilities", "vault/utils/field-to-attrs"], function (_exports, _model, _computed, _object, _lazyCapabilities, _fieldToAttrs) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"@ember/object/computed",0,"@ember/object",0,"vault/macros/lazy-capabilities",0,"vault/utils/field-to-attrs"eaimeta@70e063a35619d71f

  var _default = _model.default.extend({
    fields: (0, _object.computed)(function () {
      return (0, _fieldToAttrs.expandAttributeMeta)(this, ['maxTtl']);
    }),
    configurePath: (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`sys/config/control-group`),
    canDelete: (0, _computed.alias)('configurePath.canDelete'),
    maxTtl: (0, _model.attr)({
      defaultValue: 0,
      editType: 'ttl',
      label: 'Maximum TTL'
    })
  });

  _exports.default = _default;
});
;define("vault/models/control-group", ["exports", "@ember-data/model", "@ember/object/computed", "vault/macros/lazy-capabilities"], function (_exports, _model, _computed, _lazyCapabilities) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"@ember/object/computed",0,"vault/macros/lazy-capabilities"eaimeta@70e063a35619d71f

  var _default = _model.default.extend({
    approved: (0, _model.attr)('boolean'),
    requestPath: (0, _model.attr)('string'),
    requestEntity: (0, _model.belongsTo)('identity/entity', {
      async: false
    }),
    authorizations: (0, _model.hasMany)('identity/entity', {
      async: false
    }),
    authorizePath: (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`sys/control-group/authorize`),
    canAuthorize: (0, _computed.alias)('authorizePath.canUpdate'),
    configurePath: (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`sys/config/control-group`),
    canConfigure: (0, _computed.alias)('configurePath.canUpdate')
  });

  _exports.default = _default;
});
;define("vault/models/database/connection", ["exports", "@ember-data/model", "@ember/object", "@ember/object/computed", "vault/macros/lazy-capabilities", "vault/utils/field-to-attrs", "vault/utils/database-helpers"], function (_exports, _model, _object, _computed, _lazyCapabilities, _fieldToAttrs, _databaseHelpers) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"@ember/object",0,"@ember/object/computed",0,"vault/macros/lazy-capabilities",0,"vault/utils/field-to-attrs",0,"vault/utils/database-helpers"eaimeta@70e063a35619d71f

  /**
   * fieldsToGroups helper fn
   * @param {array} arr any subset of "fields" from AVAILABLE_PLUGIN_TYPES
   * @param {*} key item by which to group the fields. If item has no group it will be under "default"
   * @returns array of objects where the key is default or the name of the option group, and the value is an array of attr names
   */
  const fieldsToGroups = function (arr) {
    let key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'subgroup';
    const fieldGroups = [];
    const byGroup = arr.reduce(function (rv, x) {
      (rv[x[key]] = rv[x[key]] || []).push(x);
      return rv;
    }, {});
    Object.keys(byGroup).forEach(key => {
      const attrsArray = byGroup[key].map(obj => obj.attr);
      const group = key === 'undefined' ? 'default' : key;
      fieldGroups.push({
        [group]: attrsArray
      });
    });
    return fieldGroups;
  };

  var _default = _model.default.extend({
    backend: (0, _model.attr)('string', {
      readOnly: true
    }),
    // required
    name: (0, _model.attr)('string', {
      label: 'Connection name'
    }),
    plugin_name: (0, _model.attr)('string', {
      label: 'Database plugin',
      possibleValues: _databaseHelpers.AVAILABLE_PLUGIN_TYPES,
      noDefault: true
    }),
    // standard
    verify_connection: (0, _model.attr)('boolean', {
      label: 'Connection will be verified',
      defaultValue: true
    }),
    allowed_roles: (0, _model.attr)('array', {
      readOnly: true
    }),
    password_policy: (0, _model.attr)('string', {
      label: 'Use custom password policy',
      editType: 'optionalText',
      subText: 'Specify the name of an existing password policy.',
      defaultSubText: 'Unless a custom policy is specified, OpenBao will use a default: 20 characters with at least 1 uppercase, 1 lowercase, 1 number, and 1 dash character.',
      defaultShown: 'Default',
      docLink: '/docs/concepts/password-policies'
    }),
    // common fields
    connection_url: (0, _model.attr)('string', {
      label: 'Connection URL',
      subText: 'The connection string used to connect to the database. This allows for simple templating of username and password of the root user in the {{field_name}} format.'
    }),
    url: (0, _model.attr)('string', {
      label: 'URL',
      subText: `The URL for Elasticsearch's API ("https://localhost:9200").`
    }),
    username: (0, _model.attr)('string', {
      subText: `The name of the user to use as the "root" user when connecting to the database.`
    }),
    password: (0, _model.attr)('string', {
      subText: 'The password to use when connecting with the above username.',
      editType: 'password'
    }),
    // optional
    ca_cert: (0, _model.attr)('string', {
      label: 'CA certificate',
      subText: `The path to a PEM-encoded CA cert file to use to verify the Elasticsearch server's identity.`
    }),
    ca_path: (0, _model.attr)('string', {
      label: 'CA path',
      subText: `The path to a directory of PEM-encoded CA cert files to use to verify the Elasticsearch server's identity.`
    }),
    client_cert: (0, _model.attr)('string', {
      label: 'Client certificate',
      subText: 'The path to the certificate for the Elasticsearch client to present for communication.'
    }),
    client_key: (0, _model.attr)('string', {
      subText: 'The path to the key for the Elasticsearch client to use for communication.'
    }),
    hosts: (0, _model.attr)('string', {}),
    host: (0, _model.attr)('string', {}),
    port: (0, _model.attr)('string', {}),
    write_concern: (0, _model.attr)('string', {
      subText: 'Optional. Must be in JSON. See our documentation for help.',
      allowReset: true,
      editType: 'json',
      theme: 'hashi short',
      defaultShown: 'Default'
    }),
    username_template: (0, _model.attr)('string', {
      editType: 'optionalText',
      subText: 'Enter the custom username template to use.',
      defaultSubText: 'Template describing how dynamic usernames are generated. OpenBao will use the default for this plugin.',
      docLink: '/docs/concepts/username-templating',
      defaultShown: 'Default'
    }),
    max_open_connections: (0, _model.attr)('number', {
      defaultValue: 4
    }),
    max_idle_connections: (0, _model.attr)('number', {
      defaultValue: 0
    }),
    max_connection_lifetime: (0, _model.attr)('string', {
      defaultValue: '0s'
    }),
    insecure: (0, _model.attr)('boolean', {
      label: 'Disable SSL verification',
      defaultValue: false
    }),
    tls: (0, _model.attr)('string', {
      label: 'TLS Certificate Key',
      helpText: 'x509 certificate for connecting to the database. This must be a PEM encoded version of the private key and the certificate combined.',
      editType: 'file'
    }),
    tls_ca: (0, _model.attr)('string', {
      label: 'TLS CA',
      helpText: 'x509 CA file for validating the certificate presented by the MongoDB server. Must be PEM encoded.',
      editType: 'file'
    }),
    tls_server_name: (0, _model.attr)('string', {
      label: 'TLS server name',
      subText: 'If set, this name is used to set the SNI host when connecting via 1TLS.'
    }),
    root_rotation_statements: (0, _model.attr)({
      subText: `The database statements to be executed to rotate the root user's credentials. If nothing is entered, OpenBao will use a reasonable default.`,
      editType: 'stringArray',
      defaultShown: 'Default'
    }),
    isAvailablePlugin: (0, _object.computed)('plugin_name', function () {
      return !!_databaseHelpers.AVAILABLE_PLUGIN_TYPES.find(a => a.value === this.plugin_name);
    }),
    showAttrs: (0, _object.computed)('plugin_name', function () {
      const fields = _databaseHelpers.AVAILABLE_PLUGIN_TYPES.find(a => a.value === this.plugin_name).fields.filter(f => f.show !== false).map(f => f.attr);

      fields.push('allowed_roles');
      return (0, _fieldToAttrs.expandAttributeMeta)(this, fields);
    }),
    fieldAttrs: (0, _object.computed)('plugin_name', function () {
      // for both create and edit fields
      let fields = ['plugin_name', 'name', 'connection_url', 'verify_connection', 'password_policy'];

      if (this.plugin_name) {
        fields = _databaseHelpers.AVAILABLE_PLUGIN_TYPES.find(a => a.value === this.plugin_name).fields.filter(f => !f.group).map(field => field.attr);
      }

      return (0, _fieldToAttrs.expandAttributeMeta)(this, fields);
    }),
    pluginFieldGroups: (0, _object.computed)('plugin_name', function () {
      if (!this.plugin_name) {
        return null;
      }

      const pluginFields = _databaseHelpers.AVAILABLE_PLUGIN_TYPES.find(a => a.value === this.plugin_name).fields.filter(f => f.group === 'pluginConfig');

      const groups = fieldsToGroups(pluginFields, 'subgroup');
      return (0, _fieldToAttrs.default)(this, groups);
    }),
    statementFields: (0, _object.computed)('plugin_name', function () {
      if (!this.plugin_name) {
        return (0, _fieldToAttrs.expandAttributeMeta)(this, ['root_rotation_statements']);
      }

      const fields = _databaseHelpers.AVAILABLE_PLUGIN_TYPES.find(a => a.value === this.plugin_name).fields.filter(f => f.group === 'statements').map(field => field.attr);

      return (0, _fieldToAttrs.expandAttributeMeta)(this, fields);
    }),

    /* CAPABILITIES */
    editConnectionPath: (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'backend'}/config/${'id'}`, 'backend', 'id'),
    canEdit: (0, _computed.alias)('editConnectionPath.canUpdate'),
    canDelete: (0, _computed.alias)('editConnectionPath.canDelete'),
    resetConnectionPath: (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'backend'}/reset/${'id'}`, 'backend', 'id'),
    canReset: (0, _computed.or)('resetConnectionPath.canUpdate', 'resetConnectionPath.canCreate'),
    rotateRootPath: (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'backend'}/rotate-root/${'id'}`, 'backend', 'id'),
    canRotateRoot: (0, _computed.or)('rotateRootPath.canUpdate', 'rotateRootPath.canCreate'),
    rolePath: (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'backend'}/role/*`, 'backend'),
    staticRolePath: (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'backend'}/static-role/*`, 'backend'),
    canAddRole: (0, _computed.or)('rolePath.canCreate', 'staticRolePath.canCreate')
  });

  _exports.default = _default;
});
;define("vault/models/database/credential", ["exports", "@ember-data/model"], function (_exports, _model) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/model"eaimeta@70e063a35619d71f

  var _default = _model.default.extend({
    username: (0, _model.attr)('string'),
    password: (0, _model.attr)('string'),
    leaseId: (0, _model.attr)('string'),
    leaseDuration: (0, _model.attr)('string'),
    lastVaultRotation: (0, _model.attr)('string'),
    rotationPeriod: (0, _model.attr)('number'),
    ttl: (0, _model.attr)('number'),
    roleType: (0, _model.attr)('string')
  });

  _exports.default = _default;
});
;define("vault/models/database/role", ["exports", "@ember-data/model", "@ember/object", "@ember/object/computed", "vault/macros/lazy-capabilities", "vault/utils/field-to-attrs", "vault/utils/database-helpers"], function (_exports, _model, _object, _computed, _lazyCapabilities, _fieldToAttrs, _databaseHelpers) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"@ember/object",0,"@ember/object/computed",0,"vault/macros/lazy-capabilities",0,"vault/utils/field-to-attrs",0,"vault/utils/database-helpers"eaimeta@70e063a35619d71f

  var _default = _model.default.extend({
    idPrefix: 'role/',
    backend: (0, _model.attr)('string', {
      readOnly: true
    }),
    name: (0, _model.attr)('string', {
      label: 'Role name'
    }),
    database: (0, _model.attr)('array', {
      label: 'Connection name',
      editType: 'searchSelect',
      fallbackComponent: 'string-list',
      models: ['database/connection'],
      selectLimit: 1,
      onlyAllowExisting: true,
      subText: 'The database connection for which credentials will be generated.'
    }),
    type: (0, _model.attr)('string', {
      label: 'Type of role',
      noDefault: true,
      possibleValues: ['static', 'dynamic']
    }),
    default_ttl: (0, _model.attr)({
      editType: 'ttl',
      defaultValue: '1h',
      label: 'Generated credentials’s Time-to-Live (TTL)',
      helperTextDisabled: 'OpenBao will use a TTL of 1 hour.',
      defaultShown: 'Engine default'
    }),
    max_ttl: (0, _model.attr)({
      editType: 'ttl',
      defaultValue: '24h',
      label: 'Generated credentials’s maximum Time-to-Live (Max TTL)',
      helperTextDisabled: 'OpenBao will use a TTL of 24 hours.',
      defaultShown: 'Engine default'
    }),
    username: (0, _model.attr)('string', {
      subText: 'The database username that this OpenBao role corresponds to.'
    }),
    rotation_period: (0, _model.attr)({
      editType: 'ttl',
      defaultValue: '24h',
      helperTextDisabled: 'Specifies the amount of time OpenBao should wait before rotating the password. The minimum is 5 seconds. Default is 24 hours.',
      helperTextEnabled: 'OpenBao will rotate password after'
    }),
    creation_statements: (0, _model.attr)('array', {
      editType: 'stringArray'
    }),
    revocation_statements: (0, _model.attr)('array', {
      editType: 'stringArray',
      defaultShown: 'Default'
    }),
    rotation_statements: (0, _model.attr)('array', {
      editType: 'stringArray',
      defaultShown: 'Default'
    }),
    rollback_statements: (0, _model.attr)('array', {
      editType: 'stringArray',
      defaultShown: 'Default'
    }),
    renew_statements: (0, _model.attr)('array', {
      editType: 'stringArray',
      defaultShown: 'Default'
    }),
    creation_statement: (0, _model.attr)('string', {
      editType: 'json',
      allowReset: true,
      theme: 'hashi short',
      defaultShown: 'Default'
    }),
    revocation_statement: (0, _model.attr)('string', {
      editType: 'json',
      allowReset: true,
      theme: 'hashi short',
      defaultShown: 'Default'
    }),

    /* FIELD ATTRIBUTES */
    get fieldAttrs() {
      // Main fields on edit/create form
      const fields = ['name', 'database', 'type'];
      return (0, _fieldToAttrs.expandAttributeMeta)(this, fields);
    },

    get showFields() {
      let fields = ['name', 'database', 'type'];
      fields = fields.concat((0, _databaseHelpers.getRoleFields)(this.type)).concat(['creation_statements']); // elasticsearch does not support revocation statements: https://www.vaultproject.io/api-docs/secret/databases/elasticdb#parameters-1

      if (this.database[0] !== 'elasticsearch') {
        fields = fields.concat(['revocation_statements']);
      }

      return (0, _fieldToAttrs.expandAttributeMeta)(this, fields);
    },

    roleSettingAttrs: (0, _object.computed)(function () {
      // logic for which get displayed is on DatabaseRoleSettingForm
      const allRoleSettingFields = ['default_ttl', 'max_ttl', 'username', 'rotation_period', 'creation_statements', 'creation_statement', // for editType: JSON
      'revocation_statements', 'revocation_statement', // only for MongoDB (editType: JSON)
      'rotation_statements', 'rollback_statements', 'renew_statements'];
      return (0, _fieldToAttrs.expandAttributeMeta)(this, allRoleSettingFields);
    }),

    /* CAPABILITIES */
    // only used for secretPath
    path: (0, _model.attr)('string', {
      readOnly: true
    }),
    secretPath: (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'backend'}/${'path'}/${'id'}`, 'backend', 'path', 'id'),
    canEditRole: (0, _computed.alias)('secretPath.canUpdate'),
    canDelete: (0, _computed.alias)('secretPath.canDelete'),
    dynamicPath: (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'backend'}/roles/+`, 'backend'),
    canCreateDynamic: (0, _computed.alias)('dynamicPath.canCreate'),
    staticPath: (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'backend'}/static-roles/+`, 'backend'),
    canCreateStatic: (0, _computed.alias)('staticPath.canCreate'),
    credentialPath: (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'backend'}/creds/${'id'}`, 'backend', 'id'),
    staticCredentialPath: (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'backend'}/static-creds/${'id'}`, 'backend', 'id'),
    canGenerateCredentials: (0, _computed.alias)('credentialPath.canRead'),
    canGetCredentials: (0, _computed.alias)('staticCredentialPath.canRead'),
    databasePath: (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'backend'}/config/${'database[0]'}`, 'backend', 'database'),
    canUpdateDb: (0, _computed.alias)('databasePath.canUpdate'),
    rotateRolePath: (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'backend'}/rotate-role/${'id'}`, 'backend', 'id'),
    canRotateRoleCredentials: (0, _computed.alias)('rotateRolePath.canUpdate')
  });

  _exports.default = _default;
});
;define("vault/models/identity/_base", ["exports", "@ember-data/model", "@ember/debug", "@ember/object", "vault/utils/field-to-attrs"], function (_exports, _model, _debug, _object, _fieldToAttrs) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"@ember/debug",0,"@ember/object",0,"vault/utils/field-to-attrs"eaimeta@70e063a35619d71f

  var _default = _model.default.extend({
    formFields: (0, _object.computed)(function () {
      return (0, _debug.assert)('formFields should be overridden', false);
    }),
    fields: (0, _object.computed)('formFields', 'formFields.[]', function () {
      return (0, _fieldToAttrs.expandAttributeMeta)(this, this.formFields);
    }),
    identityType: (0, _object.computed)('constructor.modelName', function () {
      const modelType = this.constructor.modelName.split('/')[1];
      return modelType;
    })
  });

  _exports.default = _default;
});
;define("vault/models/identity/entity-alias", ["exports", "@ember-data/model", "@ember/object", "@ember/object/computed", "vault/models/identity/_base", "vault/macros/identity-capabilities"], function (_exports, _model, _object, _computed, _base, _identityCapabilities) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"@ember/object",0,"@ember/object/computed",0,"vault/models/identity/_base",0,"vault/macros/identity-capabilities"eaimeta@70e063a35619d71f

  var _default = _base.default.extend({
    parentType: 'entity',
    formFields: (0, _object.computed)(function () {
      return ['name', 'mountAccessor'];
    }),
    entity: (0, _model.belongsTo)('identity/entity', {
      readOnly: true,
      async: false
    }),
    name: (0, _model.attr)('string'),
    canonicalId: (0, _model.attr)('string'),
    mountAccessor: (0, _model.attr)('string', {
      label: 'Auth Backend',
      editType: 'mountAccessor'
    }),
    metadata: (0, _model.attr)({
      editType: 'kv'
    }),
    mountPath: (0, _model.attr)('string', {
      readOnly: true
    }),
    mountType: (0, _model.attr)('string', {
      readOnly: true
    }),
    creationTime: (0, _model.attr)('string', {
      readOnly: true
    }),
    lastUpdateTime: (0, _model.attr)('string', {
      readOnly: true
    }),
    mergedFromCanonicalIds: (0, _model.attr)(),
    updatePath: (0, _identityCapabilities.default)(),
    canDelete: (0, _computed.alias)('updatePath.canDelete'),
    canEdit: (0, _computed.alias)('updatePath.canUpdate')
  });

  _exports.default = _default;
});
;define("vault/models/identity/entity-merge", ["exports", "@ember-data/model", "@ember/object", "vault/models/identity/_base"], function (_exports, _model, _object, _base) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"@ember/object",0,"vault/models/identity/_base"eaimeta@70e063a35619d71f

  var _default = _base.default.extend({
    formFields: (0, _object.computed)(function () {
      return ['toEntityId', 'fromEntityIds', 'force'];
    }),
    toEntityId: (0, _model.attr)('string', {
      label: 'Entity to merge to'
    }),
    fromEntityIds: (0, _model.attr)({
      label: 'Entities to merge from',
      editType: 'stringArray'
    }),
    force: (0, _model.attr)('boolean', {
      label: 'Keep MFA secrets from the "to" entity if there are merge conflicts',
      defaultValue: false
    })
  });

  _exports.default = _default;
});
;define("vault/models/identity/entity", ["exports", "@ember-data/model", "@ember/object", "@ember/object/computed", "vault/models/identity/_base", "vault/utils/api-path", "vault/lib/attach-capabilities", "vault/macros/lazy-capabilities"], function (_exports, _model, _object, _computed, _base, _apiPath, _attachCapabilities, _lazyCapabilities) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"@ember/object",0,"@ember/object/computed",0,"vault/models/identity/_base",0,"vault/utils/api-path",0,"vault/lib/attach-capabilities",0,"vault/macros/lazy-capabilities"eaimeta@70e063a35619d71f

  const Model = _base.default.extend({
    formFields: (0, _object.computed)(function () {
      return ['name', 'disabled', 'policies', 'metadata'];
    }),
    name: (0, _model.attr)('string'),
    disabled: (0, _model.attr)('boolean', {
      defaultValue: false,
      label: 'Disable entity',
      helpText: 'All associated tokens cannot be used, but are not revoked.'
    }),
    mergedEntityIds: (0, _model.attr)(),
    metadata: (0, _model.attr)({
      editType: 'kv'
    }),
    policies: (0, _model.attr)({
      editType: 'yield',
      isSectionHeader: true
    }),
    creationTime: (0, _model.attr)('string', {
      readOnly: true
    }),
    lastUpdateTime: (0, _model.attr)('string', {
      readOnly: true
    }),
    aliases: (0, _model.hasMany)('identity/entity-alias', {
      async: false,
      readOnly: true
    }),
    groupIds: (0, _model.attr)({
      readOnly: true
    }),
    directGroupIds: (0, _model.attr)({
      readOnly: true
    }),
    inheritedGroupIds: (0, _model.attr)({
      readOnly: true
    }),
    canDelete: (0, _computed.alias)('updatePath.canDelete'),
    canEdit: (0, _computed.alias)('updatePath.canUpdate'),
    canRead: (0, _computed.alias)('updatePath.canRead'),
    canAddAlias: (0, _computed.alias)('aliasPath.canCreate'),
    policyPath: (0, _lazyCapabilities.default)((0, _apiPath.default)`sys/policies`),
    canCreatePolicies: (0, _computed.alias)('policyPath.canCreate')
  });

  var _default = (0, _attachCapabilities.default)(Model, {
    updatePath: (0, _apiPath.default)`identity/entity/id/${'id'}`,
    aliasPath: (0, _apiPath.default)`identity/entity-alias`
  });

  _exports.default = _default;
});
;define("vault/models/identity/group-alias", ["exports", "@ember-data/model", "@ember/object", "@ember/object/computed", "vault/models/identity/_base", "vault/macros/identity-capabilities"], function (_exports, _model, _object, _computed, _base, _identityCapabilities) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"@ember/object",0,"@ember/object/computed",0,"vault/models/identity/_base",0,"vault/macros/identity-capabilities"eaimeta@70e063a35619d71f

  var _default = _base.default.extend({
    parentType: 'group',
    formFields: (0, _object.computed)(function () {
      return ['name', 'mountAccessor'];
    }),
    group: (0, _model.belongsTo)('identity/group', {
      readOnly: true,
      async: false
    }),
    name: (0, _model.attr)('string'),
    canonicalId: (0, _model.attr)('string'),
    mountPath: (0, _model.attr)('string', {
      readOnly: true
    }),
    mountType: (0, _model.attr)('string', {
      readOnly: true
    }),
    mountAccessor: (0, _model.attr)('string', {
      label: 'Auth Backend',
      editType: 'mountAccessor'
    }),
    creationTime: (0, _model.attr)('string', {
      readOnly: true
    }),
    lastUpdateTime: (0, _model.attr)('string', {
      readOnly: true
    }),
    updatePath: (0, _identityCapabilities.default)(),
    canDelete: (0, _computed.alias)('updatePath.canDelete'),
    canEdit: (0, _computed.alias)('updatePath.canUpdate')
  });

  _exports.default = _default;
});
;define("vault/models/identity/group", ["exports", "@ember-data/model", "@ember/object/computed", "@ember/object", "vault/models/identity/_base", "vault/macros/lazy-capabilities", "vault/macros/identity-capabilities"], function (_exports, _model, _computed, _object, _base, _lazyCapabilities, _identityCapabilities) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"@ember/object/computed",0,"@ember/object",0,"vault/models/identity/_base",0,"vault/macros/lazy-capabilities",0,"vault/macros/identity-capabilities"eaimeta@70e063a35619d71f

  var _default = _base.default.extend({
    formFields: (0, _object.computed)('type', function () {
      const fields = ['name', 'type', 'policies', 'metadata'];

      if (this.type === 'internal') {
        return fields.concat(['memberGroupIds', 'memberEntityIds']);
      }

      return fields;
    }),
    name: (0, _model.attr)('string'),
    type: (0, _model.attr)('string', {
      defaultValue: 'internal',
      possibleValues: ['internal', 'external']
    }),
    creationTime: (0, _model.attr)('string', {
      readOnly: true
    }),
    lastUpdateTime: (0, _model.attr)('string', {
      readOnly: true
    }),
    numMemberEntities: (0, _model.attr)('number', {
      readOnly: true
    }),
    numParentGroups: (0, _model.attr)('number', {
      readOnly: true
    }),
    metadata: (0, _model.attr)('object', {
      editType: 'kv'
    }),
    policies: (0, _model.attr)({
      editType: 'yield',
      isSectionHeader: true
    }),
    memberGroupIds: (0, _model.attr)({
      label: 'Member Group IDs',
      editType: 'searchSelect',
      isSectionHeader: true,
      fallbackComponent: 'string-list',
      models: ['identity/group']
    }),
    parentGroupIds: (0, _model.attr)({
      label: 'Parent Group IDs',
      editType: 'searchSelect',
      isSectionHeader: true,
      fallbackComponent: 'string-list',
      models: ['identity/group']
    }),
    memberEntityIds: (0, _model.attr)({
      label: 'Member Entity IDs',
      editType: 'searchSelect',
      isSectionHeader: true,
      fallbackComponent: 'string-list',
      models: ['identity/entity']
    }),
    hasMembers: (0, _object.computed)('memberEntityIds', 'memberEntityIds.[]', 'memberGroupIds', 'memberGroupIds.[]', function () {
      const {
        memberEntityIds,
        memberGroupIds
      } = this;
      const numEntities = memberEntityIds && memberEntityIds.length || 0;
      const numGroups = memberGroupIds && memberGroupIds.length || 0;
      return numEntities + numGroups > 0;
    }),
    policyPath: (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`sys/policies`),
    canCreatePolicies: (0, _computed.alias)('policyPath.canCreate'),
    alias: (0, _model.belongsTo)('identity/group-alias', {
      async: false,
      readOnly: true
    }),
    updatePath: (0, _identityCapabilities.default)(),
    canDelete: (0, _computed.alias)('updatePath.canDelete'),
    canEdit: (0, _computed.alias)('updatePath.canUpdate'),
    aliasPath: (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`identity/group-alias`),
    canAddAlias: (0, _object.computed)('aliasPath.canCreate', 'type', 'alias', function () {
      const type = this.type;
      const alias = this.alias; // internal groups can't have aliases, and external groups can only have one

      if (type === 'internal' || alias) {
        return false;
      }

      return this.aliasPath.canCreate;
    })
  });

  _exports.default = _default;
});
;define("vault/models/keymgmt/key", ["exports", "@ember-data/model", "vault/utils/field-to-attrs", "vault/macros/lazy-capabilities"], function (_exports, _model, _fieldToAttrs, _lazyCapabilities) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = _exports.KEY_TYPES = void 0;

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _dec12, _dec13, _dec14, _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14;

  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"vault/utils/field-to-attrs",0,"vault/macros/lazy-capabilities"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  const KEY_TYPES = ['aes256-gcm96', 'rsa-2048', 'rsa-3072', 'rsa-4096', 'ecdsa-p256', 'ecdsa-p384', 'ecdsa-p521'];
  _exports.KEY_TYPES = KEY_TYPES;
  let KeymgmtKeyModel = (_dec = (0, _model.attr)('string', {
    label: 'Key name',
    subText: 'This is the name of the key that shows in OpenBao.'
  }), _dec2 = (0, _model.attr)('string'), _dec3 = (0, _model.attr)('string', {
    subText: 'The type of cryptographic key that will be created.',
    possibleValues: KEY_TYPES,
    defaultValue: 'rsa-2048'
  }), _dec4 = (0, _model.attr)('boolean', {
    label: 'Allow deletion',
    defaultValue: false
  }), _dec5 = (0, _model.attr)('number', {
    label: 'Current version'
  }), _dec6 = (0, _model.attr)('number', {
    defaultValue: 0,
    defaultShown: 'All versions enabled'
  }), _dec7 = (0, _model.attr)('array'), _dec8 = (0, _model.attr)('date'), _dec9 = (0, _model.attr)('date', {
    defaultShown: 'Not yet rotated'
  }), _dec10 = (0, _model.attr)(), _dec11 = (0, _model.attr)(), _dec12 = (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'backend'}/key/${'id'}`, 'backend', 'id'), _dec13 = (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'backend'}/key`, 'backend'), _dec14 = (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'backend'}/key/${'id'}/kms`, 'backend', 'id'), (_class = class KeymgmtKeyModel extends _model.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "name", _descriptor, this);

      _initializerDefineProperty(this, "backend", _descriptor2, this);

      _initializerDefineProperty(this, "type", _descriptor3, this);

      _initializerDefineProperty(this, "deletionAllowed", _descriptor4, this);

      _initializerDefineProperty(this, "latestVersion", _descriptor5, this);

      _initializerDefineProperty(this, "minEnabledVersion", _descriptor6, this);

      _initializerDefineProperty(this, "versions", _descriptor7, this);

      _initializerDefineProperty(this, "created", _descriptor8, this);

      _initializerDefineProperty(this, "lastRotated", _descriptor9, this);

      _initializerDefineProperty(this, "provider", _descriptor10, this);

      _initializerDefineProperty(this, "distribution", _descriptor11, this);

      _defineProperty(this, "icon", 'key');

      _initializerDefineProperty(this, "keyPath", _descriptor12, this);

      _initializerDefineProperty(this, "keysPath", _descriptor13, this);

      _initializerDefineProperty(this, "keyProvidersPath", _descriptor14, this);
    }

    get hasVersions() {
      return this.versions.length > 1;
    }

    get createFields() {
      const createFields = ['name', 'type', 'deletionAllowed'];
      return (0, _fieldToAttrs.expandAttributeMeta)(this, createFields);
    }

    get updateFields() {
      return (0, _fieldToAttrs.expandAttributeMeta)(this, ['minEnabledVersion', 'deletionAllowed']);
    }

    get showFields() {
      return (0, _fieldToAttrs.expandAttributeMeta)(this, ['name', 'created', 'type', 'deletionAllowed', 'latestVersion', 'minEnabledVersion', 'lastRotated']);
    }

    get keyTypeOptions() {
      return (0, _fieldToAttrs.expandAttributeMeta)(this, ['type'])[0];
    }

    get distFields() {
      return [{
        name: 'name',
        type: 'string',
        label: 'Distributed name',
        subText: 'The name given to the key by the provider.'
      }, {
        name: 'purpose',
        type: 'string',
        label: 'Key Purpose'
      }, {
        name: 'protection',
        type: 'string',
        subText: 'Where cryptographic operations are performed.'
      }];
    }

    get canCreate() {
      return this.keyPath.get('canCreate');
    }

    get canDelete() {
      return this.keyPath.get('canDelete');
    }

    get canEdit() {
      return this.keyPath.get('canUpdate');
    }

    get canRead() {
      return this.keyPath.get('canRead');
    }

    get canList() {
      return this.keysPath.get('canList');
    }

    get canListProviders() {
      return this.keyProvidersPath.get('canList');
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "name", [_dec], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "backend", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, "type", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, "deletionAllowed", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, "latestVersion", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, "minEnabledVersion", [_dec6], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, "versions", [_dec7], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, "created", [_dec8], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, "lastRotated", [_dec9], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor10 = _applyDecoratedDescriptor(_class.prototype, "provider", [_dec10], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor11 = _applyDecoratedDescriptor(_class.prototype, "distribution", [_dec11], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor12 = _applyDecoratedDescriptor(_class.prototype, "keyPath", [_dec12], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor13 = _applyDecoratedDescriptor(_class.prototype, "keysPath", [_dec13], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor14 = _applyDecoratedDescriptor(_class.prototype, "keyProvidersPath", [_dec14], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class));
  _exports.default = KeymgmtKeyModel;
});
;define("vault/models/keymgmt/provider", ["exports", "@ember-data/model", "@glimmer/tracking", "vault/utils/field-to-attrs", "vault/decorators/model-validations", "vault/macros/lazy-capabilities", "@ember/service"], function (_exports, _model, _tracking, _fieldToAttrs, _modelValidations, _lazyCapabilities, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10;

  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"@glimmer/tracking",0,"vault/utils/field-to-attrs",0,"vault/decorators/model-validations",0,"vault/macros/lazy-capabilities",0,"@ember/service"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  const CRED_PROPS = {
    azurekeyvault: ['client_id', 'client_secret', 'tenant_id'],
    awskms: ['access_key', 'secret_key', 'session_token', 'endpoint'],
    gcpckms: ['service_account_file']
  };
  const OPTIONAL_CRED_PROPS = ['session_token', 'endpoint']; // since we have dynamic credential attributes based on provider we need a dynamic presence validator
  // add validators for all cred props and return true for value if not associated with selected provider

  const credValidators = Object.keys(CRED_PROPS).reduce((obj, providerKey) => {
    CRED_PROPS[providerKey].forEach(prop => {
      if (!OPTIONAL_CRED_PROPS.includes(prop)) {
        obj[`credentials.${prop}`] = [{
          message: `${prop} is required`,

          validator(model) {
            return model.credentialProps.includes(prop) ? model.credentials[prop] : true;
          }

        }];
      }
    });
    return obj;
  }, {});
  const validations = {
    name: [{
      type: 'presence',
      message: 'Provider name is required'
    }],
    keyCollection: [{
      type: 'presence',
      message: 'Key Vault instance name'
    }],
    ...credValidators
  };
  let KeymgmtProviderModel = (_dec = (0, _modelValidations.withModelValidations)(validations), _dec2 = (0, _model.attr)('string'), _dec3 = (0, _model.attr)('string', {
    label: 'Provider name',
    subText: 'This is the name of the provider that will be displayed in OpenBao. This cannot be edited later.'
  }), _dec4 = (0, _model.attr)('string', {
    label: 'Type',
    subText: 'Choose the provider type.',
    possibleValues: ['azurekeyvault', 'awskms', 'gcpckms'],
    noDefault: true
  }), _dec5 = (0, _model.attr)('string', {
    label: 'Key Vault instance name',
    subText: 'The name of a Key Vault instance must be supplied. This cannot be edited later.'
  }), _dec6 = (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'backend'}/kms/${'id'}`, 'backend', 'id'), _dec7 = (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'backend'}/kms`, 'backend'), _dec8 = (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'backend'}/kms/${'id'}/key`, 'backend', 'id'), _dec(_class = (_class2 = class KeymgmtProviderModel extends _model.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);

      _initializerDefineProperty(this, "backend", _descriptor2, this);

      _initializerDefineProperty(this, "name", _descriptor3, this);

      _initializerDefineProperty(this, "provider", _descriptor4, this);

      _initializerDefineProperty(this, "keyCollection", _descriptor5, this);

      _defineProperty(this, "idPrefix", 'provider/');

      _defineProperty(this, "type", 'provider');

      _initializerDefineProperty(this, "keys", _descriptor6, this);

      _initializerDefineProperty(this, "credentials", _descriptor7, this);

      _initializerDefineProperty(this, "providerPath", _descriptor8, this);

      _initializerDefineProperty(this, "providersPath", _descriptor9, this);

      _initializerDefineProperty(this, "providerKeysPath", _descriptor10, this);
    }

    // never returned from API -- set only during create/edit
    get icon() {
      return {
        azurekeyvault: 'azure-color',
        awskms: 'aws-color',
        gcpckms: 'gcp-color'
      }[this.provider];
    }

    get typeName() {
      return {
        azurekeyvault: 'Azure Key Vault',
        awskms: 'AWS Key Management Service',
        gcpckms: 'Google Cloud Key Management Service'
      }[this.provider];
    }

    get showFields() {
      const attrs = (0, _fieldToAttrs.expandAttributeMeta)(this, ['name', 'keyCollection']);
      attrs.splice(1, 0, {
        hasBlock: true,
        label: 'Type',
        value: this.typeName,
        icon: this.icon
      });
      const l = this.keys.length;
      const value = l ? `${l} ${l > 1 ? 'keys' : 'key'}` : this.canListKeys ? 'None' : 'You do not have permission to list keys';
      attrs.push({
        hasBlock: true,
        isLink: l,
        label: 'Keys',
        value
      });
      return attrs;
    }

    get credentialProps() {
      if (!this.provider) return [];
      return CRED_PROPS[this.provider];
    }

    get credentialFields() {
      const [creds, fields] = this.credentialProps.reduce((_ref, prop) => {
        let [creds, fields] = _ref;
        creds[prop] = null;
        const field = {
          name: `credentials.${prop}`,
          type: 'string',
          options: {
            label: prop
          }
        };

        if (prop === 'service_account_file') {
          field.options.subText = 'The path to a Google service account key file, not the file itself.';
        }

        fields.push(field);
        return [creds, fields];
      }, [{}, []]);
      this.credentials = creds;
      return fields;
    }

    get createFields() {
      return (0, _fieldToAttrs.expandAttributeMeta)(this, ['provider', 'name', 'keyCollection']);
    }

    async fetchKeys(page) {
      if (this.canListKeys === false) {
        this.keys = [];
      } else {
        // try unless capabilities returns false
        try {
          this.keys = await this.store.lazyPaginatedQuery('keymgmt/key', {
            backend: this.backend,
            provider: this.name,
            responsePath: 'data.keys',
            page
          });
        } catch (error) {
          this.keys = [];

          if (error.httpStatus !== 404) {
            throw error;
          }
        }
      }
    }

    get canCreate() {
      return this.providerPath.get('canCreate');
    }

    get canDelete() {
      return this.providerPath.get('canDelete');
    }

    get canEdit() {
      return this.providerPath.get('canUpdate');
    }

    get canRead() {
      return this.providerPath.get('canRead');
    }

    get canList() {
      return this.providersPath.get('canList');
    }

    get canListKeys() {
      return this.providerKeysPath.get('canList');
    }

    get canCreateKeys() {
      return this.providerKeysPath.get('canCreate');
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "backend", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "name", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "provider", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "keyCollection", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "keys", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return [];
    }
  }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "credentials", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return null;
    }
  }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "providerPath", [_dec6], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, "providersPath", [_dec7], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor10 = _applyDecoratedDescriptor(_class2.prototype, "providerKeysPath", [_dec8], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class2)) || _class);
  _exports.default = KeymgmtProviderModel;
});
;define("vault/models/kubernetes/config", ["exports", "@ember-data/model", "vault/decorators/model-form-fields", "vault/decorators/model-validations"], function (_exports, _model, _modelFormFields, _modelValidations) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5;

  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"vault/decorators/model-form-fields",0,"vault/decorators/model-validations"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  const validations = {
    kubernetesHost: [{
      validator: model => model.disableLocalCaJwt && !model.kubernetesHost ? false : true,
      message: 'Kubernetes host is required'
    }]
  };
  let KubernetesConfigModel = (_dec = (0, _modelValidations.withModelValidations)(validations), _dec2 = (0, _modelFormFields.withFormFields)(['kubernetesHost', 'serviceAccountJwt', 'kubernetesCaCert']), _dec3 = (0, _model.attr)('string'), _dec4 = (0, _model.attr)('string', {
    label: 'Kubernetes host',
    subText: 'Kubernetes API URL to connect to.'
  }), _dec5 = (0, _model.attr)('string', {
    label: 'Service account JWT',
    subText: 'The JSON web token of the service account used by the secret engine to manage Kubernetes roles. Defaults to the local pod’s JWT if found.'
  }), _dec6 = (0, _model.attr)('string', {
    label: 'Kubernetes CA Certificate',
    subText: 'PEM-encoded CA certificate to use by the secret engine to verify the Kubernetes API server certificate. Defaults to the local pod’s CA if found.',
    editType: 'textarea'
  }), _dec7 = (0, _model.attr)('boolean', {
    defaultValue: false
  }), _dec(_class = _dec2(_class = (_class2 = class KubernetesConfigModel extends _model.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "backend", _descriptor, this);

      _initializerDefineProperty(this, "kubernetesHost", _descriptor2, this);

      _initializerDefineProperty(this, "serviceAccountJwt", _descriptor3, this);

      _initializerDefineProperty(this, "kubernetesCaCert", _descriptor4, this);

      _initializerDefineProperty(this, "disableLocalCaJwt", _descriptor5, this);
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "backend", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "kubernetesHost", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "serviceAccountJwt", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "kubernetesCaCert", [_dec6], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "disableLocalCaJwt", [_dec7], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class2)) || _class) || _class);
  _exports.default = KubernetesConfigModel;
});
;define("vault/models/kubernetes/role", ["exports", "@ember-data/model", "vault/decorators/model-validations", "vault/decorators/model-form-fields", "vault/macros/lazy-capabilities", "@glimmer/tracking"], function (_exports, _model, _modelValidations, _modelFormFields, _lazyCapabilities, _tracking) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _dec12, _dec13, _dec14, _dec15, _dec16, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14, _descriptor15, _descriptor16, _descriptor17;

  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"vault/decorators/model-validations",0,"vault/decorators/model-form-fields",0,"vault/macros/lazy-capabilities",0,"@glimmer/tracking"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  const validations = {
    name: [{
      type: 'presence',
      message: 'Name is required'
    }]
  };
  const formFieldProps = ['name', 'serviceAccountName', 'kubernetesRoleType', 'kubernetesRoleName', 'allowedKubernetesNamespaces', 'tokenMaxTtl', 'tokenDefaultTtl', 'nameTemplate'];
  let KubernetesRoleModel = (_dec = (0, _modelValidations.withModelValidations)(validations), _dec2 = (0, _modelFormFields.withFormFields)(formFieldProps), _dec3 = (0, _model.attr)('string'), _dec4 = (0, _model.attr)('string', {
    label: 'Role name',
    subText: 'The role’s name in OpenBao.'
  }), _dec5 = (0, _model.attr)('string', {
    label: 'Service account name',
    subText: 'OpenBao will use the default template when generating service accounts, roles and role bindings.'
  }), _dec6 = (0, _model.attr)('string', {
    label: 'Kubernetes role type',
    editType: 'radio',
    possibleValues: ['Role', 'ClusterRole']
  }), _dec7 = (0, _model.attr)('string', {
    label: 'Kubernetes role name',
    subText: 'OpenBao will use the default template when generating service accounts, roles and role bindings.'
  }), _dec8 = (0, _model.attr)('string', {
    label: 'Service account name',
    subText: 'OpenBao will use the default template when generating service accounts, roles and role bindings.'
  }), _dec9 = (0, _model.attr)('string', {
    label: 'Allowed Kubernetes namespaces',
    subText: 'A list of the valid Kubernetes namespaces in which this role can be used for creating service accounts. If set to "*" all namespaces are allowed.'
  }), _dec10 = (0, _model.attr)({
    label: 'Max Lease TTL',
    editType: 'ttl'
  }), _dec11 = (0, _model.attr)({
    label: 'Default Lease TTL',
    editType: 'ttl'
  }), _dec12 = (0, _model.attr)('string', {
    label: 'Name template',
    editType: 'optionalText',
    defaultSubText: 'OpenBao will use the default template when generating service accounts, roles and role bindings.',
    subText: 'OpenBao will use the default template when generating service accounts, roles and role bindings.'
  }), _dec13 = (0, _model.attr)('string'), _dec14 = (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'backend'}/roles/${'name'}`, 'backend', 'name'), _dec15 = (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'backend'}/creds/${'name'}`, 'backend', 'name'), _dec16 = (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'backend'}/roles`, 'backend'), _dec(_class = _dec2(_class = (_class2 = class KubernetesRoleModel extends _model.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "backend", _descriptor, this);

      _initializerDefineProperty(this, "name", _descriptor2, this);

      _initializerDefineProperty(this, "serviceAccountName", _descriptor3, this);

      _initializerDefineProperty(this, "kubernetesRoleType", _descriptor4, this);

      _initializerDefineProperty(this, "kubernetesRoleName", _descriptor5, this);

      _initializerDefineProperty(this, "serviceAccountName", _descriptor6, this);

      _initializerDefineProperty(this, "allowedKubernetesNamespaces", _descriptor7, this);

      _initializerDefineProperty(this, "tokenMaxTtl", _descriptor8, this);

      _initializerDefineProperty(this, "tokenDefaultTtl", _descriptor9, this);

      _initializerDefineProperty(this, "nameTemplate", _descriptor10, this);

      _initializerDefineProperty(this, "extraAnnotations", _descriptor11, this);

      _initializerDefineProperty(this, "extraLabels", _descriptor12, this);

      _initializerDefineProperty(this, "generatedRoleRules", _descriptor13, this);

      _initializerDefineProperty(this, "_generationPreference", _descriptor14, this);

      _initializerDefineProperty(this, "rolePath", _descriptor15, this);

      _initializerDefineProperty(this, "credsPath", _descriptor16, this);

      _initializerDefineProperty(this, "rolesPath", _descriptor17, this);
    }

    get generationPreference() {
      // when the user interacts with the radio cards the value will be set to the pseudo prop which takes precedence
      if (this._generationPreference) {
        return this._generationPreference;
      } // for existing roles, default the value based on which model prop has value -- only one can be set


      let pref = null;

      if (this.serviceAccountName) {
        pref = 'basic';
      } else if (this.kubernetesRoleName) {
        pref = 'expanded';
      } else if (this.generatedRoleRules) {
        pref = 'full';
      }

      return pref;
    }

    set generationPreference(pref) {
      // unset model props specific to filteredFormFields when changing preference
      // only one of service_account_name, kubernetes_role_name or generated_role_rules can be set
      const props = {
        basic: ['kubernetesRoleType', 'kubernetesRoleName', 'generatedRoleRules', 'nameTemplate'],
        expanded: ['serviceAccountName', 'generatedRoleRules'],
        full: ['serviceAccountName', 'kubernetesRoleName']
      }[pref];
      props.forEach(prop => this[prop] = null);
      this._generationPreference = pref;
    }

    get filteredFormFields() {
      // return different form fields based on generationPreference
      const hiddenFieldIndices = {
        basic: [2, 3, 7],
        // kubernetesRoleType, kubernetesRoleName and nameTemplate
        expanded: [1],
        // serviceAccountName
        full: [1, 3] // serviceAccountName and kubernetesRoleName

      }[this.generationPreference];
      return hiddenFieldIndices ? this.formFields.filter((field, index) => !hiddenFieldIndices.includes(index)) : null;
    }

    get canCreate() {
      return this.rolePath.get('canCreate');
    }

    get canDelete() {
      return this.rolePath.get('canDelete');
    }

    get canEdit() {
      return this.rolePath.get('canUpdate');
    }

    get canRead() {
      return this.rolePath.get('canRead');
    }

    get canList() {
      return this.rolesPath.get('canList');
    }

    get canGenerateCreds() {
      return this.credsPath.get('canCreate');
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "backend", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "name", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "serviceAccountName", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "kubernetesRoleType", [_dec6], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "kubernetesRoleName", [_dec7], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "serviceAccountName", [_dec8], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "allowedKubernetesNamespaces", [_dec9], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "tokenMaxTtl", [_dec10], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, "tokenDefaultTtl", [_dec11], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor10 = _applyDecoratedDescriptor(_class2.prototype, "nameTemplate", [_dec12], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor11 = _applyDecoratedDescriptor(_class2.prototype, "extraAnnotations", [_model.attr], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor12 = _applyDecoratedDescriptor(_class2.prototype, "extraLabels", [_model.attr], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor13 = _applyDecoratedDescriptor(_class2.prototype, "generatedRoleRules", [_dec13], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor14 = _applyDecoratedDescriptor(_class2.prototype, "_generationPreference", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor15 = _applyDecoratedDescriptor(_class2.prototype, "rolePath", [_dec14], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor16 = _applyDecoratedDescriptor(_class2.prototype, "credsPath", [_dec15], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor17 = _applyDecoratedDescriptor(_class2.prototype, "rolesPath", [_dec16], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class2)) || _class) || _class);
  _exports.default = KubernetesRoleModel;
});
;define("vault/models/lease", ["exports", "@ember-data/model", "@ember/object/computed", "vault/mixins/key-mixin"], function (_exports, _model, _computed, _keyMixin) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"@ember/object/computed",0,"vault/mixins/key-mixin"eaimeta@70e063a35619d71f

  /* sample response
  {
    "id": "auth/token/create/25c75065466dfc5f920525feafe47502c4c9915c",
    "issue_time": "2017-04-30T10:18:11.228946471-04:00",
    "expire_time": "2017-04-30T11:18:11.228946708-04:00",
    "last_renewal": null,
    "renewable": true,
    "ttl": 3558
  }
  
  */
  var _default = _model.default.extend(_keyMixin.default, {
    issueTime: (0, _model.attr)('string'),
    expireTime: (0, _model.attr)('string'),
    lastRenewal: (0, _model.attr)('string'),
    renewable: (0, _model.attr)('boolean'),
    ttl: (0, _model.attr)('number'),
    isAuthLease: (0, _computed.match)('id', /^auth/)
  });

  _exports.default = _default;
});
;define("vault/models/license", ["exports", "@ember-data/model"], function (_exports, _model) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/model"eaimeta@70e063a35619d71f

  /* sample response
  {
    "data": {
      "autoloading_used": true,
      "autoloaded": {
        "expiration_time": "2017-11-14T16:34:36.546753-05:00",
        "license_id": "some-id",
        "start_time": "2017-11-14T16:04:36.546753-05:00"
        "features": [
          "UI",
          "HSM",
          "Performance Replication",
          "DR Replication"
        ],
      },
      "stored": {
        "expiration_time": "2017-11-14T16:34:36.546753-05:00",
        "license_id": "some-id",
        "start_time": "2017-11-14T16:04:36.546753-05:00"
        "features": [
          "UI",
          "HSM",
          "Performance Replication",
          "DR Replication"
        ],
      }
    },
    "warnings": [
      "time left on license is 29m33s"
    ]
  }
  */
  var _default = _model.default.extend({
    expirationTime: (0, _model.attr)('string'),
    features: (0, _model.attr)('array'),
    licenseId: (0, _model.attr)('string'),
    startTime: (0, _model.attr)('string'),
    performanceStandbyCount: (0, _model.attr)('number'),
    autoloaded: (0, _model.attr)('boolean')
  });

  _exports.default = _default;
});
;define("vault/models/mfa-login-enforcement", ["exports", "@ember-data/model", "@ember/array/proxy", "@ember/object/promise-proxy-mixin", "vault/helpers/mountable-auth-methods", "vault/decorators/model-validations", "@ember/utils", "@ember/service"], function (_exports, _model, _proxy, _promiseProxyMixin, _mountableAuthMethods, _modelValidations, _utils, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8;

  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"@ember/array/proxy",0,"@ember/object/promise-proxy-mixin",0,"vault/helpers/mountable-auth-methods",0,"vault/decorators/model-validations",0,"@ember/utils",0,"@ember/service"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  const validations = {
    name: [{
      type: 'presence',
      message: 'Name is required'
    }],
    mfa_methods: [{
      type: 'presence',
      message: 'At least one MFA method is required'
    }],
    targets: [{
      validator(model) {
        // avoid async fetch of records here and access relationship ids to check for presence
        const entityIds = model.hasMany('identity_entities').ids();
        const groupIds = model.hasMany('identity_groups').ids();
        return (0, _utils.isPresent)(model.auth_method_accessors) || (0, _utils.isPresent)(model.auth_method_types) || (0, _utils.isPresent)(entityIds) || (0, _utils.isPresent)(groupIds);
      },

      message: "At least one target is required. If you've selected one, click 'Add' to make sure it's added to this enforcement."
    }]
  };
  let MfaLoginEnforcementModel = (_dec = (0, _modelValidations.withModelValidations)(validations), _dec2 = (0, _model.attr)('string'), _dec3 = (0, _model.hasMany)('mfa-method'), _dec4 = (0, _model.attr)('string'), _dec5 = (0, _model.attr)('array', {
    defaultValue: () => []
  }), _dec6 = (0, _model.attr)('array', {
    defaultValue: () => []
  }), _dec7 = (0, _model.hasMany)('identity/entity'), _dec8 = (0, _model.hasMany)('identity/group'), _dec(_class = (_class2 = class MfaLoginEnforcementModel extends _model.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);

      _initializerDefineProperty(this, "name", _descriptor2, this);

      _initializerDefineProperty(this, "mfa_methods", _descriptor3, this);

      _initializerDefineProperty(this, "namespace_id", _descriptor4, this);

      _initializerDefineProperty(this, "auth_method_accessors", _descriptor5, this);

      _initializerDefineProperty(this, "auth_method_types", _descriptor6, this);

      _initializerDefineProperty(this, "identity_entities", _descriptor7, this);

      _initializerDefineProperty(this, "identity_groups", _descriptor8, this);
    }

    get targets() {
      return _proxy.default.extend(_promiseProxyMixin.default).create({
        promise: this.prepareTargets()
      });
    }

    async prepareTargets() {
      let authMethods;
      const targets = [];

      if (this.auth_method_accessors.length || this.auth_method_types.length) {
        // fetch all auth methods and lookup by accessor to get mount path and type
        try {
          const {
            data
          } = await this.store.adapterFor('auth-method').findAll();
          authMethods = Object.keys(data).map(key => ({
            path: key,
            ...data[key]
          }));
        } catch (error) {// swallow this error
        }
      }

      if (this.auth_method_accessors.length) {
        const selectedAuthMethods = authMethods.filter(model => {
          return this.auth_method_accessors.includes(model.accessor);
        });
        targets.addObjects(selectedAuthMethods.map(method => ({
          icon: this.iconForMount(method.type),
          link: 'vault.cluster.access.method',
          linkModels: [method.path.slice(0, -1)],
          title: method.path,
          subTitle: method.accessor
        })));
      }

      this.auth_method_types.forEach(type => {
        const icon = this.iconForMount(type);
        const mountCount = authMethods.filterBy('type', type).length;
        targets.addObject({
          key: 'auth_method_types',
          icon,
          title: type,
          subTitle: `All ${type} mounts (${mountCount})`
        });
      });

      for (const key of ['identity_entities', 'identity_groups']) {
        (await this[key]).forEach(model => {
          targets.addObject({
            key,
            icon: 'user',
            link: 'vault.cluster.access.identity.show',
            linkModels: [key.split('_')[1], model.id, 'details'],
            title: model.name,
            subTitle: model.id
          });
        });
      }

      return targets;
    }

    iconForMount(type) {
      const mountableMethods = (0, _mountableAuthMethods.methods)();
      const mount = mountableMethods.findBy('type', type);
      return mount ? mount.glyph || mount.type : 'token';
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "name", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "mfa_methods", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "namespace_id", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "auth_method_accessors", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "auth_method_types", [_dec6], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "identity_entities", [_dec7], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "identity_groups", [_dec8], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class2)) || _class);
  _exports.default = MfaLoginEnforcementModel;
});
;define("vault/models/mfa-method", ["exports", "@ember-data/model", "@ember/string", "vault/utils/field-to-attrs", "vault/decorators/model-validations", "@ember/utils"], function (_exports, _model, _string, _fieldToAttrs, _modelValidations, _utils) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _dec12, _dec13, _dec14, _dec15, _dec16, _dec17, _dec18, _dec19, _dec20, _dec21, _dec22, _dec23, _dec24, _dec25, _dec26, _dec27, _dec28, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14, _descriptor15, _descriptor16, _descriptor17, _descriptor18, _descriptor19, _descriptor20, _descriptor21, _descriptor22, _descriptor23, _descriptor24, _descriptor25, _descriptor26, _descriptor27;

  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"@ember/string",0,"vault/utils/field-to-attrs",0,"vault/decorators/model-validations",0,"@ember/utils"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  const METHOD_PROPS = {
    common: [],
    duo: ['username_format', 'secret_key', 'integration_key', 'api_hostname', 'push_info', 'use_passcode'],
    okta: ['username_format', 'mount_accessor', 'org_name', 'api_token', 'base_url', 'primary_email'],
    totp: ['issuer', 'period', 'key_size', 'qr_size', 'algorithm', 'digits', 'skew', 'max_validation_attempts'],
    pingid: ['username_format', 'settings_file_base64', 'use_signature', 'idp_url', 'admin_url', 'authenticator_url', 'org_alias']
  };
  const REQUIRED_PROPS = {
    duo: ['secret_key', 'integration_key', 'api_hostname'],
    okta: ['org_name', 'api_token'],
    totp: ['issuer'],
    pingid: ['settings_file_base64']
  };
  const validators = Object.keys(REQUIRED_PROPS).reduce((obj, type) => {
    REQUIRED_PROPS[type].forEach(prop => {
      obj[`${prop}`] = [{
        message: `${prop.replace(/_/g, ' ')} is required`,

        validator(model) {
          return model.type === type ? (0, _utils.isPresent)(model[prop]) : true;
        }

      }];
    });
    return obj;
  }, {});
  let MfaMethod = (_dec = (0, _modelValidations.withModelValidations)(validators), _dec2 = (0, _model.attr)('string'), _dec3 = (0, _model.attr)('string', {
    label: 'Username format',
    subText: 'How to map identity names to MFA method names. '
  }), _dec4 = (0, _model.attr)('string', {
    label: 'Namespace'
  }), _dec5 = (0, _model.attr)('string'), _dec6 = (0, _model.attr)('string', {
    label: 'Settings file',
    subText: 'A base-64 encoded third party setting file retrieved from the PingIDs configuration page.'
  }), _dec7 = (0, _model.attr)('boolean'), _dec8 = (0, _model.attr)('string'), _dec9 = (0, _model.attr)('string'), _dec10 = (0, _model.attr)('string'), _dec11 = (0, _model.attr)('string'), _dec12 = (0, _model.attr)('string', {
    label: 'Organization name',
    subText: 'Name of the organization to be used in the Okta API.'
  }), _dec13 = (0, _model.attr)('string', {
    label: 'Okta API key'
  }), _dec14 = (0, _model.attr)('string', {
    label: 'Base URL',
    subText: 'If set, will be used as the base domain for API requests. Example are okta.com, oktapreview.com and okta-emea.com.'
  }), _dec15 = (0, _model.attr)('boolean'), _dec16 = (0, _model.attr)('string', {
    label: 'Duo secret key',
    sensitive: true
  }), _dec17 = (0, _model.attr)('string', {
    label: 'Duo integration key',
    sensitive: true
  }), _dec18 = (0, _model.attr)('string', {
    label: 'Duo API hostname'
  }), _dec19 = (0, _model.attr)('string', {
    label: 'Duo push information',
    subText: 'Additional information displayed to the user when the push is presented to them.'
  }), _dec20 = (0, _model.attr)('boolean', {
    label: 'Passcode reminder',
    subText: 'If this is turned on, the user is reminded to use the passcode upon MFA validation.'
  }), _dec21 = (0, _model.attr)('string', {
    label: 'Issuer',
    subText: 'The human-readable name of the keys issuing organization.'
  }), _dec22 = (0, _model.attr)({
    label: 'Period',
    editType: 'ttl',
    helperTextEnabled: 'How long each generated TOTP is valid.',
    hideToggle: true,
    defaultValue: 30 // API accepts both an integer as seconds and sting with unit e.g 30 || '30s'

  }), _dec23 = (0, _model.attr)('number', {
    label: 'Key size',
    subText: 'The size in bytes of the OpenBao generated key.'
  }), _dec24 = (0, _model.attr)('number', {
    label: 'QR size',
    subText: 'The pixel size of the generated square QR code.'
  }), _dec25 = (0, _model.attr)('string', {
    label: 'Algorithm',
    editType: 'radio',
    possibleValues: ['SHA1', 'SHA256', 'SHA512'],
    subText: 'The hashing algorithm used to generate the TOTP code.'
  }), _dec26 = (0, _model.attr)('number', {
    label: 'Digits',
    editType: 'radio',
    possibleValues: [6, 8],
    subText: 'The number digits in the generated TOTP code.'
  }), _dec27 = (0, _model.attr)('number', {
    label: 'Skew',
    editType: 'radio',
    possibleValues: [0, 1],
    subText: 'The number of delay periods allowed when validating a TOTP token.'
  }), _dec28 = (0, _model.attr)('number'), _dec(_class = (_class2 = class MfaMethod extends _model.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "type", _descriptor, this);

      _initializerDefineProperty(this, "username_format", _descriptor2, this);

      _initializerDefineProperty(this, "namespace_id", _descriptor3, this);

      _initializerDefineProperty(this, "mount_accessor", _descriptor4, this);

      _initializerDefineProperty(this, "settings_file_base64", _descriptor5, this);

      _initializerDefineProperty(this, "use_signature", _descriptor6, this);

      _initializerDefineProperty(this, "idp_url", _descriptor7, this);

      _initializerDefineProperty(this, "admin_url", _descriptor8, this);

      _initializerDefineProperty(this, "authenticator_url", _descriptor9, this);

      _initializerDefineProperty(this, "org_alias", _descriptor10, this);

      _initializerDefineProperty(this, "org_name", _descriptor11, this);

      _initializerDefineProperty(this, "api_token", _descriptor12, this);

      _initializerDefineProperty(this, "base_url", _descriptor13, this);

      _initializerDefineProperty(this, "primary_email", _descriptor14, this);

      _initializerDefineProperty(this, "secret_key", _descriptor15, this);

      _initializerDefineProperty(this, "integration_key", _descriptor16, this);

      _initializerDefineProperty(this, "api_hostname", _descriptor17, this);

      _initializerDefineProperty(this, "push_info", _descriptor18, this);

      _initializerDefineProperty(this, "use_passcode", _descriptor19, this);

      _initializerDefineProperty(this, "issuer", _descriptor20, this);

      _initializerDefineProperty(this, "period", _descriptor21, this);

      _initializerDefineProperty(this, "key_size", _descriptor22, this);

      _initializerDefineProperty(this, "qr_size", _descriptor23, this);

      _initializerDefineProperty(this, "algorithm", _descriptor24, this);

      _initializerDefineProperty(this, "digits", _descriptor25, this);

      _initializerDefineProperty(this, "skew", _descriptor26, this);

      _initializerDefineProperty(this, "max_validation_attempts", _descriptor27, this);
    }

    get name() {
      return this.type === 'totp' ? this.type.toUpperCase() : (0, _string.capitalize)(this.type);
    }

    get formFields() {
      return [...METHOD_PROPS.common, ...METHOD_PROPS[this.type]];
    }

    get attrs() {
      return (0, _fieldToAttrs.expandAttributeMeta)(this, this.formFields);
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "type", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "username_format", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "namespace_id", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "mount_accessor", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "settings_file_base64", [_dec6], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "use_signature", [_dec7], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "idp_url", [_dec8], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "admin_url", [_dec9], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, "authenticator_url", [_dec10], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor10 = _applyDecoratedDescriptor(_class2.prototype, "org_alias", [_dec11], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor11 = _applyDecoratedDescriptor(_class2.prototype, "org_name", [_dec12], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor12 = _applyDecoratedDescriptor(_class2.prototype, "api_token", [_dec13], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor13 = _applyDecoratedDescriptor(_class2.prototype, "base_url", [_dec14], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor14 = _applyDecoratedDescriptor(_class2.prototype, "primary_email", [_dec15], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor15 = _applyDecoratedDescriptor(_class2.prototype, "secret_key", [_dec16], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor16 = _applyDecoratedDescriptor(_class2.prototype, "integration_key", [_dec17], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor17 = _applyDecoratedDescriptor(_class2.prototype, "api_hostname", [_dec18], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor18 = _applyDecoratedDescriptor(_class2.prototype, "push_info", [_dec19], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor19 = _applyDecoratedDescriptor(_class2.prototype, "use_passcode", [_dec20], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor20 = _applyDecoratedDescriptor(_class2.prototype, "issuer", [_dec21], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor21 = _applyDecoratedDescriptor(_class2.prototype, "period", [_dec22], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor22 = _applyDecoratedDescriptor(_class2.prototype, "key_size", [_dec23], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor23 = _applyDecoratedDescriptor(_class2.prototype, "qr_size", [_dec24], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor24 = _applyDecoratedDescriptor(_class2.prototype, "algorithm", [_dec25], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor25 = _applyDecoratedDescriptor(_class2.prototype, "digits", [_dec26], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor26 = _applyDecoratedDescriptor(_class2.prototype, "skew", [_dec27], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor27 = _applyDecoratedDescriptor(_class2.prototype, "max_validation_attempts", [_dec28], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class2)) || _class);
  _exports.default = MfaMethod;
});
;define("vault/models/mount-config", ["exports", "@ember-data/model"], function (_exports, _model) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9;

  0; //eaimeta@70e063a35619d71f0,"@ember-data/model"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let MountConfigModel = (_dec = (0, _model.attr)({
    label: 'Default Lease TTL',
    editType: 'ttl'
  }), _dec2 = (0, _model.attr)({
    label: 'Max Lease TTL',
    editType: 'ttl'
  }), _dec3 = (0, _model.attr)({
    label: 'Request keys excluded from HMACing in audit',
    editType: 'stringArray',
    helpText: "Keys that will not be HMAC'd by audit devices in the request data object."
  }), _dec4 = (0, _model.attr)({
    label: 'Response keys excluded from HMACing in audit',
    editType: 'stringArray',
    helpText: "Keys that will not be HMAC'd by audit devices in the response data object."
  }), _dec5 = (0, _model.attr)('string', {
    editType: 'boolean',
    label: 'List method when unauthenticated',
    trueValue: 'unauth',
    falseValue: 'hidden'
  }), _dec6 = (0, _model.attr)({
    label: 'Allowed passthrough request headers',
    helpText: 'Headers to allow and pass from the request to the backend',
    editType: 'stringArray'
  }), _dec7 = (0, _model.attr)({
    label: 'Allowed response headers',
    helpText: 'Headers to allow, allowing a plugin to include them in the response.',
    editType: 'stringArray'
  }), _dec8 = (0, _model.attr)('string', {
    label: 'Token Type',
    helpText: 'The type of token that should be generated via this role. For `default-service` and `default-batch` service and batch tokens will be issued respectively, unless the auth method explicitly requests a different type.',
    possibleValues: ['default-service', 'default-batch', 'batch', 'service'],
    noDefault: true
  }), _dec9 = (0, _model.attr)({
    editType: 'stringArray'
  }), (_class = class MountConfigModel extends _model.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "defaultLeaseTtl", _descriptor, this);

      _initializerDefineProperty(this, "maxLeaseTtl", _descriptor2, this);

      _initializerDefineProperty(this, "auditNonHmacRequestKeys", _descriptor3, this);

      _initializerDefineProperty(this, "auditNonHmacResponseKeys", _descriptor4, this);

      _initializerDefineProperty(this, "listingVisibility", _descriptor5, this);

      _initializerDefineProperty(this, "passthroughRequestHeaders", _descriptor6, this);

      _initializerDefineProperty(this, "allowedResponseHeaders", _descriptor7, this);

      _initializerDefineProperty(this, "tokenType", _descriptor8, this);

      _initializerDefineProperty(this, "allowedManagedKeys", _descriptor9, this);
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "defaultLeaseTtl", [_dec], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "maxLeaseTtl", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, "auditNonHmacRequestKeys", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, "auditNonHmacResponseKeys", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, "listingVisibility", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, "passthroughRequestHeaders", [_dec6], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, "allowedResponseHeaders", [_dec7], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, "tokenType", [_dec8], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, "allowedManagedKeys", [_dec9], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class));
  _exports.default = MountConfigModel;
});
;define("vault/models/namespace", ["exports", "@ember-data/model", "vault/decorators/model-expanded-attributes"], function (_exports, _model, _modelExpandedAttributes) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _class, _class2, _descriptor;

  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"vault/decorators/model-expanded-attributes"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let NamespaceModel = (_dec = (0, _modelExpandedAttributes.withExpandedAttributes)(), _dec2 = (0, _model.attr)('string', {
    validationAttr: 'pathIsValid',
    invalidMessage: 'You have entered and invalid path please only include letters, numbers, -, ., and _.'
  }), _dec(_class = (_class2 = class NamespaceModel extends _model.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "path", _descriptor, this);
    }

    get pathIsValid() {
      return this.path && this.path.match(/^[\w\d-.]+$/g);
    }

    get fields() {
      return ['path'].map(f => this.allByKey[f]);
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "path", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class2)) || _class);
  _exports.default = NamespaceModel;
});
;define("vault/models/node", ["exports", "@ember-data/model", "@ember/object/computed"], function (_exports, _model, _computed) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"@ember/object/computed"eaimeta@70e063a35619d71f

  var _default = _model.default.extend({
    name: (0, _model.attr)('string'),
    //https://www.vaultproject.io/docs/http/sys-health.html
    initialized: (0, _model.attr)('boolean'),
    sealed: (0, _model.attr)('boolean'),
    isSealed: (0, _computed.alias)('sealed'),
    standby: (0, _model.attr)('boolean'),
    isActive: (0, _computed.equal)('standby', false),
    clusterName: (0, _model.attr)('string'),
    clusterId: (0, _model.attr)('string'),
    isLeader: (0, _computed.and)('initialized', 'isActive'),
    //https://www.vaultproject.io/docs/http/sys-seal-status.html
    //The "t" parameter is the threshold, and "n" is the number of shares.
    t: (0, _model.attr)('number'),
    n: (0, _model.attr)('number'),
    progress: (0, _model.attr)('number'),
    sealThreshold: (0, _computed.alias)('t'),
    sealNumShares: (0, _computed.alias)('n'),
    version: (0, _model.attr)('string'),
    type: (0, _model.attr)('string'),
    storageType: (0, _model.attr)('string'),
    //https://www.vaultproject.io/docs/http/sys-leader.html
    haEnabled: (0, _model.attr)('boolean'),
    isSelf: (0, _model.attr)('boolean'),
    leaderAddress: (0, _model.attr)('string')
  });

  _exports.default = _default;
});
;define("vault/models/oidc/assignment", ["exports", "@ember-data/model", "vault/macros/lazy-capabilities", "vault/decorators/model-validations", "@ember/utils"], function (_exports, _model, _lazyCapabilities, _modelValidations, _utils) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _dec5, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4;

  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"vault/macros/lazy-capabilities",0,"vault/decorators/model-validations",0,"@ember/utils"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  const validations = {
    name: [{
      type: 'presence',
      message: 'Name is required.'
    }, {
      type: 'containsWhiteSpace',
      message: 'Name cannot contain whitespace.'
    }],
    targets: [{
      validator(model) {
        return (0, _utils.isPresent)(model.entityIds) || (0, _utils.isPresent)(model.groupIds);
      },

      message: 'At least one entity or group is required.'
    }]
  };
  let OidcAssignmentModel = (_dec = (0, _modelValidations.withModelValidations)(validations), _dec2 = (0, _model.attr)('string'), _dec3 = (0, _model.attr)('array'), _dec4 = (0, _model.attr)('array'), _dec5 = (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`identity/oidc/assignment/${'name'}`, 'name'), _dec(_class = (_class2 = class OidcAssignmentModel extends _model.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "name", _descriptor, this);

      _initializerDefineProperty(this, "entityIds", _descriptor2, this);

      _initializerDefineProperty(this, "groupIds", _descriptor3, this);

      _initializerDefineProperty(this, "assignmentPath", _descriptor4, this);
    }

    get canRead() {
      return this.assignmentPath.get('canRead');
    }

    get canEdit() {
      return this.assignmentPath.get('canUpdate');
    }

    get canDelete() {
      return this.assignmentPath.get('canDelete');
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "name", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "entityIds", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "groupIds", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "assignmentPath", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class2)) || _class);
  _exports.default = OidcAssignmentModel;
});
;define("vault/models/oidc/client", ["exports", "@ember-data/model", "vault/macros/lazy-capabilities", "vault/utils/field-to-attrs", "vault/decorators/model-validations"], function (_exports, _model, _lazyCapabilities, _fieldToAttrs, _modelValidations) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10;

  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"vault/macros/lazy-capabilities",0,"vault/utils/field-to-attrs",0,"vault/utils/field-to-attrs",0,"vault/decorators/model-validations"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  const validations = {
    name: [{
      type: 'presence',
      message: 'Name is required.'
    }, {
      type: 'containsWhiteSpace',
      message: 'Name cannot contain whitespace.'
    }],
    key: [{
      type: 'presence',
      message: 'Key is required.'
    }]
  };
  let OidcClientModel = (_dec = (0, _modelValidations.withModelValidations)(validations), _dec2 = (0, _model.attr)('string', {
    label: 'Application name',
    editDisabled: true
  }), _dec3 = (0, _model.attr)('string', {
    label: 'Type',
    subText: 'Specify whether the application type is confidential or public. The public type must use PKCE. This cannot be edited later.',
    editType: 'radio',
    editDisabled: true,
    defaultValue: 'confidential',
    possibleValues: ['confidential', 'public']
  }), _dec4 = (0, _model.attr)('array', {
    label: 'Redirect URIs',
    subText: 'One of these values must exactly match the redirect_uri parameter value used in each authentication request.',
    editType: 'stringArray'
  }), _dec5 = (0, _model.attr)('string', {
    label: 'Signing key',
    subText: 'Add a key to sign and verify the JSON web tokens (JWT). This cannot be edited later.',
    editType: 'searchSelect',
    editDisabled: true,
    onlyAllowExisting: true,

    defaultValue() {
      return ['default'];
    },

    fallbackComponent: 'input-search',
    selectLimit: 1,
    models: ['oidc/key']
  }), _dec6 = (0, _model.attr)({
    label: 'Access Token TTL',
    editType: 'ttl',
    defaultValue: '24h'
  }), _dec7 = (0, _model.attr)({
    label: 'ID Token TTL',
    editType: 'ttl',
    defaultValue: '24h'
  }), _dec8 = (0, _model.attr)('array', {
    label: 'Assign access'
  }), _dec9 = (0, _model.attr)('string', {
    label: 'Client ID'
  }), _dec10 = (0, _model.attr)('string'), _dec11 = (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`identity/oidc/client/${'name'}`, 'name'), _dec(_class = (_class2 = class OidcClientModel extends _model.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "name", _descriptor, this);

      _initializerDefineProperty(this, "clientType", _descriptor2, this);

      _initializerDefineProperty(this, "redirectUris", _descriptor3, this);

      _initializerDefineProperty(this, "key", _descriptor4, this);

      _initializerDefineProperty(this, "accessTokenTtl", _descriptor5, this);

      _initializerDefineProperty(this, "idTokenTtl", _descriptor6, this);

      _initializerDefineProperty(this, "assignments", _descriptor7, this);

      _initializerDefineProperty(this, "clientId", _descriptor8, this);

      _initializerDefineProperty(this, "clientSecret", _descriptor9, this);

      _defineProperty(this, "_attributeMeta", null);

      _defineProperty(this, "_fieldToAttrsGroups", null);

      _initializerDefineProperty(this, "clientPath", _descriptor10, this);
    }

    // cache initial result of expandAttributeMeta in getter and return
    get formFields() {
      if (!this._attributeMeta) {
        this._attributeMeta = (0, _fieldToAttrs.expandAttributeMeta)(this, ['name', 'clientType', 'redirectUris']);
      }

      return this._attributeMeta;
    }

    // more options fields
    get fieldGroups() {
      if (!this._fieldToAttrsGroups) {
        this._fieldToAttrsGroups = (0, _fieldToAttrs.default)(this, [{
          'More options': ['key', 'idTokenTtl', 'accessTokenTtl']
        }]);
      }

      return this._fieldToAttrsGroups;
    } // CAPABILITIES //


    get canRead() {
      return this.clientPath.get('canRead');
    }

    get canEdit() {
      return this.clientPath.get('canUpdate');
    }

    get canDelete() {
      return this.clientPath.get('canDelete');
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "name", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "clientType", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "redirectUris", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "key", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "accessTokenTtl", [_dec6], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "idTokenTtl", [_dec7], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "assignments", [_dec8], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "clientId", [_dec9], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, "clientSecret", [_dec10], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor10 = _applyDecoratedDescriptor(_class2.prototype, "clientPath", [_dec11], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class2)) || _class);
  _exports.default = OidcClientModel;
});
;define("vault/models/oidc/key", ["exports", "@ember-data/model", "vault/macros/lazy-capabilities", "vault/utils/field-to-attrs", "vault/decorators/model-validations"], function (_exports, _model, _lazyCapabilities, _fieldToAttrs, _modelValidations) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7;

  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"vault/macros/lazy-capabilities",0,"vault/utils/field-to-attrs",0,"vault/decorators/model-validations"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  const validations = {
    name: [{
      type: 'presence',
      message: 'Name is required.'
    }, {
      type: 'containsWhiteSpace',
      message: 'Name cannot contain whitespace.'
    }]
  };
  let OidcKeyModel = (_dec = (0, _modelValidations.withModelValidations)(validations), _dec2 = (0, _model.attr)('string', {
    editDisabled: true
  }), _dec3 = (0, _model.attr)('string', {
    defaultValue: 'RS256',
    possibleValues: ['RS256', 'RS384', 'RS512', 'ES256', 'ES384', 'ES512', 'EdDSA']
  }), _dec4 = (0, _model.attr)({
    editType: 'ttl',
    defaultValue: '24h'
  }), _dec5 = (0, _model.attr)({
    label: 'Verification TTL',
    editType: 'ttl',
    defaultValue: '24h'
  }), _dec6 = (0, _model.attr)('array', {
    label: 'Allowed applications'
  }), _dec7 = (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`identity/oidc/key/${'name'}`, 'name'), _dec8 = (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`identity/oidc/key/${'name'}/rotate`, 'name'), _dec(_class = (_class2 = class OidcKeyModel extends _model.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "name", _descriptor, this);

      _initializerDefineProperty(this, "algorithm", _descriptor2, this);

      _initializerDefineProperty(this, "rotationPeriod", _descriptor3, this);

      _initializerDefineProperty(this, "verificationTtl", _descriptor4, this);

      _initializerDefineProperty(this, "allowedClientIds", _descriptor5, this);

      _defineProperty(this, "_attributeMeta", null);

      _initializerDefineProperty(this, "keyPath", _descriptor6, this);

      _initializerDefineProperty(this, "rotatePath", _descriptor7, this);
    }

    // cache initial result of expandAttributeMeta in getter and return
    get formFields() {
      if (!this._attributeMeta) {
        this._attributeMeta = (0, _fieldToAttrs.expandAttributeMeta)(this, ['name', 'algorithm', 'rotationPeriod', 'verificationTtl']);
      }

      return this._attributeMeta;
    }

    get canRead() {
      return this.keyPath.get('canRead');
    }

    get canEdit() {
      return this.keyPath.get('canUpdate');
    }

    get canRotate() {
      return this.rotatePath.get('canUpdate');
    }

    get canDelete() {
      return this.keyPath.get('canDelete');
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "name", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "algorithm", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "rotationPeriod", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "verificationTtl", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "allowedClientIds", [_dec6], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "keyPath", [_dec7], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "rotatePath", [_dec8], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class2)) || _class);
  _exports.default = OidcKeyModel;
});
;define("vault/models/oidc/provider", ["exports", "@ember-data/model", "vault/macros/lazy-capabilities", "vault/utils/field-to-attrs", "vault/decorators/model-validations"], function (_exports, _model, _lazyCapabilities, _fieldToAttrs, _modelValidations) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5;

  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"vault/macros/lazy-capabilities",0,"vault/utils/field-to-attrs",0,"vault/decorators/model-validations"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  const validations = {
    name: [{
      type: 'presence',
      message: 'Name is required.'
    }, {
      type: 'containsWhiteSpace',
      message: 'Name cannot contain whitespace.'
    }]
  };
  let OidcProviderModel = (_dec = (0, _modelValidations.withModelValidations)(validations), _dec2 = (0, _model.attr)('string', {
    editDisabled: true
  }), _dec3 = (0, _model.attr)('string', {
    subText: 'The scheme, host, and optional port for your issuer. This will be used to build the URL that validates ID tokens.',
    placeholderText: 'e.g. https://example.com:8200',
    docLink: '/api-docs/secret/identity/oidc-provider#create-or-update-a-provider',
    helpText: `Optional. This defaults to a URL with Vault's api_addr`
  }), _dec4 = (0, _model.attr)('array', {
    label: 'Supported scopes',
    subText: 'Scopes define information about a user and the OIDC service. Optional.',
    editType: 'searchSelect',
    models: ['oidc/scope'],
    fallbackComponent: 'string-list',
    onlyAllowExisting: true
  }), _dec5 = (0, _model.attr)('array', {
    label: 'Allowed applications'
  }), _dec6 = (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`identity/oidc/provider/${'name'}`, 'name'), _dec(_class = (_class2 = class OidcProviderModel extends _model.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "name", _descriptor, this);

      _initializerDefineProperty(this, "issuer", _descriptor2, this);

      _initializerDefineProperty(this, "scopesSupported", _descriptor3, this);

      _initializerDefineProperty(this, "allowedClientIds", _descriptor4, this);

      _defineProperty(this, "_attributeMeta", null);

      _initializerDefineProperty(this, "providerPath", _descriptor5, this);
    }

    // cache initial result of expandAttributeMeta in getter and return
    get formFields() {
      if (!this._attributeMeta) {
        this._attributeMeta = (0, _fieldToAttrs.expandAttributeMeta)(this, ['name', 'issuer', 'scopesSupported']);
      }

      return this._attributeMeta;
    }

    get canRead() {
      return this.providerPath.get('canRead');
    }

    get canEdit() {
      return this.providerPath.get('canUpdate');
    }

    get canDelete() {
      return this.providerPath.get('canDelete');
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "name", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "issuer", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "scopesSupported", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "allowedClientIds", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "providerPath", [_dec6], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class2)) || _class);
  _exports.default = OidcProviderModel;
});
;define("vault/models/oidc/scope", ["exports", "@ember-data/model", "vault/macros/lazy-capabilities", "vault/utils/field-to-attrs", "vault/decorators/model-validations"], function (_exports, _model, _lazyCapabilities, _fieldToAttrs, _modelValidations) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _dec5, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4;

  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"vault/macros/lazy-capabilities",0,"vault/utils/field-to-attrs",0,"vault/decorators/model-validations"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  const validations = {
    name: [{
      type: 'presence',
      message: 'Name is required.'
    }]
  };
  let OidcScopeModel = (_dec = (0, _modelValidations.withModelValidations)(validations), _dec2 = (0, _model.attr)('string', {
    editDisabled: true
  }), _dec3 = (0, _model.attr)('string', {
    editType: 'textarea'
  }), _dec4 = (0, _model.attr)('string', {
    label: 'JSON Template',
    editType: 'json',
    mode: 'ruby'
  }), _dec5 = (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`identity/oidc/scope/${'name'}`, 'name'), _dec(_class = (_class2 = class OidcScopeModel extends _model.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "name", _descriptor, this);

      _initializerDefineProperty(this, "description", _descriptor2, this);

      _initializerDefineProperty(this, "template", _descriptor3, this);

      _defineProperty(this, "_attributeMeta", null);

      _initializerDefineProperty(this, "scopePath", _descriptor4, this);
    }

    // cache initial result of expandAttributeMeta in getter and return
    get formFields() {
      if (!this._attributeMeta) {
        this._attributeMeta = (0, _fieldToAttrs.expandAttributeMeta)(this, ['name', 'description', 'template']);
      }

      return this._attributeMeta;
    }

    get canRead() {
      return this.scopePath.get('canRead');
    }

    get canEdit() {
      return this.scopePath.get('canUpdate');
    }

    get canDelete() {
      return this.scopePath.get('canDelete');
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "name", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "description", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "template", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "scopePath", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class2)) || _class);
  _exports.default = OidcScopeModel;
});
;define("vault/models/path-filter-config", ["exports", "@ember-data/model"], function (_exports, _model) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/model"eaimeta@70e063a35619d71f

  var _default = _model.default.extend({
    mode: (0, _model.attr)('string'),
    paths: (0, _model.attr)('array', {
      defaultValue: function () {
        return [];
      }
    })
  });

  _exports.default = _default;
});
;define("vault/models/pki/action", ["exports", "@ember-data/model", "@ember/service", "@glimmer/tracking", "vault/macros/lazy-capabilities", "vault/decorators/model-form-fields", "vault/decorators/model-validations"], function (_exports, _model, _service, _tracking, _lazyCapabilities, _modelFormFields, _modelValidations) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _dec12, _dec13, _dec14, _dec15, _dec16, _dec17, _dec18, _dec19, _dec20, _dec21, _dec22, _dec23, _dec24, _dec25, _dec26, _dec27, _dec28, _dec29, _dec30, _dec31, _dec32, _dec33, _dec34, _dec35, _dec36, _dec37, _dec38, _dec39, _dec40, _dec41, _dec42, _dec43, _dec44, _dec45, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14, _descriptor15, _descriptor16, _descriptor17, _descriptor18, _descriptor19, _descriptor20, _descriptor21, _descriptor22, _descriptor23, _descriptor24, _descriptor25, _descriptor26, _descriptor27, _descriptor28, _descriptor29, _descriptor30, _descriptor31, _descriptor32, _descriptor33, _descriptor34, _descriptor35, _descriptor36, _descriptor37, _descriptor38, _descriptor39, _descriptor40, _descriptor41, _descriptor42, _descriptor43, _descriptor44, _descriptor45, _descriptor46, _descriptor47, _descriptor48, _descriptor49, _descriptor50, _descriptor51;

  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"@ember/service",0,"@glimmer/tracking",0,"vault/macros/lazy-capabilities",0,"vault/decorators/model-form-fields",0,"vault/decorators/model-validations"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  const validations = {
    type: [{
      type: 'presence',
      message: 'Type is required.'
    }],
    commonName: [{
      type: 'presence',
      message: 'Common name is required.'
    }],
    issuerName: [{
      validator(model) {
        if ((model.actionType === 'generate-root' || model.actionType === 'rotate-root') && model.issuerName === 'default') return false;
        return true;
      },

      message: `Issuer name must be unique across all issuers and not be the reserved value 'default'.`
    }],
    keyName: [{
      validator(model) {
        if (model.keyName === 'default') return false;
        return true;
      },

      message: `Key name cannot be the reserved value 'default'`
    }]
  };
  /**
   * This model maps to multiple PKI endpoints, specifically the ones that make up the
   * configuration/create workflow. These endpoints also share a nontypical behavior in that
   * a POST request to the endpoints don't necessarily result in a single entity created --
   * depending on the inputs, some number of issuers, keys, and certificates can be created
   * from the API.
   */

  let PkiActionModel = (_dec = (0, _modelValidations.withModelValidations)(validations), _dec2 = (0, _modelFormFields.withFormFields)(), _dec3 = (0, _model.attr)('string'), _dec4 = (0, _model.attr)('string', {
    readOnly: true,
    masked: true
  }), _dec5 = (0, _model.attr)('string', {
    label: 'Issuing CA',
    readOnly: true,
    masked: true
  }), _dec6 = (0, _model.attr)('string', {
    possibleValues: ['exported', 'internal', 'existing', 'kms'],
    noDefault: true
  }), _dec7 = (0, _model.attr)('string'), _dec8 = (0, _model.attr)('string'), _dec9 = (0, _model.attr)('string', {
    defaultValue: 'default',
    label: 'Key reference'
  }), _dec10 = (0, _model.attr)('string'), _dec11 = (0, _model.attr)('string', {
    label: 'Subject Alternative Names (SANs)',
    editType: 'stringArray'
  }), _dec12 = (0, _model.attr)('string', {
    label: 'IP Subject Alternative Names (IP SANs)',
    editType: 'stringArray'
  }), _dec13 = (0, _model.attr)('string', {
    label: 'URI Subject Alternative Names (URI SANs)',
    editType: 'stringArray'
  }), _dec14 = (0, _model.attr)('string', {
    label: 'Other SANs',
    editType: 'stringArray'
  }), _dec15 = (0, _model.attr)('string', {
    defaultValue: 'pem',
    possibleValues: ['pem', 'der', 'pem_bundle']
  }), _dec16 = (0, _model.attr)('string', {
    defaultValue: 'der',
    possibleValues: ['der', 'pkcs8']
  }), _dec17 = (0, _model.attr)('string', {
    defaultValue: 'rsa',
    possibleValues: ['rsa', 'ed25519', 'ec']
  }), _dec18 = (0, _model.attr)('string', {
    defaultValue: '0' // options management happens in pki-key-parameters

  }), _dec19 = (0, _model.attr)('number', {
    defaultValue: -1
  }), _dec20 = (0, _model.attr)('boolean', {
    label: 'Exclude common name from SANs',
    subText: 'If checked, the common name will not be included in DNS or Email Subject Alternate Names. This is useful if the CN is a human-readable identifier, not a hostname or email address.',
    defaultValue: false
  }), _dec21 = (0, _model.attr)('string', {
    label: 'Permitted DNS domains'
  }), _dec22 = (0, _model.attr)('string', {
    label: 'Organizational Units (OU)',
    subText: 'A list of allowed serial numbers to be requested during certificate issuance. Shell-style globbing is supported. If empty, custom-specified serial numbers will be forbidden.',
    editType: 'stringArray'
  }), _dec23 = (0, _model.attr)({
    editType: 'stringArray'
  }), _dec24 = (0, _model.attr)({
    editType: 'stringArray'
  }), _dec25 = (0, _model.attr)({
    editType: 'stringArray'
  }), _dec26 = (0, _model.attr)({
    editType: 'stringArray'
  }), _dec27 = (0, _model.attr)({
    editType: 'stringArray'
  }), _dec28 = (0, _model.attr)({
    editType: 'stringArray'
  }), _dec29 = (0, _model.attr)('string', {
    subText: "Specifies the requested Subject's named Serial Number value. This has no impact on the Certificate's serial number randomly generated by OpenBao."
  }), _dec30 = (0, _model.attr)('boolean', {
    subText: 'Whether to add a Basic Constraints extension with CA: true.'
  }), _dec31 = (0, _model.attr)({
    label: 'Backdate validity',
    detailsLabel: 'Issued certificate backdating',
    helperTextDisabled: 'OpenBao will use the default value, 30s',
    helperTextEnabled: 'Also called the not_before_duration property. Allows certificates to be valid for a certain time period before now. This is useful to correct clock misalignment on various systems when setting up your CA.',
    editType: 'ttl',
    defaultValue: '30s'
  }), _dec32 = (0, _model.attr)('string'), _dec33 = (0, _model.attr)('string', {
    label: 'Managed key UUID'
  }), _dec34 = (0, _model.attr)({
    label: 'Not valid after',
    detailsLabel: 'Issued certificates expire after',
    subText: 'The time after which this certificate will no longer be valid. This can be a TTL (a range of time from now) or a specific date.',
    editType: 'yield'
  }), _dec35 = (0, _model.attr)('string'), _dec36 = (0, _model.attr)('date'), _dec37 = (0, _model.attr)('string', {
    label: 'Issuer ID',
    readOnly: true,
    detailLinkTo: 'issuers.issuer.details'
  }), _dec38 = (0, _model.attr)('string', {
    label: 'CSR',
    masked: true
  }), _dec39 = (0, _model.attr)('string', {
    label: 'Key ID',
    detailLinkTo: 'keys.key.details'
  }), _dec40 = (0, _model.attr)('string', {
    masked: true
  }), _dec41 = (0, _model.attr)('string'), _dec42 = (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'backend'}/issuers/import/bundle`, 'backend'), _dec43 = (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'backend'}/issuers/generate/root/${'type'}`, 'backend', 'type'), _dec44 = (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'backend'}/issuers/generate/intermediate/${'type'}`, 'backend', 'type'), _dec45 = (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'backend'}/issuers/cross-sign`, 'backend'), _dec(_class = _dec2(_class = (_class2 = class PkiActionModel extends _model.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "secretMountPath", _descriptor, this);

      _initializerDefineProperty(this, "actionType", _descriptor2, this);

      _initializerDefineProperty(this, "pemBundle", _descriptor3, this);

      _initializerDefineProperty(this, "parsedCertificate", _descriptor4, this);

      _initializerDefineProperty(this, "importedIssuers", _descriptor5, this);

      _initializerDefineProperty(this, "importedKeys", _descriptor6, this);

      _initializerDefineProperty(this, "mapping", _descriptor7, this);

      _initializerDefineProperty(this, "certificate", _descriptor8, this);

      _initializerDefineProperty(this, "serialNumber", _descriptor9, this);

      _initializerDefineProperty(this, "issuingCa", _descriptor10, this);

      _initializerDefineProperty(this, "type", _descriptor11, this);

      _initializerDefineProperty(this, "issuerName", _descriptor12, this);

      _initializerDefineProperty(this, "keyName", _descriptor13, this);

      _initializerDefineProperty(this, "keyRef", _descriptor14, this);

      _initializerDefineProperty(this, "commonName", _descriptor15, this);

      _initializerDefineProperty(this, "altNames", _descriptor16, this);

      _initializerDefineProperty(this, "ipSans", _descriptor17, this);

      _initializerDefineProperty(this, "uriSans", _descriptor18, this);

      _initializerDefineProperty(this, "otherSans", _descriptor19, this);

      _initializerDefineProperty(this, "format", _descriptor20, this);

      _initializerDefineProperty(this, "privateKeyFormat", _descriptor21, this);

      _initializerDefineProperty(this, "keyType", _descriptor22, this);

      _initializerDefineProperty(this, "keyBits", _descriptor23, this);

      _initializerDefineProperty(this, "maxPathLength", _descriptor24, this);

      _initializerDefineProperty(this, "excludeCnFromSans", _descriptor25, this);

      _initializerDefineProperty(this, "permittedDnsDomains", _descriptor26, this);

      _initializerDefineProperty(this, "ou", _descriptor27, this);

      _initializerDefineProperty(this, "organization", _descriptor28, this);

      _initializerDefineProperty(this, "country", _descriptor29, this);

      _initializerDefineProperty(this, "locality", _descriptor30, this);

      _initializerDefineProperty(this, "province", _descriptor31, this);

      _initializerDefineProperty(this, "streetAddress", _descriptor32, this);

      _initializerDefineProperty(this, "postalCode", _descriptor33, this);

      _initializerDefineProperty(this, "subjectSerialNumber", _descriptor34, this);

      _initializerDefineProperty(this, "addBasicConstraints", _descriptor35, this);

      _initializerDefineProperty(this, "notBeforeDuration", _descriptor36, this);

      _initializerDefineProperty(this, "managedKeyName", _descriptor37, this);

      _initializerDefineProperty(this, "managedKeyId", _descriptor38, this);

      _initializerDefineProperty(this, "customTtl", _descriptor39, this);

      _initializerDefineProperty(this, "ttl", _descriptor40, this);

      _initializerDefineProperty(this, "notAfter", _descriptor41, this);

      _initializerDefineProperty(this, "issuerId", _descriptor42, this);

      _initializerDefineProperty(this, "csr", _descriptor43, this);

      _initializerDefineProperty(this, "caChain", _descriptor44, this);

      _initializerDefineProperty(this, "keyId", _descriptor45, this);

      _initializerDefineProperty(this, "privateKey", _descriptor46, this);

      _initializerDefineProperty(this, "privateKeyType", _descriptor47, this);

      _initializerDefineProperty(this, "importBundlePath", _descriptor48, this);

      _initializerDefineProperty(this, "generateIssuerRootPath", _descriptor49, this);

      _initializerDefineProperty(this, "generateIssuerCsrPath", _descriptor50, this);

      _initializerDefineProperty(this, "crossSignPath", _descriptor51, this);
    }

    get backend() {
      return this.secretMountPath.currentPath;
    } // To determine which endpoint the config adapter should use,
    // we want to check capabilities on the newer endpoints (those
    // prefixed with "issuers") and use the old path as fallback
    // if user does not have permissions.


    get canImportBundle() {
      return this.importBundlePath.get('canCreate') === true;
    }

    get canGenerateIssuerRoot() {
      return this.generateIssuerRootPath.get('canCreate') === true;
    }

    get canGenerateIssuerIntermediate() {
      return this.generateIssuerCsrPath.get('canCreate') === true;
    }

    get canCrossSign() {
      return this.crossSignPath.get('canCreate') === true;
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "secretMountPath", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "actionType", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "pemBundle", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "parsedCertificate", [_model.attr], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "importedIssuers", [_model.attr], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "importedKeys", [_model.attr], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "mapping", [_model.attr], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "certificate", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, "serialNumber", [_model.attr], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor10 = _applyDecoratedDescriptor(_class2.prototype, "issuingCa", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor11 = _applyDecoratedDescriptor(_class2.prototype, "type", [_dec6], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor12 = _applyDecoratedDescriptor(_class2.prototype, "issuerName", [_dec7], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor13 = _applyDecoratedDescriptor(_class2.prototype, "keyName", [_dec8], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor14 = _applyDecoratedDescriptor(_class2.prototype, "keyRef", [_dec9], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor15 = _applyDecoratedDescriptor(_class2.prototype, "commonName", [_dec10], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor16 = _applyDecoratedDescriptor(_class2.prototype, "altNames", [_dec11], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor17 = _applyDecoratedDescriptor(_class2.prototype, "ipSans", [_dec12], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor18 = _applyDecoratedDescriptor(_class2.prototype, "uriSans", [_dec13], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor19 = _applyDecoratedDescriptor(_class2.prototype, "otherSans", [_dec14], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor20 = _applyDecoratedDescriptor(_class2.prototype, "format", [_dec15], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor21 = _applyDecoratedDescriptor(_class2.prototype, "privateKeyFormat", [_dec16], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor22 = _applyDecoratedDescriptor(_class2.prototype, "keyType", [_dec17], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor23 = _applyDecoratedDescriptor(_class2.prototype, "keyBits", [_dec18], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor24 = _applyDecoratedDescriptor(_class2.prototype, "maxPathLength", [_dec19], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor25 = _applyDecoratedDescriptor(_class2.prototype, "excludeCnFromSans", [_dec20], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor26 = _applyDecoratedDescriptor(_class2.prototype, "permittedDnsDomains", [_dec21], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor27 = _applyDecoratedDescriptor(_class2.prototype, "ou", [_dec22], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor28 = _applyDecoratedDescriptor(_class2.prototype, "organization", [_dec23], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor29 = _applyDecoratedDescriptor(_class2.prototype, "country", [_dec24], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor30 = _applyDecoratedDescriptor(_class2.prototype, "locality", [_dec25], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor31 = _applyDecoratedDescriptor(_class2.prototype, "province", [_dec26], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor32 = _applyDecoratedDescriptor(_class2.prototype, "streetAddress", [_dec27], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor33 = _applyDecoratedDescriptor(_class2.prototype, "postalCode", [_dec28], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor34 = _applyDecoratedDescriptor(_class2.prototype, "subjectSerialNumber", [_dec29], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor35 = _applyDecoratedDescriptor(_class2.prototype, "addBasicConstraints", [_dec30], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor36 = _applyDecoratedDescriptor(_class2.prototype, "notBeforeDuration", [_dec31], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor37 = _applyDecoratedDescriptor(_class2.prototype, "managedKeyName", [_dec32], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor38 = _applyDecoratedDescriptor(_class2.prototype, "managedKeyId", [_dec33], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor39 = _applyDecoratedDescriptor(_class2.prototype, "customTtl", [_dec34], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor40 = _applyDecoratedDescriptor(_class2.prototype, "ttl", [_dec35], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor41 = _applyDecoratedDescriptor(_class2.prototype, "notAfter", [_dec36], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor42 = _applyDecoratedDescriptor(_class2.prototype, "issuerId", [_dec37], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor43 = _applyDecoratedDescriptor(_class2.prototype, "csr", [_dec38], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor44 = _applyDecoratedDescriptor(_class2.prototype, "caChain", [_model.attr], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor45 = _applyDecoratedDescriptor(_class2.prototype, "keyId", [_dec39], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor46 = _applyDecoratedDescriptor(_class2.prototype, "privateKey", [_dec40], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor47 = _applyDecoratedDescriptor(_class2.prototype, "privateKeyType", [_dec41], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor48 = _applyDecoratedDescriptor(_class2.prototype, "importBundlePath", [_dec42], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor49 = _applyDecoratedDescriptor(_class2.prototype, "generateIssuerRootPath", [_dec43], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor50 = _applyDecoratedDescriptor(_class2.prototype, "generateIssuerCsrPath", [_dec44], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor51 = _applyDecoratedDescriptor(_class2.prototype, "crossSignPath", [_dec45], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class2)) || _class) || _class);
  _exports.default = PkiActionModel;
});
;define("vault/models/pki/certificate/base", ["exports", "@ember-data/model", "@ember/debug", "@ember/service", "vault/decorators/model-form-fields", "vault/macros/lazy-capabilities"], function (_exports, _model, _debug, _service, _modelFormFields, _lazyCapabilities) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _dec12, _dec13, _dec14, _dec15, _dec16, _dec17, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14, _descriptor15, _descriptor16, _descriptor17, _descriptor18;

  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"@ember/debug",0,"@ember/service",0,"vault/decorators/model-form-fields",0,"vault/macros/lazy-capabilities"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  /**
   * There are many actions that involve certificates in PKI world.
   * The base certificate model contains shared attributes that make up a certificate's content.
   * Other models under pki/certificate will extend this model and include additional attributes
   * and associated adapter methods for performing various generation and signing actions.
   * This model also displays leaf certs and their parsed attributes (which exist as an object in
   * the attribute `parsedCertificate`)
   */
  // also displays parsedCertificate values in the template
  const certDisplayFields = ['certificate', 'commonName', 'revocationTime', 'serialNumber'];
  let PkiCertificateBaseModel = (_dec = (0, _modelFormFields.withFormFields)(certDisplayFields), _dec2 = (0, _model.attr)('string'), _dec3 = (0, _model.attr)({
    label: 'Not valid after',
    detailsLabel: 'Issued certificates expire after',
    subText: 'The time after which this certificate will no longer be valid. This can be a TTL (a range of time from now) or a specific date.',
    editType: 'yield'
  }), _dec4 = (0, _model.attr)('boolean', {
    label: 'Exclude common name from SANs',
    subText: 'If checked, the common name will not be included in DNS or Email Subject Alternate Names. This is useful if the CN is a human-readable identifier, not a hostname or email address.',
    defaultValue: false
  }), _dec5 = (0, _model.attr)('string', {
    label: 'Subject Alternative Names (SANs)',
    subText: 'The requested Subject Alternative Names; if email protection is enabled for the role, this may contain email addresses.',
    editType: 'stringArray'
  }), _dec6 = (0, _model.attr)('string', {
    label: 'IP Subject Alternative Names (IP SANs)',
    subText: 'Only valid if the role allows IP SANs (which is the default).'
  }), _dec7 = (0, _model.attr)('string', {
    label: 'URI Subject Alternative Names (URI SANs)',
    subText: 'If any requested URIs do not match role policy, the entire request will be denied.'
  }), _dec8 = (0, _model.attr)('string', {
    subText: 'Requested other SANs with the format <oid>;UTF8:<utf8 string value> for each entry.'
  }), _dec9 = (0, _model.attr)({
    label: 'CA Chain',
    masked: true
  }), _dec10 = (0, _model.attr)('string', {
    masked: true
  }), _dec11 = (0, _model.attr)('number'), _dec12 = (0, _model.attr)('string', {
    label: 'Issuing CA',
    masked: true
  }), _dec13 = (0, _model.attr)('string', {
    masked: true
  }), _dec14 = (0, _model.attr)('string'), _dec15 = (0, _model.attr)('number', {
    formatDate: true
  }), _dec16 = (0, _model.attr)('string'), _dec17 = (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'backend'}/revoke`, 'backend'), _dec(_class = (_class2 = class PkiCertificateBaseModel extends _model.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "secretMountPath", _descriptor, this);

      _initializerDefineProperty(this, "parsedCertificate", _descriptor2, this);

      _initializerDefineProperty(this, "commonName", _descriptor3, this);

      _initializerDefineProperty(this, "customTtl", _descriptor4, this);

      _initializerDefineProperty(this, "excludeCnFromSans", _descriptor5, this);

      _initializerDefineProperty(this, "altNames", _descriptor6, this);

      _initializerDefineProperty(this, "ipSans", _descriptor7, this);

      _initializerDefineProperty(this, "uriSans", _descriptor8, this);

      _initializerDefineProperty(this, "otherSans", _descriptor9, this);

      _initializerDefineProperty(this, "caChain", _descriptor10, this);

      _initializerDefineProperty(this, "certificate", _descriptor11, this);

      _initializerDefineProperty(this, "expiration", _descriptor12, this);

      _initializerDefineProperty(this, "issuingCa", _descriptor13, this);

      _initializerDefineProperty(this, "privateKey", _descriptor14, this);

      _initializerDefineProperty(this, "privateKeyType", _descriptor15, this);

      _initializerDefineProperty(this, "revocationTime", _descriptor16, this);

      _initializerDefineProperty(this, "serialNumber", _descriptor17, this);

      _initializerDefineProperty(this, "revokePath", _descriptor18, this);
    }

    get useOpenAPI() {
      return true;
    }

    get backend() {
      return this.secretMountPath.currentPath;
    }

    getHelpUrl() {
      (true && !(true) && (0, _debug.assert)('You must provide a helpUrl for OpenAPI', true));
    } // The attributes parsed from parse-pki-cert util live here


    get canRevoke() {
      return this.revokePath.get('isLoading') || this.revokePath.get('canCreate') !== false;
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "secretMountPath", [_service.service], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "parsedCertificate", [_model.attr], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "commonName", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "customTtl", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "excludeCnFromSans", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "altNames", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "ipSans", [_dec6], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "uriSans", [_dec7], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, "otherSans", [_dec8], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor10 = _applyDecoratedDescriptor(_class2.prototype, "caChain", [_dec9], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor11 = _applyDecoratedDescriptor(_class2.prototype, "certificate", [_dec10], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor12 = _applyDecoratedDescriptor(_class2.prototype, "expiration", [_dec11], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor13 = _applyDecoratedDescriptor(_class2.prototype, "issuingCa", [_dec12], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor14 = _applyDecoratedDescriptor(_class2.prototype, "privateKey", [_dec13], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor15 = _applyDecoratedDescriptor(_class2.prototype, "privateKeyType", [_dec14], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor16 = _applyDecoratedDescriptor(_class2.prototype, "revocationTime", [_dec15], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor17 = _applyDecoratedDescriptor(_class2.prototype, "serialNumber", [_dec16], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor18 = _applyDecoratedDescriptor(_class2.prototype, "revokePath", [_dec17], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class2)) || _class);
  _exports.default = PkiCertificateBaseModel;
});
;define("vault/models/pki/certificate/generate", ["exports", "@ember-data/model", "vault/decorators/model-form-fields", "vault/models/pki/certificate/base"], function (_exports, _model, _modelFormFields, _base) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _class, _class2, _descriptor;

  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"vault/decorators/model-form-fields",0,"vault/models/pki/certificate/base"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  const generateFromRole = [{
    default: ['commonName', 'userIds', 'customTtl', 'format', 'privateKeyFormat']
  }, {
    'Subject Alternative Name (SAN) Options': ['excludeCnFromSans', 'altNames', 'ipSans', 'uriSans', 'otherSans']
  }]; // Extra fields returned on the /issue endpoint

  const certDisplayFields = ['certificate', 'commonName', 'revocationTime', 'serialNumber', 'caChain', 'issuingCa', 'privateKey', 'privateKeyType'];
  let PkiCertificateGenerateModel = (_dec = (0, _modelFormFields.withFormFields)(certDisplayFields, generateFromRole), _dec2 = (0, _model.attr)('string'), _dec(_class = (_class2 = class PkiCertificateGenerateModel extends _base.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "role", _descriptor, this);
    }

    getHelpUrl(backend) {
      return `/v1/${backend}/issue/example?help=1`;
    } // role name to issue certificate against for request URL


  }, (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "role", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class2)) || _class);
  _exports.default = PkiCertificateGenerateModel;
});
;define("vault/models/pki/certificate/sign", ["exports", "@ember-data/model", "vault/decorators/model-form-fields", "vault/models/pki/certificate/base"], function (_exports, _model, _modelFormFields, _base) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _class, _class2, _descriptor, _descriptor2, _descriptor3;

  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"vault/decorators/model-form-fields",0,"vault/models/pki/certificate/base"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  const generateFromRole = [{
    default: ['csr', 'commonName', 'customTtl', 'format', 'removeRootsFromChain']
  }, {
    'Subject Alternative Name (SAN) Options': ['excludeCnFromSans', 'altNames', 'ipSans', 'uriSans', 'otherSans']
  }];
  let PkiCertificateSignModel = (_dec = (0, _modelFormFields.withFormFields)(null, generateFromRole), _dec2 = (0, _model.attr)('string'), _dec3 = (0, _model.attr)('string', {
    label: 'CSR',
    editType: 'textarea'
  }), _dec4 = (0, _model.attr)('boolean', {
    subText: 'When checked, the CA chain will not include self-signed CA certificates.'
  }), _dec(_class = (_class2 = class PkiCertificateSignModel extends _base.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "role", _descriptor, this);

      _initializerDefineProperty(this, "csr", _descriptor2, this);

      _initializerDefineProperty(this, "removeRootsFromChain", _descriptor3, this);
    }

    getHelpUrl(backend) {
      return `/v1/${backend}/sign/example?help=1`;
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "role", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "csr", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "removeRootsFromChain", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class2)) || _class);
  _exports.default = PkiCertificateSignModel;
});
;define("vault/models/pki/config/acme", ["exports", "@ember-data/model", "vault/decorators/model-form-fields", "vault/macros/lazy-capabilities"], function (_exports, _model, _modelFormFields, _lazyCapabilities) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8;

  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"vault/decorators/model-form-fields",0,"vault/macros/lazy-capabilities"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let PkiConfigAcmeModel = (_dec = (0, _modelFormFields.withFormFields)(), _dec2 = (0, _model.attr)('boolean', {
    label: 'ACME enabled',
    subText: 'When ACME is disabled, all requests to ACME directory URLs will return 404.'
  }), _dec3 = (0, _model.attr)('string', {
    subText: "Specifies the behavior of the default ACME directory. Can be 'forbid', 'sign-verbatim' or a role given by 'role:<role_name>'. If a role is used, it must be present in 'allowed_roles'."
  }), _dec4 = (0, _model.attr)('array', {
    editType: 'stringArray',
    subText: "The default value '*' allows every role within the mount to be used. If the default_directory_policy specifies a role, it must be allowed under this configuration."
  }), _dec5 = (0, _model.attr)('boolean', {
    label: 'Allow role ExtKeyUsage',
    subText: "When enabled, respect the role's ExtKeyUsage flags. Otherwise, ACME certificates are forced to ServerAuth."
  }), _dec6 = (0, _model.attr)('array', {
    editType: 'stringArray',
    subText: "Specifies a list of issuers allowed to issue certificates via explicit ACME paths. If an allowed role specifies an issuer outside this list, it will be allowed. The default value '*' allows every issuer within the mount."
  }), _dec7 = (0, _model.attr)('string', {
    label: 'EAB policy',
    possibleValues: ['not-required', 'new-account-required', 'always-required']
  }), _dec8 = (0, _model.attr)('string', {
    label: 'DNS resolver',
    subText: 'An optional overriding DNS resolver to use for challenge verification lookups. When not specified, the default system resolver will be used. This allows domains on peered networks with an accessible DNS resolver to be validated.'
  }), _dec9 = (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'id'}/config/acme`, 'id'), _dec(_class = (_class2 = class PkiConfigAcmeModel extends _model.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "enabled", _descriptor, this);

      _initializerDefineProperty(this, "defaultDirectoryPolicy", _descriptor2, this);

      _initializerDefineProperty(this, "allowedRoles", _descriptor3, this);

      _initializerDefineProperty(this, "allowRoleExtKeyUsage", _descriptor4, this);

      _initializerDefineProperty(this, "allowedIssuers", _descriptor5, this);

      _initializerDefineProperty(this, "eabPolicy", _descriptor6, this);

      _initializerDefineProperty(this, "dnsResolver", _descriptor7, this);

      _initializerDefineProperty(this, "acmePath", _descriptor8, this);
    }

    // This model uses the backend value as the model ID
    get useOpenAPI() {
      return true;
    }

    getHelpUrl(backendPath) {
      return `/v1/${backendPath}/config/acme?help=1`;
    } // attrs order in the form is determined by order here


    get canSet() {
      return this.acmePath.get('canUpdate') !== false;
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "enabled", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "defaultDirectoryPolicy", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "allowedRoles", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "allowRoleExtKeyUsage", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "allowedIssuers", [_dec6], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "eabPolicy", [_dec7], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "dnsResolver", [_dec8], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "acmePath", [_dec9], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class2)) || _class);
  _exports.default = PkiConfigAcmeModel;
});
;define("vault/models/pki/config/cluster", ["exports", "@ember-data/model", "vault/decorators/model-form-fields", "vault/macros/lazy-capabilities"], function (_exports, _model, _modelFormFields, _lazyCapabilities) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _class, _class2, _descriptor, _descriptor2, _descriptor3;

  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"vault/decorators/model-form-fields",0,"vault/macros/lazy-capabilities"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let PkiConfigClusterModel = (_dec = (0, _modelFormFields.withFormFields)(), _dec2 = (0, _model.attr)('string', {
    label: "Mount's API path",
    subText: "Specifies the path to this performance replication cluster's API mount path, including any namespaces as path components. This address is used for the ACME directories, which must be served over a TLS-enabled listener."
  }), _dec3 = (0, _model.attr)('string', {
    label: 'AIA path',
    subText: "Specifies the path to this performance replication cluster's AIA distribution point; may refer to an external, non-OpenBao responder."
  }), _dec4 = (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'id'}/config/cluster`, 'id'), _dec(_class = (_class2 = class PkiConfigClusterModel extends _model.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "path", _descriptor, this);

      _initializerDefineProperty(this, "aiaPath", _descriptor2, this);

      _initializerDefineProperty(this, "clusterPath", _descriptor3, this);
    }

    // This model uses the backend value as the model ID
    get useOpenAPI() {
      return true;
    }

    getHelpUrl(backendPath) {
      return `/v1/${backendPath}/config/cluster?help=1`;
    }

    get canSet() {
      return this.clusterPath.get('canUpdate') !== false;
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "path", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "aiaPath", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "clusterPath", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class2)) || _class);
  _exports.default = PkiConfigClusterModel;
});
;define("vault/models/pki/config/crl", ["exports", "@ember-data/model", "vault/decorators/model-form-fields", "vault/macros/lazy-capabilities"], function (_exports, _model, _modelFormFields, _lazyCapabilities) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9;

  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"vault/decorators/model-form-fields",0,"vault/macros/lazy-capabilities"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  const formFieldGroups = [{
    'Certificate Revocation List (CRL)': ['expiry', 'autoRebuildGracePeriod', 'deltaRebuildInterval']
  }, {
    'Online Certificate Status Protocol (OCSP)': ['ocspExpiry']
  }];
  let PkiConfigCrlModel = (_dec = (0, _modelFormFields.withFormFields)(null, formFieldGroups), _dec2 = (0, _model.attr)('boolean'), _dec3 = (0, _model.attr)('string', {
    label: 'Auto-rebuild on',
    labelDisabled: 'Auto-rebuild off',
    mapToBoolean: 'autoRebuild',
    isOppositeValue: false,
    editType: 'ttl',
    helperTextEnabled: 'OpenBao will rebuild the CRL in the below grace period before expiration',
    helperTextDisabled: 'OpenBao will not automatically rebuild the CRL'
  }), _dec4 = (0, _model.attr)('boolean'), _dec5 = (0, _model.attr)('string', {
    label: 'Delta CRL building on',
    labelDisabled: 'Delta CRL building off',
    mapToBoolean: 'enableDelta',
    isOppositeValue: false,
    editType: 'ttl',
    helperTextEnabled: 'OpenBao will rebuild the delta CRL at the interval below:',
    helperTextDisabled: 'OpenBao will not rebuild the delta CRL at an interval'
  }), _dec6 = (0, _model.attr)('boolean'), _dec7 = (0, _model.attr)('string', {
    label: 'Expiry',
    labelDisabled: 'No expiry',
    mapToBoolean: 'disable',
    isOppositeValue: true,
    editType: 'ttl',
    helperTextDisabled: 'The CRL will not be built.',
    helperTextEnabled: 'The CRL will expire after:'
  }), _dec8 = (0, _model.attr)('boolean'), _dec9 = (0, _model.attr)('string', {
    label: 'OCSP responder APIs enabled',
    labelDisabled: 'OCSP responder APIs disabled',
    mapToBoolean: 'ocspDisable',
    isOppositeValue: true,
    editType: 'ttl',
    helperTextEnabled: "Requests about a certificate's status will be valid for:",
    helperTextDisabled: 'Requests cannot be made to check if an individual certificate is valid.'
  }), _dec10 = (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'id'}/config/crl`, 'id'), _dec(_class = (_class2 = class PkiConfigCrlModel extends _model.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "autoRebuild", _descriptor, this);

      _initializerDefineProperty(this, "autoRebuildGracePeriod", _descriptor2, this);

      _initializerDefineProperty(this, "enableDelta", _descriptor3, this);

      _initializerDefineProperty(this, "deltaRebuildInterval", _descriptor4, this);

      _initializerDefineProperty(this, "disable", _descriptor5, this);

      _initializerDefineProperty(this, "expiry", _descriptor6, this);

      _initializerDefineProperty(this, "ocspDisable", _descriptor7, this);

      _initializerDefineProperty(this, "ocspExpiry", _descriptor8, this);

      _initializerDefineProperty(this, "crlPath", _descriptor9, this);
    }

    get canSet() {
      return this.crlPath.get('canUpdate') !== false;
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "autoRebuild", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "autoRebuildGracePeriod", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "enableDelta", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "deltaRebuildInterval", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "disable", [_dec6], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "expiry", [_dec7], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "ocspDisable", [_dec8], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "ocspExpiry", [_dec9], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, "crlPath", [_dec10], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class2)) || _class);
  _exports.default = PkiConfigCrlModel;
});
;define("vault/models/pki/config/urls", ["exports", "@ember-data/model", "vault/decorators/model-form-fields", "vault/macros/lazy-capabilities"], function (_exports, _model, _modelFormFields, _lazyCapabilities) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _dec5, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4;

  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"vault/decorators/model-form-fields",0,"vault/macros/lazy-capabilities"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let PkiConfigUrlsModel = (_dec = (0, _modelFormFields.withFormFields)(), _dec2 = (0, _model.attr)({
    label: 'Issuing certificates',
    subText: 'The URL values for the Issuing Certificate field; these are different URLs for the same resource.',
    showHelpText: false,
    editType: 'stringArray'
  }), _dec3 = (0, _model.attr)({
    label: 'CRL distribution points',
    subText: 'Specifies the URL values for the CRL Distribution Points field.',
    showHelpText: false,
    editType: 'stringArray'
  }), _dec4 = (0, _model.attr)({
    label: 'OCSP Servers',
    subText: 'Specifies the URL values for the OCSP Servers field.',
    showHelpText: false,
    editType: 'stringArray'
  }), _dec5 = (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'id'}/config/urls`, 'id'), _dec(_class = (_class2 = class PkiConfigUrlsModel extends _model.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "issuingCertificates", _descriptor, this);

      _initializerDefineProperty(this, "crlDistributionPoints", _descriptor2, this);

      _initializerDefineProperty(this, "ocspServers", _descriptor3, this);

      _initializerDefineProperty(this, "urlsPath", _descriptor4, this);
    }

    // This model uses the backend value as the model ID
    get useOpenAPI() {
      return true;
    }

    getHelpUrl(backendPath) {
      return `/v1/${backendPath}/config/urls?help=1`;
    }

    get canSet() {
      return this.urlsPath.get('canUpdate') !== false;
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "issuingCertificates", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "crlDistributionPoints", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "ocspServers", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "urlsPath", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class2)) || _class);
  _exports.default = PkiConfigUrlsModel;
});
;define("vault/models/pki/issuer", ["exports", "@ember-data/model", "vault/decorators/model-form-fields", "vault/macros/lazy-capabilities", "@ember/service"], function (_exports, _model, _modelFormFields, _lazyCapabilities, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _dec12, _dec13, _dec14, _dec15, _dec16, _dec17, _dec18, _dec19, _dec20, _dec21, _dec22, _dec23, _dec24, _dec25, _dec26, _dec27, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14, _descriptor15, _descriptor16, _descriptor17, _descriptor18, _descriptor19, _descriptor20, _descriptor21, _descriptor22, _descriptor23, _descriptor24, _descriptor25, _descriptor26, _descriptor27, _descriptor28, _descriptor29, _descriptor30, _descriptor31, _descriptor32, _descriptor33, _descriptor34;

  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"vault/decorators/model-form-fields",0,"vault/macros/lazy-capabilities",0,"@ember/service"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  const issuerUrls = ['issuingCertificates', 'crlDistributionPoints', 'ocspServers'];
  const inputFields = ['issuerName', 'leafNotAfterBehavior', 'usage', 'manualChain', 'revocationSignatureAlgorithm', ...issuerUrls];
  const displayFields = [{
    default: ['certificate', 'caChain', 'commonName', 'issuerName', 'issuerId', 'keyId'] // also displays parsedCertificate values in the template

  }, {
    'Issuer URLs': issuerUrls
  }];
  let PkiIssuerModel = (_dec = (0, _modelFormFields.withFormFields)(inputFields, displayFields), _dec2 = (0, _model.attr)('string', {
    label: 'Issuer ID',
    detailLinkTo: 'issuers.issuer.details'
  }), _dec3 = (0, _model.attr)('string', {
    label: 'Default key ID',
    detailLinkTo: 'keys.key.details'
  }), _dec4 = (0, _model.attr)({
    label: 'CA Chain',
    masked: true
  }), _dec5 = (0, _model.attr)({
    masked: true
  }), _dec6 = (0, _model.attr)('string'), _dec7 = (0, _model.attr)('string'), _dec8 = (0, _model.attr)({
    label: 'Subject Alternative Names (SANs)'
  }), _dec9 = (0, _model.attr)({
    label: 'IP SANs'
  }), _dec10 = (0, _model.attr)({
    label: 'URI SANs'
  }), _dec11 = (0, _model.attr)({
    label: 'Other SANs'
  }), _dec12 = (0, _model.attr)('string'), _dec13 = (0, _model.attr)({
    label: 'Leaf notAfter behavior',
    subText: 'What happens when a leaf certificate is issued, but its NotAfter field (and therefore its expiry date) exceeds that of this issuer.',
    docLink: '/api-docs/secret/pki#update-issuer',
    editType: 'yield',
    valueOptions: ['err', 'truncate', 'permit']
  }), _dec14 = (0, _model.attr)({
    subText: 'Allowed usages for this issuer. It can always be read.',
    editType: 'yield',
    valueOptions: [{
      label: 'Issuing certificates',
      value: 'issuing-certificates'
    }, {
      label: 'Signing CRLs',
      value: 'crl-signing'
    }, {
      label: 'Signing OCSPs',
      value: 'ocsp-signing'
    }]
  }), _dec15 = (0, _model.attr)('string', {
    subText: "An advanced field useful when automatic chain building isn't desired. The first element must be the present issuer's reference."
  }), _dec16 = (0, _model.attr)({
    subText: 'The signature algorithm to use when building CRLs. The default value (empty string) is for Go to select the signature algorithm automatically, which may not always work.',
    noDefault: true,
    possibleValues: ['sha256withrsa', 'ecdsawithsha384', 'sha256withrsapss', 'ed25519', 'sha384withrsapss', 'sha512withrsapss', 'pureed25519', 'sha384withrsa', 'sha512withrsa', 'ecdsawithsha256', 'ecdsawithsha512']
  }), _dec17 = (0, _model.attr)('string', {
    subText: 'The URL values for the Issuing Certificate field; these are different URLs for the same resource.',
    editType: 'stringArray'
  }), _dec18 = (0, _model.attr)('string', {
    label: 'CRL distribution points',
    subText: 'Specifies the URL values for the CRL Distribution Points field.',
    editType: 'stringArray'
  }), _dec19 = (0, _model.attr)('string', {
    label: 'OCSP servers',
    subText: 'Specifies the URL values for the OCSP Servers field.',
    editType: 'stringArray'
  }), _dec20 = (0, _model.attr)('string'), _dec21 = (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'backend'}/issuer/${'issuerId'}`), _dec22 = (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'backend'}/root/rotate/exported`), _dec23 = (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'backend'}/root/rotate/internal`), _dec24 = (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'backend'}/root/rotate/existing`), _dec25 = (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'backend'}/root`, 'backend'), _dec26 = (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'backend'}/intermediate/cross-sign`), _dec27 = (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'backend'}/issuer/${'issuerId'}/sign-intermediate`), _dec(_class = (_class2 = class PkiIssuerModel extends _model.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "secretMountPath", _descriptor, this);

      _initializerDefineProperty(this, "isDefault", _descriptor2, this);

      _initializerDefineProperty(this, "issuerId", _descriptor3, this);

      _initializerDefineProperty(this, "keyId", _descriptor4, this);

      _initializerDefineProperty(this, "caChain", _descriptor5, this);

      _initializerDefineProperty(this, "certificate", _descriptor6, this);

      _initializerDefineProperty(this, "serialNumber", _descriptor7, this);

      _initializerDefineProperty(this, "parsedCertificate", _descriptor8, this);

      _initializerDefineProperty(this, "commonName", _descriptor9, this);

      _initializerDefineProperty(this, "isRoot", _descriptor10, this);

      _initializerDefineProperty(this, "subjectSerialNumber", _descriptor11, this);

      _initializerDefineProperty(this, "altNames", _descriptor12, this);

      _initializerDefineProperty(this, "ipSans", _descriptor13, this);

      _initializerDefineProperty(this, "uriSans", _descriptor14, this);

      _initializerDefineProperty(this, "otherSans", _descriptor15, this);

      _initializerDefineProperty(this, "issuerName", _descriptor16, this);

      _initializerDefineProperty(this, "leafNotAfterBehavior", _descriptor17, this);

      _initializerDefineProperty(this, "usage", _descriptor18, this);

      _initializerDefineProperty(this, "manualChain", _descriptor19, this);

      _initializerDefineProperty(this, "revocationSignatureAlgorithm", _descriptor20, this);

      _initializerDefineProperty(this, "issuingCertificates", _descriptor21, this);

      _initializerDefineProperty(this, "crlDistributionPoints", _descriptor22, this);

      _initializerDefineProperty(this, "ocspServers", _descriptor23, this);

      _initializerDefineProperty(this, "pemBundle", _descriptor24, this);

      _initializerDefineProperty(this, "importedIssuers", _descriptor25, this);

      _initializerDefineProperty(this, "importedKeys", _descriptor26, this);

      _initializerDefineProperty(this, "mapping", _descriptor27, this);

      _initializerDefineProperty(this, "issuerPath", _descriptor28, this);

      _initializerDefineProperty(this, "rotateExported", _descriptor29, this);

      _initializerDefineProperty(this, "rotateInternal", _descriptor30, this);

      _initializerDefineProperty(this, "rotateExisting", _descriptor31, this);

      _initializerDefineProperty(this, "deletePath", _descriptor32, this);

      _initializerDefineProperty(this, "crossSignPath", _descriptor33, this);

      _initializerDefineProperty(this, "signIntermediate", _descriptor34, this);
    }

    // TODO use openAPI after removing route extension (see pki/roles route for example)
    get useOpenAPI() {
      return false;
    }

    get backend() {
      return this.secretMountPath.currentPath;
    }

    get issuerRef() {
      return this.issuerName || this.issuerId;
    } // READ ONLY


    get canRotateIssuer() {
      return this.rotateExported.get('canUpdate') !== false || this.rotateExisting.get('canUpdate') !== false || this.rotateInternal.get('canUpdate') !== false;
    }

    get canCrossSign() {
      return this.crossSignPath.get('canUpdate') !== false;
    }

    get canSignIntermediate() {
      return this.signIntermediate.get('canUpdate') !== false;
    }

    get canConfigure() {
      return this.issuerPath.get('canUpdate') !== false;
    }

    get canDeleteAllIssuers() {
      return this.deletePath.get('isLoading') || this.deletePath.get('canDelete') !== false;
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "secretMountPath", [_service.service], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "isDefault", [_model.attr], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "issuerId", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "keyId", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "caChain", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "certificate", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "serialNumber", [_dec6], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "parsedCertificate", [_model.attr], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, "commonName", [_dec7], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor10 = _applyDecoratedDescriptor(_class2.prototype, "isRoot", [_model.attr], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor11 = _applyDecoratedDescriptor(_class2.prototype, "subjectSerialNumber", [_model.attr], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor12 = _applyDecoratedDescriptor(_class2.prototype, "altNames", [_dec8], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor13 = _applyDecoratedDescriptor(_class2.prototype, "ipSans", [_dec9], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor14 = _applyDecoratedDescriptor(_class2.prototype, "uriSans", [_dec10], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor15 = _applyDecoratedDescriptor(_class2.prototype, "otherSans", [_dec11], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor16 = _applyDecoratedDescriptor(_class2.prototype, "issuerName", [_dec12], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor17 = _applyDecoratedDescriptor(_class2.prototype, "leafNotAfterBehavior", [_dec13], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor18 = _applyDecoratedDescriptor(_class2.prototype, "usage", [_dec14], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor19 = _applyDecoratedDescriptor(_class2.prototype, "manualChain", [_dec15], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor20 = _applyDecoratedDescriptor(_class2.prototype, "revocationSignatureAlgorithm", [_dec16], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor21 = _applyDecoratedDescriptor(_class2.prototype, "issuingCertificates", [_dec17], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor22 = _applyDecoratedDescriptor(_class2.prototype, "crlDistributionPoints", [_dec18], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor23 = _applyDecoratedDescriptor(_class2.prototype, "ocspServers", [_dec19], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor24 = _applyDecoratedDescriptor(_class2.prototype, "pemBundle", [_dec20], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor25 = _applyDecoratedDescriptor(_class2.prototype, "importedIssuers", [_model.attr], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor26 = _applyDecoratedDescriptor(_class2.prototype, "importedKeys", [_model.attr], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor27 = _applyDecoratedDescriptor(_class2.prototype, "mapping", [_model.attr], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor28 = _applyDecoratedDescriptor(_class2.prototype, "issuerPath", [_dec21], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor29 = _applyDecoratedDescriptor(_class2.prototype, "rotateExported", [_dec22], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor30 = _applyDecoratedDescriptor(_class2.prototype, "rotateInternal", [_dec23], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor31 = _applyDecoratedDescriptor(_class2.prototype, "rotateExisting", [_dec24], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor32 = _applyDecoratedDescriptor(_class2.prototype, "deletePath", [_dec25], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor33 = _applyDecoratedDescriptor(_class2.prototype, "crossSignPath", [_dec26], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor34 = _applyDecoratedDescriptor(_class2.prototype, "signIntermediate", [_dec27], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class2)) || _class);
  _exports.default = PkiIssuerModel;
});
;define("vault/models/pki/key", ["exports", "@ember-data/model", "@ember/service", "vault/macros/lazy-capabilities", "vault/decorators/model-form-fields", "vault/decorators/model-validations"], function (_exports, _model, _service, _lazyCapabilities, _modelFormFields, _modelValidations) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _dec12, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11;

  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"@ember/service",0,"vault/macros/lazy-capabilities",0,"vault/decorators/model-form-fields",0,"vault/decorators/model-validations"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  const validations = {
    type: [{
      type: 'presence',
      message: 'Type is required.'
    }],
    keyType: [{
      type: 'presence',
      message: 'Please select a key type.'
    }],
    keyName: [{
      validator(model) {
        if (model.keyName === 'default') return false;
        return true;
      },

      message: `Key name cannot be the reserved value 'default'`
    }]
  };
  const displayFields = ['keyId', 'keyName', 'keyType', 'keyBits'];
  const formFieldGroups = [{
    default: ['keyName', 'type']
  }, {
    'Key parameters': ['keyType', 'keyBits']
  }];
  let PkiKeyModel = (_dec = (0, _modelValidations.withModelValidations)(validations), _dec2 = (0, _modelFormFields.withFormFields)(displayFields, formFieldGroups), _dec3 = (0, _model.attr)('string', {
    detailsLabel: 'Key ID'
  }), _dec4 = (0, _model.attr)('string', {
    subText: `Optional, human-readable name for this key. The name must be unique across all keys and cannot be 'default'.`
  }), _dec5 = (0, _model.attr)('string', {
    noDefault: true,
    possibleValues: ['internal', 'exported'],
    subText: 'The type of operation. If exported, the private key will be returned in the response; if internal the private key will not be returned and cannot be retrieved later.'
  }), _dec6 = (0, _model.attr)('string', {
    noDefault: true,
    possibleValues: ['rsa', 'ec', 'ed25519'],
    subText: 'The type of key that will be generated. Must be rsa, ed25519, or ec. '
  }), _dec7 = (0, _model.attr)('string', {
    label: 'Key bits',
    noDefault: true,
    subText: 'Bit length of the key to generate.'
  }), _dec8 = (0, _model.attr)('string'), _dec9 = (0, _model.attr)('string'), _dec10 = (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'backend'}/key/${'keyId'}`, 'backend', 'keyId'), _dec11 = (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'backend'}/keys/generate`, 'backend'), _dec12 = (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'backend'}/keys/import`, 'backend'), _dec(_class = _dec2(_class = (_class2 = class PkiKeyModel extends _model.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "secretMountPath", _descriptor, this);

      _initializerDefineProperty(this, "keyId", _descriptor2, this);

      _initializerDefineProperty(this, "keyName", _descriptor3, this);

      _initializerDefineProperty(this, "type", _descriptor4, this);

      _initializerDefineProperty(this, "keyType", _descriptor5, this);

      _initializerDefineProperty(this, "keyBits", _descriptor6, this);

      _initializerDefineProperty(this, "pemBundle", _descriptor7, this);

      _initializerDefineProperty(this, "privateKey", _descriptor8, this);

      _initializerDefineProperty(this, "keyPath", _descriptor9, this);

      _initializerDefineProperty(this, "generatePath", _descriptor10, this);

      _initializerDefineProperty(this, "importPath", _descriptor11, this);
    }

    get backend() {
      return this.secretMountPath.currentPath;
    }
    /* CAPABILITIES
     * Default to show UI elements unless we know they can't access the given path
     */


    get canRead() {
      return this.keyPath.get('canRead') !== false;
    }

    get canEdit() {
      return this.keyPath.get('canUpdate') !== false;
    }

    get canDelete() {
      return this.keyPath.get('canDelete') !== false;
    }

    get canGenerateKey() {
      return this.generatePath.get('canUpdate') !== false;
    }

    get canImportKey() {
      return this.importPath.get('canUpdate') !== false;
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "secretMountPath", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "keyId", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "keyName", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "type", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "keyType", [_dec6], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "keyBits", [_dec7], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "pemBundle", [_dec8], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "privateKey", [_dec9], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, "keyPath", [_dec10], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor10 = _applyDecoratedDescriptor(_class2.prototype, "generatePath", [_dec11], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor11 = _applyDecoratedDescriptor(_class2.prototype, "importPath", [_dec12], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class2)) || _class) || _class);
  _exports.default = PkiKeyModel;
});
;define("vault/models/pki/role", ["exports", "@ember-data/model", "vault/macros/lazy-capabilities", "vault/decorators/model-validations", "vault/decorators/model-form-fields"], function (_exports, _model, _lazyCapabilities, _modelValidations, _modelFormFields) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _dec12, _dec13, _dec14, _dec15, _dec16, _dec17, _dec18, _dec19, _dec20, _dec21, _dec22, _dec23, _dec24, _dec25, _dec26, _dec27, _dec28, _dec29, _dec30, _dec31, _dec32, _dec33, _dec34, _dec35, _dec36, _dec37, _dec38, _dec39, _dec40, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14, _descriptor15, _descriptor16, _descriptor17, _descriptor18, _descriptor19, _descriptor20, _descriptor21, _descriptor22, _descriptor23, _descriptor24, _descriptor25, _descriptor26, _descriptor27, _descriptor28, _descriptor29, _descriptor30, _descriptor31, _descriptor32, _descriptor33, _descriptor34, _descriptor35, _descriptor36, _descriptor37, _descriptor38;

  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"vault/macros/lazy-capabilities",0,"vault/decorators/model-validations",0,"vault/decorators/model-form-fields"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  const validations = {
    name: [{
      type: 'presence',
      message: 'Name is required.'
    }]
  };
  const fieldGroups = [{
    default: ['name', 'issuerRef', 'customTtl', 'notBeforeDuration', 'maxTtl', 'generateLease', 'noStore', 'addBasicConstraints']
  }, {
    'Domain handling': ['allowedDomains', 'allowedDomainsTemplate', 'allowBareDomains', 'allowSubdomains', 'allowGlobDomains', 'allowWildcardCertificates', 'allowLocalhost', // default: true (returned true by OpenApi)
    'allowAnyName', 'enforceHostnames' // default: true (returned true by OpenApi)
    ]
  }, {
    'Key parameters': ['keyType', 'keyBits', 'signatureBits']
  }, {
    'Key usage': ['keyUsage', 'extKeyUsage', 'extKeyUsageOids']
  }, {
    'Policy identifiers': ['policyIdentifiers']
  }, {
    'Subject Alternative Name (SAN) Options': ['allowIpSans', 'allowedUriSans', 'allowUriSansTemplate', 'allowedOtherSans']
  }, {
    'Additional subject fields': ['allowedUserIds', 'allowedSerialNumbers', 'requireCn', 'useCsrCommonName', 'useCsrSans', 'ou', 'organization', 'country', 'locality', 'province', 'streetAddress', 'postalCode']
  }];
  let PkiRoleModel = (_dec = (0, _modelFormFields.withFormFields)(null, fieldGroups), _dec2 = (0, _modelValidations.withModelValidations)(validations), _dec3 = (0, _model.attr)('string', {
    readOnly: true
  }), _dec4 = (0, _model.attr)('string', {
    label: 'Role name',
    fieldValue: 'name',
    editDisabled: true
  }), _dec5 = (0, _model.attr)('string', {
    label: 'Issuer reference',
    detailsLabel: 'Issuer',
    defaultValue: 'default',
    subText: `Specifies the issuer that will be used to create certificates with this role. To find this, run read -field=default pki_int/config/issuers in the console. By default, we will use the mounts default issuer.`
  }), _dec6 = (0, _model.attr)({
    label: 'Not valid after',
    detailsLabel: 'Issued certificates expire after',
    subText: 'The time after which this certificate will no longer be valid. This can be a TTL (a range of time from now) or a specific date.',
    editType: 'yield'
  }), _dec7 = (0, _model.attr)({
    label: 'Backdate validity',
    detailsLabel: 'Issued certificate backdating',
    helperTextDisabled: 'OpenBao will use the default value, 30s',
    helperTextEnabled: 'Also called the not_before_duration property. Allows certificates to be valid for a certain time period before now. This is useful to correct clock misalignment on various systems when setting up your CA.',
    editType: 'ttl',
    defaultValue: '30s'
  }), _dec8 = (0, _model.attr)({
    label: 'Max TTL',
    helperTextDisabled: 'The maximum Time-To-Live of certificates generated by this role. If not set, the system max lease TTL will be used.',
    editType: 'ttl',
    defaultShown: 'System default'
  }), _dec9 = (0, _model.attr)('boolean', {
    label: 'Generate lease with certificate',
    subText: 'Specifies if certificates issued/signed against this role will have OpenBao leases attached to them.',
    editType: 'boolean',
    docLink: '/api-docs/secret/pki#create-update-role'
  }), _dec10 = (0, _model.attr)('boolean', {
    label: 'Do not store certificates in storage backend',
    detailsLabel: 'Store in storage backend',
    // template reverses value
    subText: 'This can improve performance when issuing large numbers of certificates. However, certificates issued in this way cannot be enumerated or revoked.',
    editType: 'boolean',
    docLink: '/api-docs/secret/pki#create-update-role'
  }), _dec11 = (0, _model.attr)('boolean', {
    label: 'Basic constraints valid for non-CA',
    detailsLabel: 'Add basic constraints',
    subText: 'Mark Basic Constraints valid when issuing non-CA certificates.',
    editType: 'boolean'
  }), _dec12 = (0, _model.attr)({
    label: 'Allowed domains',
    subText: 'Specifies the domains this role is allowed to issue certificates for.',
    editType: 'stringArray'
  }), _dec13 = (0, _model.attr)('boolean', {
    label: 'Allow templates in allowed domains'
  }), _dec14 = (0, _model.attr)('string', {
    label: 'Key type',
    possibleValues: ['rsa', 'ec', 'ed25519', 'any'],
    defaultValue: 'rsa'
  }), _dec15 = (0, _model.attr)('string', {
    label: 'Key bits',
    defaultValue: '2048'
  }), _dec16 = (0, _model.attr)('string', {
    label: 'Signature bits',
    subText: `Only applicable for key_type 'RSA'. Ignore for other key types.`,
    defaultValue: '0',
    possibleValues: ['0', '256', '384', '512']
  }), _dec17 = (0, _model.attr)({
    label: 'Policy identifiers',
    subText: 'A list of policy object identifiers (OIDs).',
    editType: 'stringArray'
  }), _dec18 = (0, _model.attr)('boolean', {
    label: 'Allow IP SANs',
    subText: 'Specifies if clients can request IP Subject Alternative Names.',
    editType: 'boolean',
    defaultValue: true
  }), _dec19 = (0, _model.attr)({
    label: 'URI Subject Alternative Names (URI SANs)',
    subText: 'Defines allowed URI Subject Alternative Names.',
    editType: 'stringArray',
    docLink: '/docs/concepts/policies'
  }), _dec20 = (0, _model.attr)('boolean', {
    label: 'Allow URI SANs template',
    subText: 'If true, the URI SANs above may contain templates, as with ACL Path Templating.',
    editType: 'boolean',
    docLink: '/docs/concepts/policies'
  }), _dec21 = (0, _model.attr)({
    label: 'Other SANs',
    subText: 'Defines allowed custom OID/UTF8-string SANs.',
    editType: 'stringArray'
  }), _dec22 = (0, _model.attr)({
    label: 'Allowed serial numbers',
    subText: 'A list of allowed serial numbers to be requested during certificate issuance. Shell-style globbing is supported. If empty, custom-specified serial numbers will be forbidden.',
    editType: 'stringArray'
  }), _dec23 = (0, _model.attr)('boolean', {
    label: 'Require common name',
    subText: 'If set to false, common name will be optional when generating a certificate.',
    defaultValue: true
  }), _dec24 = (0, _model.attr)('boolean', {
    label: 'Use CSR common name',
    subText: 'When used with the CSR signing endpoint, the common name in the CSR will be used instead of taken from the JSON data.',
    defaultValue: true
  }), _dec25 = (0, _model.attr)('boolean', {
    label: 'Use CSR SANs',
    subText: 'When used with the CSR signing endpoint, the subject alternate names in the CSR will be used instead of taken from the JSON data.',
    defaultValue: true
  }), _dec26 = (0, _model.attr)({
    label: 'Organization Units (OU)',
    subText: 'A list of allowed serial numbers to be requested during certificate issuance. Shell-style globbing is supported. If empty, custom-specified serial numbers will be forbidden.',
    editType: 'stringArray'
  }), _dec27 = (0, _model.attr)('array', {
    defaultValue() {
      return ['DigitalSignature', 'KeyAgreement', 'KeyEncipherment'];
    },

    defaultShown: 'None'
  }), _dec28 = (0, _model.attr)('array', {
    defaultShown: 'None'
  }), _dec29 = (0, _model.attr)('array', {
    defaultShown: 'None'
  }), _dec30 = (0, _model.attr)({
    editType: 'stringArray'
  }), _dec31 = (0, _model.attr)({
    editType: 'stringArray'
  }), _dec32 = (0, _model.attr)({
    editType: 'stringArray'
  }), _dec33 = (0, _model.attr)({
    editType: 'stringArray'
  }), _dec34 = (0, _model.attr)({
    editType: 'stringArray'
  }), _dec35 = (0, _model.attr)({
    editType: 'stringArray'
  }), _dec36 = (0, _model.attr)({
    editType: 'stringArray'
  }), _dec37 = (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'backend'}/roles/${'id'}`, 'backend', 'id'), _dec38 = (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'backend'}/issue/${'id'}`, 'backend', 'id'), _dec39 = (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'backend'}/sign/${'id'}`, 'backend', 'id'), _dec40 = (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'backend'}/sign-verbatim/${'id'}`, 'backend', 'id'), _dec(_class = _dec2(_class = (_class2 = class PkiRoleModel extends _model.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "backend", _descriptor, this);

      _initializerDefineProperty(this, "name", _descriptor2, this);

      _initializerDefineProperty(this, "issuerRef", _descriptor3, this);

      _initializerDefineProperty(this, "customTtl", _descriptor4, this);

      _initializerDefineProperty(this, "notBeforeDuration", _descriptor5, this);

      _initializerDefineProperty(this, "maxTtl", _descriptor6, this);

      _initializerDefineProperty(this, "generateLease", _descriptor7, this);

      _initializerDefineProperty(this, "noStore", _descriptor8, this);

      _initializerDefineProperty(this, "addBasicConstraints", _descriptor9, this);

      _initializerDefineProperty(this, "allowedDomains", _descriptor10, this);

      _initializerDefineProperty(this, "allowedDomainsTemplate", _descriptor11, this);

      _initializerDefineProperty(this, "keyType", _descriptor12, this);

      _initializerDefineProperty(this, "keyBits", _descriptor13, this);

      _initializerDefineProperty(this, "signatureBits", _descriptor14, this);

      _initializerDefineProperty(this, "policyIdentifiers", _descriptor15, this);

      _initializerDefineProperty(this, "allowIpSans", _descriptor16, this);

      _initializerDefineProperty(this, "allowedUriSans", _descriptor17, this);

      _initializerDefineProperty(this, "allowUriSansTemplate", _descriptor18, this);

      _initializerDefineProperty(this, "allowedOtherSans", _descriptor19, this);

      _initializerDefineProperty(this, "allowedSerialNumbers", _descriptor20, this);

      _initializerDefineProperty(this, "requireCn", _descriptor21, this);

      _initializerDefineProperty(this, "useCsrCommonName", _descriptor22, this);

      _initializerDefineProperty(this, "useCsrSans", _descriptor23, this);

      _initializerDefineProperty(this, "ou", _descriptor24, this);

      _initializerDefineProperty(this, "keyUsage", _descriptor25, this);

      _initializerDefineProperty(this, "extKeyUsage", _descriptor26, this);

      _initializerDefineProperty(this, "extKeyUsageOids", _descriptor27, this);

      _initializerDefineProperty(this, "allowedUserIds", _descriptor28, this);

      _initializerDefineProperty(this, "organization", _descriptor29, this);

      _initializerDefineProperty(this, "country", _descriptor30, this);

      _initializerDefineProperty(this, "locality", _descriptor31, this);

      _initializerDefineProperty(this, "province", _descriptor32, this);

      _initializerDefineProperty(this, "streetAddress", _descriptor33, this);

      _initializerDefineProperty(this, "postalCode", _descriptor34, this);

      _initializerDefineProperty(this, "updatePath", _descriptor35, this);

      _initializerDefineProperty(this, "generatePath", _descriptor36, this);

      _initializerDefineProperty(this, "signPath", _descriptor37, this);

      _initializerDefineProperty(this, "signVerbatimPath", _descriptor38, this);
    }

    get useOpenAPI() {
      // must be a getter so it can be accessed in path-help.js
      return true;
    }

    getHelpUrl(backend) {
      return `/v1/${backend}/roles/example?help=1`;
    }

    get canDelete() {
      return this.updatePath.get('isLoading') || this.updatePath.get('canCreate') !== false;
    }

    get canEdit() {
      return this.updatePath.get('isLoading') || this.updatePath.get('canUpdate') !== false;
    }

    get canRead() {
      return this.updatePath.get('isLoading') || this.updatePath.get('canRead') !== false;
    }

    get canGenerateCert() {
      return this.generatePath.get('isLoading') || this.generatePath.get('canUpdate') !== false;
    }

    get canSign() {
      return this.signPath.get('isLoading') || this.signPath.get('canUpdate') !== false;
    }

    get canSignVerbatim() {
      return this.signVerbatimPath.get('isLoading') || this.signVerbatimPath.get('canUpdate') !== false;
    } // Gets header/footer copy for specific toggle groups.


    get fieldGroupsInfo() {
      return {
        'Domain handling': {
          footer: {
            text: 'These options can interact intricately with one another. For more information,',
            docText: 'learn more here.',
            docLink: '/api-docs/secret/pki#allowed_domains'
          }
        },
        'Key parameters': {
          header: {
            text: `These are the parameters for generating or validating the certificate's key material.`
          }
        },
        'Subject Alternative Name (SAN) Options': {
          header: {
            text: `Subject Alternative Names (SANs) are identities (domains, IP addresses, and URIs) OpenBao attaches to the requested certificates.`
          }
        },
        'Additional subject fields': {
          header: {
            text: `Additional identity metadata OpenBao can attach to the requested certificates.`
          }
        }
      };
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "backend", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "name", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "issuerRef", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "customTtl", [_dec6], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "notBeforeDuration", [_dec7], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "maxTtl", [_dec8], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "generateLease", [_dec9], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "noStore", [_dec10], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, "addBasicConstraints", [_dec11], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor10 = _applyDecoratedDescriptor(_class2.prototype, "allowedDomains", [_dec12], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor11 = _applyDecoratedDescriptor(_class2.prototype, "allowedDomainsTemplate", [_dec13], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor12 = _applyDecoratedDescriptor(_class2.prototype, "keyType", [_dec14], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor13 = _applyDecoratedDescriptor(_class2.prototype, "keyBits", [_dec15], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor14 = _applyDecoratedDescriptor(_class2.prototype, "signatureBits", [_dec16], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor15 = _applyDecoratedDescriptor(_class2.prototype, "policyIdentifiers", [_dec17], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor16 = _applyDecoratedDescriptor(_class2.prototype, "allowIpSans", [_dec18], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor17 = _applyDecoratedDescriptor(_class2.prototype, "allowedUriSans", [_dec19], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor18 = _applyDecoratedDescriptor(_class2.prototype, "allowUriSansTemplate", [_dec20], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor19 = _applyDecoratedDescriptor(_class2.prototype, "allowedOtherSans", [_dec21], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor20 = _applyDecoratedDescriptor(_class2.prototype, "allowedSerialNumbers", [_dec22], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor21 = _applyDecoratedDescriptor(_class2.prototype, "requireCn", [_dec23], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor22 = _applyDecoratedDescriptor(_class2.prototype, "useCsrCommonName", [_dec24], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor23 = _applyDecoratedDescriptor(_class2.prototype, "useCsrSans", [_dec25], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor24 = _applyDecoratedDescriptor(_class2.prototype, "ou", [_dec26], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor25 = _applyDecoratedDescriptor(_class2.prototype, "keyUsage", [_dec27], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor26 = _applyDecoratedDescriptor(_class2.prototype, "extKeyUsage", [_dec28], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor27 = _applyDecoratedDescriptor(_class2.prototype, "extKeyUsageOids", [_dec29], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor28 = _applyDecoratedDescriptor(_class2.prototype, "allowedUserIds", [_dec30], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor29 = _applyDecoratedDescriptor(_class2.prototype, "organization", [_dec31], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor30 = _applyDecoratedDescriptor(_class2.prototype, "country", [_dec32], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor31 = _applyDecoratedDescriptor(_class2.prototype, "locality", [_dec33], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor32 = _applyDecoratedDescriptor(_class2.prototype, "province", [_dec34], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor33 = _applyDecoratedDescriptor(_class2.prototype, "streetAddress", [_dec35], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor34 = _applyDecoratedDescriptor(_class2.prototype, "postalCode", [_dec36], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor35 = _applyDecoratedDescriptor(_class2.prototype, "updatePath", [_dec37], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor36 = _applyDecoratedDescriptor(_class2.prototype, "generatePath", [_dec38], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor37 = _applyDecoratedDescriptor(_class2.prototype, "signPath", [_dec39], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor38 = _applyDecoratedDescriptor(_class2.prototype, "signVerbatimPath", [_dec40], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class2)) || _class) || _class);
  _exports.default = PkiRoleModel;
});
;define("vault/models/pki/sign-intermediate", ["exports", "@ember-data/model", "vault/decorators/model-form-fields", "vault/decorators/model-validations", "vault/models/pki/certificate/base"], function (_exports, _model, _modelFormFields, _modelValidations, _base) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10;

  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"vault/decorators/model-form-fields",0,"vault/decorators/model-validations",0,"vault/models/pki/certificate/base"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  const validations = {
    csr: [{
      type: 'presence',
      message: 'CSR is required.'
    }]
  };
  let PkiSignIntermediateModel = (_dec = (0, _modelValidations.withModelValidations)(validations), _dec2 = (0, _modelFormFields.withFormFields)(['csr', 'useCsrValues', 'commonName', 'excludeCnFromSans', 'customTtl', 'notBeforeDuration', 'format', 'permittedDnsDomains', 'maxPathLength']), _dec3 = (0, _model.attr)('string', {
    label: 'CSR',
    editType: 'textarea',
    subText: 'The PEM-encoded CSR to be signed.'
  }), _dec4 = (0, _model.attr)('boolean', {
    label: 'Use CSR values',
    subText: 'Subject information and key usages specified in the CSR will be used over parameters provided here, and extensions in the CSR will be copied into the issued certificate.',
    docLink: '/api-docs/secret/pki#use_csr_values'
  }), _dec5 = (0, _model.attr)({
    label: 'Backdate validity',
    detailsLabel: 'Issued certificate backdating',
    helperTextDisabled: 'OpenBao will use the default value, 30s',
    helperTextEnabled: 'Also called the not_before_duration property. Allows certificates to be valid for a certain time period before now. This is useful to correct clock misalignment on various systems when setting up your CA.',
    editType: 'ttl',
    defaultValue: '30s'
  }), _dec6 = (0, _model.attr)({
    label: 'Permitted DNS domains',
    subText: 'DNS domains for which certificates are allowed to be issued or signed by this CA certificate. Enter each value as a new input.'
  }), _dec7 = (0, _model.attr)({
    subText: 'Specifies the maximum path length to encode in the generated certificate. -1 means no limit',
    defaultValue: '-1'
  }), _dec8 = (0, _model.attr)({
    label: 'Use PSS',
    subText: 'If checked, PSS signatures will be used over PKCS#1v1.5 signatures when a RSA-type issuer is used. Ignored for ECDSA/Ed25519 issuers.'
  }), _dec9 = (0, _model.attr)({
    label: 'Subject Key Identifier (SKID)',
    subText: 'Value for the subject key identifier, specified as a string in hex format. If this is empty, OpenBao will automatically calculate the SKID. '
  }), _dec10 = (0, _model.attr)({
    possibleValues: ['0', '256', '384', '512']
  }), _dec11 = (0, _model.attr)('string', {
    subText: "Specifies the requested Subject's named Serial Number value. This has no impact on the Certificate's serial number randomly generated by OpenBao."
  }), _dec(_class = _dec2(_class = (_class2 = class PkiSignIntermediateModel extends _base.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "issuerRef", _descriptor, this);

      _initializerDefineProperty(this, "csr", _descriptor2, this);

      _initializerDefineProperty(this, "useCsrValues", _descriptor3, this);

      _initializerDefineProperty(this, "notBeforeDuration", _descriptor4, this);

      _initializerDefineProperty(this, "permittedDnsDomains", _descriptor5, this);

      _initializerDefineProperty(this, "maxPathLength", _descriptor6, this);

      _initializerDefineProperty(this, "usePss", _descriptor7, this);

      _initializerDefineProperty(this, "skid", _descriptor8, this);

      _initializerDefineProperty(this, "signatureBits", _descriptor9, this);

      _initializerDefineProperty(this, "subjectSerialNumber", _descriptor10, this);
    }

    getHelpUrl(backend) {
      return `/v1/${backend}/issuer/example/sign-intermediate?help=1`;
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "issuerRef", [_model.attr], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "csr", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "useCsrValues", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "notBeforeDuration", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "permittedDnsDomains", [_dec6], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "maxPathLength", [_dec7], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "usePss", [_dec8], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "skid", [_dec9], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, "signatureBits", [_dec10], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor10 = _applyDecoratedDescriptor(_class2.prototype, "subjectSerialNumber", [_dec11], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class2)) || _class) || _class);
  _exports.default = PkiSignIntermediateModel;
});
;define("vault/models/pki/tidy", ["exports", "@ember-data/model", "@ember/service", "vault/decorators/model-expanded-attributes"], function (_exports, _model, _service, _modelExpandedAttributes) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _dec12, _dec13, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13;

  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"@ember/service",0,"vault/decorators/model-expanded-attributes"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let PkiTidyModel = (_dec = (0, _modelExpandedAttributes.withExpandedAttributes)(), _dec2 = (0, _model.attr)({
    label: 'Tidy ACME enabled',
    labelDisabled: 'Tidy ACME disabled',
    mapToBoolean: 'tidyAcme',
    helperTextDisabled: 'Tidying of ACME accounts, orders and authorizations is disabled',
    helperTextEnabled: 'The amount of time that must pass after creation that an account with no orders is marked revoked, and the amount of time after being marked revoked or deactivated.',
    detailsLabel: 'ACME account safety buffer',
    formatTtl: true
  }), _dec3 = (0, _model.attr)('boolean', {
    label: 'Tidy ACME',
    defaultValue: false
  }), _dec4 = (0, _model.attr)('boolean', {
    label: 'Automatic tidy enabled',
    defaultValue: false
  }), _dec5 = (0, _model.attr)({
    label: 'Automatic tidy enabled',
    labelDisabled: 'Automatic tidy disabled',
    mapToBoolean: 'enabled',
    helperTextEnabled: 'Sets the interval_duration between automatic tidy operations; note that this is from the end of one operation to the start of the next.',
    helperTextDisabled: 'Automatic tidy operations will not run.',
    detailsLabel: 'Automatic tidy duration',
    formatTtl: true
  }), _dec6 = (0, _model.attr)('string', {
    editType: 'ttl',
    helperTextEnabled: 'Specifies a duration that issuers should be kept for, past their NotAfter validity period. Defaults to 365 days (8760 hours).',
    hideToggle: true,
    formatTtl: true
  }), _dec7 = (0, _model.attr)('string', {
    editType: 'ttl',
    helperTextEnabled: 'Specifies the duration to pause between tidying individual certificates. This releases the revocation lock and allows other operations to continue while tidy is running.',
    hideToggle: true,
    formatTtl: true
  }), _dec8 = (0, _model.attr)('string', {
    editType: 'ttl',
    helperTextEnabled: 'For a certificate to be expunged, the time must be after the expiration time of the certificate (according to the local clock) plus the safety buffer. Defaults to 72 hours.',
    hideToggle: true,
    formatTtl: true
  }), _dec9 = (0, _model.attr)('boolean', {
    label: 'Tidy the certificate store'
  }), _dec10 = (0, _model.attr)('boolean', {
    subText: 'Automatically remove expired issuers after the issuer safety buffer duration has elapsed.'
  }), _dec11 = (0, _model.attr)('boolean', {
    label: 'Tidy legacy CA bundle',
    subText: 'Backup any legacy CA/issuers bundle (from Vault versions earlier than 1.11, before the OpenBao fork) to config/ca_bundle.bak. Migration will only occur after issuer safety buffer has passed.'
  }), _dec12 = (0, _model.attr)('boolean', {
    label: 'Tidy revoked certificate issuer associations'
  }), _dec13 = (0, _model.attr)('boolean', {
    label: 'Tidy revoked certificates',
    subText: 'Remove all invalid and expired certificates from storage.'
  }), _dec(_class = (_class2 = class PkiTidyModel extends _model.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "version", _descriptor, this);

      _initializerDefineProperty(this, "acmeAccountSafetyBuffer", _descriptor2, this);

      _initializerDefineProperty(this, "tidyAcme", _descriptor3, this);

      _initializerDefineProperty(this, "enabled", _descriptor4, this);

      _initializerDefineProperty(this, "intervalDuration", _descriptor5, this);

      _initializerDefineProperty(this, "issuerSafetyBuffer", _descriptor6, this);

      _initializerDefineProperty(this, "pauseDuration", _descriptor7, this);

      _initializerDefineProperty(this, "safetyBuffer", _descriptor8, this);

      _initializerDefineProperty(this, "tidyCertStore", _descriptor9, this);

      _initializerDefineProperty(this, "tidyExpiredIssuers", _descriptor10, this);

      _initializerDefineProperty(this, "tidyMoveLegacyCaBundle", _descriptor11, this);

      _initializerDefineProperty(this, "tidyRevokedCertIssuerAssociations", _descriptor12, this);

      _initializerDefineProperty(this, "tidyRevokedCerts", _descriptor13, this);
    }

    get useOpenAPI() {
      return true;
    }

    getHelpUrl(backend) {
      return `/v1/${backend}/config/auto-tidy?help=1`;
    }

    get allGroups() {
      const groups = [{
        autoTidy: ['enabled', 'intervalDuration']
      }, ...this.sharedFields];
      return this._expandGroups(groups);
    } // shared between auto and manual tidy operations


    get sharedFields() {
      const groups = [{
        'Universal operations': ['tidyCertStore', 'tidyRevokedCerts', 'tidyRevokedCertIssuerAssociations', 'safetyBuffer', 'pauseDuration']
      }, {
        'ACME operations': ['tidyAcme', 'acmeAccountSafetyBuffer']
      }, {
        'Issuer operations': ['tidyExpiredIssuers', 'tidyMoveLegacyCaBundle', 'issuerSafetyBuffer']
      }];
      return groups;
    }

    get formFieldGroups() {
      return this._expandGroups(this.sharedFields);
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "version", [_service.service], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "acmeAccountSafetyBuffer", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "tidyAcme", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "enabled", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "intervalDuration", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "issuerSafetyBuffer", [_dec6], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "pauseDuration", [_dec7], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "safetyBuffer", [_dec8], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, "tidyCertStore", [_dec9], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor10 = _applyDecoratedDescriptor(_class2.prototype, "tidyExpiredIssuers", [_dec10], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor11 = _applyDecoratedDescriptor(_class2.prototype, "tidyMoveLegacyCaBundle", [_dec11], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor12 = _applyDecoratedDescriptor(_class2.prototype, "tidyRevokedCertIssuerAssociations", [_dec12], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor13 = _applyDecoratedDescriptor(_class2.prototype, "tidyRevokedCerts", [_dec13], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class2)) || _class);
  _exports.default = PkiTidyModel;
});
;define("vault/models/policy", ["exports", "@ember-data/model", "@ember/object/computed", "@ember/object", "vault/macros/lazy-capabilities"], function (_exports, _model, _computed, _object, _lazyCapabilities) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"@ember/object/computed",0,"@ember/object",0,"vault/macros/lazy-capabilities"eaimeta@70e063a35619d71f

  var _default = _model.default.extend({
    name: (0, _model.attr)('string'),
    policy: (0, _model.attr)('string'),
    policyType: (0, _object.computed)('constructor.modelName', function () {
      return this.constructor.modelName.split('/')[1];
    }),
    updatePath: (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`sys/policies/${'policyType'}/${'id'}`, 'id', 'policyType'),
    canDelete: (0, _computed.alias)('updatePath.canDelete'),
    canEdit: (0, _computed.alias)('updatePath.canUpdate'),
    canRead: (0, _computed.alias)('updatePath.canRead'),
    format: (0, _object.computed)('policy', function () {
      const policy = this.policy;
      let isJSON;

      try {
        const parsed = JSON.parse(policy);

        if (parsed) {
          isJSON = true;
        }
      } catch (e) {
        // can't parse JSON
        isJSON = false;
      }

      return isJSON ? 'json' : 'hcl';
    })
  });

  _exports.default = _default;
});
;define("vault/models/policy/acl", ["exports", "vault/models/policy"], function (_exports, _policy) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/models/policy"eaimeta@70e063a35619d71f

  var _default = _policy.default.extend();

  _exports.default = _default;
});
;define("vault/models/policy/egp", ["exports", "@ember-data/model", "@ember/object", "vault/models/policy/rgp", "vault/utils/field-to-attrs"], function (_exports, _model, _object, _rgp, _fieldToAttrs) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"@ember/object",0,"vault/models/policy/rgp",0,"vault/utils/field-to-attrs"eaimeta@70e063a35619d71f

  var _default = _rgp.default.extend({
    paths: (0, _model.attr)({
      editType: 'stringArray'
    }),
    additionalAttrs: (0, _object.computed)(function () {
      return (0, _fieldToAttrs.expandAttributeMeta)(this, ['enforcementLevel', 'paths']);
    })
  });

  _exports.default = _default;
});
;define("vault/models/policy/rgp", ["exports", "@ember-data/model", "@ember/object", "vault/models/policy", "vault/utils/field-to-attrs"], function (_exports, _model, _object, _policy, _fieldToAttrs) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"@ember/object",0,"vault/models/policy",0,"vault/utils/field-to-attrs"eaimeta@70e063a35619d71f

  var _default = _policy.default.extend({
    enforcementLevel: (0, _model.attr)('string', {
      possibleValues: ['advisory', 'soft-mandatory', 'hard-mandatory'],
      defaultValue: 'hard-mandatory'
    }),
    additionalAttrs: (0, _object.computed)(function () {
      return (0, _fieldToAttrs.expandAttributeMeta)(this, ['enforcementLevel']);
    })
  });

  _exports.default = _default;
});
;define("vault/models/raft-join", ["exports", "@ember-data/model", "vault/utils/field-to-attrs", "@ember/object"], function (_exports, _model, _fieldToAttrs, _object) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"vault/utils/field-to-attrs",0,"@ember/object"eaimeta@70e063a35619d71f

  //leader_api_addr (string: <required>) – Address of the leader node in the Raft cluster to which this node is trying to join.
  //retry (bool: false) - Retry joining the Raft cluster in case of failures.
  //leader_ca_cert (string: "") - CA certificate used to communicate with Raft's leader node.
  //leader_client_cert (string: "") - Client certificate used to communicate with Raft's leader node.
  //leader_client_key (string: "") - Client key used to communicate with Raft's leader node.
  var _default = _model.default.extend({
    leaderApiAddr: (0, _model.attr)('string', {
      label: 'Leader API Address'
    }),
    retry: (0, _model.attr)('boolean', {
      label: 'Keep retrying to join in case of failures'
    }),
    leaderCaCert: (0, _model.attr)('string', {
      label: 'Leader CA Certificate',
      editType: 'file'
    }),
    leaderClientCert: (0, _model.attr)('string', {
      label: 'Leader Client Certificate',
      editType: 'file'
    }),
    leaderClientKey: (0, _model.attr)('string', {
      label: 'Leader Client Key',
      editType: 'file'
    }),
    fields: (0, _object.computed)(function () {
      return (0, _fieldToAttrs.expandAttributeMeta)(this, ['leaderApiAddr', 'leaderCaCert', 'leaderClientCert', 'leaderClientKey', 'retry']);
    })
  });

  _exports.default = _default;
});
;define("vault/models/role-aws", ["exports", "@ember-data/model", "@ember/object/computed", "@ember/object", "vault/macros/lazy-capabilities", "vault/utils/field-to-attrs"], function (_exports, _model, _computed, _object, _lazyCapabilities, _fieldToAttrs) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"@ember/object/computed",0,"@ember/object",0,"vault/macros/lazy-capabilities",0,"vault/utils/field-to-attrs"eaimeta@70e063a35619d71f

  const CREDENTIAL_TYPES = [{
    value: 'iam_user',
    displayName: 'IAM User'
  }, {
    value: 'assumed_role',
    displayName: 'Assumed Role'
  }, {
    value: 'federation_token',
    displayName: 'Federation Token'
  }];

  var _default = _model.default.extend({
    backend: (0, _model.attr)('string', {
      readOnly: true
    }),
    name: (0, _model.attr)('string', {
      label: 'Role name',
      readOnly: true
    }),
    // credentialTypes are for backwards compatibility.
    // we use this to populate "credentialType" in
    // the serializer. if there is more than one, the
    // show and edit pages will show a warning
    credentialTypes: (0, _model.attr)('array', {
      readOnly: true
    }),
    credentialType: (0, _model.attr)('string', {
      defaultValue: 'iam_user',
      possibleValues: CREDENTIAL_TYPES
    }),
    roleArns: (0, _model.attr)({
      editType: 'stringArray',
      label: 'Role ARNs'
    }),
    policyArns: (0, _model.attr)({
      editType: 'stringArray',
      label: 'Policy ARNs'
    }),
    policyDocument: (0, _model.attr)('string', {
      editType: 'json',
      helpText: 'A policy is an object in AWS that, when associated with an identity or resource, defines their permissions.' // Cannot have a default_value on policy_document because in some cases AWS expects this value to be empty.

    }),
    fields: (0, _object.computed)('credentialType', function () {
      const credentialType = this.credentialType;
      const keysForType = {
        iam_user: ['name', 'credentialType', 'policyArns', 'policyDocument'],
        assumed_role: ['name', 'credentialType', 'roleArns', 'policyDocument'],
        federation_token: ['name', 'credentialType', 'policyDocument']
      };
      return (0, _fieldToAttrs.expandAttributeMeta)(this, keysForType[credentialType]);
    }),
    updatePath: (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'backend'}/roles/${'id'}`, 'backend', 'id'),
    canDelete: (0, _computed.alias)('updatePath.canDelete'),
    canEdit: (0, _computed.alias)('updatePath.canUpdate'),
    canRead: (0, _computed.alias)('updatePath.canRead'),
    generatePath: (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'backend'}/creds/${'id'}`, 'backend', 'id'),
    canGenerate: (0, _computed.alias)('generatePath.canUpdate')
  });

  _exports.default = _default;
});
;define("vault/models/role-jwt", ["exports", "@ember-data/model", "core/utils/parse-url"], function (_exports, _model, _parseUrl) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = _exports.PROVIDER_WITH_LOGO = _exports.DOMAIN_STRINGS = void 0;

  var _dec, _class, _descriptor;

  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"core/utils/parse-url"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  const DOMAIN_STRINGS = {
    'github.com': 'GitHub',
    'gitlab.com': 'GitLab',
    'google.com': 'Google',
    'ping.com': 'Ping',
    'okta.com': 'Okta',
    'auth0.com': 'Auth0'
  };
  _exports.DOMAIN_STRINGS = DOMAIN_STRINGS;
  const PROVIDER_WITH_LOGO = ['GitLab', 'Google', 'Auth0'];
  _exports.PROVIDER_WITH_LOGO = PROVIDER_WITH_LOGO;
  let RoleJwtModel = (_dec = (0, _model.attr)('string'), (_class = class RoleJwtModel extends _model.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "authUrl", _descriptor, this);
    }

    get providerName() {
      const {
        hostname
      } = (0, _parseUrl.default)(this.authUrl);
      const firstMatch = Object.keys(DOMAIN_STRINGS).find(name => hostname.includes(name));
      return DOMAIN_STRINGS[firstMatch] || null;
    }

    get providerButtonComponent() {
      const {
        providerName
      } = this;
      return PROVIDER_WITH_LOGO.includes(providerName) ? `auth-button-${providerName.toLowerCase()}` : null;
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "authUrl", [_dec], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class));
  _exports.default = RoleJwtModel;
});
;define("vault/models/role-ssh", ["exports", "@ember-data/model", "@ember/object/computed", "@ember/object", "vault/utils/field-to-attrs", "vault/macros/lazy-capabilities"], function (_exports, _model, _computed, _object, _fieldToAttrs, _lazyCapabilities) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"@ember/object/computed",0,"@ember/object",0,"vault/utils/field-to-attrs",0,"vault/macros/lazy-capabilities"eaimeta@70e063a35619d71f

  // these arrays define the order in which the fields will be displayed
  // see
  // https://github.com/openbao/openbao/blob/main/builtin/logical/ssh/path_roles.go#L542 for list of fields for each key type
  const OTP_FIELDS = ['name', 'keyType', 'defaultUser', 'adminUser', 'port', 'allowedUsers', 'cidrList', 'excludeCidrList'];
  const CA_FIELDS = ['name', 'keyType', 'allowUserCertificates', 'allowHostCertificates', 'defaultUser', 'allowedUsers', 'allowedUsersTemplate', 'allowedDomains', 'allowedDomainsTemplate', 'ttl', 'maxTtl', 'allowedCriticalOptions', 'defaultCriticalOptions', 'allowedExtensions', 'defaultExtensions', 'allowBareDomains', 'allowSubdomains', 'allowUserKeyIds', 'keyIdFormat', 'notBeforeDuration', 'algorithmSigner'];

  var _default = _model.default.extend({
    useOpenAPI: true,
    getHelpUrl: function (backend) {
      return `/v1/${backend}/roles/example?help=1`;
    },
    zeroAddress: (0, _model.attr)('boolean', {
      readOnly: true
    }),
    backend: (0, _model.attr)('string', {
      readOnly: true
    }),
    name: (0, _model.attr)('string', {
      label: 'Role Name',
      fieldValue: 'name',
      readOnly: true
    }),
    keyType: (0, _model.attr)('string', {
      possibleValues: ['ca', 'otp'] //overriding the API which also lists 'dynamic' as a type though it is deprecated

    }),
    adminUser: (0, _model.attr)('string', {
      helpText: 'Username of the admin user at the remote host'
    }),
    defaultUser: (0, _model.attr)('string', {
      helpText: "Username to use when one isn't specified"
    }),
    allowedUsers: (0, _model.attr)('string', {
      helpText: 'Create a list of users who are allowed to use this key (e.g. `admin, dev`, or use `*` to allow all.)'
    }),
    allowedUsersTemplate: (0, _model.attr)('boolean', {
      helpText: 'Specifies that Allowed Users can be templated e.g. {{identity.entity.aliases.mount_accessor_xyz.name}}'
    }),
    allowedDomains: (0, _model.attr)('string', {
      helpText: 'List of domains for which a client can request a certificate (e.g. `example.com`, or `*` to allow all)'
    }),
    allowedDomainsTemplate: (0, _model.attr)('boolean', {
      helpText: 'Specifies that Allowed Domains can be set using identity template policies. Non-templated domains are also permitted.'
    }),
    cidrList: (0, _model.attr)('string', {
      helpText: 'List of CIDR blocks for which this role is applicable'
    }),
    excludeCidrList: (0, _model.attr)('string', {
      helpText: 'List of CIDR blocks that are not accepted by this role'
    }),
    port: (0, _model.attr)('number', {
      helpText: 'Port number for the SSH connection (default is `22`)'
    }),
    allowedCriticalOptions: (0, _model.attr)('string', {
      helpText: 'List of critical options that certificates have when signed'
    }),
    defaultCriticalOptions: (0, _model.attr)('object', {
      helpText: 'Map of critical options certificates should have if none are provided when signing'
    }),
    allowedExtensions: (0, _model.attr)('string', {
      helpText: 'List of extensions that certificates can have when signed'
    }),
    defaultExtensions: (0, _model.attr)('object', {
      helpText: 'Map of extensions certificates should have if none are provided when signing'
    }),
    allowUserCertificates: (0, _model.attr)('boolean', {
      helpText: 'Specifies if certificates are allowed to be signed for us as a user'
    }),
    allowHostCertificates: (0, _model.attr)('boolean', {
      helpText: 'Specifies if certificates are allowed to be signed for us as a host'
    }),
    allowBareDomains: (0, _model.attr)('boolean', {
      helpText: 'Specifies if host certificates that are requested are allowed to use the base domains listed in Allowed Domains'
    }),
    allowSubdomains: (0, _model.attr)('boolean', {
      helpText: 'Specifies if host certificates that are requested are allowed to be subdomains of those listed in Allowed Domains'
    }),
    allowUserKeyIds: (0, _model.attr)('boolean', {
      helpText: 'Specifies if users can override the key ID for a signed certificate with the "key_id" field'
    }),
    keyIdFormat: (0, _model.attr)('string', {
      helpText: 'When supplied, this value specifies a custom format for the key id of a signed certificate'
    }),
    algorithmSigner: (0, _model.attr)('string', {
      helpText: 'When supplied, this value specifies a signing algorithm for the key',
      possibleValues: ['default', 'ssh-rsa', 'rsa-sha2-256', 'rsa-sha2-512']
    }),
    showFields: (0, _object.computed)('keyType', function () {
      const keyType = this.keyType;
      const keys = keyType === 'ca' ? CA_FIELDS.slice(0) : OTP_FIELDS.slice(0);
      return (0, _fieldToAttrs.expandAttributeMeta)(this, keys);
    }),
    fieldGroups: (0, _object.computed)('keyType', function () {
      const numRequired = this.keyType === 'otp' ? 3 : 4;
      const fields = this.keyType === 'otp' ? [...OTP_FIELDS] : [...CA_FIELDS];
      const defaultFields = fields.splice(0, numRequired);
      const groups = [{
        default: defaultFields
      }, {
        Options: [...fields]
      }];
      return (0, _fieldToAttrs.default)(this, groups);
    }),
    updatePath: (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'backend'}/roles/${'id'}`, 'backend', 'id'),
    canDelete: (0, _computed.alias)('updatePath.canDelete'),
    canEdit: (0, _computed.alias)('updatePath.canUpdate'),
    canRead: (0, _computed.alias)('updatePath.canRead'),
    generatePath: (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'backend'}/creds/${'id'}`, 'backend', 'id'),
    canGenerate: (0, _computed.alias)('generatePath.canUpdate'),
    signPath: (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'backend'}/sign/${'id'}`, 'backend', 'id'),
    canSign: (0, _computed.alias)('signPath.canUpdate'),
    zeroAddressPath: (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'backend'}/config/zeroaddress`, 'backend'),
    canEditZeroAddress: (0, _computed.alias)('zeroAddressPath.canUpdate')
  });

  _exports.default = _default;
});
;define("vault/models/secret-engine", ["exports", "@ember-data/model", "vault/decorators/model-validations", "vault/decorators/model-expanded-attributes", "vault/helpers/supported-secret-backends"], function (_exports, _model, _modelValidations, _modelExpandedAttributes, _supportedSecretBackends) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _dec12, _dec13, _dec14, _dec15, _dec16, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14;

  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"vault/decorators/model-validations",0,"vault/decorators/model-expanded-attributes",0,"vault/helpers/supported-secret-backends"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  const LINKED_BACKENDS = (0, _supportedSecretBackends.supportedSecretBackends)(); // identity will be managed separately and the inclusion
  // of the system backend is an implementation detail

  const LIST_EXCLUDED_BACKENDS = ['system', 'identity'];
  const validations = {
    path: [{
      type: 'presence',
      message: "Path can't be blank."
    }, {
      type: 'containsWhiteSpace',
      message: "Path contains whitespace. If this is desired, you'll need to encode it with %20 in API requests.",
      level: 'warn'
    }],
    maxVersions: [{
      type: 'number',
      message: 'Maximum versions must be a number.'
    }, {
      type: 'length',
      options: {
        min: 1,
        max: 16
      },
      message: 'You cannot go over 16 characters.'
    }]
  };
  let SecretEngineModel = (_dec = (0, _modelValidations.withModelValidations)(validations), _dec2 = (0, _modelExpandedAttributes.withExpandedAttributes)(), _dec3 = (0, _model.attr)('string'), _dec4 = (0, _model.attr)('string'), _dec5 = (0, _model.attr)('string', {
    editType: 'textarea'
  }), _dec6 = (0, _model.belongsTo)('mount-config', {
    async: false,
    inverse: null
  }), _dec7 = (0, _model.attr)('number', {
    label: 'Version',
    helpText: 'The KV Secrets Engine can operate in different modes. Version 1 is the original generic Secrets Engine the allows for storing of static key/value pairs. Version 2 added more features including data versioning, TTLs, and check and set.',
    possibleValues: [2, 1],
    // This shouldn't be defaultValue because if no version comes back from API we should assume it's v1
    defaultFormValue: 2 // Set the form to 2 by default

  }), _dec8 = (0, _model.attr)('string'), _dec9 = (0, _model.attr)('string'), _dec10 = (0, _model.attr)('boolean', {
    defaultValue: true
  }), _dec11 = (0, _model.attr)('string'), _dec12 = (0, _model.attr)('string'), _dec13 = (0, _model.attr)('string'), _dec14 = (0, _model.attr)('number', {
    defaultValue: 0,
    label: 'Maximum number of versions',
    subText: 'The number of versions to keep per key. Once the number of keys exceeds the maximum number set here, the oldest version will be permanently deleted. This value applies to all keys, but a key’s metadata settings can overwrite this value. When 0 is used or the value is unset, OpenBao will keep 10 versions.'
  }), _dec15 = (0, _model.attr)('boolean', {
    defaultValue: false,
    label: 'Require Check and Set',
    subText: 'If checked, all keys will require the cas parameter to be set on all write requests. A key’s metadata settings can overwrite this value.'
  }), _dec16 = (0, _model.attr)({
    defaultValue: 0,
    editType: 'ttl',
    label: 'Automate secret deletion',
    helperTextDisabled: 'A secret’s version must be manually deleted.',
    helperTextEnabled: 'Delete all new versions of this secret after'
  }), _dec(_class = _dec2(_class = (_class2 = class SecretEngineModel extends _model.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "path", _descriptor, this);

      _initializerDefineProperty(this, "type", _descriptor2, this);

      _initializerDefineProperty(this, "description", _descriptor3, this);

      _initializerDefineProperty(this, "config", _descriptor4, this);

      _initializerDefineProperty(this, "version", _descriptor5, this);

      _initializerDefineProperty(this, "privateKey", _descriptor6, this);

      _initializerDefineProperty(this, "publicKey", _descriptor7, this);

      _initializerDefineProperty(this, "generateSigningKey", _descriptor8, this);

      _initializerDefineProperty(this, "lease", _descriptor9, this);

      _initializerDefineProperty(this, "leaseMax", _descriptor10, this);

      _initializerDefineProperty(this, "accessor", _descriptor11, this);

      _initializerDefineProperty(this, "maxVersions", _descriptor12, this);

      _initializerDefineProperty(this, "casRequired", _descriptor13, this);

      _initializerDefineProperty(this, "deleteVersionAfter", _descriptor14, this);
    }

    /* GETTERS */
    get modelTypeForKV() {
      const engineType = this.engineType;

      if ((engineType === 'kv' || engineType === 'generic') && this.version === 2) {
        return 'secret-v2';
      }

      return 'secret';
    }

    get isV2KV() {
      return this.modelTypeForKV === 'secret-v2';
    }

    get attrs() {
      return this.formFields.map(fieldName => {
        return this.allByKey[fieldName];
      });
    }

    get fieldGroups() {
      return this._expandGroups(this.formFieldGroups);
    }

    get icon() {
      if (!this.engineType || this.engineType === 'kmip') {
        return 'secrets';
      }

      if (this.engineType === 'keymgmt') {
        return 'key';
      }

      return this.engineType;
    }

    get engineType() {
      return (this.type || '').replace(/^ns_/, '');
    }

    get shouldIncludeInList() {
      return !LIST_EXCLUDED_BACKENDS.includes(this.engineType);
    }

    get isSupportedBackend() {
      return LINKED_BACKENDS.includes(this.engineType);
    }

    get backendLink() {
      if (this.engineType === 'kmip') {
        return 'vault.cluster.secrets.backend.kmip.scopes';
      }

      if (this.engineType === 'database') {
        return 'vault.cluster.secrets.backend.overview';
      }

      return 'vault.cluster.secrets.backend.list-root';
    }

    get accessor() {
      if (this.version === 2) {
        return `v2 ${this.accessor}`;
      }

      return this.accessor;
    }

    get localDisplay() {
      return 'replicated';
    }

    get formFields() {
      const type = this.engineType;
      const fields = ['type', 'path', 'description', 'accessor']; // no ttl options for keymgmt

      if (type !== 'keymgmt') {
        fields.push('config.defaultLeaseTtl', 'config.maxLeaseTtl');
      }

      fields.push('config.allowedManagedKeys', 'config.auditNonHmacRequestKeys', 'config.auditNonHmacResponseKeys', 'config.passthroughRequestHeaders', 'config.allowedResponseHeaders');

      if (type === 'kv' || type === 'generic') {
        fields.push('version');
      } // version comes in as number not string


      if (type === 'kv' && parseInt(this.version, 10) === 2) {
        fields.push('casRequired', 'deleteVersionAfter', 'maxVersions');
      }

      return fields;
    }

    get formFieldGroups() {
      let defaultFields = ['path'];
      let optionFields;
      const CORE_OPTIONS = ['description', 'config.listingVisibility'];
      const STANDARD_CONFIG = ['config.auditNonHmacRequestKeys', 'config.auditNonHmacResponseKeys', 'config.passthroughRequestHeaders', 'config.allowedResponseHeaders'];

      switch (this.engineType) {
        case 'kv':
          defaultFields = ['path', 'maxVersions', 'casRequired', 'deleteVersionAfter'];
          optionFields = ['version', ...CORE_OPTIONS, 'config.defaultLeaseTtl', 'config.maxLeaseTtl', 'config.allowedManagedKeys', ...STANDARD_CONFIG];
          break;

        case 'generic':
          optionFields = ['version', ...CORE_OPTIONS, 'config.defaultLeaseTtl', 'config.maxLeaseTtl', 'config.allowedManagedKeys', ...STANDARD_CONFIG];
          break;

        case 'database':
          // Highlight TTLs in default
          defaultFields = ['path', 'config.defaultLeaseTtl', 'config.maxLeaseTtl'];
          optionFields = [...CORE_OPTIONS, 'config.allowedManagedKeys', ...STANDARD_CONFIG];
          break;

        case 'pki':
          defaultFields = ['path', 'config.defaultLeaseTtl', 'config.maxLeaseTtl', 'config.allowedManagedKeys'];
          optionFields = [...CORE_OPTIONS, ...STANDARD_CONFIG];
          break;

        case 'keymgmt':
          // no ttl options for keymgmt
          optionFields = [...CORE_OPTIONS, 'config.allowedManagedKeys', ...STANDARD_CONFIG];
          break;

        default:
          defaultFields = ['path'];
          optionFields = [...CORE_OPTIONS, 'config.defaultLeaseTtl', 'config.maxLeaseTtl', 'config.allowedManagedKeys', ...STANDARD_CONFIG];
          break;
      }

      return [{
        default: defaultFields
      }, {
        'Method Options': optionFields
      }];
    }
    /* ACTIONS */


    saveCA(options) {
      if (this.type !== 'ssh') {
        return;
      }

      if (options.isDelete) {
        this.privateKey = null;
        this.publicKey = null;
        this.generateSigningKey = false;
      }

      return this.save({
        adapterOptions: {
          options: options,
          apiPath: 'config/ca',
          attrsToSend: ['privateKey', 'publicKey', 'generateSigningKey']
        }
      });
    }

    saveZeroAddressConfig() {
      return this.save({
        adapterOptions: {
          adapterMethod: 'saveZeroAddressConfig'
        }
      });
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "path", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "type", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "description", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "config", [_dec6], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "version", [_dec7], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "privateKey", [_dec8], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "publicKey", [_dec9], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "generateSigningKey", [_dec10], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, "lease", [_dec11], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor10 = _applyDecoratedDescriptor(_class2.prototype, "leaseMax", [_dec12], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor11 = _applyDecoratedDescriptor(_class2.prototype, "accessor", [_dec13], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor12 = _applyDecoratedDescriptor(_class2.prototype, "maxVersions", [_dec14], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor13 = _applyDecoratedDescriptor(_class2.prototype, "casRequired", [_dec15], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor14 = _applyDecoratedDescriptor(_class2.prototype, "deleteVersionAfter", [_dec16], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class2)) || _class) || _class);
  _exports.default = SecretEngineModel;
});
;define("vault/models/secret-v2-version", ["exports", "@ember-data/model", "core/utils/timestamp", "vault/models/secret"], function (_exports, _model, _timestamp, _secret) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8;

  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"core/utils/timestamp",0,"vault/models/secret"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let SecretV2VersionModel = (_dec = (0, _model.attr)('boolean'), _dec2 = (0, _model.attr)('number'), _dec3 = (0, _model.attr)('string'), _dec4 = (0, _model.attr)('string'), _dec5 = (0, _model.attr)('string'), _dec6 = (0, _model.attr)('boolean'), _dec7 = (0, _model.attr)('number'), _dec8 = (0, _model.belongsTo)('secret-v2'), (_class = class SecretV2VersionModel extends _secret.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "failedServerRead", _descriptor, this);

      _initializerDefineProperty(this, "version", _descriptor2, this);

      _initializerDefineProperty(this, "path", _descriptor3, this);

      _initializerDefineProperty(this, "deletionTime", _descriptor4, this);

      _initializerDefineProperty(this, "createdTime", _descriptor5, this);

      _initializerDefineProperty(this, "destroyed", _descriptor6, this);

      _initializerDefineProperty(this, "currentVersion", _descriptor7, this);

      _initializerDefineProperty(this, "secret", _descriptor8, this);

      _defineProperty(this, "pathAttr", 'path');
    }

    get deleted() {
      const deletionTime = new Date(this.deletionTime);

      const now = _timestamp.default.now();

      return deletionTime <= now;
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "failedServerRead", [_dec], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "version", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, "path", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, "deletionTime", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, "createdTime", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, "destroyed", [_dec6], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, "currentVersion", [_dec7], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, "secret", [_dec8], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class));
  _exports.default = SecretV2VersionModel;
});
;define("vault/models/secret-v2", ["exports", "@ember-data/model", "@ember/object", "@ember/object/computed", "vault/utils/field-to-attrs", "vault/mixins/key-mixin", "vault/macros/lazy-capabilities", "vault/decorators/model-validations"], function (_exports, _model, _object, _computed, _fieldToAttrs, _keyMixin, _lazyCapabilities, _modelValidations) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _dec, _class;

  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"@ember/object",0,"@ember/object/computed",0,"vault/utils/field-to-attrs",0,"vault/mixins/key-mixin",0,"vault/macros/lazy-capabilities",0,"vault/decorators/model-validations"eaimeta@70e063a35619d71f

  const validations = {
    maxVersions: [{
      type: 'number',
      message: 'Maximum versions must be a number.'
    }, {
      type: 'length',
      options: {
        min: 1,
        max: 16
      },
      message: 'You cannot go over 16 characters.'
    }]
  };
  let SecretV2Model = (_dec = (0, _modelValidations.withModelValidations)(validations), _dec(_class = class SecretV2Model extends _model.default {}) || _class);

  var _default = SecretV2Model.extend(_keyMixin.default, {
    failedServerRead: (0, _model.attr)('boolean'),
    engine: (0, _model.belongsTo)('secret-engine', {
      async: false
    }),
    engineId: (0, _model.attr)('string'),
    versions: (0, _model.hasMany)('secret-v2-version', {
      async: false,
      inverse: null
    }),
    selectedVersion: (0, _model.belongsTo)('secret-v2-version', {
      async: false,
      inverse: 'secret'
    }),
    createdTime: (0, _model.attr)(),
    updatedTime: (0, _model.attr)(),
    currentVersion: (0, _model.attr)('number'),
    oldestVersion: (0, _model.attr)('number'),
    customMetadata: (0, _model.attr)('object', {
      editType: 'kv',
      subText: 'An optional set of informational key-value pairs that will be stored with all secret versions.'
    }),
    maxVersions: (0, _model.attr)('number', {
      defaultValue: 0,
      label: 'Maximum number of versions',
      subText: 'The number of versions to keep per key. Once the number of keys exceeds the maximum number set here, the oldest version will be permanently deleted.'
    }),
    casRequired: (0, _model.attr)('boolean', {
      defaultValue: false,
      label: 'Require Check and Set',
      subText: 'Writes will only be allowed if the key’s current version matches the version specified in the cas parameter.'
    }),
    deleteVersionAfter: (0, _model.attr)({
      defaultValue: 0,
      editType: 'ttl',
      label: 'Automate secret deletion',
      helperTextDisabled: 'A secret’s version must be manually deleted.',
      helperTextEnabled: 'Delete all new versions of this secret after'
    }),
    fields: (0, _object.computed)(function () {
      return (0, _fieldToAttrs.expandAttributeMeta)(this, ['customMetadata', 'maxVersions', 'casRequired', 'deleteVersionAfter']);
    }),
    secretDataPath: (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'engineId'}/data/${'id'}`, 'engineId', 'id'),
    secretMetadataPath: (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'engineId'}/metadata/${'id'}`, 'engineId', 'id'),
    canListMetadata: (0, _computed.alias)('secretMetadataPath.canList'),
    canReadMetadata: (0, _computed.alias)('secretMetadataPath.canRead'),
    canUpdateMetadata: (0, _computed.alias)('secretMetadataPath.canUpdate'),
    canReadSecretData: (0, _computed.alias)('secretDataPath.canRead'),
    canEditSecretData: (0, _computed.alias)('secretDataPath.canUpdate'),
    canDeleteSecretData: (0, _computed.alias)('secretDataPath.canDelete')
  });

  _exports.default = _default;
});
;define("vault/models/secret", ["exports", "@ember-data/model", "@ember/object", "@ember/object/computed", "vault/mixins/key-mixin", "vault/macros/lazy-capabilities"], function (_exports, _model, _object, _computed, _keyMixin, _lazyCapabilities) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"@ember/object",0,"@ember/object/computed",0,"vault/mixins/key-mixin",0,"vault/macros/lazy-capabilities"eaimeta@70e063a35619d71f

  var _default = _model.default.extend(_keyMixin.default, {
    failedServerRead: (0, _model.attr)('boolean'),
    auth: (0, _model.attr)('string'),
    lease_duration: (0, _model.attr)('number'),
    lease_id: (0, _model.attr)('string'),
    renewable: (0, _model.attr)('boolean'),
    secretData: (0, _model.attr)('object'),
    secretKeyAndValue: (0, _object.computed)('secretData', function () {
      const data = this.secretData;
      return Object.keys(data).map(key => {
        return {
          key,
          value: data[key]
        };
      });
    }),
    dataAsJSONString: (0, _object.computed)('secretData', function () {
      return JSON.stringify(this.secretData, null, 2);
    }),
    isAdvancedFormat: (0, _object.computed)('secretData', function () {
      const data = this.secretData;
      return data && Object.keys(data).some(key => typeof data[key] !== 'string');
    }),
    helpText: (0, _model.attr)('string'),
    // TODO this needs to be a relationship like `engine` on kv-v2
    backend: (0, _model.attr)('string'),
    secretPath: (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'backend'}/${'id'}`, 'backend', 'id'),
    canEdit: (0, _computed.alias)('secretPath.canUpdate'),
    canDelete: (0, _computed.alias)('secretPath.canDelete'),
    canRead: (0, _computed.alias)('secretPath.canRead')
  });

  _exports.default = _default;
});
;define("vault/models/server", ["exports", "@ember-data/model"], function (_exports, _model) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/model"eaimeta@70e063a35619d71f

  //{"node_id":"1249bfbc-b234-96f3-0c66-07078ac3e16e","address":"127.0.0.1:8201","leader":true,"protocol_version":"3","voter":true}
  var _default = _model.default.extend({
    address: (0, _model.attr)('string'),
    nodeId: (0, _model.attr)('string'),
    protocolVersion: (0, _model.attr)('string'),
    voter: (0, _model.attr)('boolean'),
    leader: (0, _model.attr)('boolean')
  });

  _exports.default = _default;
});
;define("vault/models/ssh-otp-credential", ["exports", "@ember/object/computed", "@ember-data/model", "@ember/object", "vault/utils/field-to-attrs"], function (_exports, _computed, _model, _object, _fieldToAttrs) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/object/computed",0,"@ember-data/model",0,"@ember/object",0,"vault/utils/field-to-attrs"eaimeta@70e063a35619d71f

  const CREATE_FIELDS = ['username', 'ip'];
  const DISPLAY_FIELDS = ['username', 'ip', 'key', 'keyType', 'port'];

  var _default = _model.default.extend({
    role: (0, _model.attr)('object', {
      readOnly: true
    }),
    ip: (0, _model.attr)('string', {
      label: 'IP Address'
    }),
    username: (0, _model.attr)('string'),
    key: (0, _model.attr)('string'),
    keyType: (0, _model.attr)('string'),
    port: (0, _model.attr)('number'),
    attrs: (0, _object.computed)('key', function () {
      const keys = this.key ? DISPLAY_FIELDS.slice(0) : CREATE_FIELDS.slice(0);
      return (0, _fieldToAttrs.expandAttributeMeta)(this, keys);
    }),
    toCreds: (0, _computed.reads)('key')
  });

  _exports.default = _default;
});
;define("vault/models/ssh-sign", ["exports", "@ember-data/model", "@ember/object", "vault/utils/field-to-attrs"], function (_exports, _model, _object, _fieldToAttrs) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"@ember/object",0,"vault/utils/field-to-attrs"eaimeta@70e063a35619d71f

  const CREATE_FIELDS = ['publicKey', 'keyId', 'validPrincipals', 'certType', 'criticalOptions', 'extensions', 'ttl'];
  const DISPLAY_FIELDS = ['signedKey', 'leaseId', 'renewable', 'leaseDuration', 'serialNumber'];

  var _default = _model.default.extend({
    role: (0, _model.attr)('object', {
      readOnly: true
    }),
    publicKey: (0, _model.attr)('string', {
      label: 'Public Key',
      editType: 'textarea'
    }),
    ttl: (0, _model.attr)({
      label: 'TTL',
      editType: 'ttl'
    }),
    validPrincipals: (0, _model.attr)('string'),
    certType: (0, _model.attr)('string', {
      defaultValue: 'user',
      label: 'Certificate Type',
      possibleValues: ['user', 'host']
    }),
    keyId: (0, _model.attr)('string', {
      label: 'Key ID'
    }),
    criticalOptions: (0, _model.attr)('object'),
    extensions: (0, _model.attr)('object'),
    leaseId: (0, _model.attr)('string', {
      label: 'Lease ID'
    }),
    renewable: (0, _model.attr)('boolean'),
    leaseDuration: (0, _model.attr)('number'),
    serialNumber: (0, _model.attr)('string'),
    signedKey: (0, _model.attr)('string'),
    attrs: (0, _object.computed)('signedKey', function () {
      const keys = this.signedKey ? DISPLAY_FIELDS.slice(0) : CREATE_FIELDS.slice(0);
      return (0, _fieldToAttrs.expandAttributeMeta)(this, keys);
    })
  });

  _exports.default = _default;
});
;define("vault/models/test-form-model", ["exports", "vault/models/auth-method", "@ember-data/model"], function (_exports, _authMethod, _model) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/models/auth-method",0,"@ember-data/model"eaimeta@70e063a35619d71f

  var _default = _authMethod.default.extend({
    otherConfig: (0, _model.belongsTo)('mount-config', {
      async: false,
      inverse: null
    })
  });

  _exports.default = _default;
});
;define("vault/models/transit-key", ["exports", "@ember-data/model", "@ember/object/computed", "@ember/object", "vault/utils/clamp", "vault/macros/lazy-capabilities"], function (_exports, _model, _computed, _object, _clamp, _lazyCapabilities) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"@ember/object/computed",0,"@ember/object",0,"vault/utils/clamp",0,"vault/macros/lazy-capabilities"eaimeta@70e063a35619d71f

  const ACTION_VALUES = {
    encrypt: {
      isSupported: 'supportsEncryption',
      description: 'Looks up wrapping properties for the given token',
      glyph: 'lock-fill'
    },
    decrypt: {
      isSupported: 'supportsDecryption',
      description: 'Decrypts the provided ciphertext using this key',
      glyph: 'mail-open'
    },
    datakey: {
      isSupported: 'supportsEncryption',
      description: 'Generates a new key and value encrypted with this key',
      glyph: 'key'
    },
    rewrap: {
      isSupported: 'supportsEncryption',
      description: 'Rewraps the ciphertext using the latest version of the named key',
      glyph: 'reload'
    },
    sign: {
      isSupported: 'supportsSigning',
      description: 'Get the cryptographic signature of the given data',
      glyph: 'pencil-tool'
    },
    hmac: {
      isSupported: true,
      description: 'Generate a data digest using a hash algorithm',
      glyph: 'shuffle'
    },
    verify: {
      isSupported: true,
      description: 'Validate the provided signature for the given data',
      glyph: 'check-circle'
    },
    export: {
      isSupported: 'exportable',
      description: 'Get the named key',
      glyph: 'external-link'
    }
  };

  var _default = _model.default.extend({
    type: (0, _model.attr)('string', {
      defaultValue: 'aes256-gcm96'
    }),
    name: (0, _model.attr)('string', {
      label: 'Name',
      readOnly: true
    }),
    autoRotatePeriod: (0, _model.attr)({
      defaultValue: '0',
      defaultShown: 'Key is not automatically rotated',
      editType: 'ttl',
      label: 'Auto-rotation period'
    }),
    deletionAllowed: (0, _model.attr)('boolean'),
    derived: (0, _model.attr)('boolean'),
    exportable: (0, _model.attr)('boolean'),
    minDecryptionVersion: (0, _model.attr)('number', {
      defaultValue: 1
    }),
    minEncryptionVersion: (0, _model.attr)('number', {
      defaultValue: 0
    }),
    latestVersion: (0, _model.attr)('number'),
    keys: (0, _model.attr)('object'),
    convergentEncryption: (0, _model.attr)('boolean'),
    convergentEncryptionVersion: (0, _model.attr)('number'),
    supportsSigning: (0, _model.attr)('boolean'),
    supportsEncryption: (0, _model.attr)('boolean'),
    supportsDecryption: (0, _model.attr)('boolean'),
    supportsDerivation: (0, _model.attr)('boolean'),

    setConvergentEncryption(val) {
      if (val === true) {
        (0, _object.set)(this, 'derived', val);
      }

      (0, _object.set)(this, 'convergentEncryption', val);
    },

    setDerived(val) {
      if (val === false) {
        (0, _object.set)(this, 'convergentEncryption', val);
      }

      (0, _object.set)(this, 'derived', val);
    },

    supportedActions: (0, _object.computed)('type', function () {
      return Object.keys(ACTION_VALUES).filter(name => {
        const {
          isSupported
        } = ACTION_VALUES[name];
        return typeof isSupported === 'boolean' || (0, _object.get)(this, isSupported);
      }).map(name => {
        const {
          description,
          glyph
        } = ACTION_VALUES[name];
        return {
          name,
          description,
          glyph
        };
      });
    }),
    canDelete: (0, _object.computed)('deletionAllowed', 'lastLoadTS', function () {
      const deleteAttrChanged = Boolean(this.changedAttributes().deletionAllowed);
      return this.deletionAllowed && deleteAttrChanged === false;
    }),
    keyVersions: (0, _object.computed)('validKeyVersions', function () {
      let maxVersion = Math.max(...this.validKeyVersions);
      const versions = [];

      while (maxVersion > 0) {
        versions.unshift(maxVersion);
        maxVersion--;
      }

      return versions;
    }),
    encryptionKeyVersions: (0, _object.computed)('keyVerisons', 'keyVersions', 'latestVersion', 'minDecryptionVersion', function () {
      const {
        keyVersions,
        minDecryptionVersion
      } = this;
      return keyVersions.filter(version => {
        return version >= minDecryptionVersion;
      }).reverse();
    }),
    keysForEncryption: (0, _object.computed)('minEncryptionVersion', 'latestVersion', function () {
      let {
        minEncryptionVersion,
        latestVersion
      } = this;
      const minVersion = (0, _clamp.default)(minEncryptionVersion - 1, 0, latestVersion);
      const versions = [];

      while (latestVersion > minVersion) {
        versions.push(latestVersion);
        latestVersion--;
      }

      return versions;
    }),
    validKeyVersions: (0, _object.computed)('keys', function () {
      return Object.keys(this.keys);
    }),
    exportKeyTypes: (0, _object.computed)('exportable', 'supportsEncryption', 'supportsSigning', 'type', function () {
      const types = ['hmac'];

      if (this.supportsSigning) {
        types.unshift('signing');
      }

      if (this.supportsEncryption) {
        types.unshift('encryption');
      }

      return types;
    }),
    backend: (0, _model.attr)('string'),
    rotatePath: (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'backend'}/keys/${'id'}/rotate`, 'backend', 'id'),
    canRotate: (0, _computed.alias)('rotatePath.canUpdate'),
    secretPath: (0, _lazyCapabilities.default)((0, _lazyCapabilities.apiPath)`${'backend'}/keys/${'id'}`, 'backend', 'id'),
    canRead: (0, _computed.alias)('secretPath.canUpdate'),
    canEdit: (0, _computed.alias)('secretPath.canUpdate')
  });

  _exports.default = _default;
});
;define("vault/modifiers/basic-dropdown-trigger", ["exports", "ember-basic-dropdown/modifiers/basic-dropdown-trigger"], function (_exports, _basicDropdownTrigger) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _basicDropdownTrigger.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-basic-dropdown/modifiers/basic-dropdown-trigger"eaimeta@70e063a35619d71f
});
;define("vault/modifiers/code-mirror", ["exports", "core/modifiers/code-mirror"], function (_exports, _codeMirror) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _codeMirror.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/modifiers/code-mirror"eaimeta@70e063a35619d71f
});
;define("vault/modifiers/did-insert", ["exports", "@ember/render-modifiers/modifiers/did-insert"], function (_exports, _didInsert) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _didInsert.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@ember/render-modifiers/modifiers/did-insert"eaimeta@70e063a35619d71f
});
;define("vault/modifiers/did-update", ["exports", "@ember/render-modifiers/modifiers/did-update"], function (_exports, _didUpdate) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _didUpdate.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@ember/render-modifiers/modifiers/did-update"eaimeta@70e063a35619d71f
});
;define("vault/modifiers/focus-trap", ["exports", "ember-focus-trap/modifiers/focus-trap.js"], function (_exports, _focusTrap) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _focusTrap.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-focus-trap/modifiers/focus-trap.js"eaimeta@70e063a35619d71f
});
;define("vault/modifiers/hds-tooltip", ["exports", "@hashicorp/design-system-components/modifiers/hds-tooltip"], function (_exports, _hdsTooltip) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _hdsTooltip.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@hashicorp/design-system-components/modifiers/hds-tooltip"eaimeta@70e063a35619d71f
});
;define("vault/modifiers/on-key", ["exports", "ember-keyboard/modifiers/on-key.js"], function (_exports, _onKey) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _onKey.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-keyboard/modifiers/on-key.js"eaimeta@70e063a35619d71f
});
;define("vault/modifiers/style", ["exports", "ember-style-modifier/modifiers/style"], function (_exports, _style) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _style.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-style-modifier/modifiers/style"eaimeta@70e063a35619d71f
});
;define("vault/modifiers/will-destroy", ["exports", "@ember/render-modifiers/modifiers/will-destroy"], function (_exports, _willDestroy) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _willDestroy.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@ember/render-modifiers/modifiers/will-destroy"eaimeta@70e063a35619d71f
});
;define("vault/router", ["exports", "@ember/routing/router", "vault/config/environment"], function (_exports, _router, _environment) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/router",0,"vault/config/environment"eaimeta@70e063a35619d71f

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  class Router extends _router.default {
    constructor() {
      super(...arguments);

      _defineProperty(this, "location", _environment.default.locationType);

      _defineProperty(this, "rootURL", _environment.default.rootURL);
    }

  }

  _exports.default = Router;
  Router.map(function () {
    this.route('vault', {
      path: '/'
    }, function () {
      this.route('cluster', {
        path: '/:cluster_name'
      }, function () {
        this.route('oidc-provider-ns', {
          path: '/*namespace/identity/oidc/provider/:provider_name/authorize'
        });
        this.route('oidc-provider', {
          path: '/identity/oidc/provider/:provider_name/authorize'
        });
        this.route('oidc-callback', {
          path: '/auth/*auth_path/oidc/callback'
        });
        this.route('auth');
        this.route('redirect');
        this.route('init');
        this.route('logout');
        this.mount('open-api-explorer', {
          path: '/api-explorer'
        });
        this.route('license');
        this.route('mfa-setup');
        this.route('storage', {
          path: '/storage/raft'
        });
        this.route('storage-restore', {
          path: '/storage/raft/restore'
        });
        this.route('settings', function () {
          this.route('index', {
            path: '/'
          });
          this.route('seal');
          this.route('auth', function () {
            this.route('index', {
              path: '/'
            });
            this.route('enable');
            this.route('configure', {
              path: '/configure/:method'
            }, function () {
              this.route('index', {
                path: '/'
              });
              this.route('section', {
                path: '/:section_name'
              });
            });
          });
          this.route('mount-secret-backend');
          this.route('configure-secret-backend', {
            path: '/secrets/configure/:backend'
          }, function () {
            this.route('index', {
              path: '/'
            });
            this.route('section', {
              path: '/:section_name'
            });
          });
        });
        this.route('unseal');
        this.route('tools', function () {
          this.route('tool', {
            path: '/:selected_action'
          });
        });
        this.route('access', function () {
          this.route('methods', {
            path: '/'
          });
          this.route('method', {
            path: '/:path'
          }, function () {
            this.route('index', {
              path: '/'
            });
            this.route('item', {
              path: '/item/:item_type'
            }, function () {
              this.route('list', {
                path: '/'
              });
              this.route('create');
              this.route('edit', {
                path: '/edit/:item_id'
              });
              this.route('show', {
                path: '/show/:item_id'
              });
            });
            this.route('section', {
              path: '/:section_name'
            });
          });
          this.route('mfa', function () {
            this.route('index', {
              path: '/'
            });
            this.route('methods', function () {
              this.route('index', {
                path: '/'
              });
              this.route('create');
              this.route('method', {
                path: '/:id'
              }, function () {
                this.route('edit');
                this.route('enforcements');
              });
            });
            this.route('enforcements', function () {
              this.route('index', {
                path: '/'
              });
              this.route('create');
              this.route('enforcement', {
                path: '/:name'
              }, function () {
                this.route('edit');
              });
            });
          });
          this.route('leases', function () {
            // lookup
            this.route('index', {
              path: '/'
            }); // lookup prefix
            // revoke prefix + revoke force

            this.route('list-root', {
              path: '/list/'
            });
            this.route('list', {
              path: '/list/*prefix'
            }); //renew + revoke

            this.route('show', {
              path: '/show/*lease_id'
            });
          }); // the outer identity route handles group and entity items

          this.route('identity', {
            path: '/identity/:item_type'
          }, function () {
            this.route('index', {
              path: '/'
            });
            this.route('create');
            this.route('merge');
            this.route('edit', {
              path: '/edit/:item_id'
            });
            this.route('show', {
              path: '/:item_id/:section'
            });
            this.route('aliases', function () {
              this.route('index', {
                path: '/'
              });
              this.route('add', {
                path: '/add/:item_id'
              });
              this.route('edit', {
                path: '/edit/:item_alias_id'
              });
              this.route('show', {
                path: '/:item_alias_id/:section'
              });
            });
          });
          this.route('control-groups');
          this.route('control-groups-configure', {
            path: '/control-groups/configure'
          });
          this.route('control-group-accessor', {
            path: '/control-groups/:accessor'
          });
          this.route('namespaces', function () {
            this.route('index', {
              path: '/'
            });
            this.route('create');
          });
          this.route('oidc', function () {
            this.route('clients', function () {
              this.route('create');
              this.route('client', {
                path: '/:name'
              }, function () {
                this.route('details');
                this.route('providers');
                this.route('edit');
              });
            });
            this.route('keys', function () {
              this.route('create');
              this.route('key', {
                path: '/:name'
              }, function () {
                this.route('details');
                this.route('clients');
                this.route('edit');
              });
            });
            this.route('assignments', function () {
              this.route('create');
              this.route('assignment', {
                path: '/:name'
              }, function () {
                this.route('details');
                this.route('edit');
              });
            });
            this.route('providers', function () {
              this.route('create');
              this.route('provider', {
                path: '/:name'
              }, function () {
                this.route('details');
                this.route('clients');
                this.route('edit');
              });
            });
            this.route('scopes', function () {
              this.route('create');
              this.route('scope', {
                path: '/:name'
              }, function () {
                this.route('details');
                this.route('edit');
              });
            });
          });
        });
        this.route('secrets', function () {
          this.route('backends', {
            path: '/'
          });
          this.route('backend', {
            path: '/:backend'
          }, function () {
            this.mount('kmip');
            this.mount('kubernetes');
            this.mount('pki');
            this.route('index', {
              path: '/'
            });
            this.route('configuration'); // because globs / params can't be empty,
            // we have to special-case ids of '' with their own routes

            this.route('list-root', {
              path: '/list/'
            });
            this.route('create-root', {
              path: '/create/'
            });
            this.route('show-root', {
              path: '/show/'
            });
            this.route('edit-root', {
              path: '/edit/'
            });
            this.route('list', {
              path: '/list/*secret'
            });
            this.route('show', {
              path: '/show/*secret'
            });
            this.route('diff', {
              path: '/diff/*id'
            });
            this.route('metadata', {
              path: '/metadata/*secret'
            });
            this.route('edit-metadata', {
              path: '/edit-metadata/*secret'
            });
            this.route('create', {
              path: '/create/*secret'
            });
            this.route('edit', {
              path: '/edit/*secret'
            });
            this.route('credentials-root', {
              path: '/credentials/'
            });
            this.route('credentials', {
              path: '/credentials/*secret'
            }); // kv v2 versions

            this.route('versions-root', {
              path: '/versions/'
            });
            this.route('versions', {
              path: '/versions/*secret'
            }); // ssh sign

            this.route('sign-root', {
              path: '/sign/'
            });
            this.route('sign', {
              path: '/sign/*secret'
            }); // transit-specific routes

            this.route('actions-root', {
              path: '/actions/'
            });
            this.route('actions', {
              path: '/actions/*secret'
            }); // database specific route

            this.route('overview');
          });
        });
        this.route('policies', {
          path: '/policies/:type'
        }, function () {
          this.route('index', {
            path: '/'
          });
          this.route('create');
        });
        this.route('policy', {
          path: '/policy/:type'
        }, function () {
          this.route('show', {
            path: '/:policy_name'
          });
          this.route('edit', {
            path: '/:policy_name/edit'
          });
        });

        if (_environment.default.addRootMounts) {
          _environment.default.addRootMounts.call(this);
        }

        this.route('not-found', {
          path: '/*path'
        });
      });
      this.route('not-found', {
        path: '/*path'
      });
    });
  });
});
;define("vault/routes/application", ["exports", "@ember/service", "@ember/routing/route", "vault/lib/control-group-error"], function (_exports, _service, _route, _controlGroupError) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@ember/routing/route",0,"vault/lib/control-group-error"eaimeta@70e063a35619d71f

  var _default = _route.default.extend({
    controlGroup: (0, _service.inject)(),
    routing: (0, _service.inject)('router'),
    namespaceService: (0, _service.inject)('namespace'),
    featureFlagService: (0, _service.inject)('featureFlag'),
    actions: {
      willTransition() {
        window.scrollTo(0, 0);
      },

      error(error, transition) {
        const controlGroup = this.controlGroup;

        if (error instanceof _controlGroupError.default) {
          return controlGroup.handleError(error);
        }

        if (error.path === '/v1/sys/wrapping/unwrap') {
          controlGroup.unmarkTokenForUnwrap();
        }

        const router = this.routing; //FIXME transition.intent likely needs to be replaced

        let errorURL = transition.intent.url;
        const {
          name,
          contexts,
          queryParams
        } = transition.intent; // If the transition is internal to Ember, we need to generate the URL
        // from the route parameters ourselves

        if (!errorURL) {
          try {
            errorURL = router.urlFor(name, ...(contexts || []), {
              queryParams
            });
          } catch (e) {
            // If this fails, something weird is happening with URL transitions
            errorURL = null;
          }
        } // because we're using rootURL, we need to trim this from the front to get
        // the ember-routeable url


        if (errorURL) {
          errorURL = errorURL.replace('/ui', '');
        }

        error.errorURL = errorURL; // if we have queryParams, update the namespace so that the observer can fire on the controller

        if (queryParams) {
          /* eslint-disable-next-line ember/no-controller-access-in-routes */
          this.controllerFor('vault.cluster').set('namespaceQueryParam', queryParams.namespace || '');
        } // Assuming we have a URL, push it into browser history and update the
        // location bar for the user


        if (errorURL) {
          router.get('location').setURL(errorURL);
        }

        return true;
      }

    },

    async beforeModel() {
      const result = await fetch('/v1/sys/internal/ui/feature-flags', {
        method: 'GET'
      });

      if (result.status === 200) {
        const body = await result.json();
        const flags = body.feature_flags || [];
        this.featureFlagService.setFeatureFlags(flags);
      }
    }

  });

  _exports.default = _default;
});
;define("vault/routes/loading", ["exports", "@ember/routing/route"], function (_exports, _route) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route"eaimeta@70e063a35619d71f

  var _default = _route.default.extend({
    setupController(controller) {
      this._super(...arguments);

      const targetRoute = location.pathname || '';
      controller.set('isCallback', targetRoute.includes('oidc/callback'));
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault", ["exports", "@ember/runloop", "rsvp", "@ember/service", "@ember/routing/route", "ember"], function (_exports, _runloop, _rsvp, _service, _route, _ember) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/runloop",0,"rsvp",0,"@ember/service",0,"@ember/routing/route",0,"ember"eaimeta@70e063a35619d71f

  /* eslint-disable ember/no-ember-testing-in-module-scope */
  const SPLASH_DELAY = _ember.default.testing ? 0 : 300;

  var _default = _route.default.extend({
    store: (0, _service.inject)(),
    version: (0, _service.inject)(),

    beforeModel() {
      return this.version.fetchVersion();
    },

    model() {
      // hardcode single cluster
      const fixture = {
        data: {
          id: '1',
          type: 'cluster',
          attributes: {
            name: 'vault'
          }
        }
      };
      this.store.push(fixture);
      return new _rsvp.Promise(resolve => {
        (0, _runloop.later)(() => {
          resolve(this.store.peekAll('cluster'));
        }, SPLASH_DELAY);
      });
    },

    redirect(model, transition) {
      if (model.get('length') === 1 && transition.targetName === 'vault.index') {
        return this.transitionTo('vault.cluster', model.get('firstObject.name'));
      }
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster", ["exports", "@ember/service", "@ember/object", "rsvp", "@ember/routing/route", "ember-concurrency", "ember", "vault/lib/token-storage", "vault/lib/local-storage", "vault/mixins/cluster-route", "vault/mixins/model-boundary-route"], function (_exports, _service, _object, _rsvp, _route, _emberConcurrency, _ember, _tokenStorage, _localStorage, _clusterRoute, _modelBoundaryRoute) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.getManagedNamespace = _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@ember/object",0,"rsvp",0,"@ember/routing/route",0,"ember-concurrency",0,"ember",0,"vault/lib/token-storage",0,"vault/lib/local-storage",0,"vault/mixins/cluster-route",0,"vault/mixins/model-boundary-route"eaimeta@70e063a35619d71f

  const POLL_INTERVAL_MS = 10000;

  const getManagedNamespace = (nsParam, root) => {
    if (!nsParam || nsParam.replaceAll('/', '') === root) return root; // Check if param starts with root and /

    if (nsParam.startsWith(`${root}/`)) {
      return nsParam;
    } // Otherwise prepend the given param with the root


    return `${root}/${nsParam}`;
  };

  _exports.getManagedNamespace = getManagedNamespace;

  var _default = _route.default.extend(_modelBoundaryRoute.default, _clusterRoute.default, {
    namespaceService: (0, _service.inject)('namespace'),
    version: (0, _service.inject)(),
    permissions: (0, _service.inject)(),
    store: (0, _service.inject)(),
    auth: (0, _service.inject)(),
    featureFlagService: (0, _service.inject)('featureFlag'),
    currentCluster: (0, _service.inject)(),
    modelTypes: (0, _object.computed)(function () {
      return ['node', 'secret', 'secret-engine'];
    }),
    queryParams: {
      namespaceQueryParam: {
        refreshModel: true
      }
    },

    getClusterId(params) {
      const {
        cluster_name
      } = params;
      const cluster = this.modelFor('vault').findBy('name', cluster_name);
      return cluster ? cluster.get('id') : null;
    },

    async beforeModel() {
      const params = this.paramsFor(this.routeName);
      let namespace = params.namespaceQueryParam;
      const currentTokenName = this.auth.get('currentTokenName');
      const managedRoot = this.featureFlagService.managedNamespaceRoot;

      if (managedRoot && this.version.isOSS) {
        // eslint-disable-next-line no-console
        console.error('Cannot use Cloud Admin Namespace flag with OpenBao');
      }

      if (!namespace && currentTokenName && !_ember.default.testing) {
        // if no namespace queryParam and user authenticated,
        // use user's root namespace to redirect to properly param'd url
        const storage = (0, _tokenStorage.default)().getItem(currentTokenName);
        namespace = storage?.userRootNamespace; // only redirect if something other than nothing

        if (namespace) {
          this.transitionTo({
            queryParams: {
              namespace
            }
          });
        }
      } else if (managedRoot !== null) {
        const managed = getManagedNamespace(namespace, managedRoot);

        if (managed !== namespace) {
          this.transitionTo({
            queryParams: {
              namespace: managed
            }
          });
        }
      }

      this.namespaceService.setNamespace(namespace);
      const id = this.getClusterId(params);

      if (id) {
        this.auth.setCluster(id);

        if (this.auth.currentToken) {
          await this.permissions.getPaths.perform();
        }

        return this.version.fetchFeatures();
      } else {
        return (0, _rsvp.reject)({
          httpStatus: 404,
          message: 'not found',
          path: params.cluster_name
        });
      }
    },

    model(params) {
      // if a user's browser settings block localStorage they will be unable to use Vault. The method will throw the error and the rest of the application will not load.
      _localStorage.default.isLocalStorageSupported();

      const id = this.getClusterId(params);
      return this.store.findRecord('cluster', id);
    },

    poll: (0, _emberConcurrency.task)(function* () {
      while (true) {
        // when testing, the polling loop causes promises to never settle so acceptance tests hang
        // to get around that, we just disable the poll in tests
        if (_ember.default.testing) {
          return;
        }

        yield (0, _emberConcurrency.timeout)(POLL_INTERVAL_MS);

        try {
          /* eslint-disable-next-line ember/no-controller-access-in-routes */
          yield this.controller.model.reload();
          yield this.transitionToTargetRoute();
        } catch (e) {// we want to keep polling here
        }
      }
    }).cancelOn('deactivate').keepLatest(),

    afterModel(model, transition) {
      this._super(...arguments);

      this.currentCluster.setCluster(model); // Check that namespaces is enabled and if not,
      // clear the namespace by transition to this route w/o it

      if (this.namespaceService.path && !this.version.hasNamespaces) {
        return this.transitionTo(this.routeName, {
          queryParams: {
            namespace: ''
          }
        });
      }

      return this.transitionToTargetRoute(transition);
    },

    setupController() {
      this._super(...arguments);

      this.poll.perform();
    },

    actions: {
      error(e) {
        if (e.httpStatus === 503 && e.errors[0] === 'Vault is sealed') {
          this.refresh();
        }

        return true;
      }

    }
  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/access", ["exports", "@ember/object", "@ember/routing/route", "vault/mixins/cluster-route", "vault/mixins/model-boundary-route"], function (_exports, _object, _route, _clusterRoute, _modelBoundaryRoute) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/object",0,"@ember/routing/route",0,"vault/mixins/cluster-route",0,"vault/mixins/model-boundary-route"eaimeta@70e063a35619d71f

  var _default = _route.default.extend(_modelBoundaryRoute.default, _clusterRoute.default, {
    modelTypes: (0, _object.computed)(function () {
      return ['capabilities', 'control-group', 'identity/group', 'identity/group-alias', 'identity/alias'];
    }),

    model() {
      return {};
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/access/control-group-accessor", ["exports", "@ember/service", "@ember/routing/route", "vault/mixins/unload-model-route"], function (_exports, _service, _route, _unloadModelRoute) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@ember/routing/route",0,"vault/mixins/unload-model-route"eaimeta@70e063a35619d71f

  var _default = _route.default.extend(_unloadModelRoute.default, {
    store: (0, _service.inject)(),
    version: (0, _service.inject)(),

    beforeModel() {
      return this.version.fetchFeatures().then(() => {
        return this._super(...arguments);
      });
    },

    model(params) {
      return this.version.hasControlGroups ? this.store.findRecord('control-group', params.accessor) : null;
    },

    actions: {
      willTransition() {
        return true;
      },

      // deactivate happens later than willTransition,
      // so since we're using the model to render links
      // we don't want the UI blinking
      deactivate() {
        this.unloadModel();
        return true;
      }

    }
  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/access/control-groups-configure", ["exports", "@ember/service", "@ember/routing/route", "vault/mixins/unload-model-route"], function (_exports, _service, _route, _unloadModelRoute) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@ember/routing/route",0,"vault/mixins/unload-model-route"eaimeta@70e063a35619d71f

  var _default = _route.default.extend(_unloadModelRoute.default, {
    store: (0, _service.inject)(),
    version: (0, _service.inject)(),

    beforeModel() {
      return this.version.fetchFeatures().then(() => {
        return this._super(...arguments);
      });
    },

    model() {
      const type = 'control-group-config';
      return this.version.hasControlGroups ? this.store.findRecord(type, 'config').catch(e => {
        // if you haven't saved a config, the API 404s, so create one here to edit and return it
        if (e.httpStatus === 404) {
          return this.store.createRecord(type, {
            id: 'config'
          });
        }

        throw e;
      }) : null;
    },

    actions: {
      reload() {
        this.refresh();
      }

    }
  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/access/control-groups", ["exports", "@ember/service", "@ember/routing/route", "vault/mixins/unload-model-route"], function (_exports, _service, _route, _unloadModelRoute) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@ember/routing/route",0,"vault/mixins/unload-model-route"eaimeta@70e063a35619d71f

  var _default = _route.default.extend(_unloadModelRoute.default, {
    store: (0, _service.inject)(),
    version: (0, _service.inject)(),

    beforeModel() {
      return this.version.fetchFeatures().then(() => {
        return this._super(...arguments);
      });
    },

    model() {
      return this.version.hasControlGroups ? this.store.createRecord('control-group') : null;
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/access/identity", ["exports", "@ember-data/adapter/error", "@ember/object", "@ember/routing/route"], function (_exports, _error, _object, _route) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/adapter/error",0,"@ember/object",0,"@ember/routing/route"eaimeta@70e063a35619d71f

  const MODEL_FROM_PARAM = {
    entities: 'entity',
    groups: 'group'
  };

  var _default = _route.default.extend({
    model(params) {
      const model = MODEL_FROM_PARAM[params.item_type];

      if (!model) {
        const error = new _error.default();
        (0, _object.set)(error, 'httpStatus', 404);
        throw error;
      }

      return model;
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/access/identity/aliases/add", ["exports", "@ember/routing/route", "vault/mixins/unload-model-route", "vault/mixins/unsaved-model-route", "@ember/service"], function (_exports, _route, _unloadModelRoute, _unsavedModelRoute, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"vault/mixins/unload-model-route",0,"vault/mixins/unsaved-model-route",0,"@ember/service"eaimeta@70e063a35619d71f

  var _default = _route.default.extend(_unloadModelRoute.default, _unsavedModelRoute.default, {
    store: (0, _service.inject)(),

    model(params) {
      const itemType = this.modelFor('vault.cluster.access.identity');
      const modelType = `identity/${itemType}-alias`;
      return this.store.createRecord(modelType, {
        canonicalId: params.item_id
      });
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/access/identity/aliases/edit", ["exports", "@ember/routing/route", "vault/mixins/unload-model-route", "vault/mixins/unsaved-model-route", "@ember/service"], function (_exports, _route, _unloadModelRoute, _unsavedModelRoute, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"vault/mixins/unload-model-route",0,"vault/mixins/unsaved-model-route",0,"@ember/service"eaimeta@70e063a35619d71f

  var _default = _route.default.extend(_unloadModelRoute.default, _unsavedModelRoute.default, {
    store: (0, _service.inject)(),

    model(params) {
      const itemType = this.modelFor('vault.cluster.access.identity');
      const modelType = `identity/${itemType}-alias`;
      return this.store.findRecord(modelType, params.item_alias_id);
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/access/identity/aliases/index", ["exports", "@ember/routing/route", "core/mixins/list-route", "@ember/service"], function (_exports, _route, _listRoute, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"core/mixins/list-route",0,"@ember/service"eaimeta@70e063a35619d71f

  var _default = _route.default.extend(_listRoute.default, {
    store: (0, _service.inject)(),

    model(params) {
      const itemType = this.modelFor('vault.cluster.access.identity');
      const modelType = `identity/${itemType}-alias`;
      return this.store.lazyPaginatedQuery(modelType, {
        responsePath: 'data.keys',
        page: params.page,
        pageFilter: params.pageFilter,
        sortBy: 'name'
      }).catch(err => {
        if (err.httpStatus === 404) {
          return [];
        } else {
          throw err;
        }
      });
    },

    setupController(controller) {
      this._super(...arguments);

      controller.set('identityType', this.modelFor('vault.cluster.access.identity'));
    },

    actions: {
      willTransition(transition) {
        window.scrollTo(0, 0);

        if (!transition || transition.targetName !== this.routeName) {
          this.store.clearAllDatasets();
        }

        return true;
      },

      reload() {
        this.store.clearAllDatasets();
        this.refresh();
      }

    }
  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/access/identity/aliases/show", ["exports", "@ember-data/adapter/error", "rsvp", "@ember/object", "@ember/routing/route", "vault/helpers/tabs-for-identity-show", "@ember/service"], function (_exports, _error, _rsvp, _object, _route, _tabsForIdentityShow, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/adapter/error",0,"rsvp",0,"@ember/object",0,"@ember/routing/route",0,"vault/helpers/tabs-for-identity-show",0,"@ember/service"eaimeta@70e063a35619d71f

  var _default = _route.default.extend({
    store: (0, _service.inject)(),

    model(params) {
      const {
        section
      } = params;
      const itemType = this.modelFor('vault.cluster.access.identity') + '-alias';
      const tabs = _tabsForIdentityShow.TABS[itemType];
      const modelType = `identity/${itemType}`;

      if (!tabs.includes(section)) {
        const error = new _error.default();
        (0, _object.set)(error, 'httpStatus', 404);
        throw error;
      } // TODO peekRecord here to see if we have the record already


      return (0, _rsvp.hash)({
        model: this.store.findRecord(modelType, params.item_alias_id),
        section
      });
    },

    setupController(controller, resolvedModel) {
      const {
        model,
        section
      } = resolvedModel;
      controller.setProperties({
        model,
        section
      });
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/access/identity/create", ["exports", "@ember/routing/route", "vault/mixins/unload-model-route", "vault/mixins/unsaved-model-route", "@ember/service"], function (_exports, _route, _unloadModelRoute, _unsavedModelRoute, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"vault/mixins/unload-model-route",0,"vault/mixins/unsaved-model-route",0,"@ember/service"eaimeta@70e063a35619d71f

  var _default = _route.default.extend(_unloadModelRoute.default, _unsavedModelRoute.default, {
    store: (0, _service.inject)(),

    model() {
      const itemType = this.modelFor('vault.cluster.access.identity');
      const modelType = `identity/${itemType}`;
      return this.store.createRecord(modelType);
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/access/identity/edit", ["exports", "@ember/routing/route", "vault/mixins/unload-model-route", "vault/mixins/unsaved-model-route", "@ember/service"], function (_exports, _route, _unloadModelRoute, _unsavedModelRoute, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"vault/mixins/unload-model-route",0,"vault/mixins/unsaved-model-route",0,"@ember/service"eaimeta@70e063a35619d71f

  var _default = _route.default.extend(_unloadModelRoute.default, _unsavedModelRoute.default, {
    store: (0, _service.inject)(),

    model(params) {
      const itemType = this.modelFor('vault.cluster.access.identity');
      const modelType = `identity/${itemType}`;
      return this.store.findRecord(modelType, params.item_id);
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/access/identity/index", ["exports", "@ember/routing/route", "core/mixins/list-route", "@ember/service"], function (_exports, _route, _listRoute, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"core/mixins/list-route",0,"@ember/service"eaimeta@70e063a35619d71f

  var _default = _route.default.extend(_listRoute.default, {
    store: (0, _service.inject)(),

    model(params) {
      const itemType = this.modelFor('vault.cluster.access.identity');
      const modelType = `identity/${itemType}`;
      return this.store.lazyPaginatedQuery(modelType, {
        responsePath: 'data.keys',
        page: params.page,
        pageFilter: params.pageFilter,
        sortBy: 'name'
      }).catch(err => {
        if (err.httpStatus === 404) {
          return [];
        } else {
          throw err;
        }
      });
    },

    setupController(controller) {
      this._super(...arguments);

      controller.set('identityType', this.modelFor('vault.cluster.access.identity'));
    },

    actions: {
      willTransition(transition) {
        window.scrollTo(0, 0);

        if (transition.targetName !== this.routeName) {
          this.store.clearAllDatasets();
        }

        return true;
      },

      reload() {
        this.store.clearAllDatasets();
        this.refresh();
      }

    }
  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/access/identity/merge", ["exports", "@ember/routing/route", "vault/mixins/unload-model-route", "@ember/service"], function (_exports, _route, _unloadModelRoute, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"vault/mixins/unload-model-route",0,"@ember/service"eaimeta@70e063a35619d71f

  var _default = _route.default.extend(_unloadModelRoute.default, {
    store: (0, _service.inject)(),

    beforeModel() {
      const itemType = this.modelFor('vault.cluster.access.identity');

      if (itemType !== 'entity') {
        return this.transitionTo('vault.cluster.access.identity');
      }
    },

    model() {
      const modelType = `identity/entity-merge`;
      return this.store.createRecord(modelType);
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/access/identity/show", ["exports", "@ember-data/adapter/error", "@ember/runloop", "rsvp", "@ember/object", "@ember/routing/route", "vault/helpers/tabs-for-identity-show", "@ember/service"], function (_exports, _error, _runloop, _rsvp, _object, _route, _tabsForIdentityShow, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/adapter/error",0,"@ember/runloop",0,"rsvp",0,"@ember/object",0,"@ember/routing/route",0,"vault/helpers/tabs-for-identity-show",0,"@ember/service"eaimeta@70e063a35619d71f

  var _default = _route.default.extend({
    store: (0, _service.inject)(),

    model(params) {
      const {
        section
      } = params;
      const itemType = this.modelFor('vault.cluster.access.identity');
      const tabs = _tabsForIdentityShow.TABS[itemType];
      const modelType = `identity/${itemType}`;

      if (!tabs.includes(section)) {
        const error = new _error.default();
        (0, _object.set)(error, 'httpStatus', 404);
        throw error;
      } // if the record is in the store use that


      let model = this.store.peekRecord(modelType, params.item_id); // if we don't have creationTime, we only have a partial model so reload

      if (model && !model.get('creationTime')) {
        model = model.reload();
      } // if there's no model, we need to fetch it


      if (!model) {
        model = this.store.findRecord(modelType, params.item_id);
      }

      return (0, _rsvp.hash)({
        model,
        section
      });
    },

    activate() {
      // if we're just entering the route, and it's not a hard reload
      // reload to make sure we have the newest info
      if (this.currentModel) {
        (0, _runloop.next)(() => {
          /* eslint-disable-next-line ember/no-controller-access-in-routes */
          this.controller.get('model').reload();
        });
      }
    },

    afterModel(resolvedModel) {
      const {
        section,
        model
      } = resolvedModel;

      if (model.get('identityType') === 'group' && model.get('type') === 'internal' && section === 'aliases') {
        return this.transitionTo('vault.cluster.access.identity.show', model.id, 'details');
      }
    },

    setupController(controller, resolvedModel) {
      const {
        model,
        section
      } = resolvedModel;
      controller.setProperties({
        model,
        section
      });
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/access/leases", ["exports", "@ember/routing/route", "vault/mixins/cluster-route", "@ember/service"], function (_exports, _route, _clusterRoute, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"vault/mixins/cluster-route",0,"@ember/service"eaimeta@70e063a35619d71f

  var _default = _route.default.extend(_clusterRoute.default, {
    store: (0, _service.inject)(),

    model() {
      return this.store.findRecord('capabilities', 'sys/leases/lookup/');
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/access/leases/index", ["exports", "@ember/routing/route"], function (_exports, _route) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route"eaimeta@70e063a35619d71f

  var _default = _route.default.extend({
    beforeModel(transition) {
      if (this.modelFor('vault.cluster.access.leases').get('canList') && transition.targetName === this.routeName) {
        return this.replaceWith('vault.cluster.access.leases.list-root');
      } else {
        return;
      }
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/access/leases/list-root", ["exports", "vault/routes/vault/cluster/access/leases/list"], function (_exports, _list) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _list.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"vault/routes/vault/cluster/access/leases/list"eaimeta@70e063a35619d71f
});
;define("vault/routes/vault/cluster/access/leases/list", ["exports", "@ember/object", "rsvp", "@ember/routing/route", "@ember/service"], function (_exports, _object, _rsvp, _route, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/object",0,"rsvp",0,"@ember/routing/route",0,"@ember/service"eaimeta@70e063a35619d71f

  var _default = _route.default.extend({
    store: (0, _service.inject)(),
    queryParams: {
      page: {
        refreshModel: true
      },
      pageFilter: {
        refreshModel: true
      }
    },
    templateName: 'vault/cluster/access/leases/list',

    model(params) {
      const prefix = params.prefix || '';

      if (this.modelFor('vault.cluster.access.leases').get('canList')) {
        return (0, _rsvp.hash)({
          leases: this.store.lazyPaginatedQuery('lease', {
            prefix,
            responsePath: 'data.keys',
            page: params.page,
            pageFilter: params.pageFilter
          }).then(model => {
            this.set('has404', false);
            return model;
          }).catch(err => {
            if (err.httpStatus === 404 && prefix === '') {
              return [];
            } else {
              throw err;
            }
          }),
          capabilities: (0, _rsvp.hash)({
            revokePrefix: this.store.findRecord('capabilities', `sys/leases/revoke-prefix/${prefix}`),
            forceRevokePrefix: this.store.findRecord('capabilities', `sys/leases/revoke-force/${prefix}`)
          })
        });
      }
    },

    setupController(controller, model) {
      const params = this.paramsFor(this.routeName);
      const prefix = params.prefix ? params.prefix : '';
      const has404 = this.has404;
      controller.set('hasModel', true);
      controller.setProperties({
        model: model.leases,
        capabilities: model.capabilities,
        baseKey: {
          id: prefix
        },
        has404
      });

      if (!has404) {
        const pageFilter = params.pageFilter;
        let filter;

        if (prefix) {
          filter = prefix + (pageFilter || '');
        } else if (pageFilter) {
          filter = pageFilter;
        }

        controller.setProperties({
          filter: filter || '',
          page: model.leases.get('meta.currentPage')
        });
      }
    },

    resetController(controller, isExiting) {
      this._super(...arguments);

      if (isExiting) {
        controller.set('filter', '');
      }
    },

    actions: {
      error(error, transition) {
        const {
          prefix
        } = this.paramsFor(this.routeName);
        (0, _object.set)(error, 'keyId', prefix);
        /* eslint-disable-next-line ember/no-controller-access-in-routes */

        const hasModel = this.controllerFor(this.routeName).get('hasModel'); // only swallow the error if we have a previous model

        if (hasModel && error.httpStatus === 404) {
          this.set('has404', true);
          transition.abort();
        } else {
          return true;
        }
      },

      willTransition(transition) {
        window.scrollTo(0, 0);

        if (transition.targetName !== this.routeName) {
          this.store.clearAllDatasets();
        }

        return true;
      }

    }
  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/access/leases/show", ["exports", "@ember/object", "rsvp", "@ember/routing/route", "vault/mixins/unload-model-route", "vault/lib/key-utils", "@ember/service"], function (_exports, _object, _rsvp, _route, _unloadModelRoute, _keyUtils, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/object",0,"rsvp",0,"@ember/routing/route",0,"vault/mixins/unload-model-route",0,"vault/lib/key-utils",0,"@ember/service"eaimeta@70e063a35619d71f

  var _default = _route.default.extend(_unloadModelRoute.default, {
    store: (0, _service.inject)(),

    beforeModel() {
      const {
        lease_id: leaseId
      } = this.paramsFor(this.routeName);

      const parentKey = _keyUtils.default.parentKeyForKey(leaseId);

      if (_keyUtils.default.keyIsFolder(leaseId)) {
        if (parentKey) {
          return this.transitionTo('vault.cluster.access.leases.list', parentKey);
        } else {
          return this.transitionTo('vault.cluster.access.leases.list-root');
        }
      }
    },

    model(params) {
      const {
        lease_id
      } = params;
      return (0, _rsvp.hash)({
        lease: this.store.queryRecord('lease', {
          lease_id
        }),
        capabilities: (0, _rsvp.hash)({
          renew: this.store.findRecord('capabilities', 'sys/leases/renew'),
          revoke: this.store.findRecord('capabilities', 'sys/leases/revoke'),
          leases: this.modelFor('vault.cluster.access.leases')
        })
      });
    },

    setupController(controller, model) {
      this._super(...arguments);

      const {
        lease_id: leaseId
      } = this.paramsFor(this.routeName);
      controller.setProperties({
        model: model.lease,
        capabilities: model.capabilities,
        baseKey: {
          id: leaseId
        }
      });
    },

    actions: {
      error(error) {
        const {
          lease_id
        } = this.paramsFor(this.routeName);
        (0, _object.set)(error, 'keyId', lease_id);
        return true;
      },

      refreshModel() {
        this.refresh();
      }

    }
  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/access/method", ["exports", "@ember-data/adapter/error", "@ember/object", "@ember/routing/route", "@ember/service"], function (_exports, _error, _object, _route, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/adapter/error",0,"@ember/object",0,"@ember/routing/route",0,"@ember/service"eaimeta@70e063a35619d71f

  var _default = _route.default.extend({
    store: (0, _service.inject)(),
    pathHelp: (0, _service.inject)('path-help'),

    model(params) {
      const {
        path
      } = params;
      return this.store.findAll('auth-method').then(modelArray => {
        const model = modelArray.findBy('id', path);

        if (!model) {
          const error = new _error.default();
          (0, _object.set)(error, 'httpStatus', 404);
          throw error;
        }

        return this.pathHelp.getPaths(model.apiPath, path).then(paths => {
          model.set('paths', paths);
          return model;
        });
      });
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/access/method/index", ["exports", "@ember/routing/route", "vault/helpers/tabs-for-auth-section"], function (_exports, _route, _tabsForAuthSection) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"vault/helpers/tabs-for-auth-section"eaimeta@70e063a35619d71f

  var _default = _route.default.extend({
    beforeModel() {
      let {
        methodType,
        paths
      } = this.modelFor('vault.cluster.access.method');
      paths = paths ? paths.paths.filter(path => path.navigation === true) : null;
      const activeTab = (0, _tabsForAuthSection.tabsForAuthSection)([methodType, 'authConfig', paths])[0].routeParams;
      return this.transitionTo(...activeTab);
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/access/method/item", ["exports", "@ember/service", "@ember/routing/route", "ember-inflector"], function (_exports, _service, _route, _emberInflector) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@ember/routing/route",0,"ember-inflector"eaimeta@70e063a35619d71f

  var _default = _route.default.extend({
    pathHelp: (0, _service.inject)('path-help'),

    beforeModel() {
      const {
        apiPath,
        type,
        authMethodPath,
        itemType
      } = this.getMethodAndModelInfo();
      const modelType = `generated-${(0, _emberInflector.singularize)(itemType)}-${type}`;
      return this.pathHelp.getNewModel(modelType, authMethodPath, apiPath, itemType);
    },

    getMethodAndModelInfo() {
      const {
        item_type: itemType
      } = this.paramsFor(this.routeName);
      const {
        path: authMethodPath
      } = this.paramsFor('vault.cluster.access.method');
      const methodModel = this.modelFor('vault.cluster.access.method');
      const {
        apiPath,
        type
      } = methodModel;
      return {
        apiPath,
        type,
        authMethodPath,
        itemType
      };
    },

    setupController(controller) {
      this._super(...arguments);

      const {
        apiPath,
        authMethodPath,
        itemType
      } = this.getMethodAndModelInfo();
      controller.set('itemType', itemType);
      this.pathHelp.getPaths(apiPath, authMethodPath, itemType).then(paths => {
        const navigationPaths = paths.paths.filter(path => path.navigation);
        controller.set('paths', navigationPaths.filter(path => path.itemType.includes(itemType)).map(path => path.path));
      });
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/access/method/item/create", ["exports", "@ember/routing/route", "vault/mixins/unload-model-route", "vault/mixins/unsaved-model-route", "ember-inflector", "@ember/service"], function (_exports, _route, _unloadModelRoute, _unsavedModelRoute, _emberInflector, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"vault/mixins/unload-model-route",0,"vault/mixins/unsaved-model-route",0,"ember-inflector",0,"@ember/service"eaimeta@70e063a35619d71f

  var _default = _route.default.extend(_unloadModelRoute.default, _unsavedModelRoute.default, {
    store: (0, _service.inject)(),

    model() {
      const {
        item_type: itemType
      } = this.paramsFor('vault.cluster.access.method.item');
      const methodModel = this.modelFor('vault.cluster.access.method');
      const {
        type
      } = methodModel;
      const {
        path: method
      } = this.paramsFor('vault.cluster.access.method');
      const modelType = `generated-${(0, _emberInflector.singularize)(itemType)}-${type}`;
      return this.store.createRecord(modelType, {
        itemType,
        method,
        adapterOptions: {
          path: `${method}/${itemType}`
        }
      });
    },

    setupController(controller) {
      this._super(...arguments);

      const {
        item_type: itemType
      } = this.paramsFor('vault.cluster.access.method.item');
      const {
        path: method
      } = this.paramsFor('vault.cluster.access.method');
      controller.set('itemType', (0, _emberInflector.singularize)(itemType));
      controller.set('mode', 'create');
      controller.set('method', method);
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/access/method/item/edit", ["exports", "@ember/routing/route", "vault/mixins/unload-model-route", "vault/mixins/unsaved-model-route", "ember-inflector", "@ember/service"], function (_exports, _route, _unloadModelRoute, _unsavedModelRoute, _emberInflector, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"vault/mixins/unload-model-route",0,"vault/mixins/unsaved-model-route",0,"ember-inflector",0,"@ember/service"eaimeta@70e063a35619d71f

  var _default = _route.default.extend(_unloadModelRoute.default, _unsavedModelRoute.default, {
    store: (0, _service.inject)(),

    model(params) {
      const id = params.item_id;
      const {
        item_type: itemType
      } = this.paramsFor('vault.cluster.access.method.item');
      const methodModel = this.modelFor('vault.cluster.access.method');
      const modelType = `generated-${(0, _emberInflector.singularize)(itemType)}-${methodModel.type}`;
      return this.store.queryRecord(modelType, {
        id,
        authMethodPath: methodModel.id
      });
    },

    setupController(controller) {
      this._super(...arguments);

      const {
        item_type: itemType
      } = this.paramsFor('vault.cluster.access.method.item');
      controller.set('itemType', (0, _emberInflector.singularize)(itemType));
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/access/method/item/list", ["exports", "@ember/service", "@ember/routing/route", "ember-inflector", "vault/mixins/list-route"], function (_exports, _service, _route, _emberInflector, _listRoute) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@ember/routing/route",0,"ember-inflector",0,"vault/mixins/list-route"eaimeta@70e063a35619d71f

  var _default = _route.default.extend(_listRoute.default, {
    store: (0, _service.inject)(),
    pathHelp: (0, _service.inject)('path-help'),

    getMethodAndModelInfo() {
      const {
        item_type: itemType
      } = this.paramsFor('vault.cluster.access.method.item');
      const {
        path: authMethodPath
      } = this.paramsFor('vault.cluster.access.method');
      const methodModel = this.modelFor('vault.cluster.access.method');
      const {
        apiPath,
        type
      } = methodModel;
      return {
        apiPath,
        type,
        authMethodPath,
        itemType,
        methodModel
      };
    },

    model() {
      const {
        type,
        authMethodPath,
        itemType
      } = this.getMethodAndModelInfo();
      const {
        page,
        pageFilter
      } = this.paramsFor(this.routeName);
      const modelType = `generated-${(0, _emberInflector.singularize)(itemType)}-${type}`;
      return this.store.lazyPaginatedQuery(modelType, {
        responsePath: 'data.keys',
        page: page,
        pageFilter: pageFilter,
        type: itemType,
        id: authMethodPath
      }).catch(err => {
        if (err.httpStatus === 404) {
          return [];
        } else {
          throw err;
        }
      });
    },

    actions: {
      willTransition(transition) {
        window.scrollTo(0, 0);

        if (transition.targetName !== this.routeName) {
          this.store.clearAllDatasets();
        }

        return true;
      },

      reload() {
        this.store.clearAllDatasets();
        this.refresh();
      }

    },

    setupController(controller) {
      this._super(...arguments);

      const {
        apiPath,
        authMethodPath,
        itemType,
        methodModel
      } = this.getMethodAndModelInfo();
      controller.set('itemType', itemType);
      controller.set('methodModel', methodModel);
      this.pathHelp.getPaths(apiPath, authMethodPath, itemType).then(paths => {
        controller.set('paths', paths.paths.filter(path => path.navigation && path.itemType.includes(itemType)));
      });
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/access/method/item/show", ["exports", "ember-inflector", "@ember/service", "@ember/routing/route"], function (_exports, _emberInflector, _service, _route) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-inflector",0,"@ember/service",0,"@ember/routing/route"eaimeta@70e063a35619d71f

  var _default = _route.default.extend({
    store: (0, _service.inject)(),
    pathHelp: (0, _service.inject)('path-help'),

    model(params) {
      const id = params.item_id;
      const {
        item_type: itemType
      } = this.paramsFor('vault.cluster.access.method.item');
      const methodModel = this.modelFor('vault.cluster.access.method');
      const modelType = `generated-${(0, _emberInflector.singularize)(itemType)}-${methodModel.type}`;
      return this.store.queryRecord(modelType, {
        id,
        authMethodPath: methodModel.id
      });
    },

    setupController(controller) {
      this._super(...arguments);

      const {
        item_type: itemType
      } = this.paramsFor('vault.cluster.access.method.item');
      controller.set('itemType', (0, _emberInflector.singularize)(itemType));
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/access/method/section", ["exports", "@ember-data/adapter/error", "@ember/object", "@ember/routing/route"], function (_exports, _error, _object, _route) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/adapter/error",0,"@ember/object",0,"@ember/routing/route"eaimeta@70e063a35619d71f

  var _default = _route.default.extend({
    model(params) {
      const {
        section_name: section
      } = params;

      if (section !== 'configuration') {
        const error = new _error.default();
        (0, _object.set)(error, 'httpStatus', 404);
        throw error;
      }

      return this.modelFor('vault.cluster.access.method');
    },

    setupController(controller) {
      const {
        section_name: section
      } = this.paramsFor(this.routeName);

      this._super(...arguments);

      controller.set('section', section);
      const method = this.modelFor('vault.cluster.access.method');
      controller.set('paths', method.paths.paths.filter(path => path.navigation));
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/access/methods", ["exports", "@ember/routing/route", "@ember/service"], function (_exports, _route, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor;

  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"@ember/service"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let VaultClusterAccessMethodsRoute = (_class = class VaultClusterAccessMethodsRoute extends _route.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);

      _defineProperty(this, "queryParams", {
        page: {
          refreshModel: true
        },
        pageFilter: {
          refreshModel: true
        }
      });
    }

    model() {
      return this.store.findAll('auth-method');
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class);
  _exports.default = VaultClusterAccessMethodsRoute;
});
;define("vault/routes/vault/cluster/access/mfa/enforcements/create", ["exports", "@ember/routing/route", "@ember/service"], function (_exports, _route, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor;

  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"@ember/service"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let MfaLoginEnforcementCreateRoute = (_class = class MfaLoginEnforcementCreateRoute extends _route.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);
    }

    model() {
      return this.store.createRecord('mfa-login-enforcement');
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class);
  _exports.default = MfaLoginEnforcementCreateRoute;
});
;define("vault/routes/vault/cluster/access/mfa/enforcements/enforcement", ["exports", "@ember/routing/route", "@ember/service"], function (_exports, _route, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor;

  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"@ember/service"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let MfaLoginEnforcementRoute = (_class = class MfaLoginEnforcementRoute extends _route.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);
    }

    model(_ref) {
      let {
        name
      } = _ref;
      return this.store.findRecord('mfa-login-enforcement', name);
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class);
  _exports.default = MfaLoginEnforcementRoute;
});
;define("vault/routes/vault/cluster/access/mfa/enforcements/enforcement/edit", ["exports", "@ember/routing/route"], function (_exports, _route) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route"eaimeta@70e063a35619d71f

  class MfaLoginEnforcementEditRoute extends _route.default {}

  _exports.default = MfaLoginEnforcementEditRoute;
});
;define("vault/routes/vault/cluster/access/mfa/enforcements/index", ["exports", "@ember/routing/route", "@ember/service"], function (_exports, _route, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor;

  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"@ember/service"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let MfaEnforcementsRoute = (_class = class MfaEnforcementsRoute extends _route.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);
    }

    model() {
      return this.store.query('mfa-login-enforcement', {}).catch(err => {
        if (err.httpStatus === 404) {
          return [];
        } else {
          throw err;
        }
      });
    }

    setupController(controller, model) {
      controller.set('model', model);
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class);
  _exports.default = MfaEnforcementsRoute;
});
;define("vault/routes/vault/cluster/access/mfa/index", ["exports", "@ember/routing/route", "@ember/service"], function (_exports, _route, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor;

  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"@ember/service"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let MfaConfigureRoute = (_class = class MfaConfigureRoute extends _route.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);
    }

    beforeModel() {
      return this.store.query('mfa-method', {}).then(() => {
        // if response then they should transition to the methods page instead of staying on the configure page.
        this.transitionTo('vault.cluster.access.mfa.methods.index');
      }).catch(() => {// stay on the landing page
      });
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class);
  _exports.default = MfaConfigureRoute;
});
;define("vault/routes/vault/cluster/access/mfa/methods/create", ["exports", "@ember/routing/route"], function (_exports, _route) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route"eaimeta@70e063a35619d71f

  class MfaLoginEnforcementCreateRoute extends _route.default {
    setupController(controller) {
      super.setupController(...arguments); // if route was refreshed after type select recreate method model

      const {
        type
      } = controller;

      if (type) {
        // create method and enforcement models for forms if type is selected
        controller.createModels();
      }
    }

    resetController(controller, isExiting) {
      if (isExiting) {
        // reset type query param when user saves or cancels
        // this will not trigger when refreshing the page which preserves intended functionality
        controller.set('type', null);
      }
    }

  }

  _exports.default = MfaLoginEnforcementCreateRoute;
});
;define("vault/routes/vault/cluster/access/mfa/methods/index", ["exports", "@ember/routing/route", "@ember/service"], function (_exports, _route, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2;

  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"@ember/service"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let MfaMethodsRoute = (_class = class MfaMethodsRoute extends _route.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);

      _initializerDefineProperty(this, "router", _descriptor2, this);
    }

    model() {
      return this.store.query('mfa-method', {}).catch(err => {
        if (err.httpStatus === 404) {
          return [];
        } else {
          throw err;
        }
      });
    }

    afterModel(model) {
      if (model.length === 0) {
        this.router.transitionTo('vault.cluster.access.mfa');
      }
    }

    setupController(controller, model) {
      controller.set('model', model);
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "router", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class);
  _exports.default = MfaMethodsRoute;
});
;define("vault/routes/vault/cluster/access/mfa/methods/method", ["exports", "@ember/routing/route", "rsvp", "@ember/service"], function (_exports, _route, _rsvp, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor;

  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"rsvp",0,"@ember/service"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let MfaMethodRoute = (_class = class MfaMethodRoute extends _route.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);
    }

    model(_ref) {
      let {
        id
      } = _ref;
      return (0, _rsvp.hash)({
        method: this.store.findRecord('mfa-method', id).then(data => data),
        enforcements: this.store.query('mfa-login-enforcement', {}).then(data => {
          const filteredEnforcements = data.filter(item => {
            const results = item.hasMany('mfa_methods').ids();
            return results.includes(id);
          });
          return filteredEnforcements;
        }).catch(() => {// Do nothing
        })
      });
    }

    setupController(controller, model) {
      controller.set('model', model);
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class);
  _exports.default = MfaMethodRoute;
});
;define("vault/routes/vault/cluster/access/mfa/methods/method/edit", ["exports", "@ember/routing/route"], function (_exports, _route) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route"eaimeta@70e063a35619d71f

  class MfaMethodEditRoute extends _route.default {}

  _exports.default = MfaMethodEditRoute;
});
;define("vault/routes/vault/cluster/access/namespaces/create", ["exports", "@ember/service", "@ember/routing/route", "vault/mixins/unload-model-route"], function (_exports, _service, _route, _unloadModelRoute) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@ember/routing/route",0,"vault/mixins/unload-model-route"eaimeta@70e063a35619d71f

  var _default = _route.default.extend(_unloadModelRoute.default, {
    store: (0, _service.inject)(),
    version: (0, _service.inject)(),

    beforeModel() {
      return this.version.fetchFeatures().then(() => {
        return this._super(...arguments);
      });
    },

    model() {
      return this.version.hasNamespaces ? this.store.createRecord('namespace') : null;
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/access/namespaces/index", ["exports", "@ember/service", "@ember/routing/route", "vault/mixins/unload-model-route"], function (_exports, _service, _route, _unloadModelRoute) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@ember/routing/route",0,"vault/mixins/unload-model-route"eaimeta@70e063a35619d71f

  var _default = _route.default.extend(_unloadModelRoute.default, {
    store: (0, _service.inject)(),
    queryParams: {
      page: {
        refreshModel: true
      }
    },
    version: (0, _service.inject)(),

    beforeModel() {
      this.store.unloadAll('namespace');
      return this.version.fetchFeatures().then(() => {
        return this._super(...arguments);
      });
    },

    model(params) {
      if (this.version.hasNamespaces) {
        return this.store.lazyPaginatedQuery('namespace', {
          responsePath: 'data.keys',
          page: Number(params?.page) || 1
        }).then(model => {
          return model;
        }).catch(err => {
          if (err.httpStatus === 404) {
            return [];
          } else {
            throw err;
          }
        });
      }

      return null;
    },

    setupController(controller, model) {
      const has404 = this.has404;
      controller.setProperties({
        model: model,
        has404,
        hasModel: true
      });

      if (!has404) {
        controller.setProperties({
          page: Number(model?.meta?.currentPage) || 1
        });
      }
    },

    actions: {
      error(error, transition) {
        /* eslint-disable-next-line ember/no-controller-access-in-routes */
        const hasModel = this.controllerFor(this.routeName).get('hasModel');

        if (hasModel && error.httpStatus === 404) {
          this.set('has404', true);
          transition.abort();
        } else {
          return true;
        }
      },

      willTransition(transition) {
        window.scrollTo(0, 0);

        if (!transition || transition.targetName !== this.routeName) {
          this.store.clearAllDatasets();
        }

        return true;
      },

      reload() {
        this.store.clearAllDatasets();
        this.refresh();
      }

    }
  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/access/oidc", ["exports", "@ember/routing/route"], function (_exports, _route) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route"eaimeta@70e063a35619d71f

  class OidcConfigureRoute extends _route.default {}

  _exports.default = OidcConfigureRoute;
});
;define("vault/routes/vault/cluster/access/oidc/assignments/assignment", ["exports", "@ember/routing/route", "@ember/service"], function (_exports, _route, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor;

  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"@ember/service"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let OidcAssignmentRoute = (_class = class OidcAssignmentRoute extends _route.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);
    }

    model(_ref) {
      let {
        name
      } = _ref;
      return this.store.findRecord('oidc/assignment', name);
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class);
  _exports.default = OidcAssignmentRoute;
});
;define("vault/routes/vault/cluster/access/oidc/assignments/assignment/details", ["exports", "@ember/routing/route"], function (_exports, _route) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route"eaimeta@70e063a35619d71f

  class OidcAssignmentDetailsRoute extends _route.default {}

  _exports.default = OidcAssignmentDetailsRoute;
});
;define("vault/routes/vault/cluster/access/oidc/assignments/assignment/edit", ["exports", "@ember/routing/route"], function (_exports, _route) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route"eaimeta@70e063a35619d71f

  class OidcAssignmentEditRoute extends _route.default {}

  _exports.default = OidcAssignmentEditRoute;
});
;define("vault/routes/vault/cluster/access/oidc/assignments/create", ["exports", "@ember/routing/route", "@ember/service"], function (_exports, _route, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor;

  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"@ember/service"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let OidcAssignmentsCreateRoute = (_class = class OidcAssignmentsCreateRoute extends _route.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);
    }

    model() {
      return this.store.createRecord('oidc/assignment');
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class);
  _exports.default = OidcAssignmentsCreateRoute;
});
;define("vault/routes/vault/cluster/access/oidc/assignments/index", ["exports", "@ember/routing/route", "@ember/service"], function (_exports, _route, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor;

  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"@ember/service"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let OidcAssignmentsRoute = (_class = class OidcAssignmentsRoute extends _route.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);
    }

    model() {
      return this.store.query('oidc/assignment', {}).catch(err => {
        if (err.httpStatus === 404) {
          return [];
        } else {
          throw err;
        }
      });
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class);
  _exports.default = OidcAssignmentsRoute;
});
;define("vault/routes/vault/cluster/access/oidc/clients/client", ["exports", "@ember/routing/route", "@ember/service"], function (_exports, _route, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor;

  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"@ember/service"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let OidcClientRoute = (_class = class OidcClientRoute extends _route.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);
    }

    model(_ref) {
      let {
        name
      } = _ref;
      return this.store.findRecord('oidc/client', name);
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class);
  _exports.default = OidcClientRoute;
});
;define("vault/routes/vault/cluster/access/oidc/clients/client/details", ["exports", "@ember/routing/route"], function (_exports, _route) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route"eaimeta@70e063a35619d71f

  class OidcClientDetailsRoute extends _route.default {}

  _exports.default = OidcClientDetailsRoute;
});
;define("vault/routes/vault/cluster/access/oidc/clients/client/edit", ["exports", "@ember/routing/route"], function (_exports, _route) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route"eaimeta@70e063a35619d71f

  class OidcClientEditRoute extends _route.default {}

  _exports.default = OidcClientEditRoute;
});
;define("vault/routes/vault/cluster/access/oidc/clients/client/providers", ["exports", "@ember/routing/route", "@ember/service"], function (_exports, _route, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor;

  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"@ember/service"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let OidcClientProvidersRoute = (_class = class OidcClientProvidersRoute extends _route.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);
    }

    model() {
      const model = this.modelFor('vault.cluster.access.oidc.clients.client');
      return this.store.query('oidc/provider', {
        allowed_client_id: model.clientId
      }).catch(err => {
        if (err.httpStatus === 404) {
          return [];
        } else {
          throw err;
        }
      });
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class);
  _exports.default = OidcClientProvidersRoute;
});
;define("vault/routes/vault/cluster/access/oidc/clients/create", ["exports", "@ember/routing/route", "@ember/service"], function (_exports, _route, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor;

  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"@ember/service"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let OidcClientsCreateRoute = (_class = class OidcClientsCreateRoute extends _route.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);
    }

    model() {
      return this.store.createRecord('oidc/client');
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class);
  _exports.default = OidcClientsCreateRoute;
});
;define("vault/routes/vault/cluster/access/oidc/clients/index", ["exports", "@ember/routing/route", "@ember/service"], function (_exports, _route, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2;

  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"@ember/service"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let OidcClientsRoute = (_class = class OidcClientsRoute extends _route.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);

      _initializerDefineProperty(this, "router", _descriptor2, this);
    }

    model() {
      return this.store.query('oidc/client', {}).catch(err => {
        if (err.httpStatus === 404) {
          return [];
        } else {
          throw err;
        }
      });
    }

    afterModel(model) {
      if (model.length === 0) {
        this.router.transitionTo('vault.cluster.access.oidc');
      }
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "router", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class);
  _exports.default = OidcClientsRoute;
});
;define("vault/routes/vault/cluster/access/oidc/index", ["exports", "@ember/routing/route", "@ember/service"], function (_exports, _route, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2;

  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"@ember/service"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let OidcConfigureRoute = (_class = class OidcConfigureRoute extends _route.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);

      _initializerDefineProperty(this, "router", _descriptor2, this);
    }

    beforeModel() {
      return this.store.query('oidc/client', {}).then(() => {
        // transition to client list view if clients have been created
        this.router.transitionTo('vault.cluster.access.oidc.clients');
      }).catch(() => {// adapter throws error for 404 - swallow and remain on index route to show call to action
      });
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "router", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class);
  _exports.default = OidcConfigureRoute;
});
;define("vault/routes/vault/cluster/access/oidc/keys/create", ["exports", "@ember/routing/route", "@ember/service"], function (_exports, _route, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor;

  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"@ember/service"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let OidcKeysCreateRoute = (_class = class OidcKeysCreateRoute extends _route.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);
    }

    model() {
      return this.store.createRecord('oidc/key');
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class);
  _exports.default = OidcKeysCreateRoute;
});
;define("vault/routes/vault/cluster/access/oidc/keys/index", ["exports", "@ember/routing/route", "@ember/service"], function (_exports, _route, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor;

  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"@ember/service"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let OidcKeysRoute = (_class = class OidcKeysRoute extends _route.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);
    }

    model() {
      return this.store.query('oidc/key', {}).catch(err => {
        if (err.httpStatus === 404) {
          return [];
        } else {
          throw err;
        }
      });
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class);
  _exports.default = OidcKeysRoute;
});
;define("vault/routes/vault/cluster/access/oidc/keys/key", ["exports", "@ember/routing/route", "@ember/service"], function (_exports, _route, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor;

  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"@ember/service"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let OidcKeyRoute = (_class = class OidcKeyRoute extends _route.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);
    }

    model(_ref) {
      let {
        name
      } = _ref;
      return this.store.findRecord('oidc/key', name);
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class);
  _exports.default = OidcKeyRoute;
});
;define("vault/routes/vault/cluster/access/oidc/keys/key/clients", ["exports", "@ember/routing/route", "@ember/service"], function (_exports, _route, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor;

  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"@ember/service"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let OidcKeyClientsRoute = (_class = class OidcKeyClientsRoute extends _route.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);
    }

    async model() {
      const {
        allowedClientIds
      } = this.modelFor('vault.cluster.access.oidc.keys.key');
      return await this.store.query('oidc/client', {
        paramKey: 'client_id',
        filterFor: allowedClientIds
      });
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class);
  _exports.default = OidcKeyClientsRoute;
});
;define("vault/routes/vault/cluster/access/oidc/keys/key/details", ["exports", "@ember/routing/route"], function (_exports, _route) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route"eaimeta@70e063a35619d71f

  class OidcKeyDetailsRoute extends _route.default {}

  _exports.default = OidcKeyDetailsRoute;
});
;define("vault/routes/vault/cluster/access/oidc/keys/key/edit", ["exports", "@ember/routing/route"], function (_exports, _route) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route"eaimeta@70e063a35619d71f

  class OidcKeyEditRoute extends _route.default {}

  _exports.default = OidcKeyEditRoute;
});
;define("vault/routes/vault/cluster/access/oidc/providers/create", ["exports", "@ember/routing/route", "@ember/service"], function (_exports, _route, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor;

  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"@ember/service"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let OidcProvidersCreateRoute = (_class = class OidcProvidersCreateRoute extends _route.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);
    }

    model() {
      return this.store.createRecord('oidc/provider');
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class);
  _exports.default = OidcProvidersCreateRoute;
});
;define("vault/routes/vault/cluster/access/oidc/providers/index", ["exports", "@ember/routing/route", "@ember/service"], function (_exports, _route, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor;

  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"@ember/service"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let OidcProvidersRoute = (_class = class OidcProvidersRoute extends _route.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);
    }

    model() {
      return this.store.query('oidc/provider', {}).catch(err => {
        if (err.httpStatus === 404) {
          return [];
        } else {
          throw err;
        }
      });
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class);
  _exports.default = OidcProvidersRoute;
});
;define("vault/routes/vault/cluster/access/oidc/providers/provider", ["exports", "@ember/routing/route", "@ember/service"], function (_exports, _route, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor;

  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"@ember/service"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let OidcProviderRoute = (_class = class OidcProviderRoute extends _route.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);
    }

    model(_ref) {
      let {
        name
      } = _ref;
      return this.store.findRecord('oidc/provider', name);
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class);
  _exports.default = OidcProviderRoute;
});
;define("vault/routes/vault/cluster/access/oidc/providers/provider/clients", ["exports", "@ember/routing/route", "@ember/service"], function (_exports, _route, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor;

  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"@ember/service"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let OidcProviderClientsRoute = (_class = class OidcProviderClientsRoute extends _route.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);
    }

    async model() {
      const {
        allowedClientIds
      } = this.modelFor('vault.cluster.access.oidc.providers.provider');
      return await this.store.query('oidc/client', {
        paramKey: 'client_id',
        filterFor: allowedClientIds
      });
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class);
  _exports.default = OidcProviderClientsRoute;
});
;define("vault/routes/vault/cluster/access/oidc/providers/provider/details", ["exports", "@ember/routing/route"], function (_exports, _route) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route"eaimeta@70e063a35619d71f

  class OidcProviderDetailsRoute extends _route.default {}

  _exports.default = OidcProviderDetailsRoute;
});
;define("vault/routes/vault/cluster/access/oidc/providers/provider/edit", ["exports", "@ember/routing/route"], function (_exports, _route) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route"eaimeta@70e063a35619d71f

  class OidcProviderEditRoute extends _route.default {}

  _exports.default = OidcProviderEditRoute;
});
;define("vault/routes/vault/cluster/access/oidc/scopes/create", ["exports", "@ember/routing/route", "@ember/service"], function (_exports, _route, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor;

  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"@ember/service"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let OidcScopesCreateRoute = (_class = class OidcScopesCreateRoute extends _route.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);
    }

    model() {
      return this.store.createRecord('oidc/scope');
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class);
  _exports.default = OidcScopesCreateRoute;
});
;define("vault/routes/vault/cluster/access/oidc/scopes/index", ["exports", "@ember/routing/route", "@ember/service"], function (_exports, _route, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor;

  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"@ember/service"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let OidcScopesRoute = (_class = class OidcScopesRoute extends _route.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);
    }

    model() {
      return this.store.query('oidc/scope', {}).catch(err => {
        if (err.httpStatus === 404) {
          return [];
        } else {
          throw err;
        }
      });
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class);
  _exports.default = OidcScopesRoute;
});
;define("vault/routes/vault/cluster/access/oidc/scopes/scope", ["exports", "@ember/routing/route", "@ember/service"], function (_exports, _route, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor;

  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"@ember/service"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let OidcScopeRoute = (_class = class OidcScopeRoute extends _route.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);
    }

    model(_ref) {
      let {
        name
      } = _ref;
      return this.store.findRecord('oidc/scope', name);
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class);
  _exports.default = OidcScopeRoute;
});
;define("vault/routes/vault/cluster/access/oidc/scopes/scope/details", ["exports", "@ember/routing/route"], function (_exports, _route) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route"eaimeta@70e063a35619d71f

  class OidcScopeDetailsRoute extends _route.default {}

  _exports.default = OidcScopeDetailsRoute;
});
;define("vault/routes/vault/cluster/access/oidc/scopes/scope/edit", ["exports", "@ember/routing/route"], function (_exports, _route) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route"eaimeta@70e063a35619d71f

  class OidcScopeEditRoute extends _route.default {}

  _exports.default = OidcScopeEditRoute;
});
;define("vault/routes/vault/cluster/auth", ["exports", "@ember/service", "vault/routes/vault/cluster/cluster-route-base", "vault/config/environment"], function (_exports, _service, _clusterRouteBase, _environment) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"vault/routes/vault/cluster/cluster-route-base",0,"vault/config/environment"eaimeta@70e063a35619d71f

  var _default = _clusterRouteBase.default.extend({
    queryParams: {
      authMethod: {
        replace: true
      }
    },
    flashMessages: (0, _service.inject)(),
    version: (0, _service.inject)(),

    beforeModel() {
      return this._super().then(() => {
        return this.version.fetchFeatures();
      });
    },

    model() {
      return this._super(...arguments);
    },

    resetController(controller) {
      controller.set('wrappedToken', '');
      controller.set('authMethod', 'token');
    },

    afterModel() {
      if (_environment.default.welcomeMessage) {
        this.flashMessages.info(_environment.default.welcomeMessage, {
          sticky: true,
          priority: 300
        });
      }
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/cluster-route-base", ["exports", "@ember/routing/route", "vault/mixins/cluster-route"], function (_exports, _route, _clusterRoute) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"vault/mixins/cluster-route"eaimeta@70e063a35619d71f

  var _default = _route.default.extend(_clusterRoute.default, {
    model() {
      return this.modelFor('vault.cluster');
    },

    resetController(controller) {
      controller.reset && controller.reset();
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/index", ["exports", "@ember/routing/route"], function (_exports, _route) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route"eaimeta@70e063a35619d71f

  var _default = _route.default.extend({
    beforeModel() {
      return this.transitionTo('vault.cluster.secrets');
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/init", ["exports", "vault/routes/vault/cluster/cluster-route-base"], function (_exports, _clusterRouteBase) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/routes/vault/cluster/cluster-route-base"eaimeta@70e063a35619d71f

  var _default = _clusterRouteBase.default.extend({});

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/license", ["exports", "@ember/routing/route", "vault/mixins/cluster-route", "@ember/service"], function (_exports, _route, _clusterRoute, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"vault/mixins/cluster-route",0,"@ember/service"eaimeta@70e063a35619d71f

  var _default = _route.default.extend(_clusterRoute.default, {
    store: (0, _service.inject)(),
    version: (0, _service.inject)(),

    beforeModel() {
      if (this.version.isOSS) {
        this.transitionTo('vault.cluster');
      }
    },

    model() {
      return this.store.queryRecord('license', {});
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/logout", ["exports", "ember", "@ember/object", "@ember/service", "@ember/routing/route", "vault/mixins/model-boundary-route"], function (_exports, _ember, _object, _service, _route, _modelBoundaryRoute) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember",0,"@ember/object",0,"@ember/service",0,"@ember/routing/route",0,"vault/mixins/model-boundary-route"eaimeta@70e063a35619d71f

  var _default = _route.default.extend(_modelBoundaryRoute.default, {
    auth: (0, _service.inject)(),
    controlGroup: (0, _service.inject)(),
    flashMessages: (0, _service.inject)(),
    console: (0, _service.inject)(),
    permissions: (0, _service.inject)(),
    namespaceService: (0, _service.inject)('namespace'),
    router: (0, _service.inject)(),
    modelTypes: (0, _object.computed)(function () {
      return ['secret', 'secret-engine'];
    }),

    beforeModel(_ref) {
      let {
        to: {
          queryParams
        }
      } = _ref;
      const authType = this.auth.getAuthType();
      const ns = this.namespaceService.path;
      this.auth.deleteCurrentToken();
      this.controlGroup.deleteTokens();
      this.namespaceService.reset();
      this.console.set('isOpen', false);
      this.console.clearLog(true);
      this.flashMessages.clearMessages();
      this.permissions.reset();
      queryParams.with = authType;

      if (ns) {
        queryParams.namespace = ns;
      }

      if (_ember.default.testing) {
        // Don't redirect on the test
        this.replaceWith('vault.cluster.auth', {
          queryParams
        });
      } else {
        const {
          cluster_name
        } = this.paramsFor('vault.cluster');
        location.assign(this.router.urlFor('vault.cluster.auth', cluster_name, {
          queryParams
        }));
      }
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/mfa-setup", ["exports", "@ember/routing/route"], function (_exports, _route) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route"eaimeta@70e063a35619d71f

  class MfaSetupRoute extends _route.default {}

  _exports.default = MfaSetupRoute;
});
;define("vault/routes/vault/cluster/oidc-callback", ["exports", "@ember/routing/route"], function (_exports, _route) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  _exports.getParamsForCallback = getParamsForCallback;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route"eaimeta@70e063a35619d71f

  function getParamsForCallback(qp, searchString) {
    const queryString = decodeURIComponent(searchString);
    let {
      path,
      code,
      state,
      namespace
    } = qp; // namespace from state takes precedence over the cluster's ns

    if (state?.includes(',ns=')) {
      [state, namespace] = state.split(',ns=');
    } // some SSO providers do not return a url-encoded state param
    // check for namespace using URLSearchParams instead of paramsFor


    const urlParams = new URLSearchParams(queryString);
    const checkState = urlParams.get('state');

    if (checkState?.includes(',ns=')) {
      [state, namespace] = checkState.split(',ns=');
    }

    path = window.decodeURIComponent(path);
    const payload = {
      source: 'oidc-callback',
      path: path || '',
      code: code || '',
      state: state || ''
    };

    if (namespace) {
      payload.namespace = namespace;
    }

    return payload;
  }

  var _default = _route.default.extend({
    templateName: 'vault/cluster/oidc-callback',

    model() {// left blank so we render the template immediately
    },

    afterModel() {
      const {
        auth_path: path,
        code,
        state
      } = this.paramsFor(this.routeName);
      const {
        namespaceQueryParam: namespace
      } = this.paramsFor('vault.cluster');
      const queryString = window.location.search;
      const payload = getParamsForCallback({
        path,
        code,
        state,
        namespace
      }, queryString);
      window.opener.postMessage(payload, window.origin);
    },

    setupController(controller) {
      this._super(...arguments);

      controller.set('pageContainer', document.querySelector('.page-container'));
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/oidc-provider-ns", ["exports", "vault/routes/vault/cluster/oidc-provider"], function (_exports, _oidcProvider) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/routes/vault/cluster/oidc-provider"eaimeta@70e063a35619d71f

  class VaultClusterOidcProviderNsRoute extends _oidcProvider.default {}

  _exports.default = VaultClusterOidcProviderNsRoute;
});
;define("vault/routes/vault/cluster/oidc-provider", ["exports", "ember", "@ember/routing/route", "@ember/service"], function (_exports, _ember, _route, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2;

  0; //eaimeta@70e063a35619d71f0,"ember",0,"@ember/routing/route",0,"@ember/service"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  const AUTH = 'vault.cluster.auth';
  const PROVIDER = 'vault.cluster.oidc-provider';
  const NS_PROVIDER = 'vault.cluster.oidc-provider-ns';
  let VaultClusterOidcProviderRoute = (_class = class VaultClusterOidcProviderRoute extends _route.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "auth", _descriptor, this);

      _initializerDefineProperty(this, "router", _descriptor2, this);
    }

    get win() {
      return this.window || window;
    }

    _redirect(url, params) {
      if (!url) return;

      const redir = this._buildUrl(url, params);

      if (_ember.default.testing) {
        return redir;
      }

      this.win.location.replace(redir);
    }

    beforeModel(transition) {
      const currentToken = this.auth.get('currentTokenName');
      const qp = transition.to.queryParams; // remove redirect_to if carried over from auth

      qp.redirect_to = null;

      if (!currentToken && 'none' === qp.prompt?.toLowerCase()) {
        this._redirect(qp.redirect_uri, {
          state: qp.state,
          error: 'login_required'
        });
      } else if (!currentToken || 'login' === qp.prompt?.toLowerCase()) {
        const logout = !!currentToken;

        if ('login' === qp.prompt?.toLowerCase()) {
          // need to remove before redirect to avoid infinite loop
          qp.prompt = null;
        }

        return this._redirectToAuth({ ...transition.to.params,
          qp,
          logout
        });
      }
    }

    _redirectToAuth(_ref) {
      let {
        provider_name,
        namespace = null,
        qp,
        logout = false
      } = _ref;
      const {
        cluster_name
      } = this.paramsFor('vault.cluster');
      let url = namespace ? this.router.urlFor(NS_PROVIDER, cluster_name, namespace, provider_name, {
        queryParams: qp
      }) : this.router.urlFor(PROVIDER, cluster_name, provider_name, {
        queryParams: qp
      }); // This is terrible, I'm sorry
      // Need to do this because transitionTo (as used in auth-form) expects url without
      // rootURL /ui/ at the beginning, but urlFor builds it in. We can't use currentRoute
      // because it hasn't transitioned yet

      url = url.replace(/^(\/?ui)/, '');

      if (logout) {
        this.auth.deleteCurrentToken();
      } // o param can be anything, as long as it's present the auth page will change


      const queryParams = {
        redirect_to: url,
        o: provider_name
      };

      if (namespace) {
        queryParams.namespace = namespace;
      }

      return this.transitionTo(AUTH, cluster_name, {
        queryParams
      });
    }

    _buildUrl(urlString, params) {
      try {
        const url = new URL(urlString);
        Object.keys(params).forEach(key => {
          if (params[key]) {
            url.searchParams.append(key, params[key]);
          }
        });
        return url;
      } catch (e) {
        console.debug('DEBUG: parsing url failed for', urlString); // eslint-disable-line

        throw new Error('Invalid URL');
      }
    }

    _handleSuccess(response, baseUrl, state) {
      const {
        code
      } = response;

      const redirectUrl = this._buildUrl(baseUrl, {
        code,
        state
      });

      if (!_ember.default.testing) {
        this.win.location.replace(redirectUrl);
      }

      return {
        redirectUrl
      };
    }

    _handleError(errorResp, baseUrl) {
      const redirectUrl = this._buildUrl(baseUrl, { ...errorResp
      });

      if (!_ember.default.testing) {
        this.win.location.replace(redirectUrl);
      }

      return {
        redirectUrl
      };
    }
    /**
     * Method for getting the parameters from the route. Allows for namespace to be defined on extended route oidc-provider-ns
     * @param {object} params object passed into the model method
     * @returns object with provider_name (string), qp (object of query params), decodedRedirect (string, FQDN)
     */


    _getInfoFromParams(params) {
      const {
        provider_name,
        namespace,
        ...qp
      } = params;
      const decodedRedirect = decodeURI(qp.redirect_uri);
      return {
        provider_name,
        qp,
        decodedRedirect,
        namespace
      };
    }

    async model(params) {
      const modelInfo = this._getInfoFromParams(params);

      const {
        qp,
        decodedRedirect,
        ...routeParams
      } = modelInfo;

      const endpoint = this._buildUrl(`${this.win.origin}/v1/identity/oidc/provider/${routeParams.provider_name}/authorize`, qp);

      if (!qp.redirect_uri) {
        throw new Error('Missing required query params');
      }

      try {
        const response = await this.auth.ajax(endpoint, 'GET', {
          namespace: routeParams.namespace
        });

        if ('consent' === qp.prompt?.toLowerCase()) {
          return {
            consent: {
              code: response.code,
              redirect: decodedRedirect,
              state: qp.state
            }
          };
        }

        return this._handleSuccess(response, decodedRedirect, qp.state);
      } catch (errorRes) {
        const resp = await errorRes.json();
        const code = resp.error;

        if (code === 'max_age_violation' || resp?.errors?.includes('permission denied')) {
          this._redirectToAuth({ ...routeParams,
            qp,
            logout: true
          });
        } else if (code === 'invalid_redirect_uri') {
          return {
            error: {
              title: 'Redirect URI mismatch',
              message: 'The provided redirect_uri is not in the list of allowed redirect URIs. Please make sure you are sending a valid redirect URI from your application.'
            }
          };
        } else if (code === 'invalid_client_id') {
          return {
            error: {
              title: 'Invalid client ID',
              message: 'Your client ID is invalid. Please update your configuration and try again.'
            }
          };
        } else {
          return this._handleError(resp, decodedRedirect);
        }
      }
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "auth", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "router", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class);
  _exports.default = VaultClusterOidcProviderRoute;
});
;define("vault/routes/vault/cluster/policies", ["exports", "@ember/service", "@ember/routing/route", "vault/mixins/cluster-route"], function (_exports, _service, _route, _clusterRoute) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@ember/routing/route",0,"vault/mixins/cluster-route"eaimeta@70e063a35619d71f

  const ALLOWED_TYPES = ['acl', 'egp', 'rgp'];

  var _default = _route.default.extend(_clusterRoute.default, {
    version: (0, _service.inject)(),

    beforeModel() {
      return this.version.fetchFeatures().then(() => {
        return this._super(...arguments);
      });
    },

    model(params) {
      const policyType = params.type;

      if (!ALLOWED_TYPES.includes(policyType)) {
        return this.transitionTo(this.routeName, ALLOWED_TYPES[0]);
      }

      return {};
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/policies/create", ["exports", "@ember/service", "@ember/routing/route", "vault/mixins/unload-model-route", "vault/mixins/unsaved-model-route"], function (_exports, _service, _route, _unloadModelRoute, _unsavedModelRoute) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@ember/routing/route",0,"vault/mixins/unload-model-route",0,"vault/mixins/unsaved-model-route"eaimeta@70e063a35619d71f

  var _default = _route.default.extend(_unloadModelRoute.default, _unsavedModelRoute.default, {
    store: (0, _service.inject)(),
    version: (0, _service.inject)(),

    model() {
      const policyType = this.policyType();

      if (policyType !== 'acl') {
        return this.transitionTo('vault.cluster.policies', policyType);
      }

      return this.store.createRecord(`policy/${policyType}`, {});
    },

    setupController(controller) {
      this._super(...arguments);

      controller.set('policyType', this.policyType());
    },

    policyType() {
      return this.paramsFor('vault.cluster.policies').type;
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/policies/index", ["exports", "@ember/service", "@ember/routing/route", "vault/mixins/cluster-route", "core/mixins/list-route"], function (_exports, _service, _route, _clusterRoute, _listRoute) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@ember/routing/route",0,"vault/mixins/cluster-route",0,"core/mixins/list-route"eaimeta@70e063a35619d71f

  var _default = _route.default.extend(_clusterRoute.default, _listRoute.default, {
    store: (0, _service.inject)(),

    shouldReturnEmptyModel(policyType) {
      return policyType !== 'acl';
    },

    model(params) {
      const policyType = this.policyType();

      if (this.shouldReturnEmptyModel(policyType)) {
        return;
      }

      return this.store.lazyPaginatedQuery(`policy/${policyType}`, {
        page: params.page,
        pageFilter: params.pageFilter,
        responsePath: 'data.keys'
      }).catch(err => {
        // acls will never be empty, but sentinel policies can be
        if (err.httpStatus === 404 && this.policyType() !== 'acl') {
          return [];
        } else {
          throw err;
        }
      });
    },

    setupController(controller, model) {
      const params = this.paramsFor(this.routeName);

      if (!model) {
        controller.setProperties({
          model: null,
          policyType: this.policyType()
        });
        return;
      }

      controller.setProperties({
        model,
        filter: params.pageFilter || '',
        page: model.get('meta.currentPage') || 1,
        policyType: this.policyType()
      });
    },

    resetController(controller, isExiting) {
      this._super(...arguments);

      if (isExiting) {
        controller.set('filter', '');
      }
    },

    actions: {
      willTransition(transition) {
        window.scrollTo(0, 0);

        if (!transition || transition.targetName !== this.routeName) {
          this.store.clearAllDatasets();
        }

        return true;
      },

      reload() {
        this.store.clearAllDatasets();
        this.refresh();
      }

    },

    policyType() {
      return this.paramsFor('vault.cluster.policies').type;
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/policy", ["exports", "@ember/service", "@ember/routing/route", "vault/mixins/cluster-route"], function (_exports, _service, _route, _clusterRoute) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@ember/routing/route",0,"vault/mixins/cluster-route"eaimeta@70e063a35619d71f

  const ALLOWED_TYPES = ['acl', 'egp', 'rgp'];

  var _default = _route.default.extend(_clusterRoute.default, {
    version: (0, _service.inject)(),

    beforeModel() {
      return this.version.fetchFeatures().then(() => {
        return this._super(...arguments);
      });
    },

    model(params) {
      const policyType = params.type;

      if (!ALLOWED_TYPES.includes(policyType)) {
        return this.transitionTo('vault.cluster.policies', ALLOWED_TYPES[0]);
      }

      if (policyType !== 'acl') {
        return this.transitionTo('vault.cluster.policies', policyType);
      }

      return {};
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/policy/edit", ["exports", "vault/mixins/unsaved-model-route", "vault/routes/vault/cluster/policy/show"], function (_exports, _unsavedModelRoute, _show) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/mixins/unsaved-model-route",0,"vault/routes/vault/cluster/policy/show"eaimeta@70e063a35619d71f

  var _default = _show.default.extend(_unsavedModelRoute.default, {});

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/policy/index", ["exports", "@ember/routing/route"], function (_exports, _route) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route"eaimeta@70e063a35619d71f

  var _default = _route.default.extend({
    beforeModel() {
      return this.transitionTo('vault.cluster.policies', 'acl');
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/policy/show", ["exports", "rsvp", "@ember/routing/route", "vault/mixins/unload-model-route", "@ember/service"], function (_exports, _rsvp, _route, _unloadModelRoute, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"rsvp",0,"@ember/routing/route",0,"vault/mixins/unload-model-route",0,"@ember/service"eaimeta@70e063a35619d71f

  var _default = _route.default.extend(_unloadModelRoute.default, {
    store: (0, _service.inject)(),

    beforeModel() {
      const params = this.paramsFor(this.routeName);
      const policyType = this.policyType();

      if (policyType === 'acl' && params.policy_name === 'root') {
        return this.transitionTo('vault.cluster.policies', 'acl');
      }
    },

    model(params) {
      const type = this.policyType();
      return (0, _rsvp.hash)({
        policy: this.store.findRecord(`policy/${type}`, params.policy_name),
        capabilities: this.store.findRecord('capabilities', `sys/policies/${type}/${params.policy_name}`)
      });
    },

    setupController(controller, model) {
      controller.setProperties({
        model: model.policy,
        capabilities: model.capabilities,
        policyType: this.policyType()
      });
    },

    policyType() {
      return this.paramsFor('vault.cluster.policy').type;
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/redirect", ["exports", "@ember/routing/route", "@ember/service", "vault/lib/route-paths"], function (_exports, _route, _service, _routePaths) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2;

  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"@ember/service",0,"vault/lib/route-paths"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let VaultClusterRedirectRoute = (_class = class VaultClusterRedirectRoute extends _route.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "auth", _descriptor, this);

      _initializerDefineProperty(this, "router", _descriptor2, this);
    }

    beforeModel(_ref) {
      let {
        to: {
          queryParams
        }
      } = _ref;
      let transition;
      const isAuthed = this.auth.currentToken; // eslint-disable-next-line ember/no-controller-access-in-routes

      const controller = this.controllerFor('vault');
      const {
        redirect_to,
        ...otherParams
      } = queryParams;

      if (isAuthed && redirect_to) {
        // if authenticated and redirect exists, redirect to that place and strip other params
        transition = this.router.replaceWith(redirect_to);
      } else if (isAuthed) {
        // if authed no redirect, go to cluster
        transition = this.router.replaceWith(_routePaths.CLUSTER, {
          queryParams: otherParams
        });
      } else {
        // default go to Auth
        transition = this.router.replaceWith(_routePaths.AUTH, {
          queryParams: otherParams
        });
      }

      transition.followRedirects().then(() => {
        controller.set('redirectTo', '');
      });
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "auth", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "router", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class);
  _exports.default = VaultClusterRedirectRoute;
});
;define("vault/routes/vault/cluster/secrets", ["exports", "@ember/routing/route", "vault/mixins/cluster-route"], function (_exports, _route, _clusterRoute) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"vault/mixins/cluster-route"eaimeta@70e063a35619d71f

  var _default = _route.default.extend(_clusterRoute.default);

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/secrets/backend", ["exports", "@ember/service", "@ember/routing/route"], function (_exports, _service, _route) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@ember/routing/route"eaimeta@70e063a35619d71f

  var _default = _route.default.extend({
    store: (0, _service.inject)(),
    flashMessages: (0, _service.inject)(),
    secretMountPath: (0, _service.inject)(),
    oldModel: null,

    model(params) {
      const {
        backend
      } = params;
      this.secretMountPath.update(backend);
      return this.store.query('secret-engine', {
        path: backend
      }).then(model => {
        if (model) {
          return model.get('firstObject');
        }
      });
    },

    afterModel(model, transition) {
      const path = model && model.get('path');

      if (transition.targetName === this.routeName) {
        return this.replaceWith('vault.cluster.secrets.backend.list-root', path);
      }
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/secrets/backend/actions", ["exports", "vault/routes/vault/cluster/secrets/backend/secret-edit", "vault/lib/key-utils"], function (_exports, _secretEdit, _keyUtils) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/routes/vault/cluster/secrets/backend/secret-edit",0,"vault/lib/key-utils"eaimeta@70e063a35619d71f

  var _default = _secretEdit.default.extend({
    queryParams: {
      selectedAction: {
        replace: true
      }
    },
    templateName: 'vault/cluster/secrets/backend/transitActionsLayout',

    beforeModel() {
      const {
        secret
      } = this.paramsFor(this.routeName);

      const parentKey = _keyUtils.default.parentKeyForKey(secret);

      const {
        backend
      } = this.paramsFor('vault.cluster.secrets.backend');

      if (this.backendType(backend) !== 'transit') {
        if (parentKey) {
          return this.transitionTo('vault.cluster.secrets.backend.show', parentKey);
        } else {
          return this.transitionTo('vault.cluster.secrets.backend.show-root');
        }
      }
    },

    setupController(controller, model) {
      this._super(...arguments);

      const {
        selectedAction
      } = this.paramsFor(this.routeName);
      controller.set('selectedAction', selectedAction || model.secret.get('supportedActions.firstObject'));
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/secrets/backend/configuration", ["exports", "@ember/service", "@ember/routing/route"], function (_exports, _service, _route) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@ember/routing/route"eaimeta@70e063a35619d71f

  var _default = _route.default.extend({
    store: (0, _service.inject)(),

    async model() {
      const backend = this.modelFor('vault.cluster.secrets.backend');

      if (backend.isV2KV) {
        const canRead = await this.store.findRecord('capabilities', `${backend.id}/config`).then(response => response.canRead); // only set these config params if they can read the config endpoint.

        if (canRead) {
          // design wants specific default to show that can't be set in the model
          backend.set('casRequired', backend.casRequired ? backend.casRequired : 'False');
          backend.set('deleteVersionAfter', backend.deleteVersionAfter !== '0s' ? backend.deleteVersionAfter : 'Never delete');
          backend.set('maxVersions', backend.maxVersions ? backend.maxVersions : 'Not set');
        } else {
          // remove the default values from the model if they don't have read access otherwise it will display the defaults even if they've been set (because they error on returning config data)
          // normally would catch the config error in the secret-v2 adapter, but I need the functions to proceed, not stop. So we remove the values here.
          backend.set('casRequired', null);
          backend.set('deleteVersionAfter', null);
          backend.set('maxVersions', null);
        }
      }

      return backend;
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/secrets/backend/create-root", ["exports", "rsvp", "@ember/service", "vault/routes/vault/cluster/secrets/backend/secret-edit"], function (_exports, _rsvp, _service, _secretEdit) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"rsvp",0,"@ember/service",0,"vault/routes/vault/cluster/secrets/backend/secret-edit"eaimeta@70e063a35619d71f

  const secretModel = (store, backend, key) => {
    const backendModel = store.peekRecord('secret-engine', backend);
    const modelType = backendModel.modelTypeForKV;

    if (modelType !== 'secret-v2') {
      const model = store.createRecord(modelType, {
        path: key
      });
      return model;
    }

    const secret = store.createRecord(modelType);
    secret.set('engine', backendModel);
    const version = store.createRecord('secret-v2-version', {
      path: key
    });
    secret.set('selectedVersion', version);
    return secret;
  };

  const transformModel = queryParams => {
    const modelType = 'transform';
    if (!queryParams || !queryParams.itemType) return modelType;
    return `${modelType}/${queryParams.itemType}`;
  };

  var _default = _secretEdit.default.extend({
    store: (0, _service.inject)(),

    createModel(transition) {
      const {
        backend
      } = this.paramsFor('vault.cluster.secrets.backend');
      let modelType = this.modelType(backend, null, {
        queryParams: transition.to.queryParams
      });

      if (modelType === 'role-ssh') {
        return this.store.createRecord(modelType, {
          keyType: 'ca'
        });
      }

      if (modelType === 'transform') {
        modelType = transformModel(transition.to.queryParams);
      }

      if (modelType === 'database/connection' && transition.to?.queryParams?.itemType === 'role') {
        modelType = 'database/role';
      }

      if (modelType !== 'secret' && modelType !== 'secret-v2') {
        return this.store.createRecord(modelType);
      } // create record in capabilities that checks for access to create metadata
      // this record is then maybeQueryRecord in the component secret-create-or-update


      if (modelType === 'secret-v2') {
        // only check for kv2 secrets
        this.store.findRecord('capabilities', `${backend}/metadata/`);
      }

      return secretModel(this.store, backend, transition.to.queryParams.initialKey);
    },

    model(params, transition) {
      return (0, _rsvp.hash)({
        secret: this.createModel(transition),
        capabilities: {}
      });
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/secrets/backend/create", ["exports", "@ember/routing/route"], function (_exports, _route) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route"eaimeta@70e063a35619d71f

  var _default = _route.default.extend({
    beforeModel() {
      const {
        secret,
        initialKey
      } = this.paramsFor(this.routeName);
      const qp = initialKey || secret;
      return this.transitionTo('vault.cluster.secrets.backend.create-root', {
        queryParams: {
          initialKey: qp
        }
      });
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/secrets/backend/credentials-root", ["exports", "vault/routes/vault/cluster/secrets/backend/credentials"], function (_exports, _credentials) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _credentials.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"vault/routes/vault/cluster/secrets/backend/credentials"eaimeta@70e063a35619d71f
});
;define("vault/routes/vault/cluster/secrets/backend/credentials", ["exports", "rsvp", "@ember/routing/route", "@ember/service", "vault/lib/control-group-error"], function (_exports, _rsvp, _route, _service, _controlGroupError) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"rsvp",0,"@ember/routing/route",0,"@ember/service",0,"vault/lib/control-group-error"eaimeta@70e063a35619d71f

  const SUPPORTED_DYNAMIC_BACKENDS = ['database', 'ssh', 'aws', 'pki'];

  var _default = _route.default.extend({
    templateName: 'vault/cluster/secrets/backend/credentials',
    pathHelp: (0, _service.inject)('path-help'),
    store: (0, _service.inject)(),

    backendModel() {
      return this.modelFor('vault.cluster.secrets.backend');
    },

    beforeModel() {
      const {
        backend
      } = this.paramsFor('vault.cluster.secrets.backend');

      if (backend != 'ssh') {
        return;
      }

      const modelType = 'ssh-otp-credential';
      return this.pathHelp.getNewModel(modelType, backend);
    },

    getDatabaseCredential(backend, secret) {
      let roleType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
      return this.store.queryRecord('database/credential', {
        backend,
        secret,
        roleType
      }).catch(error => {
        if (error instanceof _controlGroupError.default) {
          throw error;
        } // Unless it's a control group error, we want to pass back error info
        // so we can render it on the GenerateCredentialsDatabase component


        const status = error?.httpStatus;
        let title;
        let message = `We ran into a problem and could not continue: ${error?.errors ? error.errors[0] : 'See OpenBao logs for details.'}`;

        if (status === 403) {
          // 403 is forbidden
          title = 'You are not authorized';
          message = "Role wasn't found or you do not have permissions. Ask your administrator if you think you should have access.";
        }

        return {
          errorHttpStatus: status,
          errorTitle: title,
          errorMessage: message
        };
      });
    },

    async model(params) {
      const role = params.secret;
      const backendModel = this.backendModel();
      const backendPath = backendModel.get('id');
      const backendType = backendModel.get('type');
      const roleType = params.roleType;
      let dbCred;

      if (backendType === 'database') {
        dbCred = await this.getDatabaseCredential(backendPath, role, roleType);
      }

      if (!SUPPORTED_DYNAMIC_BACKENDS.includes(backendModel.get('type'))) {
        return this.transitionTo('vault.cluster.secrets.backend.list-root', backendPath);
      }

      return (0, _rsvp.resolve)({
        backendPath,
        backendType,
        roleName: role,
        roleType,
        dbCred
      });
    },

    resetController(controller) {
      controller.reset();
    },

    actions: {
      willTransition() {
        // we do not want to save any of the credential information in the store.
        // once the user navigates away from this page, remove all credential info.
        this.store.unloadAll('database/credential');
      }

    }
  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/secrets/backend/diff", ["exports", "@ember/routing/route", "@ember/service"], function (_exports, _route, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor;

  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"@ember/service"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let diff = (_class = class diff extends _route.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);
    }

    beforeModel() {
      const {
        backend
      } = this.paramsFor('vault.cluster.secrets.backend');
      this.backend = backend;
    }

    model(params) {
      const {
        id
      } = params;
      return this.store.queryRecord('secret-v2', {
        backend: this.backend,
        id
      });
    }

    setupController(controller, model) {
      controller.set('backend', this.backend); // for backendCrumb

      controller.set('id', model.id); // for navigation on tabs

      controller.set('model', model);
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class);
  _exports.default = diff;
});
;define("vault/routes/vault/cluster/secrets/backend/edit-metadata", ["exports", "vault/routes/vault/cluster/secrets/backend/metadata"], function (_exports, _metadata) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/routes/vault/cluster/secrets/backend/metadata"eaimeta@70e063a35619d71f

  class EditMetadataRoute extends _metadata.default {}

  _exports.default = EditMetadataRoute;
});
;define("vault/routes/vault/cluster/secrets/backend/edit-root", ["exports", "vault/routes/vault/cluster/secrets/backend/edit"], function (_exports, _edit) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _edit.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"vault/routes/vault/cluster/secrets/backend/edit"eaimeta@70e063a35619d71f
});
;define("vault/routes/vault/cluster/secrets/backend/edit", ["exports", "vault/routes/vault/cluster/secrets/backend/secret-edit"], function (_exports, _secretEdit) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/routes/vault/cluster/secrets/backend/secret-edit"eaimeta@70e063a35619d71f

  var _default = _secretEdit.default.extend({
    queryParams: {
      version: {
        refreshModel: true
      }
    }
  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/secrets/backend/index", ["exports", "@ember/routing/route"], function (_exports, _route) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route"eaimeta@70e063a35619d71f

  var _default = _route.default.extend({
    beforeModel() {
      return this.replaceWith('vault.cluster.secrets.backend.list-root');
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/secrets/backend/list-root", ["exports", "vault/routes/vault/cluster/secrets/backend/list"], function (_exports, _list) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _list.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"vault/routes/vault/cluster/secrets/backend/list"eaimeta@70e063a35619d71f
});
;define("vault/routes/vault/cluster/secrets/backend/list", ["exports", "@ember/object", "rsvp", "@ember/routing/route", "vault/helpers/supported-secret-backends", "vault/helpers/mountable-secret-engines", "@ember/service", "vault/utils/path-encoding-helpers", "@ember/debug"], function (_exports, _object, _rsvp, _route, _supportedSecretBackends, _mountableSecretEngines, _service, _pathEncodingHelpers, _debug) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/object",0,"rsvp",0,"@ember/routing/route",0,"vault/helpers/supported-secret-backends",0,"vault/helpers/mountable-secret-engines",0,"@ember/service",0,"vault/utils/path-encoding-helpers",0,"@ember/debug"eaimeta@70e063a35619d71f

  const SUPPORTED_BACKENDS = (0, _supportedSecretBackends.supportedSecretBackends)();

  var _default = _route.default.extend({
    store: (0, _service.inject)(),
    templateName: 'vault/cluster/secrets/backend/list',
    pathHelp: (0, _service.inject)('path-help'),
    router: (0, _service.inject)(),
    // By default assume user doesn't have permissions
    noMetadataPermissions: true,
    queryParams: {
      page: {
        refreshModel: true
      },
      pageFilter: {
        refreshModel: true
      },
      tab: {
        refreshModel: true
      }
    },

    modelTypeForTransform(tab) {
      let modelType;

      switch (tab) {
        case 'role':
          modelType = 'transform/role';
          break;

        case 'template':
          modelType = 'transform/template';
          break;

        case 'alphabet':
          modelType = 'transform/alphabet';
          break;

        default:
          // CBS TODO: transform/transformation
          modelType = 'transform';
          break;
      }

      return modelType;
    },

    secretParam() {
      const {
        secret
      } = this.paramsFor(this.routeName);
      return secret ? (0, _pathEncodingHelpers.normalizePath)(secret) : '';
    },

    enginePathParam() {
      const {
        backend
      } = this.paramsFor('vault.cluster.secrets.backend');
      return backend;
    },

    beforeModel() {
      const secret = this.secretParam();
      const backend = this.enginePathParam();
      const {
        tab
      } = this.paramsFor('vault.cluster.secrets.backend.list-root');
      const secretEngine = this.store.peekRecord('secret-engine', backend);
      const type = secretEngine?.engineType;
      (true && !(!!type) && (0, _debug.assert)('secretEngine.engineType is not defined', !!type));
      const engineRoute = (0, _mountableSecretEngines.allEngines)().findBy('type', type)?.engineRoute;

      if (!type || !SUPPORTED_BACKENDS.includes(type)) {
        return this.router.transitionTo('vault.cluster.secrets');
      }

      if (this.routeName === 'vault.cluster.secrets.backend.list' && !secret.endsWith('/')) {
        return this.router.replaceWith('vault.cluster.secrets.backend.list', secret + '/');
      }

      if (engineRoute) {
        return this.router.transitionTo(`vault.cluster.secrets.backend.${engineRoute}`, backend);
      }

      const modelType = this.getModelType(backend, tab);
      return this.pathHelp.getNewModel(modelType, backend).then(() => {
        this.store.unloadAll('capabilities');
      });
    },

    getModelType(backend, tab) {
      const secretEngine = this.store.peekRecord('secret-engine', backend);
      const type = secretEngine.engineType;
      const types = {
        database: tab === 'role' ? 'database/role' : 'database/connection',
        transit: 'transit-key',
        ssh: 'role-ssh',
        transform: this.modelTypeForTransform(tab),
        aws: 'role-aws',
        pki: `pki/${tab || 'pki-role'}`,
        // secret or secret-v2
        cubbyhole: 'secret',
        kv: secretEngine.modelTypeForKV,
        keymgmt: `keymgmt/${tab || 'key'}`,
        generic: secretEngine.modelTypeForKV
      };
      return types[type];
    },

    async model(params) {
      const secret = this.secretParam() || '';
      const backend = this.enginePathParam();
      const backendModel = this.modelFor('vault.cluster.secrets.backend');
      const modelType = this.getModelType(backend, params.tab);
      return (0, _rsvp.hash)({
        secret,
        secrets: this.store.lazyPaginatedQuery(modelType, {
          id: secret,
          backend,
          responsePath: 'data.keys',
          page: params.page || 1,
          pageFilter: params.pageFilter
        }).then(model => {
          this.set('noMetadataPermissions', false);
          this.set('has404', false);
          return model;
        }).catch(err => {
          // if we're at the root we don't want to throw
          if (backendModel && err.httpStatus === 404 && secret === '') {
            this.set('noMetadataPermissions', false);
            return [];
          } else if (err.httpStatus === 403 && backendModel.isV2KV) {
            this.set('noMetadataPermissions', true);
            return [];
          } else {
            // else we're throwing and dealing with this in the error action
            throw err;
          }
        })
      });
    },

    afterModel(model) {
      const {
        tab
      } = this.paramsFor(this.routeName);
      const backend = this.enginePathParam();

      if (!tab || tab !== 'cert') {
        return;
      }

      return (0, _rsvp.all)( // these ids are treated specially by vault's api, but it's also
      // possible that there is no certificate for them in order to know,
      // we fetch them specifically on the list page, and then unload the
      // records if there is no `certificate` attribute on the resultant model
      ['ca', 'crl', 'ca_chain'].map(id => this.store.queryRecord('pki/cert', {
        id,
        backend
      }))).then(results => {
        results.rejectBy('certificate').forEach(record => record.unloadRecord());
        return model;
      }, () => {
        return model;
      });
    },

    setupController(controller, resolvedModel) {
      const secretParams = this.paramsFor(this.routeName);
      const secret = resolvedModel.secret;
      const model = resolvedModel.secrets;
      const backend = this.enginePathParam();
      const backendModel = this.store.peekRecord('secret-engine', backend);
      const has404 = this.has404;
      const noMetadataPermissions = this.noMetadataPermissions; // only clear store cache if this is a new model

      if (secret !== controller.get('baseKey.id')) {
        this.store.clearAllDatasets();
      }

      controller.set('hasModel', true);
      controller.setProperties({
        model,
        has404,
        noMetadataPermissions,
        backend,
        backendModel,
        baseKey: {
          id: secret
        },
        backendType: backendModel.get('engineType')
      });

      if (!has404) {
        const pageFilter = secretParams.pageFilter;
        let filter;

        if (secret) {
          filter = secret + (pageFilter || '');
        } else if (pageFilter) {
          filter = pageFilter;
        }

        controller.setProperties({
          filter: filter || '',
          page: model.meta?.currentPage || 1
        });
      }
    },

    resetController(controller, isExiting) {
      this._super(...arguments);

      if (isExiting) {
        controller.set('pageFilter', null);
        controller.set('filter', null);
      }
    },

    actions: {
      error(error, transition) {
        const secret = this.secretParam();
        const backend = this.enginePathParam();
        const is404 = error.httpStatus === 404;
        /* eslint-disable-next-line ember/no-controller-access-in-routes */

        const hasModel = this.controllerFor(this.routeName).get('hasModel'); // this will occur if we've deleted something,
        // and navigate to its parent and the parent doesn't exist -
        // this if often the case with nested keys in kv-like engines

        if (transition.data.isDeletion && is404) {
          throw error;
        }

        (0, _object.set)(error, 'secret', secret);
        (0, _object.set)(error, 'isRoot', true);
        (0, _object.set)(error, 'backend', backend); // only swallow the error if we have a previous model

        if (hasModel && is404) {
          this.set('has404', true);
          transition.abort();
          return false;
        }

        return true;
      },

      willTransition(transition) {
        window.scrollTo(0, 0);

        if (transition.targetName !== this.routeName) {
          this.store.clearAllDatasets();
        }

        return true;
      },

      reload() {
        this.store.clearAllDatasets();
        this.refresh();
      }

    }
  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/secrets/backend/metadata", ["exports", "@ember/routing/route", "@ember/service"], function (_exports, _route, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor;

  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"@ember/service"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let MetadataShow = (_class = class MetadataShow extends _route.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);

      _defineProperty(this, "noReadAccess", false);
    }

    beforeModel() {
      const {
        backend
      } = this.paramsFor('vault.cluster.secrets.backend');
      this.backend = backend;
    }

    model(params) {
      const {
        secret
      } = params;
      this.id = secret;
      return this.store.queryRecord('secret-v2', {
        backend: this.backend,
        id: secret
      }).catch(error => {
        // there was an error likely in read metadata.
        // still load the page and handle what you show by filtering for this property
        if (error.httpStatus === 403) {
          this.noReadAccess = true;
        }
      });
    }

    setupController(controller, model) {
      controller.set('backend', this.backend); // for backendCrumb

      controller.set('id', this.id); // for navigation on tabs

      controller.set('model', model);
      controller.set('noReadAccess', this.noReadAccess);
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class);
  _exports.default = MetadataShow;
});
;define("vault/routes/vault/cluster/secrets/backend/overview", ["exports", "@ember/routing/route", "rsvp", "@ember/service"], function (_exports, _route, _rsvp, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"rsvp",0,"@ember/service"eaimeta@70e063a35619d71f

  var _default = _route.default.extend({
    store: (0, _service.inject)(),
    type: '',

    enginePathParam() {
      const {
        backend
      } = this.paramsFor('vault.cluster.secrets.backend');
      return backend;
    },

    async fetchConnection(queryOptions) {
      try {
        return await this.store.query('database/connection', queryOptions);
      } catch (e) {
        return e.httpStatus;
      }
    },

    async fetchAllRoles(queryOptions) {
      try {
        return await this.store.query('database/role', queryOptions);
      } catch (e) {
        return e.httpStatus;
      }
    },

    pathQuery(backend, endpoint) {
      return {
        id: `${backend}/${endpoint}/`
      };
    },

    async fetchCapabilitiesRole(queryOptions) {
      return this.store.queryRecord('capabilities', this.pathQuery(queryOptions.backend, 'roles'));
    },

    async fetchCapabilitiesStaticRole(queryOptions) {
      return this.store.queryRecord('capabilities', this.pathQuery(queryOptions.backend, 'static-roles'));
    },

    async fetchCapabilitiesConnection(queryOptions) {
      return this.store.queryRecord('capabilities', this.pathQuery(queryOptions.backend, 'config'));
    },

    model() {
      const backend = this.enginePathParam();
      const queryOptions = {
        backend,
        id: ''
      };
      const connection = this.fetchConnection(queryOptions);
      const role = this.fetchAllRoles(queryOptions);
      const roleCapabilities = this.fetchCapabilitiesRole(queryOptions);
      const staticRoleCapabilities = this.fetchCapabilitiesStaticRole(queryOptions);
      const connectionCapabilities = this.fetchCapabilitiesConnection(queryOptions);
      return (0, _rsvp.hash)({
        backend,
        connections: connection,
        roles: role,
        engineType: 'database',
        id: backend,
        roleCapabilities,
        staticRoleCapabilities,
        connectionCapabilities,
        icon: 'database'
      });
    },

    setupController(controller, model) {
      this._super(...arguments);

      const showEmptyState = model.connections === 404 && model.roles === 404;
      const noConnectionCapabilities = !model.connectionCapabilities.canList && !model.connectionCapabilities.canCreate && !model.connectionCapabilities.canUpdate;

      const emptyStateMessage = function () {
        if (noConnectionCapabilities) {
          return 'You cannot yet generate credentials.  Ask your administrator if you think you should have access.';
        } else {
          return 'You can connect an external database to OpenBao.  We recommend that you create a user for OpenBao rather than using the database root user.';
        }
      };

      controller.set('showEmptyState', showEmptyState);
      controller.set('emptyStateMessage', emptyStateMessage());
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/secrets/backend/secret-edit", ["exports", "@ember-data/adapter/error", "@ember/object", "rsvp", "@ember/service", "@ember/routing/route", "vault/lib/key-utils", "vault/mixins/unload-model-route", "vault/utils/path-encoding-helpers"], function (_exports, _error, _object, _rsvp, _service, _route, _keyUtils, _unloadModelRoute, _pathEncodingHelpers) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/adapter/error",0,"@ember/object",0,"rsvp",0,"@ember/service",0,"@ember/routing/route",0,"vault/lib/key-utils",0,"vault/mixins/unload-model-route",0,"vault/utils/path-encoding-helpers"eaimeta@70e063a35619d71f

  var _default = _route.default.extend(_unloadModelRoute.default, {
    store: (0, _service.inject)(),
    pathHelp: (0, _service.inject)('path-help'),
    wizard: (0, _service.inject)(),

    secretParam() {
      const {
        secret
      } = this.paramsFor(this.routeName);
      return secret ? (0, _pathEncodingHelpers.normalizePath)(secret) : '';
    },

    enginePathParam() {
      const {
        backend
      } = this.paramsFor('vault.cluster.secrets.backend');
      return backend;
    },

    capabilities(secret, modelType) {
      const backend = this.enginePathParam();
      const backendModel = this.modelFor('vault.cluster.secrets.backend');
      const backendType = backendModel.engineType;
      let path;

      if (backendModel.isV2KV) {
        path = `${backend}/data/${secret}`;
      } else if (backendType === 'transit') {
        path = backend + '/keys/' + secret;
      } else if (backendType === 'ssh' || backendType === 'aws') {
        path = backend + '/roles/' + secret;
      } else if (modelType.startsWith('transform/')) {
        path = this.buildTransformPath(backend, secret, modelType);
      } else {
        path = backend + '/' + secret;
      }

      return this.store.findRecord('capabilities', path);
    },

    buildTransformPath(backend, secret, modelType) {
      const noun = modelType.split('/')[1];
      return `${backend}/${noun}/${secret}`;
    },

    modelTypeForTransform(secretName) {
      if (!secretName) return 'transform';

      if (secretName.startsWith('role/')) {
        return 'transform/role';
      }

      if (secretName.startsWith('template/')) {
        return 'transform/template';
      }

      if (secretName.startsWith('alphabet/')) {
        return 'transform/alphabet';
      }

      return 'transform'; // TODO: transform/transformation;
    },

    transformSecretName(secret, modelType) {
      const noun = modelType.split('/')[1];
      return secret.replace(`${noun}/`, '');
    },

    backendType() {
      return this.modelFor('vault.cluster.secrets.backend').get('engineType');
    },

    templateName: 'vault/cluster/secrets/backend/secretEditLayout',

    beforeModel(_ref) {
      let {
        to: {
          queryParams
        }
      } = _ref;
      const secret = this.secretParam();
      return this.buildModel(secret, queryParams).then(() => {
        const parentKey = _keyUtils.default.parentKeyForKey(secret);

        const mode = this.routeName.split('.').pop();

        if (mode === 'edit' && _keyUtils.default.keyIsFolder(secret)) {
          if (parentKey) {
            return this.transitionTo('vault.cluster.secrets.backend.list', (0, _pathEncodingHelpers.encodePath)(parentKey));
          } else {
            return this.transitionTo('vault.cluster.secrets.backend.list-root');
          }
        }
      });
    },

    buildModel(secret, queryParams) {
      const backend = this.enginePathParam();
      const modelType = this.modelType(backend, secret, {
        queryParams
      });

      if (['secret', 'secret-v2'].includes(modelType)) {
        return (0, _rsvp.resolve)();
      }

      return this.pathHelp.getNewModel(modelType, backend);
    },

    modelType(backend, secret) {
      let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      const backendModel = this.modelFor('vault.cluster.secrets.backend', backend);
      const type = backendModel.get('engineType');
      const types = {
        database: secret && secret.startsWith('role/') ? 'database/role' : 'database/connection',
        transit: 'transit-key',
        ssh: 'role-ssh',
        transform: this.modelTypeForTransform(secret),
        aws: 'role-aws',
        pki: secret && secret.startsWith('cert/') ? 'pki/cert' : 'pki/pki-role',
        cubbyhole: 'secret',
        kv: backendModel.modelTypeForKV,
        keymgmt: `keymgmt/${options.queryParams?.itemType || 'key'}`,
        generic: backendModel.modelTypeForKV
      };
      return types[type];
    },

    getTargetVersion(currentVersion, paramsVersion) {
      if (currentVersion) {
        // we have the secret metadata, so we can read the currentVersion but give priority to any
        // version passed in via the url
        return parseInt(paramsVersion || currentVersion, 10);
      } else {
        // we've got a stub model because don't have read access on the metadata endpoint
        return paramsVersion ? parseInt(paramsVersion, 10) : null;
      }
    },

    async fetchV2Models(capabilities, secretModel, params) {
      const backend = this.enginePathParam();
      const backendModel = this.modelFor('vault.cluster.secrets.backend', backend);
      const targetVersion = this.getTargetVersion(secretModel.currentVersion, params.version); // if we have the metadata, a list of versions are part of the payload

      const version = secretModel.versions && secretModel.versions.findBy('version', targetVersion); // if it didn't fail the server read, and the version is not attached to the metadata,
      // this should 404

      if (!version && secretModel.failedServerRead !== true) {
        const error = new _error.default();
        (0, _object.set)(error, 'httpStatus', 404);
        throw error;
      } // manually set the related model


      secretModel.set('engine', backendModel);
      secretModel.set('selectedVersion', await this.fetchV2VersionModel(capabilities, secretModel, version, targetVersion));
      return secretModel;
    },

    async fetchV2VersionModel(capabilities, secretModel, version, targetVersion) {
      const secret = this.secretParam();
      const backend = this.enginePathParam(); // v2 versions have a composite ID, we generated one here if we need to manually set it
      // after a failed fetch later;

      const versionId = targetVersion ? [backend, secret, targetVersion] : [backend, secret];
      let versionModel;

      try {
        if (secretModel.failedServerRead) {
          // we couldn't read metadata, so we want to directly fetch the version
          versionModel = await this.store.findRecord('secret-v2-version', JSON.stringify(versionId), {
            reload: true
          });
        } else {
          // we may have previously errored, so roll it back here
          version.rollbackAttributes(); // if metadata read was successful, the version we have is only a partial model
          // trigger reload to fetch the whole version model

          versionModel = await version.reload();
        }
      } catch (error) {
        // cannot read the data endpoint but still allow them to see show page to access metadata if they have permissions
        if (error.httpStatus === 403) {
          // versionModel is then a partial model from the metadata (if we have read there), or
          // we need to create one on the client
          if (version) {
            version.set('failedServerRead', true);
            versionModel = version;
          } else {
            this.store.push({
              data: {
                type: 'secret-v2-version',
                id: JSON.stringify(versionId),
                attributes: {
                  failedServerRead: true
                }
              }
            });
            versionModel = this.store.peekRecord('secret-v2-version', JSON.stringify(versionId));
          }
        } else {
          throw error;
        }
      }

      return versionModel;
    },

    handleSecretModelError(capabilities, secretId, modelType, error) {
      // can't read the path and don't have update capability, so re-throw
      if (!capabilities.get('canUpdate') && modelType === 'secret') {
        throw error;
      } // don't have access to the metadata for v2 or the secret for v1,
      // so we make a stub model and mark it as `failedServerRead`


      this.store.push({
        data: {
          id: secretId,
          type: modelType,
          attributes: {
            failedServerRead: true
          }
        }
      });
      const secretModel = this.store.peekRecord(modelType, secretId);
      return secretModel;
    },

    // wizard will pause unless we manually continue it
    updateWizard(params) {
      // verify that keymgmt tutorial is in progress
      if (params.itemType === 'provider' && this.wizard.nextStep === 'displayProvider') {
        this.wizard.transitionFeatureMachine(this.wizard.featureState, 'CONTINUE', 'keymgmt');
      }
    },

    async model(params, _ref2) {
      let {
        to: {
          queryParams
        }
      } = _ref2;
      this.updateWizard(params);
      let secret = this.secretParam();
      const backend = this.enginePathParam();
      const modelType = this.modelType(backend, secret, {
        queryParams
      });
      const type = params.type || '';

      if (!secret) {
        secret = '\u0020';
      }

      if (modelType === 'pki/cert') {
        secret = secret.replace('cert/', '');
      }

      if (modelType.startsWith('transform/')) {
        secret = this.transformSecretName(secret, modelType);
      }

      if (modelType === 'database/role') {
        secret = secret.replace('role/', '');
      }

      let secretModel;
      const capabilities = this.capabilities(secret, modelType);

      try {
        secretModel = await this.store.queryRecord(modelType, {
          id: secret,
          backend,
          type
        });
      } catch (err) {
        // we've failed the read request, but if it's a kv-type backend, we want to
        // do additional checks of the capabilities
        if (err.httpStatus === 403 && (modelType === 'secret-v2' || modelType === 'secret')) {
          await capabilities;
          secretModel = this.handleSecretModelError(capabilities, secret, modelType, err);
        } else {
          throw err;
        }
      }

      await capabilities;

      if (modelType === 'secret-v2') {
        // after the the base model fetch, kv-v2 has a second associated
        // version model that contains the secret data
        secretModel = await this.fetchV2Models(capabilities, secretModel, params);
      }

      return {
        secret: secretModel,
        capabilities
      };
    },

    setupController(controller, model) {
      this._super(...arguments);

      const secret = this.secretParam();
      const backend = this.enginePathParam();
      const preferAdvancedEdit =
      /* eslint-disable-next-line ember/no-controller-access-in-routes */
      this.controllerFor('vault.cluster.secrets.backend').get('preferAdvancedEdit') || false;
      const backendType = this.backendType();
      model.secret.setProperties({
        backend
      });
      controller.setProperties({
        model: model.secret,
        capabilities: model.capabilities,
        baseKey: {
          id: secret
        },
        // mode will be 'show', 'edit', 'create'
        mode: this.routeName.split('.').pop().replace('-root', ''),
        backend,
        preferAdvancedEdit,
        backendType
      });
    },

    resetController(controller) {
      if (controller.reset && typeof controller.reset === 'function') {
        controller.reset();
      }
    },

    actions: {
      error(error) {
        const secret = this.secretParam();
        const backend = this.enginePathParam();
        (0, _object.set)(error, 'keyId', backend + '/' + secret);
        (0, _object.set)(error, 'backend', backend);
        return true;
      },

      refreshModel() {
        this.refresh();
      },

      willTransition(transition) {
        /* eslint-disable-next-line ember/no-controller-access-in-routes */
        const {
          mode,
          model
        } = this.controller;
        const version = model.get('selectedVersion');
        const changed = model.changedAttributes();
        const changedKeys = Object.keys(changed); // when you don't have read access on metadata we add currentVersion to the model
        // this makes it look like you have unsaved changes and prompts a browser warning
        // here we are specifically ignoring it.

        if (mode === 'edit' && changedKeys.length && changedKeys[0] === 'currentVersion') {
          version && version.rollbackAttributes();
          return true;
        } // until we have time to move `backend` on a v1 model to a relationship,
        // it's going to dirty the model state, so we need to look for it
        // and explicity ignore it here


        if (mode !== 'show' && changedKeys.length && changedKeys[0] !== 'backend' || mode !== 'show' && version && Object.keys(version.changedAttributes()).length) {
          if (window.confirm('You have unsaved changes. Navigating away will discard these changes. Are you sure you want to discard your changes?')) {
            version && version.rollbackAttributes();
            model && model.rollbackAttributes();
            this.unloadModel();
            return true;
          } else {
            transition.abort();
            return false;
          }
        }

        return this._super(...arguments);
      }

    }
  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/secrets/backend/show-root", ["exports", "vault/routes/vault/cluster/secrets/backend/show"], function (_exports, _show) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _show.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"vault/routes/vault/cluster/secrets/backend/show"eaimeta@70e063a35619d71f
});
;define("vault/routes/vault/cluster/secrets/backend/show", ["exports", "vault/routes/vault/cluster/secrets/backend/secret-edit"], function (_exports, _secretEdit) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/routes/vault/cluster/secrets/backend/secret-edit"eaimeta@70e063a35619d71f

  var _default = _secretEdit.default.extend({
    queryParams: {
      version: {
        refreshModel: true
      }
    }
  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/secrets/backend/sign-root", ["exports", "vault/routes/vault/cluster/secrets/backend/sign"], function (_exports, _sign) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _sign.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"vault/routes/vault/cluster/secrets/backend/sign"eaimeta@70e063a35619d71f
});
;define("vault/routes/vault/cluster/secrets/backend/sign", ["exports", "@ember/routing/route", "vault/mixins/unload-model-route", "@ember/service"], function (_exports, _route, _unloadModelRoute, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"vault/mixins/unload-model-route",0,"@ember/service"eaimeta@70e063a35619d71f

  var _default = _route.default.extend(_unloadModelRoute.default, {
    store: (0, _service.inject)(),
    templateName: 'vault/cluster/secrets/backend/sign',

    backendModel() {
      return this.modelFor('vault.cluster.secrets.backend');
    },

    pathQuery(role, backend) {
      return {
        id: `${backend}/sign/${role}`
      };
    },

    pathForType() {
      return 'sign';
    },

    model(params) {
      const role = params.secret;
      const backendModel = this.backendModel();
      const backend = backendModel.get('id');

      if (backendModel.get('type') !== 'ssh') {
        return this.transitionTo('vault.cluster.secrets.backend.list-root', backend);
      }

      return this.store.queryRecord('capabilities', this.pathQuery(role, backend)).then(capabilities => {
        if (!capabilities.get('canUpdate')) {
          return this.transitionTo('vault.cluster.secrets.backend.list-root', backend);
        }

        return this.store.createRecord('ssh-sign', {
          role: {
            backend,
            id: role,
            name: role
          },
          id: `${backend}-${role}`
        });
      });
    },

    setupController(controller) {
      this._super(...arguments);

      controller.set('backend', this.backendModel());
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/secrets/backend/versions-root", ["exports", "vault/routes/vault/cluster/secrets/backend/version"], function (_exports, _version) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _version.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"vault/routes/vault/cluster/secrets/backend/version"eaimeta@70e063a35619d71f
});
;define("vault/routes/vault/cluster/secrets/backend/versions", ["exports", "@ember/routing/route", "vault/lib/key-utils", "vault/mixins/unload-model-route", "vault/utils/path-encoding-helpers", "@ember/service"], function (_exports, _route, _keyUtils, _unloadModelRoute, _pathEncodingHelpers, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"vault/lib/key-utils",0,"vault/mixins/unload-model-route",0,"vault/utils/path-encoding-helpers",0,"@ember/service"eaimeta@70e063a35619d71f

  var _default = _route.default.extend(_unloadModelRoute.default, {
    store: (0, _service.inject)(),
    templateName: 'vault/cluster/secrets/backend/versions',

    beforeModel() {
      const backendModel = this.modelFor('vault.cluster.secrets.backend');
      const {
        secret
      } = this.paramsFor(this.routeName);

      const parentKey = _keyUtils.default.parentKeyForKey(secret);

      if (backendModel.get('isV2KV')) {
        return;
      }

      if (parentKey) {
        return this.transitionTo('vault.cluster.secrets.backend.list', parentKey);
      } else {
        return this.transitionTo('vault.cluster.secrets.backend.list-root');
      }
    },

    model(params) {
      const {
        secret
      } = params;
      const {
        backend
      } = this.paramsFor('vault.cluster.secrets.backend');
      const id = (0, _pathEncodingHelpers.normalizePath)(secret);
      return this.store.queryRecord('secret-v2', {
        id,
        backend
      });
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/secrets/backends", ["exports", "@ember/routing/route", "@ember/service"], function (_exports, _route, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"@ember/service"eaimeta@70e063a35619d71f

  var _default = _route.default.extend({
    store: (0, _service.inject)(),

    model() {
      return this.store.query('secret-engine', {});
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/settings", ["exports", "@ember/routing/route", "vault/mixins/cluster-route"], function (_exports, _route, _clusterRoute) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"vault/mixins/cluster-route"eaimeta@70e063a35619d71f

  var _default = _route.default.extend(_clusterRoute.default, {
    model() {
      return {};
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/settings/auth/configure", ["exports", "@ember/routing/route", "@ember/service"], function (_exports, _route, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"@ember/service"eaimeta@70e063a35619d71f

  var _default = _route.default.extend({
    store: (0, _service.inject)(),

    model() {
      const {
        method
      } = this.paramsFor(this.routeName);
      return this.store.findAll('auth-method').then(() => {
        return this.store.peekRecord('auth-method', method);
      });
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/settings/auth/configure/index", ["exports", "@ember/routing/route", "vault/helpers/tabs-for-auth-section"], function (_exports, _route, _tabsForAuthSection) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"vault/helpers/tabs-for-auth-section"eaimeta@70e063a35619d71f

  var _default = _route.default.extend({
    beforeModel() {
      const model = this.modelFor('vault.cluster.settings.auth.configure');
      const section = (0, _tabsForAuthSection.tabsForAuthSection)([model]).firstObject.routeParams.lastObject;
      return this.transitionTo('vault.cluster.settings.auth.configure.section', section);
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/settings/auth/configure/section", ["exports", "@ember-data/adapter/error", "@ember/service", "@ember/object", "@ember/routing/route", "rsvp", "vault/mixins/unload-model-route"], function (_exports, _error, _service, _object, _route, _rsvp, _unloadModelRoute) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/adapter/error",0,"@ember/service",0,"@ember/object",0,"@ember/routing/route",0,"rsvp",0,"vault/mixins/unload-model-route"eaimeta@70e063a35619d71f

  var _default = _route.default.extend(_unloadModelRoute.default, {
    modelPath: 'model.model',
    pathHelp: (0, _service.inject)('path-help'),
    store: (0, _service.inject)(),

    modelType(backendType, section) {
      const MODELS = {
        'aws-client': 'auth-config/aws/client',
        'aws-identity-accesslist': 'auth-config/aws/identity-accesslist',
        'aws-roletag-denylist': 'auth-config/aws/roletag-denylist',
        'azure-configuration': 'auth-config/azure',
        'github-configuration': 'auth-config/github',
        'gcp-configuration': 'auth-config/gcp',
        'jwt-configuration': 'auth-config/jwt',
        'oidc-configuration': 'auth-config/oidc',
        'kubernetes-configuration': 'auth-config/kubernetes',
        'ldap-configuration': 'auth-config/ldap',
        'okta-configuration': 'auth-config/okta',
        'radius-configuration': 'auth-config/radius'
      };
      return MODELS[`${backendType}-${section}`];
    },

    beforeModel() {
      const {
        section_name
      } = this.paramsFor(this.routeName);

      if (section_name === 'options') {
        return;
      }

      const {
        method
      } = this.paramsFor('vault.cluster.settings.auth.configure');
      const backend = this.modelFor('vault.cluster.settings.auth.configure');
      const modelType = this.modelType(backend.type, section_name);
      return this.pathHelp.getNewModel(modelType, method, backend.apiPath);
    },

    model(params) {
      const backend = this.modelFor('vault.cluster.settings.auth.configure');
      const {
        section_name: section
      } = params;

      if (section === 'options') {
        return _rsvp.default.hash({
          model: backend,
          section
        });
      }

      const modelType = this.modelType(backend.get('type'), section);

      if (!modelType) {
        const error = new _error.default();
        (0, _object.set)(error, 'httpStatus', 404);
        throw error;
      }

      const model = this.store.peekRecord(modelType, backend.id);

      if (model) {
        return _rsvp.default.hash({
          model,
          section
        });
      }

      return this.store.findRecord(modelType, backend.id).then(config => {
        config.set('backend', backend);
        return _rsvp.default.hash({
          model: config,
          section
        });
      }).catch(e => {
        let config; // if you haven't saved a config, the API 404s, so create one here to edit and return it

        if (e.httpStatus === 404) {
          config = this.store.createRecord(modelType, {
            id: backend.id
          });
          config.set('backend', backend);
          return _rsvp.default.hash({
            model: config,
            section
          });
        }

        throw e;
      });
    },

    actions: {
      willTransition() {
        if (this.currentModel.model.constructor.modelName !== 'auth-method') {
          this.unloadModel();
          return true;
        }
      }

    }
  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/settings/auth/enable", ["exports", "@ember/routing/route", "@ember/service"], function (_exports, _route, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor;

  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"@ember/service"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let VaultClusterSettingsAuthEnableRoute = (_class = class VaultClusterSettingsAuthEnableRoute extends _route.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);
    }

    beforeModel() {
      // Unload to prevent naming collisions when we mount a new engine
      this.store.unloadAll('auth-method');
    }

    model() {
      const authMethod = this.store.createRecord('auth-method');
      authMethod.set('config', this.store.createRecord('mount-config'));
      return authMethod;
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class);
  _exports.default = VaultClusterSettingsAuthEnableRoute;
});
;define("vault/routes/vault/cluster/settings/auth/index", ["exports", "@ember/routing/route"], function (_exports, _route) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route"eaimeta@70e063a35619d71f

  var _default = _route.default.extend({
    beforeModel() {
      return this.replaceWith('vault.cluster.settings.auth.enable');
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/settings/configure-secret-backend", ["exports", "@ember-data/adapter/error", "@ember/object", "@ember/routing/route", "@ember/service"], function (_exports, _error, _object, _route, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/adapter/error",0,"@ember/object",0,"@ember/routing/route",0,"@ember/service"eaimeta@70e063a35619d71f

  const CONFIGURABLE_BACKEND_TYPES = ['aws', 'ssh'];

  var _default = _route.default.extend({
    store: (0, _service.inject)(),

    model() {
      const {
        backend
      } = this.paramsFor(this.routeName);
      return this.store.query('secret-engine', {
        path: backend
      }).then(modelList => {
        const model = modelList && modelList.get('firstObject');

        if (!model || !CONFIGURABLE_BACKEND_TYPES.includes(model.get('type'))) {
          const error = new _error.default();
          (0, _object.set)(error, 'httpStatus', 404);
          throw error;
        }

        return this.store.findRecord('secret-engine', backend).then(() => {
          return model;
        }, () => {
          return model;
        });
      });
    },

    afterModel(model) {
      const type = model.get('type');

      if (type === 'aws') {
        return this.store.queryRecord('secret-engine', {
          backend: model.id,
          type
        }).then(() => model, () => model);
      }

      return model;
    },

    setupController(controller, model) {
      if (model.get('publicKey')) {
        controller.set('configured', true);
      }

      return this._super(...arguments);
    },

    resetController(controller, isExiting) {
      if (isExiting) {
        controller.reset();
      }
    },

    actions: {
      refreshRoute() {
        this.refresh();
      }

    }
  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/settings/index", ["exports", "@ember/routing/route"], function (_exports, _route) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route"eaimeta@70e063a35619d71f

  var _default = _route.default.extend({
    beforeModel: function (transition) {
      if (transition.targetName === this.routeName) {
        transition.abort();
        return this.replaceWith('vault.cluster.settings.mount-secret-backend');
      }
    }
  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/settings/mount-secret-backend", ["exports", "@ember/routing/route", "@ember/service"], function (_exports, _route, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor;

  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"@ember/service"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let VaultClusterSettingsMountSecretBackendRoute = (_class = class VaultClusterSettingsMountSecretBackendRoute extends _route.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);
    }

    beforeModel() {
      // Unload to prevent naming collisions when we mount a new engine
      this.store.unloadAll('secret-engine');
    }

    model() {
      const secretEngine = this.store.createRecord('secret-engine');
      secretEngine.set('config', this.store.createRecord('mount-config'));
      return secretEngine;
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class);
  _exports.default = VaultClusterSettingsMountSecretBackendRoute;
});
;define("vault/routes/vault/cluster/settings/seal", ["exports", "rsvp", "@ember/routing/route", "@ember/service"], function (_exports, _rsvp, _route, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"rsvp",0,"@ember/routing/route",0,"@ember/service"eaimeta@70e063a35619d71f

  var _default = _route.default.extend({
    store: (0, _service.inject)(),

    model() {
      return (0, _rsvp.hash)({
        cluster: this.modelFor('vault.cluster'),
        seal: this.store.findRecord('capabilities', 'sys/seal')
      });
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/storage", ["exports", "@ember/routing/route", "vault/mixins/cluster-route", "@ember/service"], function (_exports, _route, _clusterRoute, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"vault/mixins/cluster-route",0,"@ember/service"eaimeta@70e063a35619d71f

  var _default = _route.default.extend(_clusterRoute.default, {
    store: (0, _service.inject)(),

    model() {
      // findAll method will return all records in store as well as response from server
      // when removing a peer via the cli, stale records would continue to appear until refresh
      // query method will only return records from response
      return this.store.query('server', {});
    },

    actions: {
      doRefresh() {
        this.refresh();
      }

    }
  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/tools", ["exports", "@ember/routing/route", "vault/mixins/cluster-route"], function (_exports, _route, _clusterRoute) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"vault/mixins/cluster-route"eaimeta@70e063a35619d71f

  var _default = _route.default.extend(_clusterRoute.default, {
    model() {
      return this.modelFor('vault.cluster');
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/tools/index", ["exports", "@ember/service", "@ember/routing/route", "vault/helpers/tools-actions"], function (_exports, _service, _route, _toolsActions) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"@ember/routing/route",0,"vault/helpers/tools-actions"eaimeta@70e063a35619d71f

  var _default = _route.default.extend({
    currentCluster: (0, _service.inject)(),

    beforeModel(transition) {
      const currentCluster = this.currentCluster.cluster.name;
      const supportedActions = (0, _toolsActions.toolsActions)();

      if (transition.targetName === this.routeName) {
        transition.abort();
        return this.replaceWith('vault.cluster.tools.tool', currentCluster, supportedActions[0]);
      }
    }

  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/tools/tool", ["exports", "@ember/routing/route", "vault/helpers/tools-actions"], function (_exports, _route, _toolsActions) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/routing/route",0,"vault/helpers/tools-actions"eaimeta@70e063a35619d71f

  var _default = _route.default.extend({
    model(params) {
      const supportedActions = (0, _toolsActions.toolsActions)();

      if (supportedActions.includes(params.selected_action)) {
        return params.selected_action;
      }

      throw new Error('Given param is not a supported tool action');
    },

    setupController(controller, model) {
      this._super(...arguments);

      controller.set('selectedAction', model);
    },

    actions: {
      didTransition() {
        const params = this.paramsFor(this.routeName);
        /* eslint-disable-next-line ember/no-controller-access-in-routes */

        this.controller.setProperties(params);
        return true;
      }

    }
  });

  _exports.default = _default;
});
;define("vault/routes/vault/cluster/unseal", ["exports", "vault/routes/vault/cluster/cluster-route-base"], function (_exports, _clusterRouteBase) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/routes/vault/cluster/cluster-route-base"eaimeta@70e063a35619d71f

  var _default = _clusterRouteBase.default.extend({});

  _exports.default = _default;
});
;define("vault/serializers/-default", ["exports", "@ember-data/serializer/json"], function (_exports, _json) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _json.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@ember-data/serializer/json"eaimeta@70e063a35619d71f
});
;define("vault/serializers/-json-api", ["exports", "@ember-data/serializer/json-api"], function (_exports, _jsonApi) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _jsonApi.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@ember-data/serializer/json-api"eaimeta@70e063a35619d71f
});
;define("vault/serializers/-rest", ["exports", "@ember-data/serializer/rest"], function (_exports, _rest) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _rest.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@ember-data/serializer/rest"eaimeta@70e063a35619d71f
});
;define("vault/serializers/application", ["exports", "@ember-data/serializer/json", "@ember/utils", "@ember/polyfills", "@ember/string"], function (_exports, _json, _utils, _polyfills, _string) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/serializer/json",0,"@ember/utils",0,"@ember/polyfills",0,"@ember/string"eaimeta@70e063a35619d71f

  var _default = _json.default.extend({
    keyForAttribute: function (attr) {
      return (0, _string.decamelize)(attr);
    },

    normalizeItems(payload) {
      if (payload.data && payload.data.keys && Array.isArray(payload.data.keys)) {
        const models = payload.data.keys.map(key => {
          if (typeof key !== 'string') {
            return key;
          }

          const pk = this.primaryKey || 'id';
          let model = {
            [pk]: key
          }; // if we've added _requestQuery in the adapter, we want
          // attach it to the individual models

          if (payload._requestQuery) {
            model = { ...model,
              ...payload._requestQuery
            };
          }

          return model;
        });
        return models;
      }

      (0, _polyfills.assign)(payload, payload.data);
      delete payload.data;
      return payload;
    },

    pushPayload(store, payload) {
      const transformedPayload = this.normalizeResponse(store, store.modelFor(payload.modelName), payload, payload.id, 'findRecord');
      return store.push(transformedPayload);
    },

    normalizeResponse(store, primaryModelClass, payload, id, requestType) {
      const responseJSON = this.normalizeItems(payload, requestType);
      delete payload._requestQuery;

      if (id && !responseJSON.id) {
        responseJSON.id = id;
      }

      let jsonAPIRepresentation = this._super(store, primaryModelClass, responseJSON, id, requestType);

      if (primaryModelClass.relatedCapabilities) {
        jsonAPIRepresentation = primaryModelClass.relatedCapabilities(jsonAPIRepresentation);
      }

      return jsonAPIRepresentation;
    },

    serializeAttribute(snapshot, json, key, attributes) {
      const val = snapshot.attr(key);
      const valHasNotChanged = (0, _utils.isNone)(snapshot.changedAttributes()[key]);
      const valIsBlank = (0, _utils.isBlank)(val);

      if (attributes.options.readOnly) {
        return;
      }

      if (valIsBlank && valHasNotChanged) {
        return;
      }

      this._super(snapshot, json, key, attributes);
    },

    serializeBelongsTo(snapshot, json) {
      return json;
    }

  });

  _exports.default = _default;
});
;define("vault/serializers/auth-method", ["exports", "vault/serializers/application", "@ember-data/serializer/rest"], function (_exports, _application, _rest) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/serializers/application",0,"@ember-data/serializer/rest"eaimeta@70e063a35619d71f

  var _default = _application.default.extend(_rest.EmbeddedRecordsMixin, {
    attrs: {
      config: {
        embedded: 'always'
      }
    },

    normalize(modelClass, data) {
      // embedded records need a unique value to be stored
      // use the uuid from the auth-method as the unique id for mount-config
      if (data.config && !data.config.id) {
        data.config.id = data.uuid;
      }

      return this._super(modelClass, data);
    },

    normalizeBackend(path, backend) {
      const struct = { ...backend
      }; // strip the trailing slash off of the path so we
      // can navigate to it without getting `//` in the url

      struct.id = path.slice(0, -1);
      struct.path = path;
      return struct;
    },

    normalizeResponse(store, primaryModelClass, payload, id, requestType) {
      const isCreate = requestType === 'createRecord';
      const backends = isCreate ? payload.data : Object.keys(payload.data).map(path => this.normalizeBackend(path, payload.data[path]));
      return this._super(store, primaryModelClass, backends, id, requestType);
    }

  });

  _exports.default = _default;
});
;define("vault/serializers/capabilities", ["exports", "vault/serializers/application"], function (_exports, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/serializers/application"eaimeta@70e063a35619d71f

  var _default = _application.default.extend({
    primaryKey: 'path',

    normalizeResponse(store, primaryModelClass, payload, id, requestType) {
      // queryRecord will already have set this, and we won't have an id here
      if (id) {
        payload.path = id;
      }

      const response = { ...payload.data,
        path: payload.path
      };
      return this._super(store, primaryModelClass, response, id, requestType);
    },

    modelNameFromPayloadKey() {
      return 'capabilities';
    }

  });

  _exports.default = _default;
});
;define("vault/serializers/cluster", ["exports", "@ember-data/serializer/rest", "@ember/polyfills", "@ember/string"], function (_exports, _rest, _polyfills, _string) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/serializer/rest",0,"@ember/polyfills",0,"@ember/string"eaimeta@70e063a35619d71f

  var _default = _rest.default.extend(_rest.EmbeddedRecordsMixin, {
    keyForAttribute: function (attr) {
      return (0, _string.decamelize)(attr);
    },
    attrs: {
      nodes: {
        embedded: 'always'
      }
    },

    normalize(modelClass, data) {
      return this._super(modelClass, data);
    },

    pushPayload(store, payload) {
      const transformedPayload = this.normalizeResponse(store, store.modelFor('cluster'), payload, null, 'findAll');
      return store.push(transformedPayload);
    },

    normalizeResponse(store, primaryModelClass, payload, id, requestType) {
      // FIXME when multiple clusters lands
      const transformedPayload = {
        clusters: (0, _polyfills.assign)({
          id: '1'
        }, payload.data || payload)
      };
      return this._super(store, primaryModelClass, transformedPayload, id, requestType);
    }

  });

  _exports.default = _default;
});
;define("vault/serializers/config", ["exports", "@ember-data/serializer/rest", "@ember/polyfills", "@ember/string"], function (_exports, _rest, _polyfills, _string) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/serializer/rest",0,"@ember/polyfills",0,"@ember/string"eaimeta@70e063a35619d71f

  var _default = _rest.default.extend({
    keyForAttribute: function (attr) {
      return (0, _string.decamelize)(attr);
    },

    normalizeAll(payload) {
      if (payload.data) {
        const data = (0, _polyfills.assign)({}, payload, payload.data);
        return [data];
      }

      return [payload];
    },

    normalizeResponse(store, primaryModelClass, payload, id, requestType) {
      const records = this.normalizeAll(payload);
      const {
        modelName
      } = primaryModelClass;
      let transformedPayload = {
        [modelName]: records
      }; // just return the single object because ember is picky

      if (requestType === 'queryRecord') {
        transformedPayload = {
          [modelName]: records[0]
        };
      }

      return this._super(store, primaryModelClass, transformedPayload, id, requestType);
    }

  });

  _exports.default = _default;
});
;define("vault/serializers/control-group", ["exports", "@ember-data/serializer/rest", "vault/serializers/application"], function (_exports, _rest, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/serializer/rest",0,"vault/serializers/application"eaimeta@70e063a35619d71f

  var _default = _application.default.extend(_rest.EmbeddedRecordsMixin, {
    attrs: {
      requestEntity: {
        embedded: 'always'
      },
      authorizations: {
        embedded: 'always'
      }
    },

    normalizeResponse(store, primaryModelClass, payload) {
      const entity = payload?.data?.request_entity;

      if (Array.isArray(payload.data.authorizations)) {
        for (const authorization of payload.data.authorizations) {
          authorization.id = authorization.entity_id;
          authorization.name = authorization.entity_name;
        }
      }

      if (entity && Object.keys(entity).length === 0) {
        payload.data.request_entity = null;
      }

      return this._super(...arguments);
    },

    serialize(snapshot) {
      return {
        accessor: snapshot.id
      };
    }

  });

  _exports.default = _default;
});
;define("vault/serializers/database/connection", ["exports", "@ember-data/serializer/rest", "vault/utils/database-helpers"], function (_exports, _rest, _databaseHelpers) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/serializer/rest",0,"vault/utils/database-helpers"eaimeta@70e063a35619d71f

  var _default = _rest.default.extend({
    primaryKey: 'name',

    serializeAttribute(snapshot, json, key, attributes) {
      // Don't send values that are undefined
      if (undefined !== snapshot.attr(key) && (snapshot.record.get('isNew') || snapshot.changedAttributes()[key])) {
        this._super(snapshot, json, key, attributes);
      }
    },

    normalizeSecrets(payload) {
      if (payload.data.keys && Array.isArray(payload.data.keys)) {
        const connections = payload.data.keys.map(secret => ({
          name: secret,
          backend: payload.backend
        }));
        return connections;
      } // Query single record response:


      const response = {
        id: payload.id,
        name: payload.id,
        backend: payload.backend,
        ...payload.data,
        ...payload.data.connection_details
      };

      if (payload.data.root_credentials_rotate_statements) {
        response.root_rotation_statements = payload.data.root_credentials_rotate_statements;
      }

      return response;
    },

    normalizeResponse(store, primaryModelClass, payload, id, requestType) {
      const nullResponses = ['updateRecord', 'createRecord', 'deleteRecord'];
      const connections = nullResponses.includes(requestType) ? {
        name: id,
        backend: payload.backend
      } : this.normalizeSecrets(payload);
      const {
        modelName
      } = primaryModelClass;
      let transformedPayload = {
        [modelName]: connections
      };

      if (requestType === 'queryRecord') {
        // comes back as object anyway
        transformedPayload = {
          [modelName]: {
            id,
            ...connections
          }
        };
      }

      return this._super(store, primaryModelClass, transformedPayload, id, requestType);
    },

    serialize(snapshot, requestType) {
      const data = this._super(snapshot, requestType);

      if (!data.plugin_name) {
        return data;
      }

      const pluginType = _databaseHelpers.AVAILABLE_PLUGIN_TYPES.find(plugin => plugin.value === data.plugin_name);

      if (!pluginType) {
        return data;
      }

      const pluginAttributes = pluginType.fields.map(fields => fields.attr).concat('backend'); // filter data to only allow plugin specific attrs

      const allowedAttributes = Object.keys(data).filter(dataAttrs => pluginAttributes.includes(dataAttrs));

      for (const key in data) {
        if (!allowedAttributes.includes(key)) {
          delete data[key];
        }
      }

      return data;
    }

  });

  _exports.default = _default;
});
;define("vault/serializers/database/credential", ["exports", "@ember-data/serializer/rest"], function (_exports, _rest) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/serializer/rest"eaimeta@70e063a35619d71f

  var _default = _rest.default.extend({
    primaryKey: 'username',

    normalizePayload(payload) {
      if (payload.data) {
        return {
          username: payload.data.username,
          password: payload.data.password,
          leaseId: payload.lease_id,
          leaseDuration: payload.lease_duration,
          lastVaultRotation: payload.data.last_vault_rotation,
          rotationPeriod: payload.data.rotation_period,
          ttl: payload.data.ttl,
          // roleType is added on adapter
          roleType: payload.roleType
        };
      }
    },

    normalizeResponse(store, primaryModelClass, payload, id, requestType) {
      const credentials = this.normalizePayload(payload);
      const {
        modelName
      } = primaryModelClass;
      const transformedPayload = {
        [modelName]: credentials
      };
      return this._super(store, primaryModelClass, transformedPayload, id, requestType);
    }

  });

  _exports.default = _default;
});
;define("vault/serializers/database/role", ["exports", "@ember-data/serializer/rest"], function (_exports, _rest) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/serializer/rest"eaimeta@70e063a35619d71f

  var _default = _rest.default.extend({
    primaryKey: 'name',

    normalizeSecrets(payload) {
      if (payload.data.keys && Array.isArray(payload.data.keys)) {
        const roles = payload.data.keys.map(secret => {
          let type = 'dynamic';
          let path = 'roles';

          if (payload.data.staticRoles.includes(secret)) {
            type = 'static';
            path = 'static-roles';
          }

          return {
            name: secret,
            backend: payload.backend,
            type,
            path
          };
        });
        return roles;
      }

      let path = 'roles';

      if (payload.type === 'static') {
        path = 'static-roles';
      }

      let database = [];

      if (payload.data.db_name) {
        database = [payload.data.db_name];
      } // Copy to singular for MongoDB


      let creation_statement = '';
      let revocation_statement = '';

      if (payload.data.creation_statements) {
        creation_statement = payload.data.creation_statements[0];
      }

      if (payload.data.revocation_statements) {
        revocation_statement = payload.data.revocation_statements[0];
      }

      return {
        id: payload.id,
        backend: payload.backend,
        name: payload.id,
        type: payload.type,
        database,
        path,
        creation_statement,
        revocation_statement,
        ...payload.data
      };
    },

    normalizeResponse(store, primaryModelClass, payload, id, requestType) {
      const nullResponses = ['updateRecord', 'createRecord', 'deleteRecord'];
      const roles = nullResponses.includes(requestType) ? {
        name: id,
        backend: payload.backend
      } : this.normalizeSecrets(payload);
      const {
        modelName
      } = primaryModelClass;
      let transformedPayload = {
        [modelName]: roles
      };

      if (requestType === 'queryRecord') {
        transformedPayload = {
          [modelName]: roles
        };
      }

      return this._super(store, primaryModelClass, transformedPayload, id, requestType);
    },

    serializeAttribute(snapshot, json, key, attributes) {
      // Don't send values that are undefined
      if (undefined !== snapshot.attr(key) && (snapshot.record.get('isNew') || snapshot.changedAttributes()[key])) {
        this._super(snapshot, json, key, attributes);
      }
    },

    serialize(snapshot, requestType) {
      const data = this._super(snapshot, requestType);

      if (data.database) {
        const db = data.database[0];
        data.db_name = db;
        delete data.database;
      } // This is necessary because the input for MongoDB is a json string
      // rather than an array, so we transpose that here


      if (data.creation_statement) {
        const singleStatement = data.creation_statement;
        data.creation_statements = [singleStatement];
        delete data.creation_statement;
      }

      if (data.revocation_statement) {
        const singleStatement = data.revocation_statement;
        data.revocation_statements = [singleStatement];
        delete data.revocation_statement;
      }

      return data;
    }

  });

  _exports.default = _default;
});
;define("vault/serializers/identity/_base", ["exports", "@ember/polyfills", "vault/serializers/application"], function (_exports, _polyfills, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/polyfills",0,"vault/serializers/application"eaimeta@70e063a35619d71f

  var _default = _application.default.extend({
    normalizeItems(payload) {
      if (payload.data.keys && Array.isArray(payload.data.keys)) {
        if (typeof payload.data.keys[0] !== 'string') {
          // If keys is not an array of strings, it was already normalized into objects in extractLazyPaginatedData
          return payload.data.keys;
        }

        return payload.data.keys.map(key => {
          const model = payload.data.key_info[key];
          model.id = key;
          return model;
        });
      }

      (0, _polyfills.assign)(payload, payload.data);
      delete payload.data;
      return payload;
    }

  });

  _exports.default = _default;
});
;define("vault/serializers/identity/entity-alias", ["exports", "vault/serializers/identity/_base"], function (_exports, _base) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/serializers/identity/_base"eaimeta@70e063a35619d71f

  var _default = _base.default.extend({
    extractLazyPaginatedData(payload) {
      return payload.data.keys.map(key => {
        const model = payload.data.key_info[key];
        model.id = key;

        if (payload.backend) {
          model.backend = payload.backend;
        }

        return model;
      });
    }

  });

  _exports.default = _default;
});
;define("vault/serializers/identity/entity", ["exports", "@ember-data/serializer/rest", "vault/serializers/identity/_base"], function (_exports, _rest, _base) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/serializer/rest",0,"vault/serializers/identity/_base"eaimeta@70e063a35619d71f

  var _default = _base.default.extend(_rest.EmbeddedRecordsMixin, {
    // we don't need to serialize relationships here
    serializeHasMany() {},

    attrs: {
      aliases: {
        embedded: 'always'
      }
    },

    extractLazyPaginatedData(payload) {
      return payload.data.keys.map(key => {
        const model = payload.data.key_info[key];
        model.id = key;

        if (payload.backend) {
          model.backend = payload.backend;
        }

        return model;
      });
    }

  });

  _exports.default = _default;
});
;define("vault/serializers/identity/group-alias", ["exports", "vault/serializers/identity/_base"], function (_exports, _base) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/serializers/identity/_base"eaimeta@70e063a35619d71f

  var _default = _base.default.extend();

  _exports.default = _default;
});
;define("vault/serializers/identity/group", ["exports", "@ember-data/serializer/rest", "vault/serializers/identity/_base"], function (_exports, _rest, _base) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/serializer/rest",0,"vault/serializers/identity/_base"eaimeta@70e063a35619d71f

  var _default = _base.default.extend(_rest.EmbeddedRecordsMixin, {
    attrs: {
      alias: {
        embedded: 'always'
      }
    },

    normalizeFindRecordResponse(store, primaryModelClass, payload) {
      if (payload.alias && Object.keys(payload.alias).length === 0) {
        delete payload.alias;
      }

      return this._super(...arguments);
    },

    serialize() {
      const json = this._super(...arguments);

      delete json.alias;

      if (json.type === 'external') {
        delete json.member_entity_ids;
        delete json.member_group_ids;
      }

      return json;
    }

  });

  _exports.default = _default;
});
;define("vault/serializers/keymgmt/key", ["exports", "vault/serializers/application"], function (_exports, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/serializers/application"eaimeta@70e063a35619d71f

  class KeymgmtKeySerializer extends _application.default {
    normalizeItems(payload) {
      const normalized = super.normalizeItems(payload); // Transform versions from object with number keys to array with key ids

      if (normalized.versions) {
        let lastRotated;
        let created;
        const versions = [];
        Object.keys(normalized.versions).forEach((key, i, arr) => {
          versions.push({
            id: parseInt(key, 10),
            ...normalized.versions[key]
          });

          if (i === 0) {
            created = normalized.versions[key].creation_time;
          } else if (arr.length - 1 === i) {
            // Set lastRotated to the last key
            lastRotated = normalized.versions[key].creation_time;
          }
        });
        normalized.versions = versions;
        return { ...normalized,
          last_rotated: lastRotated,
          created
        };
      } else if (Array.isArray(normalized)) {
        return normalized.map(key => ({
          id: key.id,
          name: key.id,
          backend: payload.backend
        }));
      }

      return normalized;
    }

  }

  _exports.default = KeymgmtKeySerializer;
});
;define("vault/serializers/keymgmt/provider", ["exports", "vault/serializers/application"], function (_exports, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/serializers/application"eaimeta@70e063a35619d71f

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  class KeymgmtProviderSerializer extends _application.default {
    constructor() {
      super(...arguments);

      _defineProperty(this, "primaryKey", 'name');
    }

    normalizeItems(payload) {
      const normalized = super.normalizeItems(payload);

      if (Array.isArray(normalized)) {
        normalized.forEach(provider => {
          provider.id = provider.name;
          provider.backend = payload.backend;
        });
      }

      return normalized;
    }

    serialize(snapshot) {
      const json = super.serialize(...arguments);
      return { ...json,
        credentials: snapshot.record.credentials
      };
    }

  }

  _exports.default = KeymgmtProviderSerializer;
});
;define("vault/serializers/kubernetes/config", ["exports", "vault/serializers/application"], function (_exports, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/serializers/application"eaimeta@70e063a35619d71f

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  class KubernetesConfigSerializer extends _application.default {
    constructor() {
      super(...arguments);

      _defineProperty(this, "primaryKey", 'backend');
    }

    serialize() {
      const json = super.serialize(...arguments); // remove backend value from payload

      delete json.backend; // ensure that values from a previous manual configuration are unset

      if (json.disable_local_ca_jwt === false) {
        json.kubernetes_ca_cert = null;
        json.kubernetes_host = null;
        json.service_account_jwt = null;
      }

      return json;
    }

  }

  _exports.default = KubernetesConfigSerializer;
});
;define("vault/serializers/kubernetes/role", ["exports", "vault/serializers/application"], function (_exports, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/serializers/application"eaimeta@70e063a35619d71f

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  class KubernetesConfigSerializer extends _application.default {
    constructor() {
      super(...arguments);

      _defineProperty(this, "primaryKey", 'name');
    }

    serialize() {
      const json = super.serialize(...arguments); // remove backend value from payload

      delete json.backend;
      return json;
    }

  }

  _exports.default = KubernetesConfigSerializer;
});
;define("vault/serializers/lease", ["exports", "@ember-data/serializer/rest", "@ember/string"], function (_exports, _rest, _string) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/serializer/rest",0,"@ember/string"eaimeta@70e063a35619d71f

  var _default = _rest.default.extend({
    keyForAttribute: function (attr) {
      return (0, _string.decamelize)(attr);
    },

    normalizeAll(payload) {
      if (payload.data.keys && Array.isArray(payload.data.keys)) {
        const records = payload.data.keys.map(record => {
          const fullPath = payload.prefix ? payload.prefix + record : record;
          return {
            id: fullPath
          };
        });
        return records;
      }

      return [payload.data];
    },

    normalizeResponse(store, primaryModelClass, payload, id, requestType) {
      const records = this.normalizeAll(payload);
      const {
        modelName
      } = primaryModelClass;
      let transformedPayload = {
        [modelName]: records
      }; // just return the single object because ember is picky

      if (requestType === 'queryRecord') {
        transformedPayload = {
          [modelName]: records[0]
        };
      }

      return this._super(store, primaryModelClass, transformedPayload, id, requestType);
    }

  });

  _exports.default = _default;
});
;define("vault/serializers/license", ["exports", "vault/serializers/application"], function (_exports, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/serializers/application"eaimeta@70e063a35619d71f

  var _default = _application.default.extend({
    normalizeResponse(store, primaryModelClass, payload, id, requestType) {
      let transformedPayload = {
        autoloaded: payload.data.autoloading_used,
        license_id: 'no-license'
      };

      if (payload.data.autoloaded) {
        transformedPayload = { ...transformedPayload,
          ...payload.data.autoloaded
        };
      }

      transformedPayload.id = transformedPayload.license_id;
      return this._super(store, primaryModelClass, transformedPayload, id, requestType);
    }

  });

  _exports.default = _default;
});
;define("vault/serializers/mfa-login-enforcement", ["exports", "vault/serializers/application"], function (_exports, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/serializers/application"eaimeta@70e063a35619d71f

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  class MfaLoginEnforcementSerializer extends _application.default {
    constructor() {
      super(...arguments);

      _defineProperty(this, "primaryKey", 'name');
    }

    // Return data with updated keys for hasMany relationships with ids in the name
    transformHasManyKeys(data, destination) {
      const keys = {
        model: ['mfa_methods', 'identity_entities', 'identity_groups'],
        server: ['mfa_method_ids', 'identity_entity_ids', 'identity_group_ids']
      };
      keys[destination].forEach((newKey, index) => {
        const oldKey = destination === 'model' ? keys.server[index] : keys.model[index];
        delete Object.assign(data, {
          [newKey]: data[oldKey]
        })[oldKey];
      });
      return data;
    }

    normalize(model, data) {
      this.transformHasManyKeys(data, 'model');
      return super.normalize(model, data);
    }

    normalizeItems(payload) {
      if (payload.data) {
        if (payload.data?.keys && Array.isArray(payload.data.keys)) {
          return payload.data.keys.map(key => payload.data.key_info[key]);
        }

        Object.assign(payload, payload.data);
        delete payload.data;
      }

      return payload;
    }

    serialize() {
      const json = super.serialize(...arguments); // empty arrays are being removed from serialized json
      // ensure that they are sent to the server, otherwise removing items will not be persisted

      json.auth_method_accessors = json.auth_method_accessors || [];
      json.auth_method_types = json.auth_method_types || [];
      return this.transformHasManyKeys(json, 'server');
    }

  }

  _exports.default = MfaLoginEnforcementSerializer;
});
;define("vault/serializers/mfa-method", ["exports", "vault/serializers/application"], function (_exports, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/serializers/application"eaimeta@70e063a35619d71f

  class KeymgmtKeySerializer extends _application.default {
    normalizeItems(payload) {
      if (!payload?.data) return payload;

      if (payload.data.keys && Array.isArray(payload.data.keys)) {
        const data = payload.data.keys.map(key => {
          const model = payload.data.key_info[key];
          model.id = key;
          return model;
        });
        return data;
      }

      Object.assign(payload, payload.data);
      delete payload.data;
      return payload;
    }

    serialize() {
      const json = super.serialize(...arguments);
      delete json.type;
      return json;
    }

  }

  _exports.default = KeymgmtKeySerializer;
});
;define("vault/serializers/mount-config", ["exports", "vault/serializers/application"], function (_exports, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/serializers/application"eaimeta@70e063a35619d71f

  var _default = _application.default.extend();

  _exports.default = _default;
});
;define("vault/serializers/namespace", ["exports", "vault/serializers/application"], function (_exports, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/serializers/application"eaimeta@70e063a35619d71f

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  class NamespaceSerializer extends _application.default {
    constructor() {
      super(...arguments);

      _defineProperty(this, "attrs", {
        path: {
          serialize: false
        }
      });
    }

    normalizeList(payload) {
      const data = payload.data.keys ? payload.data.keys.map(key => ({
        path: key,
        // remove the trailing slash from the id
        id: key.replace(/\/$/, '')
      })) : payload.data;
      return data;
    }

    normalizeResponse(store, primaryModelClass, payload, id, requestType) {
      const nullResponses = ['deleteRecord', 'createRecord'];
      const cid = (id || payload.id || '').replace(/\/$/, '');
      const normalizedPayload = nullResponses.includes(requestType) ? {
        id: cid,
        path: cid
      } : this.normalizeList(payload);
      return super.normalizeResponse(store, primaryModelClass, normalizedPayload, id, requestType);
    }

  }

  _exports.default = NamespaceSerializer;
});
;define("vault/serializers/node", ["exports", "@ember-data/serializer/rest", "@ember/polyfills", "@ember/string"], function (_exports, _rest, _polyfills, _string) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/serializer/rest",0,"@ember/polyfills",0,"@ember/string"eaimeta@70e063a35619d71f

  var _default = _rest.default.extend(_rest.EmbeddedRecordsMixin, {
    keyForAttribute: function (attr) {
      return (0, _string.decamelize)(attr);
    },

    pushPayload(store, payload) {
      const transformedPayload = this.normalizeResponse(store, store.modelFor('node'), payload, null, 'findAll');
      return store.push(transformedPayload);
    },

    nodeFromObject(name, payload) {
      const nodeObj = payload.nodes[name];
      return (0, _polyfills.assign)(nodeObj, {
        name,
        id: name
      });
    },

    normalizeResponse(store, primaryModelClass, payload, id, requestType) {
      const nodes = payload.nodes ? Object.keys(payload.nodes).map(name => this.nodeFromObject(name, payload)) : [(0, _polyfills.assign)(payload, {
        id: '1'
      })];
      const transformedPayload = {
        nodes: nodes
      };
      return this._super(store, primaryModelClass, transformedPayload, id, requestType);
    },

    normalize(model, hash, prop) {
      hash.id = '1';
      return this._super(model, hash, prop);
    }

  });

  _exports.default = _default;
});
;define("vault/serializers/oidc/assignment", ["exports", "vault/serializers/application"], function (_exports, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/serializers/application"eaimeta@70e063a35619d71f

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  class OidcAssignmentSerializer extends _application.default {
    constructor() {
      super(...arguments);

      _defineProperty(this, "primaryKey", 'name');
    }

  }

  _exports.default = OidcAssignmentSerializer;
});
;define("vault/serializers/oidc/client", ["exports", "vault/serializers/application"], function (_exports, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/serializers/application"eaimeta@70e063a35619d71f

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  class OidcClientSerializer extends _application.default {
    constructor() {
      super(...arguments);

      _defineProperty(this, "primaryKey", 'name');
    }

    // rehydrate each client model so all model attributes are accessible from the LIST response
    normalizeItems(payload) {
      if (payload.data) {
        if (payload.data?.keys && Array.isArray(payload.data.keys)) {
          return payload.data.keys.map(key => ({
            name: key,
            ...payload.data.key_info[key]
          }));
        }

        Object.assign(payload, payload.data);
        delete payload.data;
      }

      return payload;
    }

  }

  _exports.default = OidcClientSerializer;
});
;define("vault/serializers/oidc/key", ["exports", "vault/serializers/application"], function (_exports, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/serializers/application"eaimeta@70e063a35619d71f

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  class OidcKeySerializer extends _application.default {
    constructor() {
      super(...arguments);

      _defineProperty(this, "primaryKey", 'name');
    }

  }

  _exports.default = OidcKeySerializer;
});
;define("vault/serializers/oidc/provider", ["exports", "vault/serializers/application"], function (_exports, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/serializers/application"eaimeta@70e063a35619d71f

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  class OidcProviderSerializer extends _application.default {
    constructor() {
      super(...arguments);

      _defineProperty(this, "primaryKey", 'name');
    }

    // need to normalize to get issuer metadata for provider's list view
    normalizeItems(payload) {
      if (payload.data) {
        if (payload.data?.keys && Array.isArray(payload.data.keys)) {
          return payload.data.keys.map(key => ({
            name: key,
            ...payload.data.key_info[key]
          }));
        }

        Object.assign(payload, payload.data);
        delete payload.data;
      }

      return payload;
    }

  }

  _exports.default = OidcProviderSerializer;
});
;define("vault/serializers/oidc/scope", ["exports", "vault/serializers/application"], function (_exports, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/serializers/application"eaimeta@70e063a35619d71f

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  class OidcScopeSerializer extends _application.default {
    constructor() {
      super(...arguments);

      _defineProperty(this, "primaryKey", 'name');
    }

  }

  _exports.default = OidcScopeSerializer;
});
;define("vault/serializers/path-filter-config", ["exports", "@ember-data/serializer/rest", "@ember/string"], function (_exports, _rest, _string) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/serializer/rest",0,"@ember/string"eaimeta@70e063a35619d71f

  var _default = _rest.default.extend({
    keyForAttribute: function (attr) {
      return (0, _string.decamelize)(attr);
    },

    normalizeResponse(store, primaryModelClass, payload, id, requestType) {
      const {
        modelName
      } = primaryModelClass;
      payload.data.id = id;
      const transformedPayload = {
        [modelName]: payload.data
      };
      return this._super(store, primaryModelClass, transformedPayload, id, requestType);
    }

  });

  _exports.default = _default;
});
;define("vault/serializers/pki/action", ["exports", "@ember/string", "pki/utils/action-params", "vault/serializers/application", "vault/utils/parse-pki-cert"], function (_exports, _string, _actionParams, _application, _parsePkiCert) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/string",0,"pki/utils/action-params",0,"vault/serializers/application",0,"vault/utils/parse-pki-cert"eaimeta@70e063a35619d71f

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  class PkiActionSerializer extends _application.default {
    constructor() {
      super(...arguments);

      _defineProperty(this, "attrs", {
        customTtl: {
          serialize: false
        },
        type: {
          serialize: false
        }
      });
    }

    normalizeResponse(store, primaryModelClass, payload, id, requestType) {
      if (payload.data.certificate) {
        // Parse certificate back from the API and add to payload
        const parsedCert = (0, _parsePkiCert.parseCertificate)(payload.data.certificate);
        const data = { ...payload.data,
          common_name: parsedCert.common_name,
          parsed_certificate: parsedCert
        };
        return super.normalizeResponse(store, primaryModelClass, { ...payload,
          data
        }, id, requestType);
      }

      return super.normalizeResponse(...arguments);
    }

    serialize(snapshot, requestType) {
      const data = super.serialize(snapshot); // requestType is a custom value specified from the pki/action adapter

      const allowedPayloadAttributes = this._allowedParamsByType(requestType, snapshot.record.type);

      if (!allowedPayloadAttributes) return data; // the backend expects the subject's serial number param to be 'serial_number'
      // we label it as subject_serial_number to differentiate from the vault generated UUID

      data.serial_number = data.subject_serial_number;
      const payload = {};
      allowedPayloadAttributes.forEach(key => {
        if ('undefined' !== typeof data[key]) {
          payload[key] = data[key];
        }
      });
      return payload;
    }

    _allowedParamsByType(actionType, type) {
      const keyFields = (0, _actionParams.keyParamsByType)(type).map(attrName => (0, _string.underscore)(attrName).toLowerCase());
      const commonProps = ['alt_names', 'common_name', 'country', 'exclude_cn_from_sans', 'format', 'ip_sans', 'locality', 'organization', 'other_sans', 'ou', 'postal_code', 'province', 'serial_number', 'street_address', 'type', 'uri_sans', ...keyFields];

      switch (actionType) {
        case 'import':
          return ['pem_bundle'];

        case 'generate-root':
          return [...commonProps, 'issuer_name', 'max_path_length', 'not_after', 'not_before_duration', 'permitted_dns_domains', 'private_key_format', 'ttl'];

        case 'rotate-root':
          return [...commonProps, 'issuer_name', 'max_path_length', 'not_after', 'not_before_duration', 'permitted_dns_domains', 'private_key_format', 'ttl'];

        case 'generate-csr':
          return [...commonProps, 'add_basic_constraints'];

        case 'sign-intermediate':
          return ['common_name', 'issuer_name', 'csr'];

        default:
          // if type doesn't match, serialize all
          return null;
      }
    }

  }

  _exports.default = PkiActionSerializer;
});
;define("vault/serializers/pki/certificate", ["exports", "vault/serializers/pki/cert"], function (_exports, _cert) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/serializers/pki/cert"eaimeta@70e063a35619d71f

  class PkiCertificateSerializer extends _cert.default {}

  _exports.default = PkiCertificateSerializer;
});
;define("vault/serializers/pki/certificate/base", ["exports", "vault/utils/parse-pki-cert", "vault/serializers/application"], function (_exports, _parsePkiCert, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/utils/parse-pki-cert",0,"vault/serializers/application"eaimeta@70e063a35619d71f

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  class PkiCertificateBaseSerializer extends _application.default {
    constructor() {
      super(...arguments);

      _defineProperty(this, "primaryKey", 'serial_number');

      _defineProperty(this, "attrs", {
        role: {
          serialize: false
        }
      });
    }

    normalizeResponse(store, primaryModelClass, payload, id, requestType) {
      if (payload.data.certificate) {
        // Parse certificate back from the API and add to payload
        const parsedCert = (0, _parsePkiCert.parseCertificate)(payload.data.certificate);
        return super.normalizeResponse(store, primaryModelClass, { ...payload,
          parsed_certificate: parsedCert,
          common_name: parsedCert.common_name
        }, id, requestType);
      }

      return super.normalizeResponse(...arguments);
    }

  }

  _exports.default = PkiCertificateBaseSerializer;
});
;define("vault/serializers/pki/certificate/generate", ["exports", "vault/serializers/pki/certificate/base"], function (_exports, _base) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/serializers/pki/certificate/base"eaimeta@70e063a35619d71f

  class PkiCertificateGenerateSerializer extends _base.default {}

  _exports.default = PkiCertificateGenerateSerializer;
});
;define("vault/serializers/pki/certificate/sign", ["exports", "vault/serializers/pki/certificate/base"], function (_exports, _base) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/serializers/pki/certificate/base"eaimeta@70e063a35619d71f

  class PkiCertificateGenerateSerializer extends _base.default {}

  _exports.default = PkiCertificateGenerateSerializer;
});
;define("vault/serializers/pki/issuer", ["exports", "vault/utils/parse-pki-cert", "vault/serializers/application"], function (_exports, _parsePkiCert, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/utils/parse-pki-cert",0,"vault/serializers/application"eaimeta@70e063a35619d71f

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  class PkiIssuerSerializer extends _application.default {
    constructor() {
      super(...arguments);

      _defineProperty(this, "primaryKey", 'issuer_id');

      _defineProperty(this, "attrs", {
        caChain: {
          serialize: false
        },
        certificate: {
          serialize: false
        },
        commonName: {
          serialize: false
        },
        isDefault: {
          serialize: false
        },
        isRoot: {
          serialize: false
        },
        issuerId: {
          serialize: false
        },
        keyId: {
          serialize: false
        },
        parsedCertificate: {
          serialize: false
        },
        serialNumber: {
          serialize: false
        }
      });
    }

    normalizeResponse(store, primaryModelClass, payload, id, requestType) {
      if (payload.data.certificate) {
        // Parse certificate back from the API and add to payload
        const parsedCert = (0, _parsePkiCert.parseCertificate)(payload.data.certificate);
        const data = { ...payload.data,
          parsed_certificate: parsedCert,
          common_name: parsedCert.common_name
        };
        return super.normalizeResponse(store, primaryModelClass, { ...payload,
          data
        }, id, requestType);
      }

      return super.normalizeResponse(...arguments);
    } // rehydrate each issuers model so all model attributes are accessible from the LIST response


    normalizeItems(payload) {
      if (payload.data) {
        if (payload.data?.keys && Array.isArray(payload.data.keys)) {
          return payload.data.keys.map(key => {
            return {
              issuer_id: key,
              ...payload.data.key_info[key]
            };
          });
        }

        Object.assign(payload, payload.data);
        delete payload.data;
      }

      return payload;
    }

  }

  _exports.default = PkiIssuerSerializer;
});
;define("vault/serializers/pki/key", ["exports", "vault/serializers/application"], function (_exports, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/serializers/application"eaimeta@70e063a35619d71f

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  class PkiKeySerializer extends _application.default {
    constructor() {
      super(...arguments);

      _defineProperty(this, "primaryKey", 'key_id');

      _defineProperty(this, "attrs", {
        type: {
          serialize: false
        }
      });
    }

    // rehydrate each keys model so all model attributes are accessible from the LIST response
    normalizeItems(payload) {
      if (payload.data) {
        if (payload.data?.keys && Array.isArray(payload.data.keys)) {
          return payload.data.keys.map(key => ({
            key_id: key,
            ...payload.data.key_info[key]
          }));
        }

        Object.assign(payload, payload.data);
        delete payload.data;
      }

      return payload;
    }

  }

  _exports.default = PkiKeySerializer;
});
;define("vault/serializers/pki/role", ["exports", "vault/serializers/application"], function (_exports, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/serializers/application"eaimeta@70e063a35619d71f

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  class PkiRoleSerializer extends _application.default {
    constructor() {
      super(...arguments);

      _defineProperty(this, "attrs", {
        name: {
          serialize: false
        }
      });
    }

    serialize() {
      const json = super.serialize(...arguments); // attributes with empty arrays are stripped from serialized json
      // but an empty list is acceptable for key_usage to specify no default constraints
      // intercepting here to ensure an empty array persists (the backend assumes default values)

      json.key_usage = json.key_usage || [];
      return json;
    }

  }

  _exports.default = PkiRoleSerializer;
});
;define("vault/serializers/pki/tidy", ["exports", "vault/serializers/application"], function (_exports, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/serializers/application"eaimeta@70e063a35619d71f

  class PkiTidySerializer extends _application.default {
    serialize(snapshot, tidyType) {
      const data = super.serialize(snapshot);

      if (tidyType === 'manual') {
        delete data?.enabled;
        delete data?.intervalDuration;
      }

      return data;
    }

  }

  _exports.default = PkiTidySerializer;
});
;define("vault/serializers/policy", ["exports", "vault/serializers/application"], function (_exports, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/serializers/application"eaimeta@70e063a35619d71f

  var _default = _application.default.extend({
    primaryKey: 'name',

    normalizePolicies(payload) {
      const data = payload.data.keys ? payload.data.keys.map(name => ({
        name
      })) : payload.data;
      return data;
    },

    normalizeResponse(store, primaryModelClass, payload, id, requestType) {
      const nullResponses = ['deleteRecord'];
      const normalizedPayload = nullResponses.includes(requestType) ? {
        name: id
      } : this.normalizePolicies(payload);
      return this._super(store, primaryModelClass, normalizedPayload, id, requestType);
    }

  });

  _exports.default = _default;
});
;define("vault/serializers/policy/acl", ["exports", "vault/serializers/policy"], function (_exports, _policy) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/serializers/policy"eaimeta@70e063a35619d71f

  var _default = _policy.default.extend();

  _exports.default = _default;
});
;define("vault/serializers/policy/egp", ["exports", "vault/serializers/policy"], function (_exports, _policy) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/serializers/policy"eaimeta@70e063a35619d71f

  var _default = _policy.default.extend();

  _exports.default = _default;
});
;define("vault/serializers/policy/rgp", ["exports", "vault/serializers/policy"], function (_exports, _policy) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/serializers/policy"eaimeta@70e063a35619d71f

  var _default = _policy.default.extend();

  _exports.default = _default;
});
;define("vault/serializers/replication-attributes", ["exports", "@ember-data/serializer/rest", "@ember/string"], function (_exports, _rest, _string) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/serializer/rest",0,"@ember/string"eaimeta@70e063a35619d71f

  var _default = _rest.default.extend({
    keyForAttribute: function (attr) {
      return (0, _string.decamelize)(attr);
    }
  });

  _exports.default = _default;
});
;define("vault/serializers/replication-mode", ["exports", "vault/serializers/application"], function (_exports, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/serializers/application"eaimeta@70e063a35619d71f

  var _default = _application.default.extend({
    normalizeResponse(store, primaryModelClass, payload, id, requestType) {
      const normalizedPayload = {
        id: payload.id,
        status: payload.data
      };
      return this._super(store, primaryModelClass, normalizedPayload, id, requestType);
    }

  });

  _exports.default = _default;
});
;define("vault/serializers/role-aws", ["exports", "vault/serializers/application"], function (_exports, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/serializers/application"eaimeta@70e063a35619d71f

  var _default = _application.default.extend({
    primaryKey: 'name',

    extractLazyPaginatedData(payload) {
      return payload.data.keys.map(key => {
        const model = {
          name: key
        };

        if (payload.backend) {
          model.backend = payload.backend;
        }

        return model;
      });
    },

    normalizeItems() {
      const normalized = this._super(...arguments); // most roles will only have one in this array,
      // we'll default to the first, and keep the array on the
      // model and show a warning if there's more than one so that
      // they don't inadvertently save


      if (normalized.credential_types) {
        normalized.credential_type = normalized.credential_types[0];
      }

      return normalized;
    }

  });

  _exports.default = _default;
});
;define("vault/serializers/role-ssh", ["exports", "vault/serializers/role"], function (_exports, _role) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/serializers/role"eaimeta@70e063a35619d71f

  var _default = _role.default.extend();

  _exports.default = _default;
});
;define("vault/serializers/role", ["exports", "vault/serializers/application"], function (_exports, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/serializers/application"eaimeta@70e063a35619d71f

  var _default = _application.default.extend({
    primaryKey: 'name',

    // Used for both pki-role (soon to be deprecated) and role-ssh
    extractLazyPaginatedData(payload) {
      if (payload.zero_address_roles) {
        payload.zero_address_roles.forEach(role => {
          // mutate key_info object to add zero_address info
          payload.data.key_info[role].zero_address = true;
        });
      }

      if (!payload.data.key_info) {
        return payload.data.keys.map(key => {
          const model = {
            name: key
          };

          if (payload.backend) {
            model.backend = payload.backend;
          }

          return model;
        });
      }

      const ret = payload.data.keys.map(key => {
        const model = {
          name: key,
          key_type: payload.data.key_info[key].key_type,
          zero_address: payload.data.key_info[key].zero_address
        };

        if (payload.backend) {
          model.backend = payload.backend;
        }

        return model;
      });
      delete payload.data.key_info;
      return ret;
    }

  });

  _exports.default = _default;
});
;define("vault/serializers/secret-engine", ["exports", "@ember/polyfills", "vault/serializers/application", "@ember-data/serializer/rest"], function (_exports, _polyfills, _application, _rest) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/polyfills",0,"vault/serializers/application",0,"@ember-data/serializer/rest"eaimeta@70e063a35619d71f

  var _default = _application.default.extend(_rest.EmbeddedRecordsMixin, {
    attrs: {
      config: {
        embedded: 'always'
      }
    },

    normalize(modelClass, data) {
      // embedded records need a unique value to be stored
      // set id for config to uuid of secret engine
      if (data.config && !data.config.id) {
        data.config.id = data.uuid;
      } // move version out of options so it can be defined on secret-engine model


      data.version = data.options ? data.options.version : null;
      return this._super(modelClass, data);
    },

    normalizeBackend(path, backend) {
      let struct = {};

      for (const attribute in backend) {
        struct[attribute] = backend[attribute];
      } //queryRecord adds path to the response


      if (path !== null && !struct.path) {
        struct.path = path;
      }

      if (struct.data) {
        struct = (0, _polyfills.assign)({}, struct, struct.data);
        delete struct.data;
      } // strip the trailing slash off of the path so we
      // can navigate to it without getting `//` in the url


      struct.id = struct.path.slice(0, -1);
      return struct;
    },

    normalizeResponse(store, primaryModelClass, payload, id, requestType) {
      const isCreate = requestType === 'createRecord';
      const isFind = requestType === 'findRecord';
      const isQueryRecord = requestType === 'queryRecord';
      let backends;

      if (isCreate) {
        backends = payload.data;
      } else if (isFind) {
        backends = this.normalizeBackend(id + '/', payload.data);
      } else if (isQueryRecord) {
        backends = this.normalizeBackend(null, payload);
      } else {
        // this is terrible, I'm sorry
        // TODO extract AWS and SSH config saving from the secret-engine model to simplify this
        if (payload.data.secret) {
          backends = Object.keys(payload.data.secret).map(id => this.normalizeBackend(id, payload.data.secret[id]));
        } else if (!payload.data.path) {
          backends = Object.keys(payload.data).map(id => this.normalizeBackend(id, payload[id]));
        } else {
          backends = [this.normalizeBackend(payload.data.path, payload.data)];
        }
      }

      return this._super(store, primaryModelClass, backends, id, requestType);
    },

    serialize(snapshot) {
      const type = snapshot.record.get('engineType');

      const data = this._super(...arguments); // move version back to options


      data.options = data.version ? {
        version: data.version
      } : {};
      delete data.version;

      if (type !== 'kv' || data.options.version === 1) {
        // These items are on the model, but used by the kv-v2 config endpoint only
        delete data.max_versions;
        delete data.cas_required;
        delete data.delete_version_after;
      } // only KV uses options


      if (type !== 'kv' && type !== 'generic') {
        delete data.options;
      } else if (!data.options.version) {
        // if options.version isn't set for some reason
        // default to 2
        data.options.version = 2;
      }

      return data;
    }

  });

  _exports.default = _default;
});
;define("vault/serializers/secret-v2-version", ["exports", "@ember/object", "@ember/polyfills", "vault/serializers/application"], function (_exports, _object, _polyfills, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/object",0,"@ember/polyfills",0,"vault/serializers/application"eaimeta@70e063a35619d71f

  var _default = _application.default.extend({
    secretDataPath: 'data.data',

    normalizeItems(payload) {
      const path = this.secretDataPath; // move response that is the contents of the secret from the dataPath
      // to `secret_data` so it will be `secretData` in the model

      payload.secret_data = (0, _object.get)(payload, path);
      payload = (0, _polyfills.assign)({}, payload, payload.data.metadata);
      delete payload.data;
      payload.path = payload.id; // return the payload if it's expecting a single object or wrap
      // it as an array if not

      return payload;
    },

    serialize(snapshot) {
      const secret = snapshot.belongsTo('secret'); // if both models failed to read from the server, we need to write without CAS

      if (secret.record.failedServerRead && snapshot.record.failedServerRead) {
        return {
          data: snapshot.attr('secretData')
        };
      }

      let version = secret.record.failedServerRead ? snapshot.attr('version') : secret.attr('currentVersion');
      version = version || 0;
      return {
        data: snapshot.attr('secretData'),
        options: {
          cas: version
        }
      };
    }

  });

  _exports.default = _default;
});
;define("vault/serializers/secret-v2", ["exports", "@ember-data/serializer/rest", "vault/serializers/application"], function (_exports, _rest, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/serializer/rest",0,"vault/serializers/application"eaimeta@70e063a35619d71f

  var _default = _application.default.extend(_rest.EmbeddedRecordsMixin, {
    attrs: {
      versions: {
        embedded: 'always'
      }
    },
    secretDataPath: 'data',

    normalizeItems(payload, requestType) {
      if (payload.data.keys && Array.isArray(payload.data.keys)) {
        // if we have data.keys, it's a list of ids, so we map over that
        // and create objects with id's
        return payload.data.keys.map(secret => {
          // secrets don't have an id in the response, so we need to concat the full
          // path of the secret here - the id in the payload is added
          // in the adapter after making the request
          let fullSecretPath = payload.id ? payload.id + secret : secret; // if there is no path, it's a "top level" secret, so add
          // a unicode space for the id
          // https://github.com/hashicorp/vault/issues/3348

          if (!fullSecretPath) {
            fullSecretPath = '\u0020';
          }

          return {
            id: fullSecretPath,
            engine_id: payload.backend
          };
        });
      } // transform versions to an array with composite IDs


      if (payload.data.versions) {
        payload.data.versions = Object.keys(payload.data.versions).map(version => {
          const body = payload.data.versions[version];
          body.version = version;
          body.path = payload.id;
          body.id = JSON.stringify([payload.backend, payload.id, version]);
          return body;
        });
      }

      payload.data.engine_id = payload.backend;
      payload.data.id = payload.id;
      return requestType === 'queryRecord' ? payload.data : [payload.data];
    },

    serializeHasMany() {
      return;
    }

  });

  _exports.default = _default;
});
;define("vault/serializers/secret", ["exports", "@ember/object", "vault/serializers/application"], function (_exports, _object, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/object",0,"vault/serializers/application"eaimeta@70e063a35619d71f

  var _default = _application.default.extend({
    secretDataPath: 'data',

    normalizeItems(payload, requestType) {
      if (requestType !== 'queryRecord' && payload.data && payload.data.keys && Array.isArray(payload.data.keys)) {
        // if we have data.keys, it's a list of ids, so we map over that
        // and create objects with id's
        return payload.data.keys.map(secret => {
          // secrets don't have an id in the response, so we need to concat the full
          // path of the secret here - the id in the payload is added
          // in the adapter after making the request
          let fullSecretPath = payload.id ? payload.id + secret : secret; // if there is no path, it's a "top level" secret, so add
          // a unicode space for the id
          // https://github.com/hashicorp/vault/issues/3348

          if (!fullSecretPath) {
            fullSecretPath = '\u0020';
          }

          return {
            id: fullSecretPath,
            backend: payload.backend
          };
        });
      }

      const path = this.secretDataPath; // move response that is the contents of the secret from the dataPath
      // to `secret_data` so it will be `secretData` in the model

      payload.secret_data = (0, _object.get)(payload, path);
      delete payload[path]; // return the payload if it's expecting a single object or wrap
      // it as an array if not

      return requestType === 'queryRecord' ? payload : [payload];
    },

    serialize(snapshot) {
      return snapshot.attr('secretData');
    }

  });

  _exports.default = _default;
});
;define("vault/serializers/server", ["exports", "vault/serializers/application"], function (_exports, _application) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"vault/serializers/application"eaimeta@70e063a35619d71f

  var _default = _application.default.extend({
    primaryKey: 'node_id',

    normalizeItems(payload) {
      if (payload.data && payload.data.config) {
        // rewrite the payload from data.config.servers to data.keys so we can use the application serializer
        // on it
        return payload.data.config.servers.slice(0);
      }

      return this._super(payload);
    }

  });

  _exports.default = _default;
});
;define("vault/serializers/ssh", ["exports", "@ember-data/serializer/rest", "@ember/utils", "@ember/polyfills", "@ember/string"], function (_exports, _rest, _utils, _polyfills, _string) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/serializer/rest",0,"@ember/utils",0,"@ember/polyfills",0,"@ember/string"eaimeta@70e063a35619d71f

  var _default = _rest.default.extend({
    keyForAttribute: function (attr) {
      return (0, _string.decamelize)(attr);
    },

    pushPayload(store, payload) {
      const transformedPayload = this.normalizeResponse(store, store.modelFor(payload.modelName), payload, payload.id, 'findRecord');
      return store.push(transformedPayload);
    },

    normalizeItems(payload) {
      (0, _polyfills.assign)(payload, payload.data);
      delete payload.data;
      return payload;
    },

    normalizeResponse(store, primaryModelClass, payload, id, requestType) {
      const responseJSON = this.normalizeItems(payload);
      const {
        modelName
      } = primaryModelClass;
      const transformedPayload = {
        [modelName]: responseJSON
      };

      const ret = this._super(store, primaryModelClass, transformedPayload, id, requestType);

      return ret;
    },

    serializeAttribute(snapshot, json, key, attributes) {
      const val = snapshot.attr(key);

      if (attributes.options.readOnly) {
        return;
      }

      if (attributes.type === 'object' && val && Object.keys(val).length > 0 && (0, _utils.isNone)(snapshot.changedAttributes()[key])) {
        return;
      }

      if ((0, _utils.isBlank)(val) && (0, _utils.isNone)(snapshot.changedAttributes()[key])) {
        return;
      }

      this._super(snapshot, json, key, attributes);
    }

  });

  _exports.default = _default;
});
;define("vault/serializers/transit-key", ["exports", "@ember-data/serializer/rest", "@ember/polyfills", "@ember/string"], function (_exports, _rest, _polyfills, _string) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/serializer/rest",0,"@ember/polyfills",0,"@ember/string"eaimeta@70e063a35619d71f

  var _default = _rest.default.extend({
    primaryKey: 'name',
    keyForAttribute: function (attr) {
      return (0, _string.decamelize)(attr);
    },

    normalizeSecrets(payload) {
      if (payload.data.keys && Array.isArray(payload.data.keys)) {
        const secrets = payload.data.keys.map(secret => ({
          name: secret,
          backend: payload.backend
        }));
        return secrets;
      }

      (0, _polyfills.assign)(payload, payload.data);
      delete payload.data; // timestamps for these two are in seconds...

      if (payload.type === 'aes256-gcm96' || payload.type === 'chacha20-poly1305' || payload.type === 'aes128-gcm96') {
        for (const version in payload.keys) {
          payload.keys[version] = payload.keys[version] * 1000;
        }
      }

      payload.id = payload.name;
      return [payload];
    },

    normalizeResponse(store, primaryModelClass, payload, id, requestType) {
      const nullResponses = ['updateRecord', 'createRecord', 'deleteRecord'];
      const secrets = nullResponses.includes(requestType) ? {
        name: id,
        backend: payload.backend
      } : this.normalizeSecrets(payload);
      const {
        modelName
      } = primaryModelClass;
      let transformedPayload = {
        [modelName]: secrets
      }; // just return the single object because ember is picky

      if (requestType === 'queryRecord') {
        transformedPayload = {
          [modelName]: secrets[0]
        };
      }

      return this._super(store, primaryModelClass, transformedPayload, id, requestType);
    },

    serialize(snapshot, requestType) {
      if (requestType === 'update') {
        const min_decryption_version = snapshot.attr('minDecryptionVersion');
        const min_encryption_version = snapshot.attr('minEncryptionVersion');
        const deletion_allowed = snapshot.attr('deletionAllowed');
        const auto_rotate_period = snapshot.attr('autoRotatePeriod');
        return {
          min_decryption_version,
          min_encryption_version,
          deletion_allowed,
          auto_rotate_period
        };
      } else {
        snapshot.id = snapshot.attr('name');
        return this._super(snapshot, requestType);
      }
    }

  });

  _exports.default = _default;
});
;define("vault/services/-ensure-registered", ["exports", "@embroider/util/services/ensure-registered"], function (_exports, _ensureRegistered) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _ensureRegistered.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@embroider/util/services/ensure-registered"eaimeta@70e063a35619d71f
});
;define("vault/services/-portal", ["exports", "ember-stargate/services/-portal"], function (_exports, _portal) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _portal.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-stargate/services/-portal"eaimeta@70e063a35619d71f
});
;define("vault/services/asset-loader", ["exports", "ember-asset-loader/services/asset-loader"], function (_exports, _assetLoader) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _assetLoader.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-asset-loader/services/asset-loader"eaimeta@70e063a35619d71f
});
;define("vault/services/auth", ["exports", "ember", "rsvp", "@ember/polyfills", "@ember/array", "@ember/object", "@ember/string", "fetch", "@ember/application", "@ember/service", "vault/lib/token-storage", "vault/config/environment", "vault/helpers/supported-auth-backends", "ember-concurrency"], function (_exports, _ember, _rsvp, _polyfills, _array, _object, _string, _fetch, _application, _service, _tokenStorage, _environment, _supportedAuthBackends, _emberConcurrency) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = _exports.TOKEN_SEPARATOR = _exports.TOKEN_PREFIX = _exports.ROOT_PREFIX = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember",0,"rsvp",0,"@ember/polyfills",0,"@ember/array",0,"@ember/object",0,"@ember/string",0,"fetch",0,"@ember/application",0,"@ember/service",0,"vault/lib/token-storage",0,"vault/config/environment",0,"vault/helpers/supported-auth-backends",0,"ember-concurrency"eaimeta@70e063a35619d71f

  const TOKEN_SEPARATOR = '☃';
  _exports.TOKEN_SEPARATOR = TOKEN_SEPARATOR;
  const TOKEN_PREFIX = 'vault-';
  _exports.TOKEN_PREFIX = TOKEN_PREFIX;
  const ROOT_PREFIX = '_root_';
  _exports.ROOT_PREFIX = ROOT_PREFIX;
  const BACKENDS = (0, _supportedAuthBackends.supportedAuthBackends)();

  var _default = _service.default.extend({
    permissions: (0, _service.inject)(),
    store: (0, _service.inject)(),
    router: (0, _service.inject)(),
    namespaceService: (0, _service.inject)('namespace'),
    IDLE_TIMEOUT: 3 * 60e3,
    expirationCalcTS: null,
    isRenewing: false,
    mfaErrors: null,

    get tokenExpired() {
      const expiration = this.tokenExpirationDate;
      return expiration ? this.now() >= expiration : null;
    },

    get activeCluster() {
      return this.activeClusterId ? this.store.peekRecord('cluster', this.activeClusterId) : null;
    },

    // eslint-disable-next-line
    tokens: (0, _object.computed)({
      get() {
        return this._tokens || this.getTokensFromStorage() || [];
      },

      set(key, value) {
        return this._tokens = value;
      }

    }),
    isActiveSession: (0, _object.computed)('router.currentRouteName', 'currentToken', 'activeCluster.{needsInit,sealed,name}', function () {
      if (this.activeCluster) {
        if (this.activeCluster.needsInit || this.activeCluster.sealed) {
          return false;
        }

        if (this.activeCluster.name && this.currentToken && this.router.currentRouteName !== 'vault.cluster.auth') {
          return true;
        }
      }

      return false;
    }),
    tokenExpirationDate: (0, _object.computed)('currentTokenName', 'expirationCalcTS', function () {
      const tokenName = this.currentTokenName;

      if (!tokenName) {
        return;
      }

      const {
        tokenExpirationEpoch
      } = this.getTokenData(tokenName);
      const expirationDate = new Date(0);
      return tokenExpirationEpoch ? expirationDate.setUTCMilliseconds(tokenExpirationEpoch) : null;
    }),
    renewAfterEpoch: (0, _object.computed)('currentTokenName', 'expirationCalcTS', function () {
      const tokenName = this.currentTokenName;
      const {
        expirationCalcTS
      } = this;
      const data = this.getTokenData(tokenName);

      if (!tokenName || !data || !expirationCalcTS) {
        return null;
      }

      const {
        ttl,
        renewable
      } = data; // renew after last expirationCalc time + half of the ttl (in ms)

      return renewable ? Math.floor(ttl * 1e3 / 2) + expirationCalcTS : null;
    }),
    // returns the key for the token to use
    currentTokenName: (0, _object.computed)('activeClusterId', 'tokens', 'tokens.[]', function () {
      const regex = new RegExp(this.activeClusterId);
      return this.tokens.find(key => regex.test(key));
    }),
    currentToken: (0, _object.computed)('currentTokenName', function () {
      const name = this.currentTokenName;
      const data = name && this.getTokenData(name); // data.token is undefined so that's why it returns current token undefined

      return name && data ? data.token : null;
    }),
    authData: (0, _object.computed)('currentTokenName', function () {
      const token = this.currentTokenName;

      if (!token) {
        return;
      }

      const backend = this.backendFromTokenName(token);
      const stored = this.getTokenData(token);
      return (0, _polyfills.assign)(stored, {
        backend: BACKENDS.findBy('type', backend)
      });
    }),

    init() {
      this._super(...arguments);

      this.checkForRootToken();
    },

    clusterAdapter() {
      return (0, _application.getOwner)(this).lookup('adapter:cluster');
    },

    generateTokenName(_ref, policies) {
      let {
        backend,
        clusterId
      } = _ref;
      return (policies || []).includes('root') ? `${TOKEN_PREFIX}${ROOT_PREFIX}${TOKEN_SEPARATOR}${clusterId}` : `${TOKEN_PREFIX}${backend}${TOKEN_SEPARATOR}${clusterId}`;
    },

    backendFromTokenName(tokenName) {
      return tokenName.includes(`${TOKEN_PREFIX}${ROOT_PREFIX}`) ? 'token' : tokenName.slice(TOKEN_PREFIX.length).split(TOKEN_SEPARATOR)[0];
    },

    storage(tokenName) {
      if (tokenName && tokenName.indexOf(`${TOKEN_PREFIX}${ROOT_PREFIX}`) === 0 && this.environment() !== 'development') {
        return (0, _tokenStorage.default)('memory');
      } else {
        return (0, _tokenStorage.default)();
      }
    },

    environment() {
      return _environment.default.environment;
    },

    now() {
      return Date.now();
    },

    setCluster(clusterId) {
      this.set('activeClusterId', clusterId);
    },

    ajax(url, method, options) {
      const defaults = {
        url,
        method,
        dataType: 'json',
        headers: {
          'X-Vault-Token': this.currentToken
        }
      };
      const namespace = typeof options.namespace === 'undefined' ? this.namespaceService.path : options.namespace;

      if (namespace) {
        defaults.headers['X-Vault-Namespace'] = namespace;
      }

      const opts = (0, _polyfills.assign)(defaults, options);
      return (0, _fetch.default)(url, {
        method: opts.method || 'GET',
        headers: opts.headers || {}
      }).then(response => {
        if (response.status === 204) {
          return (0, _rsvp.resolve)();
        } else if (response.status >= 200 && response.status < 300) {
          return (0, _rsvp.resolve)(response.json());
        } else {
          return (0, _rsvp.reject)(response);
        }
      });
    },

    renewCurrentToken() {
      const namespace = this.authData.userRootNamespace;
      const url = '/v1/auth/token/renew-self';
      return this.ajax(url, 'POST', {
        namespace
      });
    },

    revokeCurrentToken() {
      const namespace = this.authData.userRootNamespace;
      const url = '/v1/auth/token/revoke-self';
      return this.ajax(url, 'POST', {
        namespace
      });
    },

    calculateExpiration(resp) {
      const now = this.now();
      const ttl = resp.ttl || resp.lease_duration;
      const tokenExpirationEpoch = now + ttl * 1e3;
      this.set('expirationCalcTS', now);
      return {
        ttl,
        tokenExpirationEpoch
      };
    },

    persistAuthData() {
      const [firstArg, resp] = arguments;
      const tokens = this.tokens;
      const currentNamespace = this.namespaceService.path || '';
      let tokenName;
      let options;
      let backend;

      if (typeof firstArg === 'string') {
        tokenName = firstArg;
        backend = this.backendFromTokenName(tokenName);
      } else {
        options = firstArg;
        backend = options.backend;
      }

      const currentBackend = BACKENDS.findBy('type', backend);
      let displayName;

      if ((0, _array.isArray)(currentBackend.displayNamePath)) {
        displayName = currentBackend.displayNamePath.map(name => (0, _object.get)(resp, name)).join('/');
      } else {
        displayName = (0, _object.get)(resp, currentBackend.displayNamePath);
      }

      const {
        entity_id,
        policies,
        renewable,
        namespace_path
      } = resp; // here we prefer namespace_path if its defined,
      // else we look and see if there's already a namespace saved
      // and then finally we'll use the current query param if the others
      // haven't set a value yet
      // all of the typeof checks are necessary because the root namespace is ''

      let userRootNamespace = namespace_path && namespace_path.replace(/\/$/, ''); // if we're logging in with token and there's no namespace_path, we can assume
      // that the token belongs to the root namespace

      if (backend === 'token' && !userRootNamespace) {
        userRootNamespace = '';
      }

      if (typeof userRootNamespace === 'undefined') {
        if (this.authData) {
          userRootNamespace = this.authData.userRootNamespace;
        }
      }

      if (typeof userRootNamespace === 'undefined') {
        userRootNamespace = currentNamespace;
      }

      const data = {
        userRootNamespace,
        displayName,
        backend: currentBackend,
        token: resp.client_token || (0, _object.get)(resp, currentBackend.tokenPath),
        policies,
        renewable,
        entity_id
      };
      tokenName = this.generateTokenName({
        backend,
        clusterId: options && options.clusterId || this.activeClusterId
      }, resp.policies);

      if (resp.renewable) {
        (0, _polyfills.assign)(data, this.calculateExpiration(resp));
      }

      if (!data.displayName) {
        data.displayName = (this.getTokenData(tokenName) || {}).displayName;
      }

      tokens.addObject(tokenName);
      this.set('tokens', tokens);
      this.set('allowExpiration', false);
      this.setTokenData(tokenName, data);
      return (0, _rsvp.resolve)({
        namespace: currentNamespace || data.userRootNamespace,
        token: tokenName,
        isRoot: policies.includes('root')
      });
    },

    setTokenData(token, data) {
      this.storage(token).setItem(token, data);
    },

    getTokenData(token) {
      return this.storage(token).getItem(token);
    },

    removeTokenData(token) {
      return this.storage(token).removeItem(token);
    },

    renew() {
      const tokenName = this.currentTokenName;
      const currentlyRenewing = this.isRenewing;

      if (currentlyRenewing) {
        return;
      }

      this.isRenewing = true;
      return this.renewCurrentToken().then(resp => {
        this.isRenewing = false;
        return this.persistAuthData(tokenName, resp.data || resp.auth);
      }, e => {
        this.isRenewing = false;
        throw e;
      });
    },

    checkShouldRenew: (0, _emberConcurrency.task)(function* () {
      while (true) {
        if (_ember.default.testing) {
          return;
        }

        yield (0, _emberConcurrency.timeout)(5000);

        if (this.shouldRenew()) {
          yield this.renew();
        }
      }
    }).on('init'),

    shouldRenew() {
      const now = this.now();
      const lastFetch = this.lastFetch;
      const renewTime = this.renewAfterEpoch;

      if (!this.currentTokenName || this.tokenExpired || this.allowExpiration || !renewTime) {
        return false;
      }

      if (lastFetch && now - lastFetch >= this.IDLE_TIMEOUT) {
        this.set('allowExpiration', true);
        return false;
      }

      if (now >= renewTime) {
        return true;
      }

      return false;
    },

    setLastFetch(timestamp) {
      const now = this.now();
      this.set('lastFetch', timestamp); // if expiration was allowed and we're over half the ttl we want to go ahead and renew here

      if (this.allowExpiration && now >= this.renewAfterEpoch) {
        this.renew();
      }

      this.set('allowExpiration', false);
    },

    getTokensFromStorage(filterFn) {
      return this.storage().keys().reject(key => {
        return key.indexOf(TOKEN_PREFIX) !== 0 || filterFn && filterFn(key);
      });
    },

    checkForRootToken() {
      if (this.environment() === 'development') {
        return;
      }

      this.getTokensFromStorage().forEach(key => {
        const data = this.getTokenData(key);

        if (data && data.policies && data.policies.includes('root')) {
          this.removeTokenData(key);
        }
      });
    },

    _parseMfaResponse(mfa_requirement) {
      // mfa_requirement response comes back in a shape that is not easy to work with
      // convert to array of objects and add necessary properties to satisfy the view
      if (mfa_requirement) {
        const {
          mfa_request_id,
          mfa_constraints
        } = mfa_requirement;
        const constraints = [];

        for (const key in mfa_constraints) {
          const methods = mfa_constraints[key].any;
          const isMulti = methods.length > 1; // friendly label for display in MfaForm

          methods.forEach(m => {
            const typeFormatted = m.type === 'totp' ? m.type.toUpperCase() : (0, _string.capitalize)(m.type);
            m.label = `${typeFormatted} ${m.uses_passcode ? 'passcode' : 'push notification'}`;
          });
          constraints.push({
            name: key,
            methods,
            selectedMethod: isMulti ? null : methods[0]
          });
        }

        return {
          mfa_requirement: {
            mfa_request_id,
            mfa_constraints: constraints
          }
        };
      }

      return {};
    },

    async authenticate() {
      const [options] = arguments;
      const adapter = this.clusterAdapter();
      const resp = await adapter.authenticate(options);

      if (resp.auth?.mfa_requirement) {
        return this._parseMfaResponse(resp.auth?.mfa_requirement);
      }

      return this.authSuccess(options, resp.auth || resp.data);
    },

    async totpValidate(_ref2) {
      let {
        mfa_requirement,
        ...options
      } = _ref2;
      const resp = await this.clusterAdapter().mfaValidate(mfa_requirement);
      return this.authSuccess(options, resp.auth || resp.data);
    },

    async authSuccess(options, response) {
      // persist selectedAuth to localStorage to rehydrate auth form on logout
      localStorage.setItem('selectedAuth', options.selectedAuth);
      const authData = await this.persistAuthData(options, response, this.namespaceService.path);
      await this.permissions.getPaths.perform();
      return authData;
    },

    handleError(e) {
      if (e.errors) {
        return e.errors.map(error => {
          if (error.detail) {
            return error.detail;
          }

          return error;
        });
      }

      return [e];
    },

    getAuthType() {
      // check localStorage first
      const selectedAuth = localStorage.getItem('selectedAuth');
      if (selectedAuth) return selectedAuth; // fallback to authData which discerns backend type from token

      return this.authData ? this.authData.backend.type : null;
    },

    deleteCurrentToken() {
      const tokenName = this.currentTokenName;
      this.deleteToken(tokenName);
      this.removeTokenData(tokenName);
    },

    deleteToken(tokenName) {
      const tokenNames = this.tokens.without(tokenName);
      this.removeTokenData(tokenName);
      this.set('tokens', tokenNames);
    },

    getOktaNumberChallengeAnswer(nonce, mount) {
      const url = `/v1/auth/${mount}/verify/${nonce}`;
      return this.ajax(url, 'GET', {}).then(resp => {
        return resp.data.correct_answer;
      }, e => {
        // if error status is 404, return and keep polling for a response
        if (e.status === 404) {
          return null;
        } else {
          throw e;
        }
      });
    }

  });

  _exports.default = _default;
});
;define("vault/services/console", ["exports", "@ember/object/computed", "@ember/service", "@ember/application", "@ember/object", "vault/lib/console-helpers", "vault/utils/path-encoding-helpers"], function (_exports, _computed, _service, _application, _object, _consoleHelpers, _pathEncodingHelpers) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  _exports.ensureTrailingSlash = ensureTrailingSlash;
  _exports.sanitizePath = sanitizePath;
  0; //eaimeta@70e063a35619d71f0,"@ember/object/computed",0,"@ember/service",0,"@ember/application",0,"@ember/object",0,"vault/lib/console-helpers",0,"vault/utils/path-encoding-helpers"eaimeta@70e063a35619d71f

  function sanitizePath(path) {
    //remove whitespace + remove trailing and leading slashes
    return path.trim().replace(/^\/+|\/+$/g, '');
  }

  function ensureTrailingSlash(path) {
    return path.replace(/(\w+[^/]$)/g, '$1/');
  }

  const VERBS = {
    read: 'GET',
    list: 'GET',
    write: 'POST',
    delete: 'DELETE'
  };

  var _default = _service.default.extend({
    isOpen: false,

    adapter() {
      return (0, _application.getOwner)(this).lookup('adapter:console');
    },

    commandHistory: (0, _computed.filterBy)('log', 'type', 'command'),
    log: (0, _object.computed)(function () {
      return [];
    }),
    commandIndex: null,

    shiftCommandIndex(keyCode) {
      let setCommandFn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : () => {};
      const [newIndex, newCommand] = (0, _consoleHelpers.shiftCommandIndex)(keyCode, this.commandHistory, this.commandIndex);

      if (newCommand !== undefined && newIndex !== undefined) {
        this.set('commandIndex', newIndex);
        setCommandFn(newCommand);
      }
    },

    clearLog() {
      let clearAll = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      const log = this.log;
      let history;

      if (!clearAll) {
        history = this.commandHistory.slice();
        history.setEach('hidden', true);
      }

      log.clear();

      if (history) {
        log.addObjects(history);
      }
    },

    logAndOutput(command, logContent) {
      const log = this.log;

      if (command) {
        log.pushObject({
          type: 'command',
          content: command
        });
        this.set('commandIndex', null);
      }

      if (logContent) {
        log.pushObject(logContent);
      }
    },

    ajax(operation, path) {
      let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      const verb = VERBS[operation];
      const adapter = this.adapter();
      const url = adapter.buildURL((0, _pathEncodingHelpers.encodePath)(path));
      const {
        data,
        wrapTTL
      } = options;
      return adapter.ajax(url, verb, {
        data,
        wrapTTL
      });
    },

    kvGet(path, data) {
      let flags = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      const {
        wrapTTL,
        metadata
      } = flags; // Split on first / to find backend and secret path

      const pathSegment = metadata ? 'metadata' : 'data';
      const [backend, secretPath] = path.split(/\/(.+)?/);
      const kvPath = `${backend}/${pathSegment}/${secretPath}`;
      return this.ajax('read', sanitizePath(kvPath), {
        wrapTTL
      });
    },

    read(path, data, flags) {
      const wrapTTL = flags?.wrapTTL;
      return this.ajax('read', sanitizePath(path), {
        wrapTTL
      });
    },

    write(path, data, flags) {
      const wrapTTL = flags?.wrapTTL;
      return this.ajax('write', sanitizePath(path), {
        data,
        wrapTTL
      });
    },

    delete(path) {
      return this.ajax('delete', sanitizePath(path));
    },

    list(path, data, flags) {
      const wrapTTL = flags?.wrapTTL;
      const listPath = ensureTrailingSlash(sanitizePath(path));
      return this.ajax('list', listPath, {
        data: {
          list: true
        },
        wrapTTL
      });
    }

  });

  _exports.default = _default;
});
;define("vault/services/control-group", ["exports", "@ember/service", "rsvp", "vault/lib/control-group-error", "vault/lib/token-storage", "core/utils/parse-url"], function (_exports, _service, _rsvp, _controlGroupError, _tokenStorage, _parseUrl) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.storageKey = _exports.default = _exports.TOKEN_SEPARATOR = _exports.CONTROL_GROUP_PREFIX = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"rsvp",0,"vault/lib/control-group-error",0,"vault/lib/token-storage",0,"core/utils/parse-url"eaimeta@70e063a35619d71f

  const CONTROL_GROUP_PREFIX = 'vault:cg-';
  _exports.CONTROL_GROUP_PREFIX = CONTROL_GROUP_PREFIX;
  const TOKEN_SEPARATOR = '☃'; // list of endpoints that return wrapped responses
  // without `wrap-ttl`

  _exports.TOKEN_SEPARATOR = TOKEN_SEPARATOR;
  const WRAPPED_RESPONSE_PATHS = ['sys/wrapping/rewrap', 'sys/wrapping/wrap'];

  const storageKey = (accessor, path) => {
    return `${CONTROL_GROUP_PREFIX}${accessor}${TOKEN_SEPARATOR}${path}`;
  };

  _exports.storageKey = storageKey;

  var _default = _service.default.extend({
    version: (0, _service.inject)(),
    router: (0, _service.inject)(),

    storage() {
      return (0, _tokenStorage.default)();
    },

    keyFromAccessor(accessor) {
      const keys = this.storage().keys() || [];
      const returnKey = keys.filter(k => k.startsWith(CONTROL_GROUP_PREFIX)).find(key => key.replace(CONTROL_GROUP_PREFIX, '').startsWith(accessor));
      return returnKey ? returnKey : null;
    },

    storeControlGroupToken(info) {
      const key = storageKey(info.accessor, info.creation_path);
      this.storage().setItem(key, info);
    },

    deleteControlGroupToken(accessor) {
      this.unmarkTokenForUnwrap();
      const key = this.keyFromAccessor(accessor);
      this.storage().removeItem(key);
    },

    deleteTokens() {
      const keys = this.storage().keys() || [];
      keys.filter(k => k.startsWith(CONTROL_GROUP_PREFIX)).forEach(key => this.storage().removeItem(key));
    },

    wrapInfoForAccessor(accessor) {
      const key = this.keyFromAccessor(accessor);
      return key ? this.storage().getItem(key) : null;
    },

    tokenToUnwrap: null,

    markTokenForUnwrap(accessor) {
      this.set('tokenToUnwrap', this.wrapInfoForAccessor(accessor));
    },

    unmarkTokenForUnwrap() {
      this.set('tokenToUnwrap', null);
    },

    tokenForUrl(url) {
      if (this.version.isOSS) {
        return null;
      }

      let pathForUrl = (0, _parseUrl.default)(url).pathname;
      pathForUrl = pathForUrl.replace('/v1/', '');
      const tokenInfo = this.tokenToUnwrap;

      if (tokenInfo && tokenInfo.creation_path === pathForUrl) {
        const {
          token,
          accessor,
          creation_time
        } = tokenInfo;
        return {
          token,
          accessor,
          creationTime: creation_time
        };
      }

      return null;
    },

    checkForControlGroup(callbackArgs, response, wasWrapTTLRequested) {
      const creationPath = response && response?.wrap_info?.creation_path;

      if (this.version.isOSS || wasWrapTTLRequested || !response || creationPath && WRAPPED_RESPONSE_PATHS.includes(creationPath) || !response.wrap_info) {
        return _rsvp.default.resolve(...callbackArgs);
      }

      const error = new _controlGroupError.default(response.wrap_info);
      return _rsvp.default.reject(error);
    },

    handleError(error) {
      const {
        accessor,
        token,
        creation_path,
        creation_time,
        ttl
      } = error;
      const data = {
        accessor,
        token,
        creation_path,
        creation_time,
        ttl
      };
      data.uiParams = {
        url: this.router.currentURL
      };
      this.storeControlGroupToken(data);
      return this.router.transitionTo('vault.cluster.access.control-group-accessor', accessor);
    },

    // Handle error from non-read request (eg. POST or UPDATE) so it can be retried
    saveTokenFromError(error) {
      const {
        accessor,
        token,
        creation_path,
        creation_time,
        ttl
      } = error;
      const data = {
        accessor,
        token,
        creation_path,
        creation_time,
        ttl
      };
      this.storeControlGroupToken(data); // In the read flow the accessor is marked once the user clicks "Visit" from the control group page
      // On a POST/UPDATE flow we don't redirect, so we need to mark automatically so that on the next try
      // the request will attempt unwrap.

      this.markTokenForUnwrap(accessor);
    },

    logFromError(error) {
      const {
        accessor,
        token,
        creation_path,
        creation_time,
        ttl
      } = error;
      const data = {
        accessor,
        token,
        creation_path,
        creation_time,
        ttl
      };
      this.storeControlGroupToken(data);
      const href = this.router.urlFor('vault.cluster.access.control-group-accessor', accessor);
      const lines = [`A Control Group was encountered at ${error.creation_path}.`, `The Control Group Token is ${error.token}.`, `The Accessor is ${error.accessor}.`, `Visit <a href='${href}'>${href}</a> for more details.`];
      return {
        type: 'error-with-html',
        content: lines.join('\n')
      };
    }

  });

  _exports.default = _default;
});
;define("vault/services/csp-event", ["exports", "@ember/object", "@ember/service", "ember-concurrency"], function (_exports, _object, _service, _emberConcurrency) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/object",0,"@ember/service",0,"ember-concurrency"eaimeta@70e063a35619d71f

  var _default = _service.default.extend({
    events: (0, _object.computed)(function () {
      return [];
    }),
    connectionViolations: (0, _object.computed)('events.@each.violatedDirective', function () {
      return this.events.filter(e => e.violatedDirective.startsWith('connect-src'));
    }),

    attach() {
      this.monitor.perform();
    },

    remove() {
      this.monitor.cancelAll();
    },

    monitor: (0, _emberConcurrency.task)(function* () {
      this.events.clear();

      while (true) {
        const event = yield (0, _emberConcurrency.waitForEvent)(window.document, 'securitypolicyviolation');
        this.events.addObject(event);
      }
    })
  });

  _exports.default = _default;
});
;define("vault/services/current-cluster", ["exports", "@ember/service"], function (_exports, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service"eaimeta@70e063a35619d71f

  var _default = _service.default.extend({
    cluster: null,

    setCluster(cluster) {
      this.set('cluster', cluster);
    }

  });

  _exports.default = _default;
});
;define("vault/services/download", ["exports", "@ember/service", "core/utils/timestamp"], function (_exports, _service, _timestamp) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"core/utils/timestamp"eaimeta@70e063a35619d71f

  // https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types
  const EXTENSION_TO_MIME = {
    csv: 'txt/csv',
    hcl: 'text/plain',
    json: 'application/json',
    pem: 'application/x-pem-file',
    txt: 'text/plain'
  };

  class DownloadService extends _service.default {
    download(filename, content, extension) {
      // replace spaces with hyphens, append extension to filename
      const formattedFilename = `${filename?.replace(/\s+/g, '-')}.${extension}` || `vault-data-${_timestamp.default.now().toISOString()}.${extension}`; // map extension to MIME type or use default

      const mimetype = EXTENSION_TO_MIME[extension] || 'text/plain'; // commence download

      const {
        document,
        URL
      } = window;
      const downloadElement = document.createElement('a');
      const data = new File([content], formattedFilename, {
        type: mimetype
      });
      downloadElement.download = formattedFilename;
      downloadElement.href = URL.createObjectURL(data);
      document.body.appendChild(downloadElement);
      downloadElement.click();
      URL.revokeObjectURL(downloadElement.href);
      downloadElement.remove();
      return formattedFilename;
    } // SAMPLE CSV FORMAT ('content' argument)
    // Must be a string with each row \n separated and each column comma separated
    // 'Namespace path,Authentication method,Total clients,Entity clients,Non-entity clients\n
    //  namespacelonglonglong4/,,191,171,20\n
    //  namespacelonglonglong4/,auth/method/uMGBU,35,20,15\n'


    csv(filename, content) {
      this.download(filename, content, 'csv');
    }

    pem(filename, content) {
      this.download(filename, content, 'pem');
    }

    miscExtension(filename, content, extension) {
      this.download(filename, content, extension);
    }

  }

  _exports.default = DownloadService;
});
;define("vault/services/feature-flag", ["exports", "@ember/service"], function (_exports, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service"eaimeta@70e063a35619d71f

  const FLAGS = {
    vaultCloudNamespace: 'VAULT_CLOUD_ADMIN_NAMESPACE'
  };

  var _default = _service.default.extend({
    featureFlags: null,

    setFeatureFlags(flags) {
      this.set('featureFlags', flags);
    },

    get managedNamespaceRoot() {
      if (this.featureFlags && this.featureFlags.includes(FLAGS.vaultCloudNamespace)) {
        return 'admin';
      }

      return null;
    }

  });

  _exports.default = _default;
});
;define("vault/services/flash-messages", ["exports", "ember-cli-flash/services/flash-messages"], function (_exports, _flashMessages) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-flash/services/flash-messages"eaimeta@70e063a35619d71f

  /*
  we extend the ember-cli-flash service here so each ember engine can
  import 'flash-messages' as a dependency giving it access to the 
  <FlashMessage> template in the main app's cluster.hbs file
  */
  class FlashMessageService extends _flashMessages.default {}

  _exports.default = FlashMessageService;
});
;define("vault/services/keyboard", ["exports", "ember-keyboard/services/keyboard.js"], function (_exports, _keyboard) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _keyboard.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-keyboard/services/keyboard.js"eaimeta@70e063a35619d71f
});
;define("vault/services/media", ["exports", "ember-responsive/services/media"], function (_exports, _media) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-responsive/services/media"eaimeta@70e063a35619d71f

  var _default = _media.default;
  _exports.default = _default;
});
;define("vault/services/modal-dialog", ["exports", "@ember/object", "@ember/service", "vault/config/environment", "ember-modal-dialog/utils/config-utils"], function (_exports, _object, _service, _environment, _configUtils) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/object",0,"@ember/service",0,"vault/config/environment",0,"ember-modal-dialog/utils/config-utils"eaimeta@70e063a35619d71f

  function computedFromConfig(prop) {
    return (0, _object.computed)(function () {
      return _environment.default['ember-modal-dialog'] && _environment.default['ember-modal-dialog'][prop];
    });
  }

  var _default = _service.default.extend({
    hasEmberTether: computedFromConfig('hasEmberTether'),
    hasLiquidWormhole: computedFromConfig('hasLiquidWormhole'),
    hasLiquidTether: computedFromConfig('hasLiquidTether'),
    destinationElementId: (0, _object.computed)(function () {
      return (0, _configUtils.getDestinationElementIdFromConfig)(_environment.default);
    })
  });

  _exports.default = _default;
});
;define("vault/services/namespace", ["exports", "@ember/object/computed", "@ember/service", "ember-concurrency"], function (_exports, _computed, _service, _emberConcurrency) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/object/computed",0,"@ember/service",0,"ember-concurrency"eaimeta@70e063a35619d71f

  const ROOT_NAMESPACE = '';

  var _default = _service.default.extend({
    store: (0, _service.inject)(),
    auth: (0, _service.inject)(),
    userRootNamespace: (0, _computed.alias)('auth.authData.userRootNamespace'),
    //populated by the query param on the cluster route
    path: '',
    // list of namespaces available to the current user under the
    // current namespace
    accessibleNamespaces: null,
    inRootNamespace: (0, _computed.equal)('path', ROOT_NAMESPACE),

    setNamespace(path) {
      if (!path) {
        this.set('path', '');
        return;
      }

      this.set('path', path);
    },

    findNamespacesForUser: (0, _emberConcurrency.task)(function* () {
      // uses the adapter and the raw response here since
      // models get wiped when switching namespaces and we
      // want to keep track of these separately
      const store = this.store;
      const adapter = store.adapterFor('namespace');
      const userRoot = this.auth.authData.userRootNamespace;

      try {
        const ns = yield adapter.findAll(store, 'namespace', null, {
          adapterOptions: {
            forUser: true,
            namespace: userRoot
          }
        });
        const keys = ns.data.keys || [];
        this.set('accessibleNamespaces', keys.map(n => {
          let fullNS = n; // if the user's root isn't '', then we need to construct
          // the paths so they connect to the user root to the list
          // otherwise using the current ns to grab the correct leaf
          // node in the graph doesn't work

          if (userRoot) {
            fullNS = `${userRoot}/${n}`;
          }

          return fullNS.replace(/\/$/, '');
        }));
      } catch (e) {//do nothing here
      }
    }).drop(),

    reset() {
      this.set('accessibleNamespaces', null);
    }

  });

  _exports.default = _default;
});
;define("vault/services/page-title-list", ["exports", "ember-page-title/services/page-title-list"], function (_exports, _pageTitleList) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _pageTitleList.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-page-title/services/page-title-list"eaimeta@70e063a35619d71f
});
;define("vault/services/page-title", ["exports", "ember-page-title/services/page-title"], function (_exports, _pageTitle) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _pageTitle.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-page-title/services/page-title"eaimeta@70e063a35619d71f
});
;define("vault/services/path-help", ["exports", "@ember-data/model", "@ember/service", "vault/utils/path-encoding-helpers", "@ember/application", "@ember/polyfills", "vault/utils/openapi-to-attrs", "vault/utils/field-to-attrs", "rsvp", "@ember/debug", "@ember/string", "@ember/object", "ember-inflector", "vault/decorators/model-validations", "vault/adapters/generated-item-list"], function (_exports, _model, _service, _pathEncodingHelpers, _application, _polyfills, _openapiToAttrs, _fieldToAttrs, _rsvp, _debug, _string, _object, _emberInflector, _modelValidations, _generatedItemList) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  _exports.sanitizePath = sanitizePath;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"@ember/service",0,"vault/utils/path-encoding-helpers",0,"@ember/application",0,"@ember/polyfills",0,"vault/utils/openapi-to-attrs",0,"vault/utils/field-to-attrs",0,"rsvp",0,"@ember/debug",0,"@ember/string",0,"@ember/object",0,"ember-inflector",0,"vault/decorators/model-validations",0,"vault/adapters/generated-item-list"eaimeta@70e063a35619d71f

  function sanitizePath(path) {
    // remove whitespace + remove trailing and leading slashes
    return path.trim().replace(/^\/+|\/+$/g, '');
  }

  var _default = _service.default.extend({
    attrs: null,
    dynamicApiPath: '',

    ajax(url) {
      let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      const appAdapter = (0, _application.getOwner)(this).lookup(`adapter:application`);
      const {
        data
      } = options;
      return appAdapter.ajax(url, 'GET', {
        data
      });
    },

    getNewModel(modelType, backend, apiPath, itemType) {
      const owner = (0, _application.getOwner)(this);
      const modelName = `model:${modelType}`;
      const modelFactory = owner.factoryFor(modelName);
      let newModel, helpUrl; // if we have a factory, we need to take the existing model into account

      if (modelFactory) {
        (0, _debug.debug)(`Model factory found for ${modelType}`);
        newModel = modelFactory.class;
        const modelProto = newModel.proto();

        if (newModel.merged || modelProto.useOpenAPI !== true) {
          return (0, _rsvp.resolve)();
        }

        helpUrl = modelProto.getHelpUrl(backend);
        return this.registerNewModelWithProps(helpUrl, backend, newModel, modelName);
      } else {
        (0, _debug.debug)(`Creating new Model for ${modelType}`);
        newModel = _model.default.extend({});
      } // we don't have an apiPath for dynamic secrets
      // and we don't need paths for them yet


      if (!apiPath) {
        helpUrl = newModel.proto().getHelpUrl(backend);
        return this.registerNewModelWithProps(helpUrl, backend, newModel, modelName);
      } // use paths to dynamically create our openapi help url
      // if we have a brand new model


      return this.getPaths(apiPath, backend, itemType).then(pathInfo => {
        const adapterFactory = owner.factoryFor(`adapter:${modelType}`); // if we have an adapter already use that, otherwise create one

        if (!adapterFactory) {
          (0, _debug.debug)(`Creating new adapter for ${modelType}`);
          const adapter = this.getNewAdapter(pathInfo, itemType);
          owner.register(`adapter:${modelType}`, adapter);
        }

        let path; // if we have an item we want the create info for that itemType

        const paths = itemType ? this.filterPathsByItemType(pathInfo, itemType) : pathInfo.paths;
        const createPath = paths.find(path => path.operations.includes('post') && path.action !== 'Delete');
        path = createPath.path;
        path = path.includes('{') ? path.slice(0, path.indexOf('{') - 1) + '/example' : path;

        if (!path) {
          // TODO: we don't know if path will ever be falsey
          // if it is never falsey we can remove this.
          return (0, _rsvp.reject)();
        }

        helpUrl = `/v1/${apiPath}${path.slice(1)}?help=true` || newModel.proto().getHelpUrl(backend);
        pathInfo.paths = paths;
        newModel = newModel.extend({
          paths: pathInfo
        });
        return this.registerNewModelWithProps(helpUrl, backend, newModel, modelName);
      }).catch(err => {
        // TODO: we should handle the error better here
        console.error(err); // eslint-disable-line
      });
    },

    reducePathsByPathName(pathInfo, currentPath) {
      const pathName = currentPath[0];
      const pathDetails = currentPath[1];
      const displayAttrs = pathDetails['x-vault-displayAttrs'];

      if (!displayAttrs) {
        return pathInfo;
      }

      let itemType, itemName;

      if (displayAttrs.itemType) {
        itemType = displayAttrs.itemType;
        let items = itemType.split(':');
        itemName = items[items.length - 1];
        items = items.map(item => (0, _string.dasherize)((0, _emberInflector.singularize)(item.toLowerCase())));
        itemType = items.join('~*');
      }

      if (itemType && !pathInfo.itemTypes.includes(itemType)) {
        pathInfo.itemTypes.push(itemType);
      }

      const operations = [];

      if (pathDetails.get) {
        operations.push('get');
      }

      if (pathDetails.post) {
        operations.push('post');
      }

      if (pathDetails.delete) {
        operations.push('delete');
      }

      if (pathDetails.get && pathDetails.get.parameters && pathDetails.get.parameters[0].name === 'list') {
        operations.push('list');
      }

      pathInfo.paths.push({
        path: pathName,
        itemType: itemType || displayAttrs.itemType,
        itemName: itemName || pathInfo.itemType || displayAttrs.itemType,
        operations,
        action: displayAttrs.action,
        navigation: displayAttrs.navigation === true,
        param: pathName.includes('{') ? pathName.split('{')[1].split('}')[0] : false
      });
      return pathInfo;
    },

    filterPathsByItemType(pathInfo, itemType) {
      if (!itemType) {
        return pathInfo.paths;
      }

      return pathInfo.paths.filter(path => {
        return itemType === path.itemType;
      });
    },

    getPaths(apiPath, backend, itemType, itemID) {
      const debugString = itemID && itemType ? `Fetching relevant paths for ${backend} ${itemType} ${itemID} from ${apiPath}` : `Fetching relevant paths for ${backend} ${itemType} from ${apiPath}`;
      (0, _debug.debug)(debugString);
      return this.ajax(`/v1/${apiPath}?help=1`, backend).then(help => {
        const pathInfo = help.openapi.paths;
        const paths = Object.entries(pathInfo);
        return paths.reduce(this.reducePathsByPathName, {
          apiPath,
          itemType,
          itemTypes: [],
          paths: [],
          itemID
        });
      });
    },

    // Makes a call to grab the OpenAPI document.
    // Returns relevant information from OpenAPI
    // as determined by the expandOpenApiProps util
    getProps(helpUrl, backend) {
      // add name of thing you want
      (0, _debug.debug)(`Fetching schema properties for ${backend} from ${helpUrl}`);
      return this.ajax(helpUrl, backend).then(help => {
        // paths is an array but it will have a single entry
        // for the scope we're in
        const path = Object.keys(help.openapi.paths)[0]; // do this or look at name

        const pathInfo = help.openapi.paths[path];
        const params = pathInfo.parameters;
        const paramProp = {}; // include url params

        if (params) {
          const {
            name,
            schema,
            description
          } = params[0];
          const label = (0, _string.capitalize)(name.split('_').join(' '));
          paramProp[name] = {
            'x-vault-displayAttrs': {
              name: label,
              group: 'default'
            },
            type: schema.type,
            description: description,
            isId: true
          };
        }

        let props = {};
        const schema = pathInfo?.post?.requestBody?.content['application/json'].schema;

        if (schema.$ref) {
          // $ref will be shaped like `#/components/schemas/MyResponseType
          // which maps to the location of the item within the openApi response
          const loc = schema.$ref.replace('#/', '').split('/');
          props = loc.reduce((prev, curr) => {
            return prev[curr] || {};
          }, help.openapi).properties;
        } else if (schema.properties) {
          props = schema.properties;
        } // put url params (e.g. {name}, {role})
        // at the front of the props list


        const newProps = (0, _polyfills.assign)({}, paramProp, props);
        return (0, _openapiToAttrs.expandOpenApiProps)(newProps);
      });
    },

    getNewAdapter(pathInfo, itemType) {
      // we need list and create paths to set the correct urls for actions
      const paths = this.filterPathsByItemType(pathInfo, itemType);
      let {
        apiPath
      } = pathInfo;
      const getPath = paths.find(path => path.operations.includes('get')); // the action might be "Generate" or something like that so we'll grab the first post endpoint if there
      // isn't one with "Create"
      // TODO: look into a more sophisticated way to determine the create endpoint

      const createPath = paths.find(path => path.action === 'Create' || path.operations.includes('post'));
      const deletePath = paths.find(path => path.operations.includes('delete'));
      return _generatedItemList.default.extend({
        urlForItem(id, isList, dynamicApiPath) {
          const itemType = getPath.path.slice(1);
          let url;
          id = (0, _pathEncodingHelpers.encodePath)(id); // the apiPath changes when you switch between routes but the apiPath variable does not unless the model is reloaded
          // overwrite apiPath if dynamicApiPath exist.
          // dynamicApiPath comes from the model->adapter

          if (dynamicApiPath) {
            apiPath = dynamicApiPath;
          } // isList indicates whether we are viewing the list page
          // of a top-level item such as userpass


          if (isList) {
            url = `${this.buildURL()}/${apiPath}${itemType}/`;
          } else {
            // build the URL for the show page of a nested item
            // such as a userpass group
            url = `${this.buildURL()}/${apiPath}${itemType}/${id}`;
          }

          return url;
        },

        urlForQueryRecord(id, modelName) {
          return this.urlForItem(id, modelName);
        },

        urlForUpdateRecord(id) {
          const itemType = createPath.path.slice(1, createPath.path.indexOf('{') - 1);
          return `${this.buildURL()}/${apiPath}${itemType}/${id}`;
        },

        urlForCreateRecord(modelType, snapshot) {
          const id = snapshot.record.mutableId; // computed property that returns either id or private settable _id value

          const path = createPath.path.slice(1, createPath.path.indexOf('{') - 1);
          return `${this.buildURL()}/${apiPath}${path}/${id}`;
        },

        urlForDeleteRecord(id) {
          const path = deletePath.path.slice(1, deletePath.path.indexOf('{') - 1);
          return `${this.buildURL()}/${apiPath}${path}/${id}`;
        },

        createRecord(store, type, snapshot) {
          return this._super(...arguments).then(response => {
            // if the server does not return an id and one has not been set on the model we need to set it manually from the mutableId value
            if (!response?.id && !snapshot.record.id) {
              snapshot.record.id = snapshot.record.mutableId;
              snapshot.id = snapshot.record.id;
            }

            return response;
          });
        }

      });
    },

    registerNewModelWithProps(helpUrl, backend, newModel, modelName) {
      return this.getProps(helpUrl, backend).then(props => {
        const {
          attrs,
          newFields
        } = (0, _openapiToAttrs.combineAttributes)(newModel.attributes, props);
        const owner = (0, _application.getOwner)(this);
        newModel = newModel.extend(attrs, {
          newFields
        }); // if our newModel doesn't have fieldGroups already
        // we need to create them

        try {
          // Initialize prototype to access field groups
          let fieldGroups = newModel.proto().fieldGroups;

          if (!fieldGroups) {
            (0, _debug.debug)(`Constructing fieldGroups for ${backend}`);
            fieldGroups = this.getFieldGroups(newModel);
            newModel = newModel.extend({
              fieldGroups
            }); // Build and add validations on model
            // NOTE: For initial phase, initialize validations only for user pass auth

            if (backend === 'userpass') {
              var _dec, _class;

              const validations = fieldGroups.reduce((obj, element) => {
                if (element.default) {
                  element.default.forEach(v => {
                    const key = v.options.fieldValue || v.name;
                    obj[key] = [{
                      type: 'presence',
                      message: `${v.name} can't be blank`
                    }];
                  });
                }

                return obj;
              }, {});
              let GeneratedItemModel = (_dec = (0, _modelValidations.withModelValidations)(validations), _dec(_class = class GeneratedItemModel extends newModel {}) || _class);
              newModel = GeneratedItemModel;
            }
          }
        } catch (err) {// eat the error, fieldGroups is computed in the model definition
        } // attempting to set the id prop on a model will trigger an error
        // this computed will be used in place of the the id fieldValue -- see openapi-to-attrs


        newModel.reopen({
          mutableId: (0, _object.computed)('id', '_id', {
            get() {
              return this._id || this.id;
            },

            set(key, value) {
              return this._id = value;
            }

          })
        });
        newModel.reopenClass({
          merged: true
        });
        owner.unregister(modelName);
        owner.register(modelName, newModel);
      });
    },

    getFieldGroups(newModel) {
      const groups = {
        default: []
      };
      const fieldGroups = [];
      newModel.attributes.forEach(attr => {
        // if the attr comes in with a fieldGroup from OpenAPI,
        // add it to that group
        if (attr.options.fieldGroup) {
          if (groups[attr.options.fieldGroup]) {
            groups[attr.options.fieldGroup].push(attr.name);
          } else {
            groups[attr.options.fieldGroup] = [attr.name];
          }
        } else {
          // otherwise just add that attr to the default group
          groups.default.push(attr.name);
        }
      });

      for (const group in groups) {
        fieldGroups.push({
          [group]: groups[group]
        });
      }

      return (0, _fieldToAttrs.default)(newModel, fieldGroups);
    }

  });

  _exports.default = _default;
});
;define("vault/services/permissions", ["exports", "@ember/service", "ember-concurrency"], function (_exports, _service, _emberConcurrency) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"ember-concurrency"eaimeta@70e063a35619d71f

  const API_PATHS = {
    access: {
      methods: 'sys/auth',
      mfa: 'identity/mfa/method',
      oidc: 'identity/oidc/client',
      entities: 'identity/entity/id',
      groups: 'identity/group/id',
      leases: 'sys/leases/lookup',
      namespaces: 'sys/namespaces',
      'control-groups': 'sys/control-group/'
    },
    policies: {
      acl: 'sys/policies/acl'
    },
    tools: {
      wrap: 'sys/wrapping/wrap',
      lookup: 'sys/wrapping/lookup',
      unwrap: 'sys/wrapping/unwrap',
      rewrap: 'sys/wrapping/rewrap',
      random: 'sys/tools/random',
      hash: 'sys/tools/hash'
    },
    status: {
      license: 'sys/license',
      seal: 'sys/seal',
      raft: 'sys/storage/raft/configuration'
    },
    clients: {
      activity: 'sys/internal/counters/activity',
      config: 'sys/internal/counters/config'
    }
  };
  const API_PATHS_TO_ROUTE_PARAMS = {
    'sys/auth': {
      route: 'vault.cluster.access.methods',
      models: []
    },
    'identity/entity/id': {
      route: 'vault.cluster.access.identity',
      models: ['entities']
    },
    'identity/group/id': {
      route: 'vault.cluster.access.identity',
      models: ['groups']
    },
    'sys/leases/lookup': {
      route: 'vault.cluster.access.leases',
      models: []
    },
    'sys/namespaces': {
      route: 'vault.cluster.access.namespaces',
      models: []
    },
    'sys/control-group/': {
      route: 'vault.cluster.access.control-groups',
      models: []
    },
    'identity/mfa/method': {
      route: 'vault.cluster.access.mfa',
      models: []
    },
    'identity/oidc/client': {
      route: 'vault.cluster.access.oidc',
      models: []
    }
  };
  /*
    The Permissions service is used to gate top navigation and sidebar items.
    It fetches a users' policy from the resultant-acl endpoint and stores their
    allowed exact and glob paths as state. It also has methods for checking whether
    a user has permission for a given path.
  */

  var _default = _service.default.extend({
    exactPaths: null,
    globPaths: null,
    canViewAll: null,
    store: (0, _service.inject)(),
    auth: (0, _service.inject)(),
    namespace: (0, _service.inject)(),
    getPaths: (0, _emberConcurrency.task)(function* () {
      if (this.paths) {
        return;
      }

      try {
        const resp = yield this.store.adapterFor('permissions').query();
        this.setPaths(resp);
        return;
      } catch (err) {
        // If no policy can be found, default to showing all nav items.
        this.set('canViewAll', true);
      }
    }),

    setPaths(resp) {
      this.set('exactPaths', resp.data.exact_paths);
      this.set('globPaths', resp.data.glob_paths);
      this.set('canViewAll', resp.data.root);
    },

    reset() {
      this.set('exactPaths', null);
      this.set('globPaths', null);
      this.set('canViewAll', null);
    },

    hasNavPermission(navItem, routeParams, requireAll) {
      if (routeParams) {
        // check that the user has permission to access all (requireAll = true) or any of the routes when array is passed
        // useful for hiding nav headings when user does not have access to any of the links
        const params = Array.isArray(routeParams) ? routeParams : [routeParams];
        const evalMethod = !Array.isArray(routeParams) || requireAll ? 'every' : 'some';
        return params[evalMethod](param => {
          // viewing the entity and groups pages require the list capability, while the others require the default, which is anything other than deny
          const capability = param === 'entities' || param === 'groups' ? ['list'] : [null];
          return this.hasPermission(API_PATHS[navItem][param], capability);
        });
      }

      return Object.values(API_PATHS[navItem]).some(path => this.hasPermission(path));
    },

    navPathParams(navItem) {
      const path = Object.values(API_PATHS[navItem]).find(path => this.hasPermission(path));

      if (['policies', 'tools'].includes(navItem)) {
        return {
          models: [path.split('/').lastObject]
        };
      }

      return API_PATHS_TO_ROUTE_PARAMS[path];
    },

    pathNameWithNamespace(pathName) {
      const namespace = this.namespace.path;

      if (namespace) {
        return `${namespace}/${pathName}`;
      } else {
        return pathName;
      }
    },

    hasPermission(pathName) {
      let capabilities = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [null];
      const path = this.pathNameWithNamespace(pathName);

      if (this.canViewAll) {
        return true;
      }

      return capabilities.every(capability => this.hasMatchingExactPath(path, capability) || this.hasMatchingGlobPath(path, capability));
    },

    hasMatchingExactPath(pathName, capability) {
      const exactPaths = this.exactPaths;

      if (exactPaths) {
        const prefix = Object.keys(exactPaths).find(path => path.startsWith(pathName));
        const hasMatchingPath = prefix && !this.isDenied(exactPaths[prefix]);

        if (prefix && capability) {
          return this.hasCapability(exactPaths[prefix], capability) && hasMatchingPath;
        }

        return hasMatchingPath;
      }

      return false;
    },

    hasMatchingGlobPath(pathName, capability) {
      const globPaths = this.globPaths;

      if (globPaths) {
        const matchingPath = Object.keys(globPaths).find(k => {
          return pathName.includes(k) || pathName.includes(k.replace(/\/$/, ''));
        });
        const hasMatchingPath = matchingPath && !this.isDenied(globPaths[matchingPath]) || Object.prototype.hasOwnProperty.call(globPaths, '');

        if (matchingPath && capability) {
          return this.hasCapability(globPaths[matchingPath], capability) && hasMatchingPath;
        }

        return hasMatchingPath;
      }

      return false;
    },

    hasCapability(path, capability) {
      return path.capabilities.includes(capability);
    },

    isDenied(path) {
      return path.capabilities.includes('deny');
    }

  });

  _exports.default = _default;
});
;define("vault/services/replication-mode", ["exports", "@ember/service"], function (_exports, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service"eaimeta@70e063a35619d71f

  var _default = _service.default.extend({
    mode: null,

    getMode() {
      return this.mode;
    },

    setMode(mode) {
      this.set('mode', mode);
    }

  });

  _exports.default = _default;
});
;define("vault/services/secret-mount-path", ["exports", "@ember/service"], function (_exports, _service) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/service"eaimeta@70e063a35619d71f

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  // this service tracks the path of the currently viewed secret mount
  // so that we can access that inside of engines where parent route params
  // are not accessible
  class SecretMountPath extends _service.default {
    constructor() {
      super(...arguments);

      _defineProperty(this, "currentPath", '');
    }

    update(path) {
      this.currentPath = path;
    }

    get() {
      return this.currentPath;
    }

  }

  _exports.default = SecretMountPath;
});
;define("vault/services/store", ["exports", "@ember-data/store", "@ember/runloop", "ember-copy", "rsvp", "@ember/string", "@ember/debug", "@ember/object", "vault/utils/clamp", "vault/config/environment", "vault/utils/sort-objects"], function (_exports, _store, _runloop, _emberCopy, _rsvp, _string, _debug, _object, _clamp, _environment, _sortObjects) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  _exports.keyForCache = keyForCache;
  _exports.normalizeModelName = normalizeModelName;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/store",0,"@ember/runloop",0,"ember-copy",0,"rsvp",0,"@ember/string",0,"@ember/debug",0,"@ember/object",0,"vault/utils/clamp",0,"vault/config/environment",0,"vault/utils/sort-objects"eaimeta@70e063a35619d71f

  const {
    DEFAULT_PAGE_SIZE
  } = _environment.default.APP;

  function normalizeModelName(modelName) {
    return (0, _string.dasherize)(modelName);
  }

  function keyForCache(query) {
    /*eslint no-unused-vars: ["error", { "ignoreRestSiblings": true }]*/
    // we want to ignore size, page, responsePath, and pageFilter in the cacheKey
    const {
      size,
      page,
      responsePath,
      pageFilter,
      ...queryForCache
    } = query;
    const cacheKeyObject = Object.keys(queryForCache).sort().reduce((result, key) => {
      result[key] = queryForCache[key];
      return result;
    }, {});
    return JSON.stringify(cacheKeyObject);
  }

  var _default = _store.default.extend({
    // this is a map of map that stores the caches
    // eslint-disable-next-line
    lazyCaches: (0, _object.computed)({
      get() {
        return this._lazyCaches || new Map();
      },

      set(key, value) {
        return this._lazyCaches = value;
      }

    }),

    setLazyCacheForModel(modelName, key, value) {
      const cacheKey = keyForCache(key);
      const cache = this.lazyCacheForModel(modelName) || new Map();
      cache.set(cacheKey, value);
      const lazyCaches = this.lazyCaches;
      const modelKey = normalizeModelName(modelName);
      lazyCaches.set(modelKey, cache);
    },

    getLazyCacheForModel(modelName, key) {
      const cacheKey = keyForCache(key);
      const modelCache = this.lazyCacheForModel(modelName);

      if (modelCache) {
        return modelCache.get(cacheKey);
      }
    },

    lazyCacheForModel(modelName) {
      return this.lazyCaches.get(normalizeModelName(modelName));
    },

    // This is the public interface for the store extension - to be used just
    // like `Store.query`. Special handling of the response is controlled by
    // `query.pageFilter`, `query.page`, and `query.size`.
    // Required attributes of the `query` argument are:
    //   responsePath: a string indicating the location on the response where
    //     the array of items will be found
    //   page: the page number to return
    //   size: the size of the page
    //   pageFilter: a string that will be used to do a fuzzy match against the
    //     results, this is done pre-pagination
    lazyPaginatedQuery(modelType, query
    /*, options*/
    ) {
      const adapter = this.adapterFor(modelType);
      const modelName = normalizeModelName(modelType);
      const dataCache = this.getDataset(modelName, query);
      const responsePath = query.responsePath;
      (true && !(responsePath) && (0, _debug.assert)('responsePath is required', responsePath));
      (true && !(typeof query.page === 'number') && (0, _debug.assert)('page is required', typeof query.page === 'number'));

      if (!query.size) {
        query.size = DEFAULT_PAGE_SIZE;
      }

      if (dataCache) {
        return (0, _rsvp.resolve)(this.fetchPage(modelName, query));
      }

      return adapter.query(this, {
        modelName
      }, query).then(response => {
        const serializer = this.serializerFor(modelName);
        const datasetHelper = serializer.extractLazyPaginatedData;
        const dataset = datasetHelper ? datasetHelper.call(serializer, response) : (0, _object.get)(response, responsePath);
        (0, _object.set)(response, responsePath, null);
        this.storeDataset(modelName, query, response, dataset);
        return this.fetchPage(modelName, query);
      }).catch(function (e) {
        throw e;
      });
    },

    filterData(filter, dataset) {
      let newData = dataset || [];

      if (filter) {
        newData = dataset.filter(function (item) {
          const id = item.id || item.name || item;
          return id.toLowerCase().includes(filter.toLowerCase());
        });
      }

      return newData;
    },

    // reconstructs the original form of the response from the server
    // with an additional `meta` block
    //
    // the meta block includes:
    // currentPage, lastPage, nextPage, prevPage, total, filteredTotal
    constructResponse(modelName, query) {
      const {
        pageFilter,
        responsePath,
        size,
        page
      } = query;
      let {
        response,
        dataset
      } = this.getDataset(modelName, query);
      response = (0, _emberCopy.copy)(response, true);
      const data = this.filterData(pageFilter, dataset);
      const lastPage = Math.ceil(data.length / size);
      const currentPage = (0, _clamp.default)(page, 1, lastPage);
      const end = currentPage * size;
      const start = end - size;
      const slicedDataSet = data.slice(start, end);
      (0, _object.set)(response, responsePath || '', slicedDataSet);
      response.meta = {
        currentPage,
        lastPage,
        nextPage: (0, _clamp.default)(currentPage + 1, 1, lastPage),
        prevPage: (0, _clamp.default)(currentPage - 1, 1, lastPage),
        total: dataset.length || 0,
        filteredTotal: data.length || 0
      };
      return response;
    },

    // pushes records into the store and returns the result
    fetchPage(modelName, query) {
      const response = this.constructResponse(modelName, query);
      this.peekAll(modelName).forEach(record => {
        record.unloadRecord();
      });
      return new _rsvp.Promise(resolve => {
        (0, _runloop.schedule)('destroy', () => {
          this.push(this.serializerFor(modelName).normalizeResponse(this, this.modelFor(modelName), response, null, 'query'));
          const model = this.peekAll(modelName).toArray();
          model.set('meta', response.meta);
          resolve(model);
        });
      });
    },

    // get cached data
    getDataset(modelName, query) {
      return this.getLazyCacheForModel(modelName, query);
    },

    // store data cache as { response, dataset}
    // also populated `lazyCaches` attribute
    storeDataset(modelName, query, response, array) {
      const dataset = query.sortBy ? (0, _sortObjects.default)(array, query.sortBy) : array;
      const value = {
        response,
        dataset
      };
      this.setLazyCacheForModel(modelName, query, value);
    },

    clearDataset(modelName) {
      const cacheList = this.lazyCaches;
      if (!cacheList.size) return;

      if (modelName && cacheList.has(modelName)) {
        cacheList.delete(modelName);
        return;
      }

      cacheList.clear();
      this.set('lazyCaches', cacheList);
    },

    clearAllDatasets() {
      this.clearDataset();
    }

  });

  _exports.default = _default;
});
;define("vault/services/text-measurer", ["exports", "ember-text-measurer/services/text-measurer"], function (_exports, _textMeasurer) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _textMeasurer.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-text-measurer/services/text-measurer"eaimeta@70e063a35619d71f
});
;define("vault/services/version", ["exports", "@ember/service", "ember-concurrency", "@glimmer/tracking"], function (_exports, _service, _emberConcurrency, _tracking) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var _class, _descriptor, _descriptor2, _descriptor3;

  0; //eaimeta@70e063a35619d71f0,"@ember/service",0,"ember-concurrency",0,"@glimmer/tracking"eaimeta@70e063a35619d71f

  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }

  let VersionService = (_class = class VersionService extends _service.default {
    constructor() {
      super(...arguments);

      _initializerDefineProperty(this, "store", _descriptor, this);

      _initializerDefineProperty(this, "features", _descriptor2, this);

      _initializerDefineProperty(this, "version", _descriptor3, this);
    }

    get hasNamespaces() {
      return this.features.includes('Namespaces');
    }

    get hasControlGroups() {
      return this.features.includes('Control Groups');
    }

    get isEnterprise() {
      if (!this.version) return false;
      return this.version.includes('+');
    }

    get isOSS() {
      return !this.isEnterprise;
    }

    *getVersion() {
      if (this.version) return;
      const response = yield this.store.adapterFor('cluster').health();
      this.version = response.version;
      return;
    }

    *getFeatures() {
      if (this.features?.length || this.isOSS) {
        return;
      }

      try {
        const response = yield this.store.adapterFor('cluster').features();
        this.features = response.features;
        return;
      } catch (err) {// if we fail here, we're likely in DR Secondary mode and don't need to worry about it
      }
    }

    fetchVersion() {
      return this.getVersion.perform();
    }

    fetchFeatures() {
      return this.getFeatures.perform();
    }

  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "store", [_service.inject], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "features", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return [];
    }
  }), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, "version", [_tracking.tracked], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return null;
    }
  }), _applyDecoratedDescriptor(_class.prototype, "getVersion", [_emberConcurrency.task], Object.getOwnPropertyDescriptor(_class.prototype, "getVersion"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "getFeatures", [_emberConcurrency.keepLatestTask], Object.getOwnPropertyDescriptor(_class.prototype, "getFeatures"), _class.prototype)), _class);
  _exports.default = VersionService;
});
;define("vault/services/wizard", ["exports", "@ember/runloop", "@ember/utils", "@ember/service", "xstate", "@ember/string", "vault/lib/token-storage", "vault/helpers/wizard-constants"], function (_exports, _runloop, _utils, _service, _xstate, _string, _tokenStorage, _wizardConstants) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/runloop",0,"@ember/utils",0,"@ember/service",0,"xstate",0,"@ember/string",0,"vault/lib/token-storage",0,"vault/helpers/wizard-constants"eaimeta@70e063a35619d71f

  const {
    TUTORIAL_STATE,
    COMPONENT_STATE,
    FEATURE_STATE,
    FEATURE_LIST,
    FEATURE_STATE_HISTORY,
    COMPLETED_FEATURES,
    RESUME_URL,
    RESUME_ROUTE
  } = _wizardConstants.STORAGE_KEYS;
  const TutorialMachine = (0, _xstate.Machine)(_wizardConstants.MACHINES.tutorial);
  let FeatureMachine = null;

  var _default = _service.default.extend(_wizardConstants.DEFAULTS, {
    router: (0, _service.inject)(),
    showWhenUnauthenticated: false,
    featureMachineHistory: null,

    init() {
      this._super(...arguments);

      this.initializeMachines();
    },

    initializeMachines() {
      if (!this.storageHasKey(TUTORIAL_STATE)) {
        const state = TutorialMachine.initialState;
        this.saveState('currentState', state.value);
        this.saveExtState(TUTORIAL_STATE, state.value);
      }

      this.saveState('currentState', this.getExtState(TUTORIAL_STATE));

      if (this.storageHasKey(COMPONENT_STATE)) {
        this.set('componentState', this.getExtState(COMPONENT_STATE));
      }

      const stateNodes = TutorialMachine.getStateNodes(this.currentState);
      this.executeActions(stateNodes.reduce((acc, node) => acc.concat(node.onEntry), []), null, 'tutorial');

      if (this.storageHasKey(FEATURE_LIST)) {
        this.set('featureList', this.getExtState(FEATURE_LIST));

        if (this.storageHasKey(FEATURE_STATE_HISTORY)) {
          this.set('featureMachineHistory', this.getExtState(FEATURE_STATE_HISTORY));
        }

        this.saveState('featureState', this.getExtState(FEATURE_STATE) || (FeatureMachine ? FeatureMachine.initialState : null));
        this.saveExtState(FEATURE_STATE, this.featureState);
        this.buildFeatureMachine();
      }
    },

    clearFeatureData() {
      const storage = this.storage(); // empty storage

      [FEATURE_LIST, FEATURE_STATE, FEATURE_STATE_HISTORY, COMPLETED_FEATURES].forEach(key => storage.removeItem(key));
      this.set('currentMachine', null);
      this.set('featureMachineHistory', null);
      this.set('featureState', null);
      this.set('featureList', null);
    },

    restartGuide() {
      this.clearFeatureData();
      const storage = this.storage(); // empty storage

      [TUTORIAL_STATE, COMPONENT_STATE, RESUME_URL, RESUME_ROUTE].forEach(key => storage.removeItem(key)); // reset wizard state

      this.setProperties(_wizardConstants.DEFAULTS); // restart machines from blank state

      this.initializeMachines(); // progress machine to 'active.select'

      this.transitionTutorialMachine('idle', 'AUTH');
    },

    saveFeatureHistory(state) {
      if (this.getCompletedFeatures().length === 0 && this.featureMachineHistory === null && (state === 'idle' || state === 'wrap')) {
        const newHistory = [state];
        this.set('featureMachineHistory', newHistory);
      } else {
        if (this.featureMachineHistory) {
          if (!this.featureMachineHistory.includes(state)) {
            const newHistory = this.featureMachineHistory.addObject(state);
            this.set('featureMachineHistory', newHistory);
          } else {
            //we're repeating steps
            const stepIndex = this.featureMachineHistory.indexOf(state);
            const newHistory = this.featureMachineHistory.splice(0, stepIndex + 1);
            this.set('featureMachineHistory', newHistory);
          }
        }
      }

      if (this.featureMachineHistory) {
        this.saveExtState(FEATURE_STATE_HISTORY, this.featureMachineHistory);
      }
    },

    saveState(stateType, state) {
      if (state.value) {
        state = state.value;
      }

      let stateKey = '';

      while ((0, _utils.typeOf)(state) === 'object') {
        const newState = Object.keys(state);
        stateKey += newState + '.';
        state = state[newState];
      }

      stateKey += state;
      this.set(stateType, stateKey);

      if (stateType === 'featureState') {
        //only track progress if we are on the first step of the first feature
        this.saveFeatureHistory(state);
      }
    },

    transitionTutorialMachine(currentState, event, extendedState) {
      if (extendedState) {
        this.set('componentState', extendedState);
        this.saveExtState(COMPONENT_STATE, extendedState);
      }

      const {
        actions,
        value
      } = TutorialMachine.transition(currentState, event);
      this.saveState('currentState', value);
      this.saveExtState(TUTORIAL_STATE, this.currentState);
      this.executeActions(actions, event, 'tutorial');
    },

    transitionFeatureMachine(currentState, event, extendedState) {
      if (!FeatureMachine || !this.currentState.includes('active')) {
        return;
      }

      if (extendedState) {
        this.set('componentState', extendedState);
        this.saveExtState(COMPONENT_STATE, extendedState);
      }

      const {
        actions,
        value
      } = FeatureMachine.transition(currentState, event, this.componentState);
      this.saveState('featureState', value);
      this.saveExtState(FEATURE_STATE, value);
      this.executeActions(actions, event, 'feature'); // if all features were completed, the FeatureMachine gets nulled
      // out and won't exist here as there is no next step

      if (FeatureMachine) {
        let next;

        if (this.currentMachine === 'secrets' && value === 'display') {
          next = FeatureMachine.transition(value, 'REPEAT', this.componentState);
        } else {
          next = FeatureMachine.transition(value, 'CONTINUE', this.componentState);
        }

        this.saveState('nextStep', next.value);
      }
    },

    saveExtState(key, value) {
      this.storage().setItem(key, value);
    },

    getExtState(key) {
      return this.storage().getItem(key);
    },

    storageHasKey(key) {
      return Boolean(this.getExtState(key));
    },

    executeActions(actions, event, machineType) {
      let transitionURL;
      let expectedRouteName;
      const router = this.router;

      for (const action of actions) {
        let type = action;

        if (action.type) {
          type = action.type;
        }

        switch (type) {
          case 'render':
            this.set(`${action.level}Component`, action.component);
            break;

          case 'routeTransition':
            expectedRouteName = action.params[0];
            transitionURL = router.urlFor(...action.params).replace(/^\/ui/, '');
            (0, _runloop.next)(() => {
              router.transitionTo(...action.params);
            });
            break;

          case 'saveFeatures':
            this.saveFeatures(event.features);
            break;

          case 'completeFeature':
            this.completeFeature();
            break;

          case 'handleDismissed':
            this.handleDismissed();
            break;

          case 'handlePaused':
            this.handlePaused();
            return;

          case 'handleResume':
            this.handleResume();
            break;

          case 'showTutorialWhenAuthenticated':
            this.set('showWhenUnauthenticated', false);
            break;

          case 'showTutorialAlways':
            this.set('showWhenUnauthenticated', true);
            break;

          case 'clearFeatureData':
            this.clearFeatureData();
            break;

          case 'continueFeature':
            this.transitionFeatureMachine(this.featureState, 'CONTINUE', this.componentState);
            break;

          default:
            break;
        }
      }

      if (machineType === 'tutorial') {
        return;
      } // if we're transitioning in the actions, we want that url,
      // else we want the URL we land on in didTransition in the
      // application route - we'll notify the application route to
      // update the route


      if (transitionURL) {
        this.set('expectedURL', transitionURL);
        this.set('expectedRouteName', expectedRouteName);
        this.set('setURLAfterTransition', false);
      } else {
        this.set('setURLAfterTransition', true);
      }
    },

    handlePaused() {
      const expected = this.expectedURL;

      if (expected) {
        this.saveExtState(RESUME_URL, this.expectedURL);
        this.saveExtState(RESUME_ROUTE, this.expectedRouteName);
      }
    },

    handleResume() {
      const resumeURL = this.storage().getItem(RESUME_URL);

      if (!resumeURL) {
        return;
      }

      this.router.transitionTo(resumeURL).followRedirects().then(() => {
        this.set('expectedRouteName', this.storage().getItem(RESUME_ROUTE));
        this.set('expectedURL', resumeURL);
        this.initializeMachines();
        this.storage().removeItem(RESUME_URL);
      });
    },

    handleDismissed() {
      this.storage().removeItem(FEATURE_STATE);
      this.storage().removeItem(FEATURE_LIST);
      this.storage().removeItem(FEATURE_STATE_HISTORY);
      this.storage().removeItem(COMPONENT_STATE);
    },

    saveFeatures(features) {
      this.set('featureList', features);
      this.saveExtState(FEATURE_LIST, this.featureList);
      this.buildFeatureMachine();
    },

    buildFeatureMachine() {
      if (this.featureList === null) {
        return;
      }

      this.startFeature();
      const nextFeature = this.featureList.length > 1 ? (0, _string.capitalize)(this.featureList.objectAt(1)) : 'Finish';
      this.set('nextFeature', nextFeature);
      let next;

      if (this.currentMachine === 'secrets' && this.featureState === 'display') {
        next = FeatureMachine.transition(this.featureState, 'REPEAT', this.componentState);
      } else {
        next = FeatureMachine.transition(this.featureState, 'CONTINUE', this.componentState);
      }

      this.saveState('nextStep', next.value);
      const stateNodes = FeatureMachine.getStateNodes(this.featureState);
      this.executeActions(stateNodes.reduce((acc, node) => acc.concat(node.onEntry), []), null, 'feature');
    },

    startFeature() {
      const FeatureMachineConfig = _wizardConstants.MACHINES[this.featureList.objectAt(0)];

      FeatureMachine = (0, _xstate.Machine)(FeatureMachineConfig);
      this.set('currentMachine', this.featureList.objectAt(0));

      if (this.storageHasKey(FEATURE_STATE)) {
        this.saveState('featureState', this.getExtState(FEATURE_STATE));
      } else {
        this.saveState('featureState', FeatureMachine.initialState);
      }

      this.saveExtState(FEATURE_STATE, this.featureState);
    },

    getCompletedFeatures() {
      if (this.storageHasKey(COMPLETED_FEATURES)) {
        return this.getExtState(COMPLETED_FEATURES).toArray();
      }

      return [];
    },

    completeFeature() {
      const features = this.featureList;
      const done = features.shift();

      if (!this.getExtState(COMPLETED_FEATURES)) {
        const completed = [];
        completed.push(done);
        this.saveExtState(COMPLETED_FEATURES, completed);
      } else {
        this.saveExtState(COMPLETED_FEATURES, this.getExtState(COMPLETED_FEATURES).toArray().addObject(done));
      }

      this.saveExtState(FEATURE_LIST, features.length ? features : null);
      this.storage().removeItem(FEATURE_STATE);

      if (this.featureMachineHistory) {
        this.set('featureMachineHistory', []);
        this.saveExtState(FEATURE_STATE_HISTORY, []);
      }

      if (features.length > 0) {
        this.buildFeatureMachine();
      } else {
        this.storage().removeItem(FEATURE_LIST);
        FeatureMachine = null;
        this.transitionTutorialMachine(this.currentState, 'DONE');
      }
    },

    storage() {
      return (0, _tokenStorage.default)();
    }

  });

  _exports.default = _default;
});
;define("vault/templates/application", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <Sidebar::Frame @showSidebar={{this.auth.isActiveSession}}>
    <div class="page-container">
      {{outlet}}
    </div>
  </Sidebar::Frame>
  */
  {
    "id": "SUDHvHa/",
    "block": "[[[8,[39,0],null,[[\"@showSidebar\"],[[30,0,[\"auth\",\"isActiveSession\"]]]],[[\"default\"],[[[[1,\"\\n  \"],[10,0],[14,0,\"page-container\"],[12],[1,\"\\n    \"],[46,[28,[37,2],null,null],null,null,null],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[],false,[\"sidebar/frame\",\"component\",\"-outlet\"]]",
    "moduleName": "vault/templates/application.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/alphabet-edit", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.top>
      <KeyValueHeader
        @baseKey={{hash display=this.model.id id=this.model.idForNav}}
        @path="vault.cluster.secrets.backend.list"
        @mode={{this.mode}}
        @root={{this.root}}
        @showCurrent={{true}}
      />
    </p.top>
    <p.levelLeft>
      <h1 class="title is-3" data-test-secret-header="true">
        {{#if (eq this.mode "create")}}
          Create Alphabet
        {{else if (eq this.mode "edit")}}
          Edit Alphabet
        {{else}}
          Alphabet
          <code>{{this.model.id}}</code>
        {{/if}}
      </h1>
    </p.levelLeft>
  </PageHeader>
  
  {{#if (eq this.mode "show")}}
    <Toolbar>
      <ToolbarActions>
        {{#if this.capabilities.canDelete}}
          <button type="button" class="toolbar-link" onclick={{action "delete"}} data-test-transformation-alphabet-delete>
            Delete alphabet
          </button>
          <div class="toolbar-separator"></div>
        {{/if}}
        {{#if this.capabilities.canUpdate}}
          <ToolbarSecretLink
            @secret={{concat this.model.idPrefix this.model.id}}
            @mode="edit"
            data-test-edit-link={{true}}
            @replace={{true}}
          >
            Edit alphabet
          </ToolbarSecretLink>
        {{/if}}
      </ToolbarActions>
    </Toolbar>
  {{/if}}
  
  {{#if (or (eq this.mode "edit") (eq this.mode "create"))}}
    <form onsubmit={{action "createOrUpdate" this.mode}}>
      <div class="box is-sideless is-fullwidth is-marginless">
        <MessageError @model={{this.model}} />
        <NamespaceReminder @mode={{this.mode}} @noun="transform alphabet" />
        {{#each this.model.attrs as |attr|}}
          {{#if (and (eq attr.name "name") (eq this.mode "edit"))}}
            <label for={{attr.name}} class="is-label">
              {{attr.options.label}}
            </label>
            {{#if attr.options.subText}}
              <p class="sub-text">{{attr.options.subText}}</p>
            {{/if}}
            <input
              data-test-input={{attr.name}}
              id={{attr.name}}
              autocomplete="off"
              spellcheck="false"
              value={{or (get this.model attr.name) this.model.id}}
              readonly
              class="field input is-readOnly"
              type={{attr.type}}
            />
          {{else}}
            <FormField data-test-field @attr={{attr}} @model={{this.model}} />
          {{/if}}
        {{/each}}
      </div>
      <div class="field is-grouped-split box is-fullwidth is-bottomless">
        <div class="control">
          <button
            type="submit"
            disabled={{this.buttonDisabled}}
            class="button is-primary"
            data-test-alphabet-transform-create={{true}}
          >
            {{#if (eq this.mode "create")}}
              Create alphabet
            {{else if (eq this.mode "edit")}}
              Save
            {{/if}}
          </button>
          <SecretLink
            @mode={{if (eq this.mode "create") "list" "show"}}
            class="button"
            @secret={{concat this.model.idPrefix this.model.id}}
          >
            Cancel
          </SecretLink>
        </div>
      </div>
    </form>
  {{else}}
    {{#if this.model.displayErrors}}
      <div class="has-top-margin-s">
        <MessageError @model={{this.model}} />
      </div>
    {{/if}}
    <div class="box is-fullwidth is-sideless is-paddingless is-marginless">
      {{#each this.model.attrs as |attr|}}
        {{#if (eq attr.type "object")}}
          <InfoTableRow
            @label={{capitalize (or attr.options.label (humanize (dasherize attr.name)))}}
            @value={{stringify (get this.model attr.name)}}
          />
        {{else if (eq attr.type "array")}}
          <InfoTableRow
            @label={{capitalize (or attr.options.label (humanize (dasherize attr.name)))}}
            @value={{get this.model attr.name}}
            @type={{attr.type}}
            @isLink={{eq attr.name "transformations"}}
          />
        {{else}}
          <InfoTableRow
            @label={{capitalize (or attr.options.label (humanize (dasherize attr.name)))}}
            @value={{get this.model attr.name}}
          />
        {{/if}}
      {{/each}}
    </div>
  {{/if}}
  */
  {
    "id": "MF3aq8Xo",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"top\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,1],null,[[\"@baseKey\",\"@path\",\"@mode\",\"@root\",\"@showCurrent\"],[[28,[37,2],null,[[\"display\",\"id\"],[[30,0,[\"model\",\"id\"]],[30,0,[\"model\",\"idForNav\"]]]]],\"vault.cluster.secrets.backend.list\",[30,0,[\"mode\"]],[30,0,[\"root\"]],true]],null],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[14,\"data-test-secret-header\",\"true\"],[12],[1,\"\\n\"],[41,[28,[37,4],[[30,0,[\"mode\"]],\"create\"],null],[[[1,\"        Create Alphabet\\n\"]],[]],[[[41,[28,[37,4],[[30,0,[\"mode\"]],\"edit\"],null],[[[1,\"        Edit Alphabet\\n\"]],[]],[[[1,\"        Alphabet\\n        \"],[10,\"code\"],[12],[1,[30,0,[\"model\",\"id\"]]],[13],[1,\"\\n      \"]],[]]]],[]]],[1,\"    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\\n\"],[41,[28,[37,4],[[30,0,[\"mode\"]],\"show\"],null],[[[1,\"  \"],[8,[39,5],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,6],null,null,[[\"default\"],[[[[1,\"\\n\"],[41,[30,0,[\"capabilities\",\"canDelete\"]],[[[1,\"        \"],[10,\"button\"],[14,0,\"toolbar-link\"],[15,\"onclick\",[28,[37,7],[[30,0],\"delete\"],null]],[14,\"data-test-transformation-alphabet-delete\",\"\"],[14,4,\"button\"],[12],[1,\"\\n          Delete alphabet\\n        \"],[13],[1,\"\\n        \"],[10,0],[14,0,\"toolbar-separator\"],[12],[13],[1,\"\\n\"]],[]],null],[41,[30,0,[\"capabilities\",\"canUpdate\"]],[[[1,\"        \"],[8,[39,8],[[16,\"data-test-edit-link\",true]],[[\"@secret\",\"@mode\",\"@replace\"],[[28,[37,9],[[30,0,[\"model\",\"idPrefix\"]],[30,0,[\"model\",\"id\"]]],null],\"edit\",true]],[[\"default\"],[[[[1,\"\\n          Edit alphabet\\n        \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"    \"]],[]]]]],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"\\n\"],[41,[28,[37,10],[[28,[37,4],[[30,0,[\"mode\"]],\"edit\"],null],[28,[37,4],[[30,0,[\"mode\"]],\"create\"],null]],null],[[[1,\"  \"],[10,\"form\"],[15,\"onsubmit\",[28,[37,7],[[30,0],\"createOrUpdate\",[30,0,[\"mode\"]]],null]],[12],[1,\"\\n    \"],[10,0],[14,0,\"box is-sideless is-fullwidth is-marginless\"],[12],[1,\"\\n      \"],[8,[39,11],null,[[\"@model\"],[[30,0,[\"model\"]]]],null],[1,\"\\n      \"],[8,[39,12],null,[[\"@mode\",\"@noun\"],[[30,0,[\"mode\"]],\"transform alphabet\"]],null],[1,\"\\n\"],[42,[28,[37,14],[[28,[37,14],[[30,0,[\"model\",\"attrs\"]]],null]],null],null,[[[41,[28,[37,15],[[28,[37,4],[[30,2,[\"name\"]],\"name\"],null],[28,[37,4],[[30,0,[\"mode\"]],\"edit\"],null]],null],[[[1,\"          \"],[10,\"label\"],[15,\"for\",[30,2,[\"name\"]]],[14,0,\"is-label\"],[12],[1,\"\\n            \"],[1,[30,2,[\"options\",\"label\"]]],[1,\"\\n          \"],[13],[1,\"\\n\"],[41,[30,2,[\"options\",\"subText\"]],[[[1,\"            \"],[10,2],[14,0,\"sub-text\"],[12],[1,[30,2,[\"options\",\"subText\"]]],[13],[1,\"\\n\"]],[]],null],[1,\"          \"],[10,\"input\"],[15,\"data-test-input\",[30,2,[\"name\"]]],[15,1,[30,2,[\"name\"]]],[14,\"autocomplete\",\"off\"],[14,\"spellcheck\",\"false\"],[15,2,[28,[37,10],[[28,[37,16],[[30,0,[\"model\"]],[30,2,[\"name\"]]],null],[30,0,[\"model\",\"id\"]]],null]],[14,\"readonly\",\"\"],[14,0,\"field input is-readOnly\"],[15,4,[30,2,[\"type\"]]],[12],[13],[1,\"\\n\"]],[]],[[[1,\"          \"],[8,[39,17],[[24,\"data-test-field\",\"\"]],[[\"@attr\",\"@model\"],[[30,2],[30,0,[\"model\"]]]],null],[1,\"\\n\"]],[]]]],[2]],null],[1,\"    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"field is-grouped-split box is-fullwidth is-bottomless\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n        \"],[10,\"button\"],[15,\"disabled\",[30,0,[\"buttonDisabled\"]]],[14,0,\"button is-primary\"],[15,\"data-test-alphabet-transform-create\",true],[14,4,\"submit\"],[12],[1,\"\\n\"],[41,[28,[37,4],[[30,0,[\"mode\"]],\"create\"],null],[[[1,\"            Create alphabet\\n\"]],[]],[[[41,[28,[37,4],[[30,0,[\"mode\"]],\"edit\"],null],[[[1,\"            Save\\n          \"]],[]],null]],[]]],[1,\"        \"],[13],[1,\"\\n        \"],[8,[39,18],[[24,0,\"button\"]],[[\"@mode\",\"@secret\"],[[52,[28,[37,4],[[30,0,[\"mode\"]],\"create\"],null],\"list\",\"show\"],[28,[37,9],[[30,0,[\"model\",\"idPrefix\"]],[30,0,[\"model\",\"id\"]]],null]]],[[\"default\"],[[[[1,\"\\n          Cancel\\n        \"]],[]]]]],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]],[[[41,[30,0,[\"model\",\"displayErrors\"]],[[[1,\"    \"],[10,0],[14,0,\"has-top-margin-s\"],[12],[1,\"\\n      \"],[8,[39,11],null,[[\"@model\"],[[30,0,[\"model\"]]]],null],[1,\"\\n    \"],[13],[1,\"\\n\"]],[]],null],[1,\"  \"],[10,0],[14,0,\"box is-fullwidth is-sideless is-paddingless is-marginless\"],[12],[1,\"\\n\"],[42,[28,[37,14],[[28,[37,14],[[30,0,[\"model\",\"attrs\"]]],null]],null],null,[[[41,[28,[37,4],[[30,3,[\"type\"]],\"object\"],null],[[[1,\"        \"],[8,[39,19],null,[[\"@label\",\"@value\"],[[28,[37,20],[[28,[37,10],[[30,3,[\"options\",\"label\"]],[28,[37,21],[[28,[37,22],[[30,3,[\"name\"]]],null]],null]],null]],null],[28,[37,23],[[28,[37,16],[[30,0,[\"model\"]],[30,3,[\"name\"]]],null]],null]]],null],[1,\"\\n\"]],[]],[[[41,[28,[37,4],[[30,3,[\"type\"]],\"array\"],null],[[[1,\"        \"],[8,[39,19],null,[[\"@label\",\"@value\",\"@type\",\"@isLink\"],[[28,[37,20],[[28,[37,10],[[30,3,[\"options\",\"label\"]],[28,[37,21],[[28,[37,22],[[30,3,[\"name\"]]],null]],null]],null]],null],[28,[37,16],[[30,0,[\"model\"]],[30,3,[\"name\"]]],null],[30,3,[\"type\"]],[28,[37,4],[[30,3,[\"name\"]],\"transformations\"],null]]],null],[1,\"\\n\"]],[]],[[[1,\"        \"],[8,[39,19],null,[[\"@label\",\"@value\"],[[28,[37,20],[[28,[37,10],[[30,3,[\"options\",\"label\"]],[28,[37,21],[[28,[37,22],[[30,3,[\"name\"]]],null]],null]],null]],null],[28,[37,16],[[30,0,[\"model\"]],[30,3,[\"name\"]]],null]]],null],[1,\"\\n      \"]],[]]]],[]]]],[3]],null],[1,\"  \"],[13],[1,\"\\n\"]],[]]]],[\"p\",\"attr\",\"attr\"],false,[\"page-header\",\"key-value-header\",\"hash\",\"if\",\"eq\",\"toolbar\",\"toolbar-actions\",\"action\",\"toolbar-secret-link\",\"concat\",\"or\",\"message-error\",\"namespace-reminder\",\"each\",\"-track-array\",\"and\",\"get\",\"form-field\",\"secret-link\",\"info-table-row\",\"capitalize\",\"humanize\",\"dasherize\",\"stringify\"]]",
    "moduleName": "vault/templates/components/alphabet-edit.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/auth-button-auth0", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <div class="is-flex-v-centered auth-button-type-auth0">
    <div class="auth-button-tile is-flex-column is-flex-v-centered">
      {{! template-lint-disable no-forbidden-elements }}
      <svg height="20" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 193.71 216.56">
        <defs>
          <style>.cls-1{fill:#eb5424;}</style>
        </defs>
        <path
          class="cls-1"
          d="M189,66.92,167.22,0H96.85L118.6,66.92ZM96.85,0H26.49L4.75,66.92H75.11ZM4.75,66.92Zm0,0h0A96.85,96.85,0,0,0,39.93,175.2l21.74-66.92Zm184.21,0h0L132,108.28l21.74,66.92h0A96.85,96.85,0,0,0,189,66.92ZM39.93,175.2h0l56.93,41.36,56.92-41.36L96.85,133.84Z"
        >
        </path>
      </svg>
      {{! template-lint-enable no-forbidden-elements }}
    </div>
    <div class="text">
      Sign in with Auth0
    </div>
  </div>
  */
  {
    "id": "p9KUVUmQ",
    "block": "[[[10,0],[14,0,\"is-flex-v-centered auth-button-type-auth0\"],[12],[1,\"\\n  \"],[10,0],[14,0,\"auth-button-tile is-flex-column is-flex-v-centered\"],[12],[1,\"\\n\"],[1,\"    \"],[10,\"svg\"],[14,\"height\",\"20\"],[14,\"xmlns\",\"http://www.w3.org/2000/svg\",\"http://www.w3.org/2000/xmlns/\"],[14,\"viewBox\",\"0 0 193.71 216.56\"],[12],[1,\"\\n      \"],[10,\"defs\"],[12],[1,\"\\n        \"],[10,\"style\"],[12],[1,\".cls-1{fill:#eb5424;}\"],[13],[1,\"\\n      \"],[13],[1,\"\\n      \"],[10,\"path\"],[14,0,\"cls-1\"],[14,\"d\",\"M189,66.92,167.22,0H96.85L118.6,66.92ZM96.85,0H26.49L4.75,66.92H75.11ZM4.75,66.92Zm0,0h0A96.85,96.85,0,0,0,39.93,175.2l21.74-66.92Zm184.21,0h0L132,108.28l21.74,66.92h0A96.85,96.85,0,0,0,189,66.92ZM39.93,175.2h0l56.93,41.36,56.92-41.36L96.85,133.84Z\"],[12],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n\"],[1,\"  \"],[13],[1,\"\\n  \"],[10,0],[14,0,\"text\"],[12],[1,\"\\n    Sign in with Auth0\\n  \"],[13],[1,\"\\n\"],[13]],[],false,[]]",
    "moduleName": "vault/templates/components/auth-button-auth0.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/auth-button-gitlab", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <div class="is-flex-v-centered auth-button-type-gitlab">
    {{! template-lint-disable no-forbidden-elements }}
    <svg class="auth-button-tile" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 586 559">
      <defs>
        <style>.cls-1{fill:#fc6d26;}.cls-2{fill:#e24329;}.cls-3{fill:#fca326;}</style>
      </defs>
      <g id="g44">
        <path
          id="path46"
          class="cls-1"
          d="M461.17,301.83l-18.91-58.12L404.84,128.43a6.47,6.47,0,0,0-12.27,0L355.15,243.64H230.82L193.4,128.43a6.46,6.46,0,0,0-12.26,0L143.78,243.64l-18.91,58.19a12.88,12.88,0,0,0,4.66,14.39L293,435,456.44,316.22a12.9,12.9,0,0,0,4.73-14.39"
        ></path>
      </g>
      <g id="g48">
        <path id="path50" class="cls-2" d="M293,434.91h0l62.16-191.28H230.87L293,434.91Z"></path>
      </g>
      <g id="g56">
        <path id="path58" class="cls-1" d="M293,434.91,230.82,243.63h-87L293,434.91Z"></path>
      </g>
      <g id="g64">
        <path
          id="path66"
          class="cls-3"
          d="M143.75,243.69h0l-18.91,58.12a12.88,12.88,0,0,0,4.66,14.39L293,435,143.75,243.69Z"
        ></path>
      </g>
      <g id="g72">
        <path id="path74" class="cls-2" d="M143.78,243.69h87.11L193.4,128.49a6.47,6.47,0,0,0-12.27,0l-37.35,115.2Z"></path>
      </g>
      <g id="g76">
        <path id="path78" class="cls-1" d="M293,434.91l62.16-191.28H442.3L293,434.91Z"></path>
      </g>
      <g id="g80">
        <path
          id="path82"
          class="cls-3"
          d="M442.24,243.69h0l18.91,58.12a12.85,12.85,0,0,1-4.66,14.39L293,434.91l149.2-191.22Z"
        ></path>
      </g>
      <g id="g84">
        <path id="path86" class="cls-2" d="M442.28,243.69h-87.1l37.42-115.2a6.46,6.46,0,0,1,12.26,0l37.42,115.2Z"></path>
      </g>
    </svg>
    {{! template-lint-enable no-forbidden-elements }}
    <div class="text">
      Sign in with GitLab
    </div>
  </div>
  */
  {
    "id": "r+EoiGen",
    "block": "[[[10,0],[14,0,\"is-flex-v-centered auth-button-type-gitlab\"],[12],[1,\"\\n\"],[1,\"  \"],[10,\"svg\"],[14,0,\"auth-button-tile\"],[14,\"xmlns\",\"http://www.w3.org/2000/svg\",\"http://www.w3.org/2000/xmlns/\"],[14,\"viewBox\",\"0 0 586 559\"],[12],[1,\"\\n    \"],[10,\"defs\"],[12],[1,\"\\n      \"],[10,\"style\"],[12],[1,\".cls-1{fill:#fc6d26;}.cls-2{fill:#e24329;}.cls-3{fill:#fca326;}\"],[13],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,\"g\"],[14,1,\"g44\"],[12],[1,\"\\n      \"],[10,\"path\"],[14,1,\"path46\"],[14,0,\"cls-1\"],[14,\"d\",\"M461.17,301.83l-18.91-58.12L404.84,128.43a6.47,6.47,0,0,0-12.27,0L355.15,243.64H230.82L193.4,128.43a6.46,6.46,0,0,0-12.26,0L143.78,243.64l-18.91,58.19a12.88,12.88,0,0,0,4.66,14.39L293,435,456.44,316.22a12.9,12.9,0,0,0,4.73-14.39\"],[12],[13],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,\"g\"],[14,1,\"g48\"],[12],[1,\"\\n      \"],[10,\"path\"],[14,1,\"path50\"],[14,0,\"cls-2\"],[14,\"d\",\"M293,434.91h0l62.16-191.28H230.87L293,434.91Z\"],[12],[13],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,\"g\"],[14,1,\"g56\"],[12],[1,\"\\n      \"],[10,\"path\"],[14,1,\"path58\"],[14,0,\"cls-1\"],[14,\"d\",\"M293,434.91,230.82,243.63h-87L293,434.91Z\"],[12],[13],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,\"g\"],[14,1,\"g64\"],[12],[1,\"\\n      \"],[10,\"path\"],[14,1,\"path66\"],[14,0,\"cls-3\"],[14,\"d\",\"M143.75,243.69h0l-18.91,58.12a12.88,12.88,0,0,0,4.66,14.39L293,435,143.75,243.69Z\"],[12],[13],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,\"g\"],[14,1,\"g72\"],[12],[1,\"\\n      \"],[10,\"path\"],[14,1,\"path74\"],[14,0,\"cls-2\"],[14,\"d\",\"M143.78,243.69h87.11L193.4,128.49a6.47,6.47,0,0,0-12.27,0l-37.35,115.2Z\"],[12],[13],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,\"g\"],[14,1,\"g76\"],[12],[1,\"\\n      \"],[10,\"path\"],[14,1,\"path78\"],[14,0,\"cls-1\"],[14,\"d\",\"M293,434.91l62.16-191.28H442.3L293,434.91Z\"],[12],[13],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,\"g\"],[14,1,\"g80\"],[12],[1,\"\\n      \"],[10,\"path\"],[14,1,\"path82\"],[14,0,\"cls-3\"],[14,\"d\",\"M442.24,243.69h0l18.91,58.12a12.85,12.85,0,0,1-4.66,14.39L293,434.91l149.2-191.22Z\"],[12],[13],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,\"g\"],[14,1,\"g84\"],[12],[1,\"\\n      \"],[10,\"path\"],[14,1,\"path86\"],[14,0,\"cls-2\"],[14,\"d\",\"M442.28,243.69h-87.1l37.42-115.2a6.46,6.46,0,0,1,12.26,0l37.42,115.2Z\"],[12],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"],[1,\"  \"],[10,0],[14,0,\"text\"],[12],[1,\"\\n    Sign in with GitLab\\n  \"],[13],[1,\"\\n\"],[13]],[],false,[]]",
    "moduleName": "vault/templates/components/auth-button-gitlab.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/auth-button-google", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <div class="is-flex-v-centered auth-button-type-google">
    <svg
      width="39"
      height="39"
      xmlns="http://www.w3.org/2000/svg"
      xmlns:xlink="http://www.w3.org/1999/xlink"
      viewBox="0 0 46 46"
    >
      <defs>
        <filter x="-50%" y="-50%" width="200%" height="200%" filterUnits="objectBoundingBox" id="a">
          <feOffset dy="1" in="SourceAlpha" result="shadowOffsetOuter1"></feOffset>
          <feGaussianBlur stdDeviation=".5" in="shadowOffsetOuter1" result="shadowBlurOuter1"></feGaussianBlur>
          <feColorMatrix
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.168 0"
            in="shadowBlurOuter1"
            result="shadowMatrixOuter1"
          ></feColorMatrix>
          <feOffset in="SourceAlpha" result="shadowOffsetOuter2"></feOffset>
          <feGaussianBlur stdDeviation=".5" in="shadowOffsetOuter2" result="shadowBlurOuter2"></feGaussianBlur>
          <feColorMatrix
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.084 0"
            in="shadowBlurOuter2"
            result="shadowMatrixOuter2"
          ></feColorMatrix>
          <feMerge>
            <feMergeNode in="shadowMatrixOuter1"></feMergeNode>
            <feMergeNode in="shadowMatrixOuter2"></feMergeNode>
            <feMergeNode in="SourceGraphic"></feMergeNode>
          </feMerge>
        </filter>
        <rect id="b" width="40" height="40" rx="2"></rect>
        <rect id="c" x="5" y="5" width="38" height="38" rx="1"></rect>
      </defs>
      <g fill="none" fill-rule="evenodd">
        <g transform="translate(3 3)" filter="url(#a)">
          <use fill="#4285F4" xlink:href="#b"></use>
          <use xlink:href="#b"></use>
          <use xlink:href="#b"></use>
          <use xlink:href="#b"></use>
        </g>
        <g transform="translate(-1 -1)">
          <use fill="#FFF" xlink:href="#c"></use>
          <use xlink:href="#c"></use>
          <use xlink:href="#c"></use>
          <use xlink:href="#c"></use>
        </g>
        <path
          d="M31.64 23.20454545c0-.63818181-.0572727-1.25181818-.1636364-1.84090909H23V24.845h4.8436364c-.2086364 1.125-.8427273 2.0781818-1.7959091 2.7163636v2.2581819h2.9086363C30.6581818 28.2527273 31.64 25.9454545 31.64 23.20454545z"
          fill="#4285F4"
        ></path>
        <path
          d="M23 32c2.43 0 4.4672727-.8059091 5.9563636-2.1804545l-2.9086363-2.2581819c-.8059091.54-1.8368182.8590909-3.0477273.8590909-2.34409091 0-4.32818182-1.5831818-5.03590909-3.7104545h-3.00681818v2.3318182C16.43818182 29.9831818 19.48181818 32 23 32z"
          fill="#34A853"
        ></path>
        <path
          d="M17.96409091 24.71c-.18-.54-.28227273-1.11681818-.28227273-1.71 0-.59318182.10227273-1.17.28227273-1.71v-2.33181818h-3.00681818C14.34772727 20.17318182 14 21.54772727 14 23c0 1.4522727.34772727 2.8268182.95727273 4.0418182L17.9640909 24.71z"
          fill="#FBBC05"
        ></path>
        <path
          d="M23 17.57954545c1.3213636 0 2.5077273.45409091 3.4404545 1.3459091l2.5813637-2.58136364C27.4631818 14.89181818 25.4259091 14 23 14c-3.51818182 0-6.56181818 2.01681818-8.04272727 4.95818182L17.9640909 21.29C18.67181818 19.16272727 20.65590909 17.57954545 23 17.57954545z"
          fill="#EA4335"
        ></path>
        <path d="M14 14h18v18H14V14z"></path>
      </g>
    </svg>
  
    <div class="is-flex-1 text">
      Sign in with Google
    </div>
  </div>
  */
  {
    "id": "7fF/wuou",
    "block": "[[[10,0],[14,0,\"is-flex-v-centered auth-button-type-google\"],[12],[1,\"\\n  \"],[10,\"svg\"],[14,\"width\",\"39\"],[14,\"height\",\"39\"],[14,\"xmlns\",\"http://www.w3.org/2000/svg\",\"http://www.w3.org/2000/xmlns/\"],[14,\"xmlns:xlink\",\"http://www.w3.org/1999/xlink\",\"http://www.w3.org/2000/xmlns/\"],[14,\"viewBox\",\"0 0 46 46\"],[12],[1,\"\\n    \"],[10,\"defs\"],[12],[1,\"\\n      \"],[10,\"filter\"],[14,\"x\",\"-50%\"],[14,\"y\",\"-50%\"],[14,\"width\",\"200%\"],[14,\"height\",\"200%\"],[14,\"filterUnits\",\"objectBoundingBox\"],[14,1,\"a\"],[12],[1,\"\\n        \"],[10,\"feOffset\"],[14,\"dy\",\"1\"],[14,\"in\",\"SourceAlpha\"],[14,\"result\",\"shadowOffsetOuter1\"],[12],[13],[1,\"\\n        \"],[10,\"feGaussianBlur\"],[14,\"stdDeviation\",\".5\"],[14,\"in\",\"shadowOffsetOuter1\"],[14,\"result\",\"shadowBlurOuter1\"],[12],[13],[1,\"\\n        \"],[10,\"feColorMatrix\"],[14,\"values\",\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.168 0\"],[14,\"in\",\"shadowBlurOuter1\"],[14,\"result\",\"shadowMatrixOuter1\"],[12],[13],[1,\"\\n        \"],[10,\"feOffset\"],[14,\"in\",\"SourceAlpha\"],[14,\"result\",\"shadowOffsetOuter2\"],[12],[13],[1,\"\\n        \"],[10,\"feGaussianBlur\"],[14,\"stdDeviation\",\".5\"],[14,\"in\",\"shadowOffsetOuter2\"],[14,\"result\",\"shadowBlurOuter2\"],[12],[13],[1,\"\\n        \"],[10,\"feColorMatrix\"],[14,\"values\",\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.084 0\"],[14,\"in\",\"shadowBlurOuter2\"],[14,\"result\",\"shadowMatrixOuter2\"],[12],[13],[1,\"\\n        \"],[10,\"feMerge\"],[12],[1,\"\\n          \"],[10,\"feMergeNode\"],[14,\"in\",\"shadowMatrixOuter1\"],[12],[13],[1,\"\\n          \"],[10,\"feMergeNode\"],[14,\"in\",\"shadowMatrixOuter2\"],[12],[13],[1,\"\\n          \"],[10,\"feMergeNode\"],[14,\"in\",\"SourceGraphic\"],[12],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n      \"],[10,\"rect\"],[14,1,\"b\"],[14,\"width\",\"40\"],[14,\"height\",\"40\"],[14,\"rx\",\"2\"],[12],[13],[1,\"\\n      \"],[10,\"rect\"],[14,1,\"c\"],[14,\"x\",\"5\"],[14,\"y\",\"5\"],[14,\"width\",\"38\"],[14,\"height\",\"38\"],[14,\"rx\",\"1\"],[12],[13],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,\"g\"],[14,\"fill\",\"none\"],[14,\"fill-rule\",\"evenodd\"],[12],[1,\"\\n      \"],[10,\"g\"],[14,\"transform\",\"translate(3 3)\"],[14,\"filter\",\"url(#a)\"],[12],[1,\"\\n        \"],[10,\"use\"],[14,\"fill\",\"#4285F4\"],[14,\"xlink:href\",\"#b\",\"http://www.w3.org/1999/xlink\"],[12],[13],[1,\"\\n        \"],[10,\"use\"],[14,\"xlink:href\",\"#b\",\"http://www.w3.org/1999/xlink\"],[12],[13],[1,\"\\n        \"],[10,\"use\"],[14,\"xlink:href\",\"#b\",\"http://www.w3.org/1999/xlink\"],[12],[13],[1,\"\\n        \"],[10,\"use\"],[14,\"xlink:href\",\"#b\",\"http://www.w3.org/1999/xlink\"],[12],[13],[1,\"\\n      \"],[13],[1,\"\\n      \"],[10,\"g\"],[14,\"transform\",\"translate(-1 -1)\"],[12],[1,\"\\n        \"],[10,\"use\"],[14,\"fill\",\"#FFF\"],[14,\"xlink:href\",\"#c\",\"http://www.w3.org/1999/xlink\"],[12],[13],[1,\"\\n        \"],[10,\"use\"],[14,\"xlink:href\",\"#c\",\"http://www.w3.org/1999/xlink\"],[12],[13],[1,\"\\n        \"],[10,\"use\"],[14,\"xlink:href\",\"#c\",\"http://www.w3.org/1999/xlink\"],[12],[13],[1,\"\\n        \"],[10,\"use\"],[14,\"xlink:href\",\"#c\",\"http://www.w3.org/1999/xlink\"],[12],[13],[1,\"\\n      \"],[13],[1,\"\\n      \"],[10,\"path\"],[14,\"d\",\"M31.64 23.20454545c0-.63818181-.0572727-1.25181818-.1636364-1.84090909H23V24.845h4.8436364c-.2086364 1.125-.8427273 2.0781818-1.7959091 2.7163636v2.2581819h2.9086363C30.6581818 28.2527273 31.64 25.9454545 31.64 23.20454545z\"],[14,\"fill\",\"#4285F4\"],[12],[13],[1,\"\\n      \"],[10,\"path\"],[14,\"d\",\"M23 32c2.43 0 4.4672727-.8059091 5.9563636-2.1804545l-2.9086363-2.2581819c-.8059091.54-1.8368182.8590909-3.0477273.8590909-2.34409091 0-4.32818182-1.5831818-5.03590909-3.7104545h-3.00681818v2.3318182C16.43818182 29.9831818 19.48181818 32 23 32z\"],[14,\"fill\",\"#34A853\"],[12],[13],[1,\"\\n      \"],[10,\"path\"],[14,\"d\",\"M17.96409091 24.71c-.18-.54-.28227273-1.11681818-.28227273-1.71 0-.59318182.10227273-1.17.28227273-1.71v-2.33181818h-3.00681818C14.34772727 20.17318182 14 21.54772727 14 23c0 1.4522727.34772727 2.8268182.95727273 4.0418182L17.9640909 24.71z\"],[14,\"fill\",\"#FBBC05\"],[12],[13],[1,\"\\n      \"],[10,\"path\"],[14,\"d\",\"M23 17.57954545c1.3213636 0 2.5077273.45409091 3.4404545 1.3459091l2.5813637-2.58136364C27.4631818 14.89181818 25.4259091 14 23 14c-3.51818182 0-6.56181818 2.01681818-8.04272727 4.95818182L17.9640909 21.29C18.67181818 19.16272727 20.65590909 17.57954545 23 17.57954545z\"],[14,\"fill\",\"#EA4335\"],[12],[13],[1,\"\\n      \"],[10,\"path\"],[14,\"d\",\"M14 14h18v18H14V14z\"],[12],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\\n  \"],[10,0],[14,0,\"is-flex-1 text\"],[12],[1,\"\\n    Sign in with Google\\n  \"],[13],[1,\"\\n\"],[13]],[],false,[]]",
    "moduleName": "vault/templates/components/auth-button-google.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/auth-config-form/config", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <form {{action (perform this.saveModel) on="submit"}}>
    <div class="box is-sideless is-fullwidth is-marginless">
      <NamespaceReminder @mode="save" @noun="Auth Method" />
      <MessageError @model={{this.model}} />
      {{#if this.model.attrs}}
        {{#each this.model.attrs as |attr|}}
          <FormField data-test-field={{true}} @attr={{attr}} @model={{@model}} />
        {{/each}}
      {{else if this.model.fieldGroups}}
        <FormFieldGroups @model={{this.model}} @mode={{this.mode}} />
      {{/if}}
    </div>
    <div class="field is-grouped box is-fullwidth is-bottomless">
      <button
        type="submit"
        data-test-save-config="true"
        class="button is-primary {{if this.saveModel.isRunning 'loading'}}"
        disabled={{this.saveModel.isRunning}}
      >
        Save
      </button>
    </div>
  </form>
  */
  {
    "id": "JWddB7lU",
    "block": "[[[11,\"form\"],[4,[38,0],[[30,0],[28,[37,1],[[30,0,[\"saveModel\"]]],null]],[[\"on\"],[\"submit\"]]],[12],[1,\"\\n  \"],[10,0],[14,0,\"box is-sideless is-fullwidth is-marginless\"],[12],[1,\"\\n    \"],[8,[39,2],null,[[\"@mode\",\"@noun\"],[\"save\",\"Auth Method\"]],null],[1,\"\\n    \"],[8,[39,3],null,[[\"@model\"],[[30,0,[\"model\"]]]],null],[1,\"\\n\"],[41,[30,0,[\"model\",\"attrs\"]],[[[42,[28,[37,6],[[28,[37,6],[[30,0,[\"model\",\"attrs\"]]],null]],null],null,[[[1,\"        \"],[8,[39,7],[[16,\"data-test-field\",true]],[[\"@attr\",\"@model\"],[[30,1],[30,2]]],null],[1,\"\\n\"]],[1]],null]],[]],[[[41,[30,0,[\"model\",\"fieldGroups\"]],[[[1,\"      \"],[8,[39,8],null,[[\"@model\",\"@mode\"],[[30,0,[\"model\"]],[30,0,[\"mode\"]]]],null],[1,\"\\n    \"]],[]],null]],[]]],[1,\"  \"],[13],[1,\"\\n  \"],[10,0],[14,0,\"field is-grouped box is-fullwidth is-bottomless\"],[12],[1,\"\\n    \"],[10,\"button\"],[14,\"data-test-save-config\",\"true\"],[15,0,[29,[\"button is-primary \",[52,[30,0,[\"saveModel\",\"isRunning\"]],\"loading\"]]]],[15,\"disabled\",[30,0,[\"saveModel\",\"isRunning\"]]],[14,4,\"submit\"],[12],[1,\"\\n      Save\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"],[13]],[\"attr\",\"@model\"],false,[\"action\",\"perform\",\"namespace-reminder\",\"message-error\",\"if\",\"each\",\"-track-array\",\"form-field\",\"form-field-groups\"]]",
    "moduleName": "vault/templates/components/auth-config-form/config.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/auth-config-form/options", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <form {{action (perform this.saveModel) on="submit"}}>
    <div class="box is-sideless is-fullwidth is-marginless">
      <MessageError @model={{this.model}} @errorMessage={{this.model.errorMessage}} />
      <NamespaceReminder @mode="save" @noun="Auth Method" />
      {{#each this.model.tuneAttrs as |attr|}}
        <FormField data-test-field @attr={{attr}} @model={{this.model}} />
      {{/each}}
    </div>
    <div class="field is-grouped box is-fullwidth is-bottomless">
      <button
        type="submit"
        data-test-save-config="true"
        class="button is-primary {{if this.saveModel.isRunning 'loading'}}"
        disabled={{this.saveModel.isRunning}}
      >
        Update Options
      </button>
    </div>
  </form>
  */
  {
    "id": "LvoVDi2C",
    "block": "[[[11,\"form\"],[4,[38,0],[[30,0],[28,[37,1],[[30,0,[\"saveModel\"]]],null]],[[\"on\"],[\"submit\"]]],[12],[1,\"\\n  \"],[10,0],[14,0,\"box is-sideless is-fullwidth is-marginless\"],[12],[1,\"\\n    \"],[8,[39,2],null,[[\"@model\",\"@errorMessage\"],[[30,0,[\"model\"]],[30,0,[\"model\",\"errorMessage\"]]]],null],[1,\"\\n    \"],[8,[39,3],null,[[\"@mode\",\"@noun\"],[\"save\",\"Auth Method\"]],null],[1,\"\\n\"],[42,[28,[37,5],[[28,[37,5],[[30,0,[\"model\",\"tuneAttrs\"]]],null]],null],null,[[[1,\"      \"],[8,[39,6],[[24,\"data-test-field\",\"\"]],[[\"@attr\",\"@model\"],[[30,1],[30,0,[\"model\"]]]],null],[1,\"\\n\"]],[1]],null],[1,\"  \"],[13],[1,\"\\n  \"],[10,0],[14,0,\"field is-grouped box is-fullwidth is-bottomless\"],[12],[1,\"\\n    \"],[10,\"button\"],[14,\"data-test-save-config\",\"true\"],[15,0,[29,[\"button is-primary \",[52,[30,0,[\"saveModel\",\"isRunning\"]],\"loading\"]]]],[15,\"disabled\",[30,0,[\"saveModel\",\"isRunning\"]]],[14,4,\"submit\"],[12],[1,\"\\n      Update Options\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"],[13]],[\"attr\"],false,[\"action\",\"perform\",\"message-error\",\"namespace-reminder\",\"each\",\"-track-array\",\"form-field\",\"if\"]]",
    "moduleName": "vault/templates/components/auth-config-form/options.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/auth-form-options", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{#unless this.selectedAuthIsPath}}
    <div class="box has-slim-padding is-shadowless">
      <ToggleButton @isOpen={{this.isOpen}} @onClick={{fn (mut this.isOpen)}} data-test-auth-form-options-toggle />
      {{#if this.isOpen}}
        <div class="field">
          <label for="custom-path" class="is-label">
            Mount path
          </label>
          <div class="control">
            <input
              type="text"
              name="custom-path"
              id="custom-path"
              class="input"
              value={{@customPath}}
              oninput={{action @onPathChange value="target.value"}}
              data-test-auth-form-mount-path
            />
          </div>
          <AlertInline
            @sizeSmall={{true}}
            @paddingTop={{true}}
            @type="info"
            @message="If this backend was mounted using a non-default path, enter it here."
          />
        </div>
      {{/if}}
    </div>
  {{/unless}}
  */
  {
    "id": "QEcS5sYG",
    "block": "[[[41,[51,[30,0,[\"selectedAuthIsPath\"]]],[[[1,\"  \"],[10,0],[14,0,\"box has-slim-padding is-shadowless\"],[12],[1,\"\\n    \"],[8,[39,1],[[24,\"data-test-auth-form-options-toggle\",\"\"]],[[\"@isOpen\",\"@onClick\"],[[30,0,[\"isOpen\"]],[28,[37,2],[[28,[37,3],[[30,0,[\"isOpen\"]]],null]],null]]],null],[1,\"\\n\"],[41,[30,0,[\"isOpen\"]],[[[1,\"      \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n        \"],[10,\"label\"],[14,\"for\",\"custom-path\"],[14,0,\"is-label\"],[12],[1,\"\\n          Mount path\\n        \"],[13],[1,\"\\n        \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n          \"],[10,\"input\"],[14,3,\"custom-path\"],[14,1,\"custom-path\"],[14,0,\"input\"],[15,2,[30,1]],[15,\"oninput\",[28,[37,5],[[30,0],[30,2]],[[\"value\"],[\"target.value\"]]]],[14,\"data-test-auth-form-mount-path\",\"\"],[14,4,\"text\"],[12],[13],[1,\"\\n        \"],[13],[1,\"\\n        \"],[8,[39,6],null,[[\"@sizeSmall\",\"@paddingTop\",\"@type\",\"@message\"],[true,true,\"info\",\"If this backend was mounted using a non-default path, enter it here.\"]],null],[1,\"\\n      \"],[13],[1,\"\\n\"]],[]],null],[1,\"  \"],[13],[1,\"\\n\"]],[]],null]],[\"@customPath\",\"@onPathChange\"],false,[\"unless\",\"toggle-button\",\"fn\",\"mut\",\"if\",\"action\",\"alert-inline\"]]",
    "moduleName": "vault/templates/components/auth-form-options.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/auth-form", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <div class="auth-form" data-test-auth-form>
    {{#if (and this.waitingForOktaNumberChallenge (not this.cancelAuthForOktaNumberChallenge))}}
      <OktaNumberChallenge
        @correctAnswer={{this.oktaNumberChallengeAnswer}}
        @hasError={{(not-eq this.error null)}}
        @onReturnToLogin={{action "returnToLoginFromOktaNumberChallenge"}}
      />
    {{else}}
      {{#if this.hasMethodsWithPath}}
        <nav class="tabs is-marginless">
          <ul>
            {{#each this.methodsToShow as |method|}}
              {{#let (or method.path method.type) as |methodKey|}}
                <li
                  class={{if
                    (and
                      this.selectedAuthIsPath (eq (or this.selectedAuthBackend.path this.selectedAuthBackend.type) methodKey)
                    )
                    "is-active"
                    ""
                  }}
                  data-test-auth-method={{method.id}}
                >
                  <LinkTo
                    @route="vault.cluster.auth"
                    @model={{this.cluster.name}}
                    @query={{hash with=methodKey}}
                    data-test-auth-method-link={{method.type}}
                  >
                    {{or method.id (capitalize method.type)}}
                  </LinkTo>
                </li>
              {{/let}}
            {{/each}}
            <li class={{unless this.selectedAuthIsPath "is-active" ""}} data-test-auth-method>
              <LinkTo
                @route="vault.cluster.auth"
                @model={{this.cluster.name}}
                @query={{hash with="token"}}
                data-test-auth-method-link="other"
              >
                Other
              </LinkTo>
            </li>
          </ul>
        </nav>
      {{/if}}
      <div class="box is-marginless is-shadowless">
        <MessageError
          @errorMessage={{if (and this.cluster.standby this.hasCSPError) this.cspErrorText this.error}}
          data-test-auth-error
        />
        <div class="has-bottom-margin-s">
          <p class="is-label">{{this.selectedAuthBackend.path}}</p>
          <span class="description has-text-grey" data-test-description={{true}}>
            {{this.selectedAuthBackend.mountDescription}}
          </span>
        </div>
        {{#if (or (not this.hasMethodsWithPath) (not this.selectedAuthIsPath))}}
          <Select
            @label="Method"
            @name="auth-method"
            @options={{this.authMethods}}
            @valueAttribute={{"type"}}
            @labelAttribute={{"typeDisplay"}}
            @isFullwidth={{true}}
            @selectedValue={{this.selectedAuth}}
            @onChange={{action (mut this.selectedAuth)}}
          />
        {{/if}}
        {{#if (or (eq this.selectedAuthBackend.type "jwt") (eq this.selectedAuthBackend.type "oidc"))}}
          <AuthJwt
            @onError={{action "handleError"}}
            @onLoading={{action (mut this.isLoading)}}
            @namespace={{this.namespace}}
            @onNamespace={{action (mut this.namespace)}}
            @onSubmit={{action "doSubmit"}}
            @onRoleName={{action (mut this.roleName)}}
            @roleName={{this.roleName}}
            @selectedAuthType={{this.selectedAuthBackend.type}}
            @selectedAuthPath={{or this.customPath this.selectedAuthBackend.id}}
            @disabled={{or this.authenticate.isRunning this.isLoading}}
          >
            <AuthFormOptions
              @customPath={{this.customPath}}
              @onPathChange={{action (mut this.customPath)}}
              @selectedAuthIsPath={{this.selectedAuthIsPath}}
            />
          </AuthJwt>
        {{else}}
          <form id="auth-form" onsubmit={{action "doSubmit" null}}>
            {{#if (eq this.providerName "github")}}
              <div class="field">
                <label for="token" class="is-label">GitHub token</label>
                <div class="control">
                  <Input
                    @type="password"
                    @value={{this.token}}
                    name="token"
                    id="token"
                    class="input"
                    data-test-token={{true}}
                    autocomplete="off"
                    spellcheck="false"
                  />
                </div>
              </div>
            {{else if (eq this.providerName "token")}}
              <div class="field">
                <label for="token" class="is-label">Token</label>
                <div class="control">
                  <Input
                    @type="password"
                    @value={{this.token}}
                    name="token"
                    class="input"
                    autocomplete="off"
                    spellcheck="false"
                    data-test-token={{true}}
                  />
                </div>
              </div>
            {{else}}
              <div class="field">
                <label for="username" class="is-label">Username</label>
                <div class="control">
                  <Input
                    @value={{this.username}}
                    name="username"
                    id="username"
                    class="input"
                    autocomplete="off"
                    spellcheck="false"
                    data-test-username={{true}}
                  />
                </div>
              </div>
              <div class="field">
                <label for="password" class="is-label">Password</label>
                <div class="control">
                  <Input
                    @value={{this.password}}
                    name="password"
                    id="password"
                    @type="password"
                    class="input"
                    autocomplete="off"
                    spellcheck="false"
                    data-test-password={{true}}
                  />
                </div>
              </div>
            {{/if}}
            {{#if (not-eq this.selectedAuthBackend.type "token")}}
              <AuthFormOptions
                @customPath={{this.customPath}}
                @onPathChange={{action (mut this.customPath)}}
                @selectedAuthIsPath={{this.selectedAuthIsPath}}
              />
            {{/if}}
            <button
              data-test-auth-submit={{true}}
              type="submit"
              disabled={{this.authenticate.isRunning}}
              class="button is-primary {{if this.authenticate.isRunning 'is-loading'}}"
              id="auth-submit"
            >
              Sign In
            </button>
            {{#if (and this.delayAuthMessageReminder.isIdle this.showLoading)}}
              <AlertInline
                @paddingTop={{true}}
                @sizeSmall={{true}}
                @type="info"
                @message="If login takes longer than usual, you may need to check your device for an MFA notification, or contact your administrator if login times out."
                data-test-auth-message="push"
              />
            {{/if}}
          </form>
        {{/if}}
      </div>
    {{/if}}
  </div>
  */
  {
    "id": "3fG/hhP/",
    "block": "[[[10,0],[14,0,\"auth-form\"],[14,\"data-test-auth-form\",\"\"],[12],[1,\"\\n\"],[41,[28,[37,1],[[30,0,[\"waitingForOktaNumberChallenge\"]],[28,[37,2],[[30,0,[\"cancelAuthForOktaNumberChallenge\"]]],null]],null],[[[1,\"    \"],[8,[39,3],null,[[\"@correctAnswer\",\"@hasError\",\"@onReturnToLogin\"],[[30,0,[\"oktaNumberChallengeAnswer\"]],[28,[37,4],[[30,0,[\"error\"]],null],null],[28,[37,5],[[30,0],\"returnToLoginFromOktaNumberChallenge\"],null]]],null],[1,\"\\n\"]],[]],[[[41,[30,0,[\"hasMethodsWithPath\"]],[[[1,\"      \"],[10,\"nav\"],[14,0,\"tabs is-marginless\"],[12],[1,\"\\n        \"],[10,\"ul\"],[12],[1,\"\\n\"],[42,[28,[37,7],[[28,[37,7],[[30,0,[\"methodsToShow\"]]],null]],null],null,[[[44,[[28,[37,9],[[30,1,[\"path\"]],[30,1,[\"type\"]]],null]],[[[1,\"              \"],[10,\"li\"],[15,0,[52,[28,[37,1],[[30,0,[\"selectedAuthIsPath\"]],[28,[37,10],[[28,[37,9],[[30,0,[\"selectedAuthBackend\",\"path\"]],[30,0,[\"selectedAuthBackend\",\"type\"]]],null],[30,2]],null]],null],\"is-active\",\"\"]],[15,\"data-test-auth-method\",[30,1,[\"id\"]]],[12],[1,\"\\n                \"],[8,[39,11],[[16,\"data-test-auth-method-link\",[30,1,[\"type\"]]]],[[\"@route\",\"@model\",\"@query\"],[\"vault.cluster.auth\",[30,0,[\"cluster\",\"name\"]],[28,[37,12],null,[[\"with\"],[[30,2]]]]]],[[\"default\"],[[[[1,\"\\n                  \"],[1,[28,[35,9],[[30,1,[\"id\"]],[28,[37,13],[[30,1,[\"type\"]]],null]],null]],[1,\"\\n                \"]],[]]]]],[1,\"\\n              \"],[13],[1,\"\\n\"]],[2]]]],[1]],null],[1,\"          \"],[10,\"li\"],[15,0,[52,[51,[30,0,[\"selectedAuthIsPath\"]]],\"is-active\",\"\"]],[14,\"data-test-auth-method\",\"\"],[12],[1,\"\\n            \"],[8,[39,11],[[24,\"data-test-auth-method-link\",\"other\"]],[[\"@route\",\"@model\",\"@query\"],[\"vault.cluster.auth\",[30,0,[\"cluster\",\"name\"]],[28,[37,12],null,[[\"with\"],[\"token\"]]]]],[[\"default\"],[[[[1,\"\\n              Other\\n            \"]],[]]]]],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n\"]],[]],null],[1,\"    \"],[10,0],[14,0,\"box is-marginless is-shadowless\"],[12],[1,\"\\n      \"],[8,[39,15],[[24,\"data-test-auth-error\",\"\"]],[[\"@errorMessage\"],[[52,[28,[37,1],[[30,0,[\"cluster\",\"standby\"]],[30,0,[\"hasCSPError\"]]],null],[30,0,[\"cspErrorText\"]],[30,0,[\"error\"]]]]],null],[1,\"\\n      \"],[10,0],[14,0,\"has-bottom-margin-s\"],[12],[1,\"\\n        \"],[10,2],[14,0,\"is-label\"],[12],[1,[30,0,[\"selectedAuthBackend\",\"path\"]]],[13],[1,\"\\n        \"],[10,1],[14,0,\"description has-text-grey\"],[15,\"data-test-description\",true],[12],[1,\"\\n          \"],[1,[30,0,[\"selectedAuthBackend\",\"mountDescription\"]]],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n\"],[41,[28,[37,9],[[28,[37,2],[[30,0,[\"hasMethodsWithPath\"]]],null],[28,[37,2],[[30,0,[\"selectedAuthIsPath\"]]],null]],null],[[[1,\"        \"],[8,[39,16],null,[[\"@label\",\"@name\",\"@options\",\"@valueAttribute\",\"@labelAttribute\",\"@isFullwidth\",\"@selectedValue\",\"@onChange\"],[\"Method\",\"auth-method\",[30,0,[\"authMethods\"]],\"type\",\"typeDisplay\",true,[30,0,[\"selectedAuth\"]],[28,[37,5],[[30,0],[28,[37,17],[[30,0,[\"selectedAuth\"]]],null]],null]]],null],[1,\"\\n\"]],[]],null],[41,[28,[37,9],[[28,[37,10],[[30,0,[\"selectedAuthBackend\",\"type\"]],\"jwt\"],null],[28,[37,10],[[30,0,[\"selectedAuthBackend\",\"type\"]],\"oidc\"],null]],null],[[[1,\"        \"],[8,[39,18],null,[[\"@onError\",\"@onLoading\",\"@namespace\",\"@onNamespace\",\"@onSubmit\",\"@onRoleName\",\"@roleName\",\"@selectedAuthType\",\"@selectedAuthPath\",\"@disabled\"],[[28,[37,5],[[30,0],\"handleError\"],null],[28,[37,5],[[30,0],[28,[37,17],[[30,0,[\"isLoading\"]]],null]],null],[30,0,[\"namespace\"]],[28,[37,5],[[30,0],[28,[37,17],[[30,0,[\"namespace\"]]],null]],null],[28,[37,5],[[30,0],\"doSubmit\"],null],[28,[37,5],[[30,0],[28,[37,17],[[30,0,[\"roleName\"]]],null]],null],[30,0,[\"roleName\"]],[30,0,[\"selectedAuthBackend\",\"type\"]],[28,[37,9],[[30,0,[\"customPath\"]],[30,0,[\"selectedAuthBackend\",\"id\"]]],null],[28,[37,9],[[30,0,[\"authenticate\",\"isRunning\"]],[30,0,[\"isLoading\"]]],null]]],[[\"default\"],[[[[1,\"\\n          \"],[8,[39,19],null,[[\"@customPath\",\"@onPathChange\",\"@selectedAuthIsPath\"],[[30,0,[\"customPath\"]],[28,[37,5],[[30,0],[28,[37,17],[[30,0,[\"customPath\"]]],null]],null],[30,0,[\"selectedAuthIsPath\"]]]],null],[1,\"\\n        \"]],[]]]]],[1,\"\\n\"]],[]],[[[1,\"        \"],[10,\"form\"],[14,1,\"auth-form\"],[15,\"onsubmit\",[28,[37,5],[[30,0],\"doSubmit\",null],null]],[12],[1,\"\\n\"],[41,[28,[37,10],[[30,0,[\"providerName\"]],\"github\"],null],[[[1,\"            \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n              \"],[10,\"label\"],[14,\"for\",\"token\"],[14,0,\"is-label\"],[12],[1,\"GitHub token\"],[13],[1,\"\\n              \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n                \"],[8,[39,20],[[24,3,\"token\"],[24,1,\"token\"],[24,0,\"input\"],[16,\"data-test-token\",true],[24,\"autocomplete\",\"off\"],[24,\"spellcheck\",\"false\"]],[[\"@type\",\"@value\"],[\"password\",[30,0,[\"token\"]]]],null],[1,\"\\n              \"],[13],[1,\"\\n            \"],[13],[1,\"\\n\"]],[]],[[[41,[28,[37,10],[[30,0,[\"providerName\"]],\"token\"],null],[[[1,\"            \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n              \"],[10,\"label\"],[14,\"for\",\"token\"],[14,0,\"is-label\"],[12],[1,\"Token\"],[13],[1,\"\\n              \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n                \"],[8,[39,20],[[24,3,\"token\"],[24,0,\"input\"],[24,\"autocomplete\",\"off\"],[24,\"spellcheck\",\"false\"],[16,\"data-test-token\",true]],[[\"@type\",\"@value\"],[\"password\",[30,0,[\"token\"]]]],null],[1,\"\\n              \"],[13],[1,\"\\n            \"],[13],[1,\"\\n\"]],[]],[[[1,\"            \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n              \"],[10,\"label\"],[14,\"for\",\"username\"],[14,0,\"is-label\"],[12],[1,\"Username\"],[13],[1,\"\\n              \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n                \"],[8,[39,20],[[24,3,\"username\"],[24,1,\"username\"],[24,0,\"input\"],[24,\"autocomplete\",\"off\"],[24,\"spellcheck\",\"false\"],[16,\"data-test-username\",true]],[[\"@value\"],[[30,0,[\"username\"]]]],null],[1,\"\\n              \"],[13],[1,\"\\n            \"],[13],[1,\"\\n            \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n              \"],[10,\"label\"],[14,\"for\",\"password\"],[14,0,\"is-label\"],[12],[1,\"Password\"],[13],[1,\"\\n              \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n                \"],[8,[39,20],[[24,3,\"password\"],[24,1,\"password\"],[24,0,\"input\"],[24,\"autocomplete\",\"off\"],[24,\"spellcheck\",\"false\"],[16,\"data-test-password\",true]],[[\"@value\",\"@type\"],[[30,0,[\"password\"]],\"password\"]],null],[1,\"\\n              \"],[13],[1,\"\\n            \"],[13],[1,\"\\n          \"]],[]]]],[]]],[41,[28,[37,4],[[30,0,[\"selectedAuthBackend\",\"type\"]],\"token\"],null],[[[1,\"            \"],[8,[39,19],null,[[\"@customPath\",\"@onPathChange\",\"@selectedAuthIsPath\"],[[30,0,[\"customPath\"]],[28,[37,5],[[30,0],[28,[37,17],[[30,0,[\"customPath\"]]],null]],null],[30,0,[\"selectedAuthIsPath\"]]]],null],[1,\"\\n\"]],[]],null],[1,\"          \"],[10,\"button\"],[15,\"data-test-auth-submit\",true],[15,\"disabled\",[30,0,[\"authenticate\",\"isRunning\"]]],[15,0,[29,[\"button is-primary \",[52,[30,0,[\"authenticate\",\"isRunning\"]],\"is-loading\"]]]],[14,1,\"auth-submit\"],[14,4,\"submit\"],[12],[1,\"\\n            Sign In\\n          \"],[13],[1,\"\\n\"],[41,[28,[37,1],[[30,0,[\"delayAuthMessageReminder\",\"isIdle\"]],[30,0,[\"showLoading\"]]],null],[[[1,\"            \"],[8,[39,21],[[24,\"data-test-auth-message\",\"push\"]],[[\"@paddingTop\",\"@sizeSmall\",\"@type\",\"@message\"],[true,true,\"info\",\"If login takes longer than usual, you may need to check your device for an MFA notification, or contact your administrator if login times out.\"]],null],[1,\"\\n\"]],[]],null],[1,\"        \"],[13],[1,\"\\n\"]],[]]],[1,\"    \"],[13],[1,\"\\n\"]],[]]],[13]],[\"method\",\"methodKey\"],false,[\"if\",\"and\",\"not\",\"okta-number-challenge\",\"not-eq\",\"action\",\"each\",\"-track-array\",\"let\",\"or\",\"eq\",\"link-to\",\"hash\",\"capitalize\",\"unless\",\"message-error\",\"select\",\"mut\",\"auth-jwt\",\"auth-form-options\",\"input\",\"alert-inline\"]]",
    "moduleName": "vault/templates/components/auth-form.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/auth-jwt", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <form id="auth-form" onsubmit={{action (if this.isOIDC "startOIDCAuth" @onSubmit) (hash role=this.roleName jwt=this.jwt)}}>
    <div class="field">
      <label for="role" class="is-label">Role</label>
      <div class="control">
        <input
          value={{@roleName}}
          placeholder="Default"
          oninput={{perform this.fetchRole value="target.value"}}
          autocomplete="off"
          spellcheck="false"
          name="role"
          id="role"
          class="input"
          type="text"
          data-test-role
        />
      </div>
      <AlertInline
        @sizeSmall={{true}}
        @paddingTop={{true}}
        @type="info"
        @message="Leave blank to sign in with the default role if one is configured"
      />
    </div>
    {{#unless this.isOIDC}}
      <div class="field">
        <label for="token" class="is-label">JWT Token</label>
        <div class="control">
          <Input
            @type="password"
            @value={{this.jwt}}
            name="jwt"
            class="input"
            autocomplete="off"
            spellcheck="false"
            data-test-jwt={{true}}
          />
        </div>
      </div>
    {{/unless}}
    <div data-test-yield-content>
      {{yield}}
    </div>
    <button
      data-test-auth-submit={{true}}
      type="submit"
      disabled={{@disabled}}
      class="button is-primary {{if @disabled 'is-loading'}}"
      id="auth-submit"
    >
      {{#if this.isOIDC}}
        {{#if this.role.providerButtonComponent}}
          {{component this.role.providerButtonComponent}}
        {{else}}
          Sign in with
          {{or this.role.providerName "OIDC Provider"}}
        {{/if}}
      {{else}}
        Sign In
      {{/if}}
    </button>
  </form>
  */
  {
    "id": "c8MhY0ph",
    "block": "[[[10,\"form\"],[14,1,\"auth-form\"],[15,\"onsubmit\",[28,[37,0],[[30,0],[52,[30,0,[\"isOIDC\"]],\"startOIDCAuth\",[30,1]],[28,[37,2],null,[[\"role\",\"jwt\"],[[30,0,[\"roleName\"]],[30,0,[\"jwt\"]]]]]],null]],[12],[1,\"\\n  \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n    \"],[10,\"label\"],[14,\"for\",\"role\"],[14,0,\"is-label\"],[12],[1,\"Role\"],[13],[1,\"\\n    \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n      \"],[10,\"input\"],[15,2,[30,2]],[14,\"placeholder\",\"Default\"],[15,\"oninput\",[28,[37,3],[[30,0,[\"fetchRole\"]]],[[\"value\"],[\"target.value\"]]]],[14,\"autocomplete\",\"off\"],[14,\"spellcheck\",\"false\"],[14,3,\"role\"],[14,1,\"role\"],[14,0,\"input\"],[14,\"data-test-role\",\"\"],[14,4,\"text\"],[12],[13],[1,\"\\n    \"],[13],[1,\"\\n    \"],[8,[39,4],null,[[\"@sizeSmall\",\"@paddingTop\",\"@type\",\"@message\"],[true,true,\"info\",\"Leave blank to sign in with the default role if one is configured\"]],null],[1,\"\\n  \"],[13],[1,\"\\n\"],[41,[51,[30,0,[\"isOIDC\"]]],[[[1,\"    \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n      \"],[10,\"label\"],[14,\"for\",\"token\"],[14,0,\"is-label\"],[12],[1,\"JWT Token\"],[13],[1,\"\\n      \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n        \"],[8,[39,6],[[24,3,\"jwt\"],[24,0,\"input\"],[24,\"autocomplete\",\"off\"],[24,\"spellcheck\",\"false\"],[16,\"data-test-jwt\",true]],[[\"@type\",\"@value\"],[\"password\",[30,0,[\"jwt\"]]]],null],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n\"]],[]],null],[1,\"  \"],[10,0],[14,\"data-test-yield-content\",\"\"],[12],[1,\"\\n    \"],[18,4,null],[1,\"\\n  \"],[13],[1,\"\\n  \"],[10,\"button\"],[15,\"data-test-auth-submit\",true],[15,\"disabled\",[30,3]],[15,0,[29,[\"button is-primary \",[52,[30,3],\"is-loading\"]]]],[14,1,\"auth-submit\"],[14,4,\"submit\"],[12],[1,\"\\n\"],[41,[30,0,[\"isOIDC\"]],[[[41,[30,0,[\"role\",\"providerButtonComponent\"]],[[[1,\"        \"],[46,[30,0,[\"role\",\"providerButtonComponent\"]],null,null,null],[1,\"\\n\"]],[]],[[[1,\"        Sign in with\\n        \"],[1,[28,[35,9],[[30,0,[\"role\",\"providerName\"]],\"OIDC Provider\"],null]],[1,\"\\n\"]],[]]]],[]],[[[1,\"      Sign In\\n\"]],[]]],[1,\"  \"],[13],[1,\"\\n\"],[13]],[\"@onSubmit\",\"@roleName\",\"@disabled\",\"&default\"],false,[\"action\",\"if\",\"hash\",\"perform\",\"alert-inline\",\"unless\",\"input\",\"yield\",\"component\",\"or\"]]",
    "moduleName": "vault/templates/components/auth-jwt.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/auth-method/configuration", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <div class="box is-fullwidth is-sideless is-paddingless is-marginless">
    {{#each @model.attrs as |attr|}}
      {{#if (eq attr.type "object")}}
        <InfoTableRow
          @alwaysRender={{not (is-empty-value (get @model attr.name))}}
          @label={{or attr.options.label (to-label attr.name)}}
          @value={{stringify (get @model attr.name)}}
        />
      {{else}}
        <InfoTableRow
          @alwaysRender={{not (is-empty-value (get @model attr.name))}}
          @label={{or attr.options.label (to-label attr.name)}}
          @value={{get @model attr.name}}
        />
      {{/if}}
    {{/each}}
  </div>
  */
  {
    "id": "pUM50xeZ",
    "block": "[[[10,0],[14,0,\"box is-fullwidth is-sideless is-paddingless is-marginless\"],[12],[1,\"\\n\"],[42,[28,[37,1],[[28,[37,1],[[30,1,[\"attrs\"]]],null]],null],null,[[[41,[28,[37,3],[[30,2,[\"type\"]],\"object\"],null],[[[1,\"      \"],[8,[39,4],null,[[\"@alwaysRender\",\"@label\",\"@value\"],[[28,[37,5],[[28,[37,6],[[28,[37,7],[[30,1],[30,2,[\"name\"]]],null]],null]],null],[28,[37,8],[[30,2,[\"options\",\"label\"]],[28,[37,9],[[30,2,[\"name\"]]],null]],null],[28,[37,10],[[28,[37,7],[[30,1],[30,2,[\"name\"]]],null]],null]]],null],[1,\"\\n\"]],[]],[[[1,\"      \"],[8,[39,4],null,[[\"@alwaysRender\",\"@label\",\"@value\"],[[28,[37,5],[[28,[37,6],[[28,[37,7],[[30,1],[30,2,[\"name\"]]],null]],null]],null],[28,[37,8],[[30,2,[\"options\",\"label\"]],[28,[37,9],[[30,2,[\"name\"]]],null]],null],[28,[37,7],[[30,1],[30,2,[\"name\"]]],null]]],null],[1,\"\\n\"]],[]]]],[2]],null],[13]],[\"@model\",\"attr\"],false,[\"each\",\"-track-array\",\"if\",\"eq\",\"info-table-row\",\"not\",\"is-empty-value\",\"get\",\"or\",\"to-label\",\"stringify\"]]",
    "moduleName": "vault/templates/components/auth-method/configuration.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/b64-toggle", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{#if this.isBase64}}
    Decode from base64
  {{else}}
    Encode to base64
  {{/if}}
  */
  {
    "id": "ecVBNJMr",
    "block": "[[[41,[30,0,[\"isBase64\"]],[[[1,\"  Decode from base64\\n\"]],[]],[[[1,\"  Encode to base64\\n\"]],[]]]],[],false,[\"if\"]]",
    "moduleName": "vault/templates/components/b64-toggle.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/backend-configure", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    
  */
  {
    "id": "diYPgUJp",
    "block": "[[],[],false,[]]",
    "moduleName": "vault/templates/components/backend-configure.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/block-error", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <div class="box is-sideless has-background-white-bis has-text-grey has-text-centered">
    {{yield}}
  </div>
  */
  {
    "id": "CVFUFWse",
    "block": "[[[10,0],[14,0,\"box is-sideless has-background-white-bis has-text-grey has-text-centered\"],[12],[1,\"\\n  \"],[18,1,null],[1,\"\\n\"],[13]],[\"&default\"],false,[\"yield\"]]",
    "moduleName": "vault/templates/components/block-error.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/calendar-widget", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <BasicDropdown @class="popup-menu" @horizontalPosition="auto-right" @verticalPosition="below" as |D|>
    <D.Trigger data-test-calendar-widget-trigger class={{concat "toolbar-link" (if D.isOpen " is-active")}} @htmlTag="button">
      {{date-format this.startDate "MMM yyyy"}}
      -
      {{date-format this.endDate "MMM yyyy"}}
      <Chevron @direction="down" @isButton={{true}} />
    </D.Trigger>
    <D.Content @defaultClass={{concat "popup-menu-content calendar-content" (if this.showCalendar " calendar-open")}}>
      <nav class="box menu">
        <div class="calendar-title is-subtitle-gray">
          DATE OPTIONS
        </div>
        <ul class="menu-list">
          <li class="action">
            <button
              data-test-current-month
              class="link link-plain has-text-weight-semibold is-ghost"
              type="button"
              name="currentMonth"
              {{on "click" (fn this.handleDateShortcut D.actions)}}
            >
              Current month
            </button>
          </li>
          <li class="action">
            <button
              data-test-current-billing-period
              class="link link-plain has-text-weight-semibold is-ghost"
              type="button"
              name="reset"
              {{on "click" (fn this.handleDateShortcut D.actions)}}
            >
              Current billing period
            </button>
          </li>
          <li class="action">
            <button
              data-test-show-calendar
              class={{concat "link link-plain has-text-weight-semibold is-ghost" (if this.showCalendar " is-active")}}
              type="button"
              {{on "click" this.toggleShowCalendar}}
            >
              <div class="level is-mobile">
                <span class="level-left">
                  Custom end month
                </span>
                <Chevron class="has-text-grey-light level-right" />
              </div>
            </button>
          </li>
        </ul>
      </nav>
      {{#if this.showCalendar}}
        <div class="calendar-widget-container" data-test-calendar-widget-container>
          <div class="select-year">
            <button
              data-test-previous-year
              id="previous-year"
              type="button"
              class="button is-transparent"
              disabled={{this.disablePastYear}}
              {{on "click" this.subYear}}
            >
              <Chevron
                @direction="left"
                @size="s"
                class="has-text-grey"
                {{on "mouseover" this.addTooltip}}
                {{on "mouseleave" this.removeTooltip}}
              />
            </button>
            <p data-test-display-year>
              {{this.displayYear}}
            </p>
            <button
              data-test-next-year
              type="button"
              class={{concat "button is-transparent " (if (or this.tooltipTarget) "negative-margin" "padding-right")}}
              disabled={{this.disableFutureYear}}
              {{on "click" this.addYear}}
            >
              <Chevron @direction="right" @size="s" class="has-text-grey" />
            </button>
            {{#if this.tooltipTarget}}
              {{! Component must be in curly bracket notation }}
              {{! template-lint-disable no-curly-component-invocation }}
              {{#modal-dialog
                tagName="div"
                tetherTarget=this.tooltipTarget
                targetAttachment="top right"
                attachment="top middle"
                offset="150px 0"
              }}
                <div class={{"calendar-tooltip"}}>
                  <p>
                    {{this.tooltipText}}
                  </p>
                </div>
                <div class="chart-tooltip-arrow"></div>
              {{/modal-dialog}}
            {{/if}}
          </div>
          <div class="calendar-widget-grid calendar-widget">
            {{#each this.widgetMonths as |month|}}
              <button
                data-test-calendar-month={{month.name}}
                type="button"
                class="is-month-list {{if month.readonly 'is-readOnly'}}"
                id={{month.index}}
                {{on "click" (fn this.selectMonth month D.actions)}}
              >
                {{month.name}}
              </button>
            {{/each}}
          </div>
        </div>
      {{/if}}
    </D.Content>
  </BasicDropdown>
  */
  {
    "id": "XzLbYWHg",
    "block": "[[[8,[39,0],null,[[\"@class\",\"@horizontalPosition\",\"@verticalPosition\"],[\"popup-menu\",\"auto-right\",\"below\"]],[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"Trigger\"]],[[24,\"data-test-calendar-widget-trigger\",\"\"],[16,0,[28,[37,1],[\"toolbar-link\",[52,[30,1,[\"isOpen\"]],\" is-active\"]],null]]],[[\"@htmlTag\"],[\"button\"]],[[\"default\"],[[[[1,\"\\n    \"],[1,[28,[35,3],[[30,0,[\"startDate\"]],\"MMM yyyy\"],null]],[1,\"\\n    -\\n    \"],[1,[28,[35,3],[[30,0,[\"endDate\"]],\"MMM yyyy\"],null]],[1,\"\\n    \"],[8,[39,4],null,[[\"@direction\",\"@isButton\"],[\"down\",true]],null],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[30,1,[\"Content\"]],null,[[\"@defaultClass\"],[[28,[37,1],[\"popup-menu-content calendar-content\",[52,[30,0,[\"showCalendar\"]],\" calendar-open\"]],null]]],[[\"default\"],[[[[1,\"\\n    \"],[10,\"nav\"],[14,0,\"box menu\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"calendar-title is-subtitle-gray\"],[12],[1,\"\\n        DATE OPTIONS\\n      \"],[13],[1,\"\\n      \"],[10,\"ul\"],[14,0,\"menu-list\"],[12],[1,\"\\n        \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n          \"],[11,\"button\"],[24,\"data-test-current-month\",\"\"],[24,0,\"link link-plain has-text-weight-semibold is-ghost\"],[24,3,\"currentMonth\"],[24,4,\"button\"],[4,[38,5],[\"click\",[28,[37,6],[[30,0,[\"handleDateShortcut\"]],[30,1,[\"actions\"]]],null]],null],[12],[1,\"\\n            Current month\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n        \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n          \"],[11,\"button\"],[24,\"data-test-current-billing-period\",\"\"],[24,0,\"link link-plain has-text-weight-semibold is-ghost\"],[24,3,\"reset\"],[24,4,\"button\"],[4,[38,5],[\"click\",[28,[37,6],[[30,0,[\"handleDateShortcut\"]],[30,1,[\"actions\"]]],null]],null],[12],[1,\"\\n            Current billing period\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n        \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n          \"],[11,\"button\"],[24,\"data-test-show-calendar\",\"\"],[16,0,[28,[37,1],[\"link link-plain has-text-weight-semibold is-ghost\",[52,[30,0,[\"showCalendar\"]],\" is-active\"]],null]],[24,4,\"button\"],[4,[38,5],[\"click\",[30,0,[\"toggleShowCalendar\"]]],null],[12],[1,\"\\n            \"],[10,0],[14,0,\"level is-mobile\"],[12],[1,\"\\n              \"],[10,1],[14,0,\"level-left\"],[12],[1,\"\\n                Custom end month\\n              \"],[13],[1,\"\\n              \"],[8,[39,4],[[24,0,\"has-text-grey-light level-right\"]],null,null],[1,\"\\n            \"],[13],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n\"],[41,[30,0,[\"showCalendar\"]],[[[1,\"      \"],[10,0],[14,0,\"calendar-widget-container\"],[14,\"data-test-calendar-widget-container\",\"\"],[12],[1,\"\\n        \"],[10,0],[14,0,\"select-year\"],[12],[1,\"\\n          \"],[11,\"button\"],[24,\"data-test-previous-year\",\"\"],[24,1,\"previous-year\"],[24,0,\"button is-transparent\"],[16,\"disabled\",[30,0,[\"disablePastYear\"]]],[24,4,\"button\"],[4,[38,5],[\"click\",[30,0,[\"subYear\"]]],null],[12],[1,\"\\n            \"],[8,[39,4],[[24,0,\"has-text-grey\"],[4,[38,5],[\"mouseover\",[30,0,[\"addTooltip\"]]],null],[4,[38,5],[\"mouseleave\",[30,0,[\"removeTooltip\"]]],null]],[[\"@direction\",\"@size\"],[\"left\",\"s\"]],null],[1,\"\\n          \"],[13],[1,\"\\n          \"],[10,2],[14,\"data-test-display-year\",\"\"],[12],[1,\"\\n            \"],[1,[30,0,[\"displayYear\"]]],[1,\"\\n          \"],[13],[1,\"\\n          \"],[11,\"button\"],[24,\"data-test-next-year\",\"\"],[16,0,[28,[37,1],[\"button is-transparent \",[52,[28,[37,7],[[30,0,[\"tooltipTarget\"]]],null],\"negative-margin\",\"padding-right\"]],null]],[16,\"disabled\",[30,0,[\"disableFutureYear\"]]],[24,4,\"button\"],[4,[38,5],[\"click\",[30,0,[\"addYear\"]]],null],[12],[1,\"\\n            \"],[8,[39,4],[[24,0,\"has-text-grey\"]],[[\"@direction\",\"@size\"],[\"right\",\"s\"]],null],[1,\"\\n          \"],[13],[1,\"\\n\"],[41,[30,0,[\"tooltipTarget\"]],[[[6,[39,8],null,[[\"tagName\",\"tetherTarget\",\"targetAttachment\",\"attachment\",\"offset\"],[\"div\",[30,0,[\"tooltipTarget\"]],\"top right\",\"top middle\",\"150px 0\"]],[[\"default\"],[[[[1,\"              \"],[10,0],[14,0,\"calendar-tooltip\"],[12],[1,\"\\n                \"],[10,2],[12],[1,\"\\n                  \"],[1,[30,0,[\"tooltipText\"]]],[1,\"\\n                \"],[13],[1,\"\\n              \"],[13],[1,\"\\n              \"],[10,0],[14,0,\"chart-tooltip-arrow\"],[12],[13],[1,\"\\n\"]],[]]]]]],[]],null],[1,\"        \"],[13],[1,\"\\n        \"],[10,0],[14,0,\"calendar-widget-grid calendar-widget\"],[12],[1,\"\\n\"],[42,[28,[37,10],[[28,[37,10],[[30,0,[\"widgetMonths\"]]],null]],null],null,[[[1,\"            \"],[11,\"button\"],[16,\"data-test-calendar-month\",[30,2,[\"name\"]]],[16,0,[29,[\"is-month-list \",[52,[30,2,[\"readonly\"]],\"is-readOnly\"]]]],[16,1,[30,2,[\"index\"]]],[24,4,\"button\"],[4,[38,5],[\"click\",[28,[37,6],[[30,0,[\"selectMonth\"]],[30,2],[30,1,[\"actions\"]]],null]],null],[12],[1,\"\\n              \"],[1,[30,2,[\"name\"]]],[1,\"\\n            \"],[13],[1,\"\\n\"]],[2]],null],[1,\"        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n\"]],[]],null],[1,\"  \"]],[]]]]],[1,\"\\n\"]],[1]]]]]],[\"D\",\"month\"],false,[\"basic-dropdown\",\"concat\",\"if\",\"date-format\",\"chevron\",\"on\",\"fn\",\"or\",\"modal-dialog\",\"each\",\"-track-array\"]]",
    "moduleName": "vault/templates/components/calendar-widget.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/configure-aws-secret", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <div class="tabs-container box is-sideless is-fullwidth is-paddingless is-marginless">
    <nav class="tabs">
      <ul>
        <LinkTo
          @route="vault.cluster.settings.configure-secret-backend"
          @model={{@model.id}}
          @query={{hash tab=""}}
          data-test-aws-link="root-creds"
        >
          Dynamic IAM root credentials
        </LinkTo>
        <LinkTo
          @route="vault.cluster.settings.configure-secret-backend"
          @model={{@model.id}}
          @query={{hash tab="leases"}}
          data-test-aws-link="leases"
        >
          Leases
        </LinkTo>
      </ul>
    </nav>
  </div>
  
  {{#if (eq @tab "leases")}}
    <form
      onsubmit={{action "saveLease" (hash lease=@model.lease lease_max=@model.leaseMax)}}
      aria-label="save lease form"
      data-test-aws-leases-form="true"
    >
      <div class="box is-fullwidth is-shadowless is-marginless">
        <NamespaceReminder @mode="saved" @noun="configuration" />
        <MessageError @model={{@model}} />
        <p class="has-text-grey-dark">
          If you do not supply lease settings, we will use the default values in AWS.
        </p>
      </div>
      <TtlPicker
        @label="Lease"
        @initialValue={{@model.lease}}
        @initialEnabled={{@model.lease}}
        @onChange={{fn this.handleTtlChange "lease"}}
      />
      <TtlPicker
        @label="Maximum Lease"
        @initialValue={{@model.leaseMax}}
        @initialEnabled={{@model.leaseMax}}
        @onChange={{fn this.handleTtlChange "leaseMax"}}
      />
      <div class="box is-bottomless is-fullwidth">
        <button data-test-aws-input="lease-save" type="submit" class="button is-primary">
          Save
        </button>
      </div>
    </form>
  {{else}}
    <form
      onsubmit={{action
        "saveRootCreds"
        (hash access_key=@accessKey iam_endpoint=@iamEndpoint sts_endpoint=@stsEndpoint secret_key=@secretKey region=@region)
      }}
      data-test-aws-root-creds-form="true"
      aria-label="save root creds form"
    >
      <div class="box is-fullwidth is-shadowless is-marginless">
        <NamespaceReminder @mode="save" @noun="configuration" />
        <p class="has-text-grey-dark">
          Note: the client uses the official AWS SDK and will use the specified credentials, environment credentials, shared
          file credentials, or IAM role/ECS task credentials in that order.
        </p>
      </div>
  
      <div class="field">
        <label for="access" class="is-label">
          Access key
        </label>
        <div class="control">
          <Input
            @type="text"
            id="access"
            name="access"
            class="input"
            autocomplete="off"
            spellcheck="false"
            @value={{@accessKey}}
            data-test-aws-input="accessKey"
          />
        </div>
      </div>
  
      <div class="field">
        <label for="secret" class="is-label">
          Secret key
        </label>
        <div class="control">
          <Input
            @type="password"
            id="secret"
            name="secret"
            class="input"
            @value={{@secretKey}}
            data-test-aws-input="secretKey"
          />
        </div>
      </div>
  
      <ToggleButton @isOpen={{this.showOptions}} @onClick={{fn (mut this.showOptions)}} />
      {{#if this.showOptions}}
        <div class="box is-marginless">
          <div class="field">
            <label for="region" class="is-label">
              Region
            </label>
            <div class="control is-expanded">
              <div class="select is-fullwidth">
                <select
                  name="region"
                  id="region"
                  onchange={{action (mut @region) value="target.value"}}
                  data-test-input="region"
                >
                  <option value=""></option>
                  {{#each (aws-regions) as |val|}}
                    <option>{{val}}</option>
                  {{/each}}
                </select>
              </div>
            </div>
          </div>
          <div class="field">
            <label for="iam" class="is-label">
              IAM endpoint
            </label>
            <div class="control">
              <Input @type="text" id="iam" name="iam" class="input" @value={{@iamEndpoint}} />
            </div>
          </div>
          <div class="field">
            <label for="sts" class="is-label">
              STS endpoint
            </label>
            <div class="control">
              <Input @type="text" id="sts" name="sts" class="input" @value={{@stsEndpoint}} />
            </div>
          </div>
        </div>
      {{/if}}
  
      <div class="box is-bottomless is-fullwidth">
        <button data-test-aws-input="root-save" type="submit" class="button is-primary">
          Save
        </button>
      </div>
    </form>
  {{/if}}
  */
  {
    "id": "S7EtCdLz",
    "block": "[[[10,0],[14,0,\"tabs-container box is-sideless is-fullwidth is-paddingless is-marginless\"],[12],[1,\"\\n  \"],[10,\"nav\"],[14,0,\"tabs\"],[12],[1,\"\\n    \"],[10,\"ul\"],[12],[1,\"\\n      \"],[8,[39,0],[[24,\"data-test-aws-link\",\"root-creds\"]],[[\"@route\",\"@model\",\"@query\"],[\"vault.cluster.settings.configure-secret-backend\",[30,1,[\"id\"]],[28,[37,1],null,[[\"tab\"],[\"\"]]]]],[[\"default\"],[[[[1,\"\\n        Dynamic IAM root credentials\\n      \"]],[]]]]],[1,\"\\n      \"],[8,[39,0],[[24,\"data-test-aws-link\",\"leases\"]],[[\"@route\",\"@model\",\"@query\"],[\"vault.cluster.settings.configure-secret-backend\",[30,1,[\"id\"]],[28,[37,1],null,[[\"tab\"],[\"leases\"]]]]],[[\"default\"],[[[[1,\"\\n        Leases\\n      \"]],[]]]]],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"],[13],[1,\"\\n\\n\"],[41,[28,[37,3],[[30,2],\"leases\"],null],[[[1,\"  \"],[10,\"form\"],[15,\"onsubmit\",[28,[37,4],[[30,0],\"saveLease\",[28,[37,1],null,[[\"lease\",\"lease_max\"],[[30,1,[\"lease\"]],[30,1,[\"leaseMax\"]]]]]],null]],[14,\"aria-label\",\"save lease form\"],[14,\"data-test-aws-leases-form\",\"true\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"box is-fullwidth is-shadowless is-marginless\"],[12],[1,\"\\n      \"],[8,[39,5],null,[[\"@mode\",\"@noun\"],[\"saved\",\"configuration\"]],null],[1,\"\\n      \"],[8,[39,6],null,[[\"@model\"],[[30,1]]],null],[1,\"\\n      \"],[10,2],[14,0,\"has-text-grey-dark\"],[12],[1,\"\\n        If you do not supply lease settings, we will use the default values in AWS.\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n    \"],[8,[39,7],null,[[\"@label\",\"@initialValue\",\"@initialEnabled\",\"@onChange\"],[\"Lease\",[30,1,[\"lease\"]],[30,1,[\"lease\"]],[28,[37,8],[[30,0,[\"handleTtlChange\"]],\"lease\"],null]]],null],[1,\"\\n    \"],[8,[39,7],null,[[\"@label\",\"@initialValue\",\"@initialEnabled\",\"@onChange\"],[\"Maximum Lease\",[30,1,[\"leaseMax\"]],[30,1,[\"leaseMax\"]],[28,[37,8],[[30,0,[\"handleTtlChange\"]],\"leaseMax\"],null]]],null],[1,\"\\n    \"],[10,0],[14,0,\"box is-bottomless is-fullwidth\"],[12],[1,\"\\n      \"],[10,\"button\"],[14,\"data-test-aws-input\",\"lease-save\"],[14,0,\"button is-primary\"],[14,4,\"submit\"],[12],[1,\"\\n        Save\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]],[[[1,\"  \"],[10,\"form\"],[15,\"onsubmit\",[28,[37,4],[[30,0],\"saveRootCreds\",[28,[37,1],null,[[\"access_key\",\"iam_endpoint\",\"sts_endpoint\",\"secret_key\",\"region\"],[[30,3],[30,4],[30,5],[30,6],[30,7]]]]],null]],[14,\"data-test-aws-root-creds-form\",\"true\"],[14,\"aria-label\",\"save root creds form\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"box is-fullwidth is-shadowless is-marginless\"],[12],[1,\"\\n      \"],[8,[39,5],null,[[\"@mode\",\"@noun\"],[\"save\",\"configuration\"]],null],[1,\"\\n      \"],[10,2],[14,0,\"has-text-grey-dark\"],[12],[1,\"\\n        Note: the client uses the official AWS SDK and will use the specified credentials, environment credentials, shared\\n        file credentials, or IAM role/ECS task credentials in that order.\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n\\n    \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n      \"],[10,\"label\"],[14,\"for\",\"access\"],[14,0,\"is-label\"],[12],[1,\"\\n        Access key\\n      \"],[13],[1,\"\\n      \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n        \"],[8,[39,9],[[24,1,\"access\"],[24,3,\"access\"],[24,0,\"input\"],[24,\"autocomplete\",\"off\"],[24,\"spellcheck\",\"false\"],[24,\"data-test-aws-input\",\"accessKey\"]],[[\"@type\",\"@value\"],[\"text\",[30,3]]],null],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n\\n    \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n      \"],[10,\"label\"],[14,\"for\",\"secret\"],[14,0,\"is-label\"],[12],[1,\"\\n        Secret key\\n      \"],[13],[1,\"\\n      \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n        \"],[8,[39,9],[[24,1,\"secret\"],[24,3,\"secret\"],[24,0,\"input\"],[24,\"data-test-aws-input\",\"secretKey\"]],[[\"@type\",\"@value\"],[\"password\",[30,6]]],null],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n\\n    \"],[8,[39,10],null,[[\"@isOpen\",\"@onClick\"],[[30,0,[\"showOptions\"]],[28,[37,8],[[28,[37,11],[[30,0,[\"showOptions\"]]],null]],null]]],null],[1,\"\\n\"],[41,[30,0,[\"showOptions\"]],[[[1,\"      \"],[10,0],[14,0,\"box is-marginless\"],[12],[1,\"\\n        \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n          \"],[10,\"label\"],[14,\"for\",\"region\"],[14,0,\"is-label\"],[12],[1,\"\\n            Region\\n          \"],[13],[1,\"\\n          \"],[10,0],[14,0,\"control is-expanded\"],[12],[1,\"\\n            \"],[10,0],[14,0,\"select is-fullwidth\"],[12],[1,\"\\n              \"],[10,\"select\"],[14,3,\"region\"],[14,1,\"region\"],[15,\"onchange\",[28,[37,4],[[30,0],[28,[37,11],[[30,7]],null]],[[\"value\"],[\"target.value\"]]]],[14,\"data-test-input\",\"region\"],[12],[1,\"\\n                \"],[10,\"option\"],[14,2,\"\"],[12],[13],[1,\"\\n\"],[42,[28,[37,13],[[28,[37,13],[[28,[37,14],null,null]],null]],null],null,[[[1,\"                  \"],[10,\"option\"],[12],[1,[30,8]],[13],[1,\"\\n\"]],[8]],null],[1,\"              \"],[13],[1,\"\\n            \"],[13],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n        \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n          \"],[10,\"label\"],[14,\"for\",\"iam\"],[14,0,\"is-label\"],[12],[1,\"\\n            IAM endpoint\\n          \"],[13],[1,\"\\n          \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n            \"],[8,[39,9],[[24,1,\"iam\"],[24,3,\"iam\"],[24,0,\"input\"]],[[\"@type\",\"@value\"],[\"text\",[30,4]]],null],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n        \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n          \"],[10,\"label\"],[14,\"for\",\"sts\"],[14,0,\"is-label\"],[12],[1,\"\\n            STS endpoint\\n          \"],[13],[1,\"\\n          \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n            \"],[8,[39,9],[[24,1,\"sts\"],[24,3,\"sts\"],[24,0,\"input\"]],[[\"@type\",\"@value\"],[\"text\",[30,5]]],null],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n\"]],[]],null],[1,\"\\n    \"],[10,0],[14,0,\"box is-bottomless is-fullwidth\"],[12],[1,\"\\n      \"],[10,\"button\"],[14,\"data-test-aws-input\",\"root-save\"],[14,0,\"button is-primary\"],[14,4,\"submit\"],[12],[1,\"\\n        Save\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]]]],[\"@model\",\"@tab\",\"@accessKey\",\"@iamEndpoint\",\"@stsEndpoint\",\"@secretKey\",\"@region\",\"val\"],false,[\"link-to\",\"hash\",\"if\",\"eq\",\"action\",\"namespace-reminder\",\"message-error\",\"ttl-picker\",\"fn\",\"input\",\"toggle-button\",\"mut\",\"each\",\"-track-array\",\"aws-regions\"]]",
    "moduleName": "vault/templates/components/configure-aws-secret.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/configure-ssh-secret", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{#if @configured}}
    <div class="box is-fullwidth is-sideless is-marginless">
      <div class="field">
        <label for="publicKey" class="is-label">
          Public key
        </label>
        <div class="control">
          <MaskedInput
            @name="publickey"
            @id="publicKey"
            @value={{@model.publicKey}}
            @displayOnly={{true}}
            @allowCopy={{true}}
            data-test-ssh-input="public-key"
          />
        </div>
      </div>
    </div>
    <div class="field is-grouped-split box is-fullwidth is-bottomless">
      <div class="control">
        <CopyButton
          @clipboardText={{@model.publicKey}}
          @class="button is-primary"
          @buttonType="button"
          @success={{action (set-flash-message "Public Key copied!")}}
        >
          Copy
        </CopyButton>
      </div>
      <div class="control">
        <ConfirmAction
          @buttonClasses="button"
          @confirmMessage="This will remove the CA certificate information."
          @onConfirmAction={{this.delete}}
        >
          Delete
        </ConfirmAction>
      </div>
    </div>
  {{else}}
    <form {{on "submit" this.saveConfig}} data-test-ssh-configure-form="true">
      <div class="box is-fullwidth is-sideless is-marginless">
        <NamespaceReminder @mode="save" @noun="configuration" />
        <div class="field">
          <label for="privateKey" class="is-label">
            Private key
          </label>
          <div class="control">
            <MaskedInput @name="privateKey" id="privateKey" @value={{@model.privateKey}} @onChange={{mut @model.privateKey}} />
          </div>
        </div>
        <div class="field">
          <label for="publicKey" class="is-label">
            Public key
          </label>
          <div class="control">
            <Textarea name="publicKey" id="publicKey" class="input" @value={{@model.publicKey}} />
          </div>
        </div>
        <div class="b-checkbox">
          <Input
            @type="checkbox"
            id="generateSigningKey"
            class="styled"
            @checked={{@model.generateSigningKey}}
            {{on "change" (fn (mut @model.generateSigningKey) (not @model.generateSigningKey))}}
            data-test-ssh-input="generate-signing-key-checkbox"
          />
          <label for="generateSigningKey" class="is-label">
            Generate signing key
            <InfoTooltip>
              Specifies if OpenBao should generate the signing key pair internally
            </InfoTooltip>
          </label>
        </div>
      </div>
      <div class="field box is-fullwidth is-bottomless is-marginless">
        <div class="control">
          <button
            type="submit"
            class="button is-primary {{if @loading 'is-loading'}}"
            disabled={{@loading}}
            data-test-ssh-input="configure-submit"
          >
            Save
          </button>
        </div>
      </div>
    </form>
  {{/if}}
  */
  {
    "id": "GVVWk5sH",
    "block": "[[[41,[30,1],[[[1,\"  \"],[10,0],[14,0,\"box is-fullwidth is-sideless is-marginless\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n      \"],[10,\"label\"],[14,\"for\",\"publicKey\"],[14,0,\"is-label\"],[12],[1,\"\\n        Public key\\n      \"],[13],[1,\"\\n      \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n        \"],[8,[39,1],[[24,\"data-test-ssh-input\",\"public-key\"]],[[\"@name\",\"@id\",\"@value\",\"@displayOnly\",\"@allowCopy\"],[\"publickey\",\"publicKey\",[30,2,[\"publicKey\"]],true,true]],null],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n  \"],[10,0],[14,0,\"field is-grouped-split box is-fullwidth is-bottomless\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n      \"],[8,[39,2],null,[[\"@clipboardText\",\"@class\",\"@buttonType\",\"@success\"],[[30,2,[\"publicKey\"]],\"button is-primary\",\"button\",[28,[37,3],[[30,0],[28,[37,4],[\"Public Key copied!\"],null]],null]]],[[\"default\"],[[[[1,\"\\n        Copy\\n      \"]],[]]]]],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n      \"],[8,[39,5],null,[[\"@buttonClasses\",\"@confirmMessage\",\"@onConfirmAction\"],[\"button\",\"This will remove the CA certificate information.\",[30,0,[\"delete\"]]]],[[\"default\"],[[[[1,\"\\n        Delete\\n      \"]],[]]]]],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]],[[[1,\"  \"],[11,\"form\"],[24,\"data-test-ssh-configure-form\",\"true\"],[4,[38,6],[\"submit\",[30,0,[\"saveConfig\"]]],null],[12],[1,\"\\n    \"],[10,0],[14,0,\"box is-fullwidth is-sideless is-marginless\"],[12],[1,\"\\n      \"],[8,[39,7],null,[[\"@mode\",\"@noun\"],[\"save\",\"configuration\"]],null],[1,\"\\n      \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n        \"],[10,\"label\"],[14,\"for\",\"privateKey\"],[14,0,\"is-label\"],[12],[1,\"\\n          Private key\\n        \"],[13],[1,\"\\n        \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n          \"],[8,[39,1],[[24,1,\"privateKey\"]],[[\"@name\",\"@value\",\"@onChange\"],[\"privateKey\",[30,2,[\"privateKey\"]],[28,[37,8],[[30,2,[\"privateKey\"]]],null]]],null],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n      \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n        \"],[10,\"label\"],[14,\"for\",\"publicKey\"],[14,0,\"is-label\"],[12],[1,\"\\n          Public key\\n        \"],[13],[1,\"\\n        \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n          \"],[8,[39,9],[[24,3,\"publicKey\"],[24,1,\"publicKey\"],[24,0,\"input\"]],[[\"@value\"],[[30,2,[\"publicKey\"]]]],null],[1,\"        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n      \"],[10,0],[14,0,\"b-checkbox\"],[12],[1,\"\\n        \"],[8,[39,10],[[24,1,\"generateSigningKey\"],[24,0,\"styled\"],[24,\"data-test-ssh-input\",\"generate-signing-key-checkbox\"],[4,[38,6],[\"change\",[28,[37,11],[[28,[37,8],[[30,2,[\"generateSigningKey\"]]],null],[28,[37,12],[[30,2,[\"generateSigningKey\"]]],null]],null]],null]],[[\"@type\",\"@checked\"],[\"checkbox\",[30,2,[\"generateSigningKey\"]]]],null],[1,\"\\n        \"],[10,\"label\"],[14,\"for\",\"generateSigningKey\"],[14,0,\"is-label\"],[12],[1,\"\\n          Generate signing key\\n          \"],[8,[39,13],null,null,[[\"default\"],[[[[1,\"\\n            Specifies if OpenBao should generate the signing key pair internally\\n          \"]],[]]]]],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"field box is-fullwidth is-bottomless is-marginless\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n        \"],[10,\"button\"],[15,0,[29,[\"button is-primary \",[52,[30,3],\"is-loading\"]]]],[15,\"disabled\",[30,3]],[14,\"data-test-ssh-input\",\"configure-submit\"],[14,4,\"submit\"],[12],[1,\"\\n          Save\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]]]],[\"@configured\",\"@model\",\"@loading\"],false,[\"if\",\"masked-input\",\"copy-button\",\"action\",\"set-flash-message\",\"confirm-action\",\"on\",\"namespace-reminder\",\"mut\",\"textarea\",\"input\",\"fn\",\"not\",\"info-tooltip\"]]",
    "moduleName": "vault/templates/components/configure-ssh-secret.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/console/command-input", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <div class="console-ui-input" data-test-component="console/command-input">
    {{#if this.isRunning}}
      <div class="control console-spinner is-loading"></div>
    {{else}}
      <Chevron />
    {{/if}}
    <input onkeyup={{action "handleKeyUp"}} value={{this.value}} autocomplete="off" spellcheck="false" />
    <ToolTip @horizontalPosition="auto-right" @verticalPosition="above" as |d|>
      <d.Trigger>
        <button
          type="button"
          class={{concat "button is-compact" (if this.isFullscreen " active")}}
          {{on "click" (action "fullscreen")}}
          data-test-tool-tip-trigger
        >
          <Icon
            @name={{if this.isFullscreen "minimize" "maximize"}}
            aria-label={{if this.isFullscreen "Minimize" "Maximize"}}
          />
        </button>
      </d.Trigger>
      <d.Content @defaultClass="tool-tip">
        <div class="box">
          {{#if this.isFullscreen}}
            Minimize
          {{else}}
            Maximize
          {{/if}}
        </div>
      </d.Content>
    </ToolTip>
  </div>
  <NamespaceReminder @class="console-reminder" @mode="execute" @noun="command" />
  */
  {
    "id": "40zXKQLI",
    "block": "[[[10,0],[14,0,\"console-ui-input\"],[14,\"data-test-component\",\"console/command-input\"],[12],[1,\"\\n\"],[41,[30,0,[\"isRunning\"]],[[[1,\"    \"],[10,0],[14,0,\"control console-spinner is-loading\"],[12],[13],[1,\"\\n\"]],[]],[[[1,\"    \"],[8,[39,1],null,null,null],[1,\"\\n\"]],[]]],[1,\"  \"],[10,\"input\"],[15,\"onkeyup\",[28,[37,2],[[30,0],\"handleKeyUp\"],null]],[15,2,[30,0,[\"value\"]]],[14,\"autocomplete\",\"off\"],[14,\"spellcheck\",\"false\"],[12],[13],[1,\"\\n  \"],[8,[39,3],null,[[\"@horizontalPosition\",\"@verticalPosition\"],[\"auto-right\",\"above\"]],[[\"default\"],[[[[1,\"\\n    \"],[8,[30,1,[\"Trigger\"]],null,null,[[\"default\"],[[[[1,\"\\n      \"],[11,\"button\"],[16,0,[28,[37,4],[\"button is-compact\",[52,[30,0,[\"isFullscreen\"]],\" active\"]],null]],[24,\"data-test-tool-tip-trigger\",\"\"],[24,4,\"button\"],[4,[38,5],[\"click\",[28,[37,2],[[30,0],\"fullscreen\"],null]],null],[12],[1,\"\\n        \"],[8,[39,6],[[16,\"aria-label\",[52,[30,0,[\"isFullscreen\"]],\"Minimize\",\"Maximize\"]]],[[\"@name\"],[[52,[30,0,[\"isFullscreen\"]],\"minimize\",\"maximize\"]]],null],[1,\"\\n      \"],[13],[1,\"\\n    \"]],[]]]]],[1,\"\\n    \"],[8,[30,1,[\"Content\"]],null,[[\"@defaultClass\"],[\"tool-tip\"]],[[\"default\"],[[[[1,\"\\n      \"],[10,0],[14,0,\"box\"],[12],[1,\"\\n\"],[41,[30,0,[\"isFullscreen\"]],[[[1,\"          Minimize\\n\"]],[]],[[[1,\"          Maximize\\n\"]],[]]],[1,\"      \"],[13],[1,\"\\n    \"]],[]]]]],[1,\"\\n  \"]],[1]]]]],[1,\"\\n\"],[13],[1,\"\\n\"],[8,[39,7],null,[[\"@class\",\"@mode\",\"@noun\"],[\"console-reminder\",\"execute\",\"command\"]],null]],[\"d\"],false,[\"if\",\"chevron\",\"action\",\"tool-tip\",\"concat\",\"on\",\"icon\",\"namespace-reminder\"]]",
    "moduleName": "vault/templates/components/console/command-input.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/console/log-command", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <div class="is-flex-center">
    <Icon @name="chevron-right" />
    <pre class="console-ui-command">{{@content}}</pre>
  </div>
  */
  {
    "id": "PJLWlKP+",
    "block": "[[[10,0],[14,0,\"is-flex-center\"],[12],[1,\"\\n  \"],[8,[39,0],null,[[\"@name\"],[\"chevron-right\"]],null],[1,\"\\n  \"],[10,\"pre\"],[14,0,\"console-ui-command\"],[12],[1,[30,1]],[13],[1,\"\\n\"],[13]],[\"@content\"],false,[\"icon\"]]",
    "moduleName": "vault/templates/components/console/log-command.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/console/log-error-with-html", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{! template-lint-disable no-triple-curlies}}
  <div class="console-ui-alert has-text-danger">
    <Icon @name="x-circle-fill" />
    <pre>{{{@content}}}</pre>
  </div>
  */
  {
    "id": "BLMS6AJE",
    "block": "[[[10,0],[14,0,\"console-ui-alert has-text-danger\"],[12],[1,\"\\n  \"],[8,[39,0],null,[[\"@name\"],[\"x-circle-fill\"]],null],[1,\"\\n  \"],[10,\"pre\"],[12],[2,[30,1]],[13],[1,\"\\n\"],[13]],[\"@content\"],false,[\"icon\"]]",
    "moduleName": "vault/templates/components/console/log-error-with-html.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/console/log-error", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <div class="console-ui-alert has-text-danger">
    <Icon @name="x-circle-fill" />
    <pre>{{@content}}</pre>
  </div>
  */
  {
    "id": "gZTw/VxD",
    "block": "[[[10,0],[14,0,\"console-ui-alert has-text-danger\"],[12],[1,\"\\n  \"],[8,[39,0],null,[[\"@name\"],[\"x-circle-fill\"]],null],[1,\"\\n  \"],[10,\"pre\"],[12],[1,[30,1]],[13],[1,\"\\n\"],[13]],[\"@content\"],false,[\"icon\"]]",
    "moduleName": "vault/templates/components/console/log-error.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/console/log-help", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{! template-lint-disable no-whitespace-for-layout }}
  {{! prettier-ignore }}
  <div class="console-ui-alert has-text-grey">
  <Icon @name="info" />
  <pre>Usage: bao &lt;command&gt; [args]
  
  Commands:
    read        Read data and retrieves secrets
    kv-get      Read data for kv v2 secret engines. Use -metadata flag to read metadata
    write       Write data, configuration, and secrets
    delete      Delete secrets and configuration
    list        List data or secrets
  
  Web CLI Commands:
    api         Navigate to the OpenBao API explorer. Use 'api [filter]' to prefilter the list.
    clear       Clear output from the log
    clearall    Clear output and command history
    fullscreen  Toggle fullscreen display
    refresh     Refresh the data on the current screen under the CLI window
  </pre>
  </div>
  */
  {
    "id": "m5TC8IDV",
    "block": "[[[10,0],[14,0,\"console-ui-alert has-text-grey\"],[12],[1,\"\\n\"],[8,[39,0],null,[[\"@name\"],[\"info\"]],null],[1,\"\\n\"],[10,\"pre\"],[12],[1,\"Usage: bao <command> [args]\\n\\nCommands:\\n  read        Read data and retrieves secrets\\n  kv-get      Read data for kv v2 secret engines. Use -metadata flag to read metadata\\n  write       Write data, configuration, and secrets\\n  delete      Delete secrets and configuration\\n  list        List data or secrets\\n\\nWeb CLI Commands:\\n  api         Navigate to the OpenBao API explorer. Use 'api [filter]' to prefilter the list.\\n  clear       Clear output from the log\\n  clearall    Clear output and command history\\n  fullscreen  Toggle fullscreen display\\n  refresh     Refresh the data on the current screen under the CLI window\\n\"],[13],[1,\"\\n\"],[13]],[],false,[\"icon\"]]",
    "moduleName": "vault/templates/components/console/log-help.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/console/log-json", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <div class="console-ui-output has-copy-button">
    <JsonEditor
      @showToolbar={{false}}
      @value={{stringify this.content}}
      @readOnly={{true}}
      @viewportMargin="Infinity"
      @gutters={{false}}
      @theme="hashi auto-height"
    />
    <HoverCopyButton @copyValue={{stringify this.content}} />
  </div>
  */
  {
    "id": "R+KQMAyH",
    "block": "[[[10,0],[14,0,\"console-ui-output has-copy-button\"],[12],[1,\"\\n  \"],[8,[39,0],null,[[\"@showToolbar\",\"@value\",\"@readOnly\",\"@viewportMargin\",\"@gutters\",\"@theme\"],[false,[28,[37,1],[[30,0,[\"content\"]]],null],true,\"Infinity\",false,\"hashi auto-height\"]],null],[1,\"\\n  \"],[8,[39,2],null,[[\"@copyValue\"],[[28,[37,1],[[30,0,[\"content\"]]],null]]],null],[1,\"\\n\"],[13]],[],false,[\"json-editor\",\"stringify\",\"hover-copy-button\"]]",
    "moduleName": "vault/templates/components/console/log-json.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/console/log-list", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <div class="console-ui-output has-copy-button">
    <pre>
      Keys
      {{#each this.list as |item|}}
        {{item}}
  
      {{/each}}
    </pre>
    <HoverCopyButton @copyValue={{multi-line-join this.list}} />
  </div>
  */
  {
    "id": "cvXZ3Hjs",
    "block": "[[[10,0],[14,0,\"console-ui-output has-copy-button\"],[12],[1,\"\\n  \"],[10,\"pre\"],[12],[1,\"    Keys\\n\"],[42,[28,[37,1],[[28,[37,1],[[30,0,[\"list\"]]],null]],null],null,[[[1,\"      \"],[1,[30,1]],[1,\"\\n\"]],[1]],null],[1,\"  \"],[13],[1,\"\\n  \"],[8,[39,2],null,[[\"@copyValue\"],[[28,[37,3],[[30,0,[\"list\"]]],null]]],null],[1,\"\\n\"],[13]],[\"item\"],false,[\"each\",\"-track-array\",\"hover-copy-button\",\"multi-line-join\"]]",
    "moduleName": "vault/templates/components/console/log-list.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/console/log-object", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <div class="console-ui-output has-copy-button">
    <pre>{{this.columns}}</pre>
    <HoverCopyButton @copyValue={{this.columns}} />
  </div>
  */
  {
    "id": "WsjLjTC1",
    "block": "[[[10,0],[14,0,\"console-ui-output has-copy-button\"],[12],[1,\"\\n  \"],[10,\"pre\"],[12],[1,[30,0,[\"columns\"]]],[13],[1,\"\\n  \"],[8,[39,0],null,[[\"@copyValue\"],[[30,0,[\"columns\"]]]],null],[1,\"\\n\"],[13]],[],false,[\"hover-copy-button\"]]",
    "moduleName": "vault/templates/components/console/log-object.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/console/log-success", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <div class="console-ui-alert has-text-success">
    <Icon @name="check-circle-fill" />
    <pre>{{@content}}</pre>
  </div>
  */
  {
    "id": "iAFKKrxm",
    "block": "[[[10,0],[14,0,\"console-ui-alert has-text-success\"],[12],[1,\"\\n  \"],[8,[39,0],null,[[\"@name\"],[\"check-circle-fill\"]],null],[1,\"\\n  \"],[10,\"pre\"],[12],[1,[30,1]],[13],[1,\"\\n\"],[13]],[\"@content\"],false,[\"icon\"]]",
    "moduleName": "vault/templates/components/console/log-success.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/console/log-text", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <div class="console-ui-output has-copy-button">
    <pre>{{@content}}</pre>
    <HoverCopyButton @copyValue={{this.content}} @alwaysShow={{true}} />
  </div>
  */
  {
    "id": "A1hUMO+A",
    "block": "[[[10,0],[14,0,\"console-ui-output has-copy-button\"],[12],[1,\"\\n  \"],[10,\"pre\"],[12],[1,[30,1]],[13],[1,\"\\n  \"],[8,[39,0],null,[[\"@copyValue\",\"@alwaysShow\"],[[30,0,[\"content\"]],true]],null],[1,\"\\n\"],[13]],[\"@content\"],false,[\"hover-copy-button\"]]",
    "moduleName": "vault/templates/components/console/log-text.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/console/output-log", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{#each this.outputLog as |message|}}
    {{#unless message.hidden}}
      {{component (concat "console/log-" message.type) content=message.content}}
    {{/unless}}
  {{/each}}
  */
  {
    "id": "BS407b1c",
    "block": "[[[42,[28,[37,1],[[28,[37,1],[[30,0,[\"outputLog\"]]],null]],null],null,[[[41,[51,[30,1,[\"hidden\"]]],[[[1,\"    \"],[46,[28,[37,4],[\"console/log-\",[30,1,[\"type\"]]],null],null,[[\"content\"],[[30,1,[\"content\"]]]],null],[1,\"\\n\"]],[]],null]],[1]],null]],[\"message\"],false,[\"each\",\"-track-array\",\"unless\",\"component\",\"concat\"]]",
    "moduleName": "vault/templates/components/console/output-log.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/console/ui-panel", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <div class="console-close-button">
    <button type="button" class="button is-ghost" {{action "closeConsole"}} data-test-console-panel-close>
      <Icon @name="x" aria-label="Close console" />
    </button>
  </div>
  <div class="console-ui-panel-content">
    <div class="content has-bottom-margin-l">
      <p class="has-text-grey is-font-mono has-bottom-margin-s">
        The OpenBao Browser CLI provides an easy way to execute common OpenBao CLI commands, such as write, read, delete, and
        list. It does not include kv v2 write or put commands. For guidance, type `help`.
      </p>
      <p class="has-text-grey is-font-mono has-bottom-margin-s">Examples:</p>
      <p class="has-text-grey is-font-mono">→ Write secrets to kv v1: write &lt;mount&gt;/my-secret foo=bar</p>
      <p class="has-text-grey is-font-mono">→ List kv v1 secret keys: list &lt;mount&gt;/</p>
      <p class="has-text-grey is-font-mono">→ Read a kv v1 secret: read &lt;mount&gt;/my-secret</p>
      <p class="has-text-grey is-font-mono">→ Mount a kv v2 secret engine: write sys/mounts/&lt;mount&gt; type=kv
        options=version=2</p>
      <p class="has-text-grey is-font-mono">→ Read a kv v2 secret: kv-get &lt;mount&gt;/secret-path</p>
      <p class="has-text-grey is-font-mono">→ Read a kv v2 secret's metadata: kv-get &lt;mount&gt;/secret-path -metadata</p>
    </div>
    <Console::OutputLog @outputLog={{this.cliLog}} />
    <Console::CommandInput
      @isFullscreen={{this.isFullscreen}}
      @isRunning={{this.isRunning}}
      @value={{this.inputValue}}
      @onValueUpdate={{action (mut this.inputValue)}}
      @onFullscreen={{action "toggleFullscreen"}}
      @onExecuteCommand={{action "executeCommand"}}
      @onShiftCommand={{action "shiftCommandIndex"}}
    />
  </div>
  */
  {
    "id": "G8Sp4E8E",
    "block": "[[[10,0],[14,0,\"console-close-button\"],[12],[1,\"\\n  \"],[11,\"button\"],[24,0,\"button is-ghost\"],[24,\"data-test-console-panel-close\",\"\"],[24,4,\"button\"],[4,[38,0],[[30,0],\"closeConsole\"],null],[12],[1,\"\\n    \"],[8,[39,1],[[24,\"aria-label\",\"Close console\"]],[[\"@name\"],[\"x\"]],null],[1,\"\\n  \"],[13],[1,\"\\n\"],[13],[1,\"\\n\"],[10,0],[14,0,\"console-ui-panel-content\"],[12],[1,\"\\n  \"],[10,0],[14,0,\"content has-bottom-margin-l\"],[12],[1,\"\\n    \"],[10,2],[14,0,\"has-text-grey is-font-mono has-bottom-margin-s\"],[12],[1,\"\\n      The OpenBao Browser CLI provides an easy way to execute common OpenBao CLI commands, such as write, read, delete, and\\n      list. It does not include kv v2 write or put commands. For guidance, type `help`.\\n    \"],[13],[1,\"\\n    \"],[10,2],[14,0,\"has-text-grey is-font-mono has-bottom-margin-s\"],[12],[1,\"Examples:\"],[13],[1,\"\\n    \"],[10,2],[14,0,\"has-text-grey is-font-mono\"],[12],[1,\"→ Write secrets to kv v1: write <mount>/my-secret foo=bar\"],[13],[1,\"\\n    \"],[10,2],[14,0,\"has-text-grey is-font-mono\"],[12],[1,\"→ List kv v1 secret keys: list <mount>/\"],[13],[1,\"\\n    \"],[10,2],[14,0,\"has-text-grey is-font-mono\"],[12],[1,\"→ Read a kv v1 secret: read <mount>/my-secret\"],[13],[1,\"\\n    \"],[10,2],[14,0,\"has-text-grey is-font-mono\"],[12],[1,\"→ Mount a kv v2 secret engine: write sys/mounts/<mount> type=kv\\n      options=version=2\"],[13],[1,\"\\n    \"],[10,2],[14,0,\"has-text-grey is-font-mono\"],[12],[1,\"→ Read a kv v2 secret: kv-get <mount>/secret-path\"],[13],[1,\"\\n    \"],[10,2],[14,0,\"has-text-grey is-font-mono\"],[12],[1,\"→ Read a kv v2 secret's metadata: kv-get <mount>/secret-path -metadata\"],[13],[1,\"\\n  \"],[13],[1,\"\\n  \"],[8,[39,2],null,[[\"@outputLog\"],[[30,0,[\"cliLog\"]]]],null],[1,\"\\n  \"],[8,[39,3],null,[[\"@isFullscreen\",\"@isRunning\",\"@value\",\"@onValueUpdate\",\"@onFullscreen\",\"@onExecuteCommand\",\"@onShiftCommand\"],[[30,0,[\"isFullscreen\"]],[30,0,[\"isRunning\"]],[30,0,[\"inputValue\"]],[28,[37,0],[[30,0],[28,[37,4],[[30,0,[\"inputValue\"]]],null]],null],[28,[37,0],[[30,0],\"toggleFullscreen\"],null],[28,[37,0],[[30,0],\"executeCommand\"],null],[28,[37,0],[[30,0],\"shiftCommandIndex\"],null]]],null],[1,\"\\n\"],[13]],[],false,[\"action\",\"icon\",\"console/output-log\",\"console/command-input\",\"mut\"]]",
    "moduleName": "vault/templates/components/console/ui-panel.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/control-group-success", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{#if (and this.controlGroupResponse.token this.controlGroupResponse.uiParams.url)}}
    <div class="control-group-success" data-test-navigate-message>
      You have been granted access to
      <code>{{this.model.requestPath}}</code>. Be careful, you can only access this data once. If you need access again in the
      future you will need to get authorized again.
      <div class="box is-shadowless is-fullwidth is-marginless has-slim-padding">
        <button data-test-navigate-button type="button" class="button is-primary" {{action (perform this.markAndNavigate)}}>
          Visit
        </button>
      </div>
    </div>
  {{else}}
    {{#if this.unwrapData}}
      <div class="control-group-success {{if this.unwrapData 'is-editor'}}">
        <div class="has-copy-button">
          <JsonEditor
            data-test-json-viewer
            @showToolbar={{false}}
            @value={{stringify this.unwrapData}}
            @readOnly={{true}}
            @viewportMargin="Infinity"
            @gutters={{false}}
            @theme="hashi-read-only auto-height"
          />
          <HoverCopyButton @copyValue={{stringify this.unwrapData}} />
        </div>
      </div>
      <div class="field is-grouped box is-fullwidth is-bottomless">
        <LinkTo @route="vault.cluster.access.control-groups" class="button">
          <Chevron @direction="left" />
          Back
        </LinkTo>
      </div>
    {{else}}
      <div class="control-group-success" data-test-unwrap-form>
        <form {{action (perform this.unwrap this.token) on="submit"}}>
          <MessageError @errorMessage={{this.error}} />
          <p>
            If you have the token, you can now can access
            <code>{{this.model.requestPath}}</code>
          </p>
          <label for="token" class="is-label">
            Token to access data
          </label>
          <div class="control">
            <Input
              data-test-token-input
              class="input"
              autocomplete="off"
              spellcheck="false"
              name="token"
              @value={{this.token}}
            />
          </div>
          <div class="field is-grouped box is-fullwidth is-bottomless">
            <button data-test-unwrap-button type="submit" class="button is-primary" disabled={{not this.token}}>
              Access
            </button>
          </div>
        </form>
      </div>
    {{/if}}
  {{/if}}
  */
  {
    "id": "tnBJ4yLR",
    "block": "[[[41,[28,[37,1],[[30,0,[\"controlGroupResponse\",\"token\"]],[30,0,[\"controlGroupResponse\",\"uiParams\",\"url\"]]],null],[[[1,\"  \"],[10,0],[14,0,\"control-group-success\"],[14,\"data-test-navigate-message\",\"\"],[12],[1,\"\\n    You have been granted access to\\n    \"],[10,\"code\"],[12],[1,[30,0,[\"model\",\"requestPath\"]]],[13],[1,\". Be careful, you can only access this data once. If you need access again in the\\n    future you will need to get authorized again.\\n    \"],[10,0],[14,0,\"box is-shadowless is-fullwidth is-marginless has-slim-padding\"],[12],[1,\"\\n      \"],[11,\"button\"],[24,\"data-test-navigate-button\",\"\"],[24,0,\"button is-primary\"],[24,4,\"button\"],[4,[38,2],[[30,0],[28,[37,3],[[30,0,[\"markAndNavigate\"]]],null]],null],[12],[1,\"\\n        Visit\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]],[[[41,[30,0,[\"unwrapData\"]],[[[1,\"    \"],[10,0],[15,0,[29,[\"control-group-success \",[52,[30,0,[\"unwrapData\"]],\"is-editor\"]]]],[12],[1,\"\\n      \"],[10,0],[14,0,\"has-copy-button\"],[12],[1,\"\\n        \"],[8,[39,4],[[24,\"data-test-json-viewer\",\"\"]],[[\"@showToolbar\",\"@value\",\"@readOnly\",\"@viewportMargin\",\"@gutters\",\"@theme\"],[false,[28,[37,5],[[30,0,[\"unwrapData\"]]],null],true,\"Infinity\",false,\"hashi-read-only auto-height\"]],null],[1,\"\\n        \"],[8,[39,6],null,[[\"@copyValue\"],[[28,[37,5],[[30,0,[\"unwrapData\"]]],null]]],null],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"field is-grouped box is-fullwidth is-bottomless\"],[12],[1,\"\\n      \"],[8,[39,7],[[24,0,\"button\"]],[[\"@route\"],[\"vault.cluster.access.control-groups\"]],[[\"default\"],[[[[1,\"\\n        \"],[8,[39,8],null,[[\"@direction\"],[\"left\"]],null],[1,\"\\n        Back\\n      \"]],[]]]]],[1,\"\\n    \"],[13],[1,\"\\n\"]],[]],[[[1,\"    \"],[10,0],[14,0,\"control-group-success\"],[14,\"data-test-unwrap-form\",\"\"],[12],[1,\"\\n      \"],[11,\"form\"],[4,[38,2],[[30,0],[28,[37,3],[[30,0,[\"unwrap\"]],[30,0,[\"token\"]]],null]],[[\"on\"],[\"submit\"]]],[12],[1,\"\\n        \"],[8,[39,9],null,[[\"@errorMessage\"],[[30,0,[\"error\"]]]],null],[1,\"\\n        \"],[10,2],[12],[1,\"\\n          If you have the token, you can now can access\\n          \"],[10,\"code\"],[12],[1,[30,0,[\"model\",\"requestPath\"]]],[13],[1,\"\\n        \"],[13],[1,\"\\n        \"],[10,\"label\"],[14,\"for\",\"token\"],[14,0,\"is-label\"],[12],[1,\"\\n          Token to access data\\n        \"],[13],[1,\"\\n        \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n          \"],[8,[39,10],[[24,\"data-test-token-input\",\"\"],[24,0,\"input\"],[24,\"autocomplete\",\"off\"],[24,\"spellcheck\",\"false\"],[24,3,\"token\"]],[[\"@value\"],[[30,0,[\"token\"]]]],null],[1,\"\\n        \"],[13],[1,\"\\n        \"],[10,0],[14,0,\"field is-grouped box is-fullwidth is-bottomless\"],[12],[1,\"\\n          \"],[10,\"button\"],[14,\"data-test-unwrap-button\",\"\"],[14,0,\"button is-primary\"],[15,\"disabled\",[28,[37,11],[[30,0,[\"token\"]]],null]],[14,4,\"submit\"],[12],[1,\"\\n            Access\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n\"]],[]]]],[]]]],[],false,[\"if\",\"and\",\"action\",\"perform\",\"json-editor\",\"stringify\",\"hover-copy-button\",\"link-to\",\"chevron\",\"message-error\",\"input\",\"not\"]]",
    "moduleName": "vault/templates/components/control-group-success.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/control-group", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <div class="box is-fullwidth is-bottomless is-sideless">
    <MessageError @model={{this.model}} />
    <div class="control-group-header {{if this.isSuccess 'is-success'}}">
      <p>
        <Icon @name={{if this.isSuccess "check-circle-fill" "lock-fill"}} />
        <strong data-test-banner-prefix>{{this.bannerPrefix}}</strong>
        <span data-test-banner-text>{{this.bannerText}}</span>
      </p>
    </div>
    {{#if
      (and
        this.model.approved
        (not this.currentUserHasAuthorized)
        (or (not this.model.requestEntity) this.currentUserIsRequesting)
      )
    }}
      <ControlGroupSuccess
        data-test-control-group-success
        @model={{this.model}}
        @controlGroupResponse={{this.controlGroupResponse}}
      />
    {{else}}
      <div class="control-group">
        <div data-test-requestor-text>
          {{#if this.model.requestEntity.canRead}}
            <LinkTo
              @route="vault.cluster.access.identity.show"
              @models={{array "entities" this.model.requestEntity.id "details"}}
            >
              {{this.requestorName}}
            </LinkTo>
          {{else}}
            {{this.requestorName}}
          {{/if}}
          {{#if this.currentUserIsRequesting}}are{{else}}is{{/if}}
          {{#if this.model.approved}}
            authorized to access
            <code>{{this.model.requestPath}}</code>
          {{else}}
            requesting access to
            <code>{{this.model.requestPath}}</code>
          {{/if}}
        </div>
  
        {{#if (or (not this.model.requestEntity) this.currentUserIsRequesting)}}
          <div class="message is-list is-highlight has-copy-button" tabindex="-1" data-test-accessor-callout>
            <HoverCopyButton @alwaysShow={{true}} @copyValue={{this.model.id}} />
            <div class="message-body">
              <h4 class="title is-7 is-marginless">
                Accessor
              </h4>
              <code class="is-word-break" data-test-accessor-value>{{this.model.id}}</code>
            </div>
          </div>
        {{/if}}
  
        <div class="authorizations" data-test-authorizations>
          {{#if (gt this.model.authorizations.length 0)}}
            <span class="has-text-success">
              <Icon @name="check-circle" />
            </span>
            Already approved by
            {{#each this.model.authorizations as |authorization index|}}
              {{~#if authorization.canRead~}}
                <LinkTo @route="vault.cluster.access.identity.show" @models={{array "entities" authorization.id "details"}}>
                  {{authorization.name}}
                </LinkTo>
              {{~else~}}
                {{authorization.name}}
              {{~/if~}}{{#if (lt (inc index) this.model.authorizations.length)}},{{/if}}
            {{/each}}
          {{else}}
            <span class="has-text-grey">
              <Icon @name="check-circle" />
            </span>
            Awaiting authorization.
          {{/if}}
        </div>
      </div>
    {{/if}}
  
    {{#if this.controlGroupResponse.token}}
      <p class="control-group-token-text" data-test-token>
        We’ve saved your request token, but you may want to copy it just in case:
        <span class="tag has-font-monospaced" data-test-token-value>{{this.controlGroupResponse.token}}</span>
        <HoverCopyButton @alwaysShow={{true}} @copyValue={{this.controlGroupResponse.token}} />
      </p>
    {{/if}}
    {{! template-lint-configure simple-unless "warn" }}
    {{#unless (and this.model.approved (or (not this.model.requestEntity) this.currentUserIsRequesting))}}
      <div class="field is-grouped box is-fullwidth is-bottomless">
        {{#if this.model.canAuthorize}}
          {{#if (or this.model.approved this.currentUserHasAuthorized)}}
            <LinkTo @route="vault.cluster.access.control-groups" class="button" data-test-back-link={{true}}>
              <Chevron @direction="left" />
              Back
            </LinkTo>
          {{else}}
            <button
              type="button"
              class="button is-primary {{if this.authorize.isRunning 'is-loading'}}"
              {{action (perform this.authorize)}}
              data-test-authorize-button
            >
              Authorize
            </button>
          {{/if}}
        {{else}}
          <button
            type="button"
            class="button is-primary {{if this.refresh.isRunning 'is-loading'}}"
            {{action (perform this.refresh)}}
            data-test-refresh-button
          >
            Refresh
          </button>
        {{/if}}
      </div>
    {{/unless}}
  </div>
  */
  {
    "id": "HDFR742j",
    "block": "[[[10,0],[14,0,\"box is-fullwidth is-bottomless is-sideless\"],[12],[1,\"\\n  \"],[8,[39,0],null,[[\"@model\"],[[30,0,[\"model\"]]]],null],[1,\"\\n  \"],[10,0],[15,0,[29,[\"control-group-header \",[52,[30,0,[\"isSuccess\"]],\"is-success\"]]]],[12],[1,\"\\n    \"],[10,2],[12],[1,\"\\n      \"],[8,[39,2],null,[[\"@name\"],[[52,[30,0,[\"isSuccess\"]],\"check-circle-fill\",\"lock-fill\"]]],null],[1,\"\\n      \"],[10,\"strong\"],[14,\"data-test-banner-prefix\",\"\"],[12],[1,[30,0,[\"bannerPrefix\"]]],[13],[1,\"\\n      \"],[10,1],[14,\"data-test-banner-text\",\"\"],[12],[1,[30,0,[\"bannerText\"]]],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"],[41,[28,[37,3],[[30,0,[\"model\",\"approved\"]],[28,[37,4],[[30,0,[\"currentUserHasAuthorized\"]]],null],[28,[37,5],[[28,[37,4],[[30,0,[\"model\",\"requestEntity\"]]],null],[30,0,[\"currentUserIsRequesting\"]]],null]],null],[[[1,\"    \"],[8,[39,6],[[24,\"data-test-control-group-success\",\"\"]],[[\"@model\",\"@controlGroupResponse\"],[[30,0,[\"model\"]],[30,0,[\"controlGroupResponse\"]]]],null],[1,\"\\n\"]],[]],[[[1,\"    \"],[10,0],[14,0,\"control-group\"],[12],[1,\"\\n      \"],[10,0],[14,\"data-test-requestor-text\",\"\"],[12],[1,\"\\n\"],[41,[30,0,[\"model\",\"requestEntity\",\"canRead\"]],[[[1,\"          \"],[8,[39,7],null,[[\"@route\",\"@models\"],[\"vault.cluster.access.identity.show\",[28,[37,8],[\"entities\",[30,0,[\"model\",\"requestEntity\",\"id\"]],\"details\"],null]]],[[\"default\"],[[[[1,\"\\n            \"],[1,[30,0,[\"requestorName\"]]],[1,\"\\n          \"]],[]]]]],[1,\"\\n\"]],[]],[[[1,\"          \"],[1,[30,0,[\"requestorName\"]]],[1,\"\\n\"]],[]]],[1,\"        \"],[41,[30,0,[\"currentUserIsRequesting\"]],[[[1,\"are\"]],[]],[[[1,\"is\"]],[]]],[1,\"\\n\"],[41,[30,0,[\"model\",\"approved\"]],[[[1,\"          authorized to access\\n          \"],[10,\"code\"],[12],[1,[30,0,[\"model\",\"requestPath\"]]],[13],[1,\"\\n\"]],[]],[[[1,\"          requesting access to\\n          \"],[10,\"code\"],[12],[1,[30,0,[\"model\",\"requestPath\"]]],[13],[1,\"\\n\"]],[]]],[1,\"      \"],[13],[1,\"\\n\\n\"],[41,[28,[37,5],[[28,[37,4],[[30,0,[\"model\",\"requestEntity\"]]],null],[30,0,[\"currentUserIsRequesting\"]]],null],[[[1,\"        \"],[10,0],[14,0,\"message is-list is-highlight has-copy-button\"],[14,\"tabindex\",\"-1\"],[14,\"data-test-accessor-callout\",\"\"],[12],[1,\"\\n          \"],[8,[39,9],null,[[\"@alwaysShow\",\"@copyValue\"],[true,[30,0,[\"model\",\"id\"]]]],null],[1,\"\\n          \"],[10,0],[14,0,\"message-body\"],[12],[1,\"\\n            \"],[10,\"h4\"],[14,0,\"title is-7 is-marginless\"],[12],[1,\"\\n              Accessor\\n            \"],[13],[1,\"\\n            \"],[10,\"code\"],[14,0,\"is-word-break\"],[14,\"data-test-accessor-value\",\"\"],[12],[1,[30,0,[\"model\",\"id\"]]],[13],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n\"]],[]],null],[1,\"\\n      \"],[10,0],[14,0,\"authorizations\"],[14,\"data-test-authorizations\",\"\"],[12],[1,\"\\n\"],[41,[28,[37,10],[[30,0,[\"model\",\"authorizations\",\"length\"]],0],null],[[[1,\"          \"],[10,1],[14,0,\"has-text-success\"],[12],[1,\"\\n            \"],[8,[39,2],null,[[\"@name\"],[\"check-circle\"]],null],[1,\"\\n          \"],[13],[1,\"\\n          Already approved by\\n\"],[42,[28,[37,12],[[28,[37,12],[[30,0,[\"model\",\"authorizations\"]]],null]],null],null,[[[41,[30,1,[\"canRead\"]],[[[8,[39,7],null,[[\"@route\",\"@models\"],[\"vault.cluster.access.identity.show\",[28,[37,8],[\"entities\",[30,1,[\"id\"]],\"details\"],null]]],[[\"default\"],[[[[1,\"\\n                \"],[1,[30,1,[\"name\"]]],[1,\"\\n              \"]],[]]]]]],[]],[[[1,[30,1,[\"name\"]]]],[]]],[41,[28,[37,13],[[28,[37,14],[[30,2]],null],[30,0,[\"model\",\"authorizations\",\"length\"]]],null],[[[1,\",\"]],[]],null],[1,\"\\n\"]],[1,2]],null]],[]],[[[1,\"          \"],[10,1],[14,0,\"has-text-grey\"],[12],[1,\"\\n            \"],[8,[39,2],null,[[\"@name\"],[\"check-circle\"]],null],[1,\"\\n          \"],[13],[1,\"\\n          Awaiting authorization.\\n\"]],[]]],[1,\"      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n\"]],[]]],[1,\"\\n\"],[41,[30,0,[\"controlGroupResponse\",\"token\"]],[[[1,\"    \"],[10,2],[14,0,\"control-group-token-text\"],[14,\"data-test-token\",\"\"],[12],[1,\"\\n      We’ve saved your request token, but you may want to copy it just in case:\\n      \"],[10,1],[14,0,\"tag has-font-monospaced\"],[14,\"data-test-token-value\",\"\"],[12],[1,[30,0,[\"controlGroupResponse\",\"token\"]]],[13],[1,\"\\n      \"],[8,[39,9],null,[[\"@alwaysShow\",\"@copyValue\"],[true,[30,0,[\"controlGroupResponse\",\"token\"]]]],null],[1,\"\\n    \"],[13],[1,\"\\n\"]],[]],null],[41,[51,[28,[37,3],[[30,0,[\"model\",\"approved\"]],[28,[37,5],[[28,[37,4],[[30,0,[\"model\",\"requestEntity\"]]],null],[30,0,[\"currentUserIsRequesting\"]]],null]],null]],[[[1,\"    \"],[10,0],[14,0,\"field is-grouped box is-fullwidth is-bottomless\"],[12],[1,\"\\n\"],[41,[30,0,[\"model\",\"canAuthorize\"]],[[[41,[28,[37,5],[[30,0,[\"model\",\"approved\"]],[30,0,[\"currentUserHasAuthorized\"]]],null],[[[1,\"          \"],[8,[39,7],[[24,0,\"button\"],[16,\"data-test-back-link\",true]],[[\"@route\"],[\"vault.cluster.access.control-groups\"]],[[\"default\"],[[[[1,\"\\n            \"],[8,[39,16],null,[[\"@direction\"],[\"left\"]],null],[1,\"\\n            Back\\n          \"]],[]]]]],[1,\"\\n\"]],[]],[[[1,\"          \"],[11,\"button\"],[16,0,[29,[\"button is-primary \",[52,[30,0,[\"authorize\",\"isRunning\"]],\"is-loading\"]]]],[24,\"data-test-authorize-button\",\"\"],[24,4,\"button\"],[4,[38,17],[[30,0],[28,[37,18],[[30,0,[\"authorize\"]]],null]],null],[12],[1,\"\\n            Authorize\\n          \"],[13],[1,\"\\n\"]],[]]]],[]],[[[1,\"        \"],[11,\"button\"],[16,0,[29,[\"button is-primary \",[52,[30,0,[\"refresh\",\"isRunning\"]],\"is-loading\"]]]],[24,\"data-test-refresh-button\",\"\"],[24,4,\"button\"],[4,[38,17],[[30,0],[28,[37,18],[[30,0,[\"refresh\"]]],null]],null],[12],[1,\"\\n          Refresh\\n        \"],[13],[1,\"\\n\"]],[]]],[1,\"    \"],[13],[1,\"\\n\"]],[]],null],[13]],[\"authorization\",\"index\"],false,[\"message-error\",\"if\",\"icon\",\"and\",\"not\",\"or\",\"control-group-success\",\"link-to\",\"array\",\"hover-copy-button\",\"gt\",\"each\",\"-track-array\",\"lt\",\"inc\",\"unless\",\"chevron\",\"action\",\"perform\"]]",
    "moduleName": "vault/templates/components/control-group.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/database-connection", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.top>
      <KeyValueHeader @path="vault.cluster.secrets.backend.show" @mode={{this.mode}} @root={{@root}} @showCurrent={{true}} />
    </p.top>
    <p.levelLeft>
      <h1 class="title is-3" data-test-secret-header="true">
        {{#if (eq @mode "create")}}
          Create Connection
        {{else if (eq @mode "edit")}}
          Edit Connection
        {{else}}
          {{@model.id}}
        {{/if}}
      </h1>
    </p.levelLeft>
  </PageHeader>
  
  {{#if @model.isAvailablePlugin}}
    {{#if (eq @mode "show")}}
      <Toolbar>
        <ToolbarActions>
          {{#if @model.canDelete}}
            <button
              type="button"
              class="toolbar-link"
              onclick={{action (mut this.isDeleteModalActive) true}}
              data-test-database-connection-delete
            >
              Delete connection
            </button>
          {{/if}}
          {{#if @model.canReset}}
            <ConfirmAction
              @buttonClasses="toolbar-link"
              @onConfirmAction={{action "reset"}}
              @confirmTitle="Reset connection?"
              @confirmMessage="This will close the connection and its underlying plugin and restart it with the configuration stored in the barrier."
              @confirmButtonText="Reset"
              data-test-database-connection-reset
            >
              Reset connection
            </ConfirmAction>
          {{/if}}
          {{#if (or @model.canReset @model.canDelete)}}
            <div class="toolbar-separator"></div>
          {{/if}}
          {{#if @model.canRotateRoot}}
            {{! template-lint-disable quotes }}
            <ConfirmAction
              @buttonClasses="toolbar-link"
              @onConfirmAction={{this.rotate}}
              @confirmTitle="Rotate credentials?"
              @confirmMessage='This will rotate the "root" user credentials stored for the database connection. The password will not be accessible once rotated.'
              @confirmButtonText="Rotate"
              data-test-database-connection-rotate
            >
              Rotate root credentials
            </ConfirmAction>
            {{! template-lint-enable }}
          {{/if}}
          {{#if @model.canAddRole}}
            <ToolbarSecretLink
              @secret=""
              @mode="create"
              @type="add"
              @queryParams={{hash initialKey=@model.name itemType="role"}}
              data-test-secret-create={{true}}
            >
              Add role
            </ToolbarSecretLink>
          {{/if}}
          {{#if @model.canEdit}}
            <ToolbarSecretLink @secret={{@model.id}} @mode="edit" data-test-edit-link={{true}} @replace={{true}}>
              Edit configuration
            </ToolbarSecretLink>
          {{/if}}
        </ToolbarActions>
      </Toolbar>
    {{/if}}
  {{/if}}
  
  {{#if (eq @mode "create")}}
  
    {{#if (eq @model.plugin_name "vault-plugin-database-oracle")}}
      <AlertBanner @type="warning">
        Please ensure that your Oracle plugin has the default name of
        <b>vault-plugin-database-oracle</b>. Custom naming is not supported in the UI at this time. If the plugin is already
        named vault-plugin-database-oracle, disregard this warning.
      </AlertBanner>
    {{/if}}
  
    <form {{on "submit" this.handleCreateConnection}} aria-label="create connection form">
      {{#each @model.fieldAttrs as |attr|}}
        {{#if (not-eq attr.options.readOnly true)}}
          <FormField data-test-field={{true}} @attr={{attr}} @model={{@model}} />
        {{/if}}
      {{/each}}
  
      {{! Plugin Config Section }}
      <div class="form-section box is-shadowless is-fullwidth">
        <fieldset class="form-fieldset">
          <legend class="title is-5">Plugin config</legend>
          {{#if @model.pluginFieldGroups}}
            {{#each @model.pluginFieldGroups as |fieldGroup|}}
              {{#each-in fieldGroup as |group fields|}}
                {{#if (eq group "default")}}
                  <div class="columns is-desktop is-multiline">
                    {{#each fields as |attr|}}
                      {{#if
                        (includes attr.name (array "max_open_connections" "max_idle_connections" "max_connection_lifetime"))
                      }}
                        <div class="column is-one-third">
                          <FormField data-test-field={{true}} @attr={{attr}} @model={{@model}} />
                        </div>
                      {{else}}
                        <div class="column is-full">
                          <FormField data-test-field={{true}} @attr={{attr}} @model={{@model}} />
                        </div>
                      {{/if}}
                    {{/each}}
                  </div>
                {{else}}
                  {{#let (camelize (concat "show" group)) as |prop|}}
                    <ToggleButton
                      @isOpen={{get this prop}}
                      @openLabel={{concat "Hide " group}}
                      @closedLabel={{group}}
                      @onClick={{fn (mut (get this prop))}}
                      class="is-block"
                      data-test-toggle-group={{group}}
                    />
                    {{#if (get this prop)}}
                      <div class="box is-marginless">
                        {{#each fields as |attr|}}
                          <FormField data-test-field={{true}} @attr={{attr}} @model={{@model}} />
                        {{/each}}
                      </div>
                    {{/if}}
                  {{/let}}
                {{/if}}
              {{/each-in}}
            {{/each}}
          {{else}}
            <EmptyState @title="No plugin selected" @message="Select a plugin type to be able to configure it." />
          {{/if}}
        </fieldset>
      </div>
  
      {{! Statements Section }}
      {{! template-lint-configure simple-unless "warn"  }}
      {{#unless (and @model.plugin_name (not @model.statementFields))}}
        <div class="form-section box is-shadowless is-fullwidth">
          <h3 class="title is-5">Statements</h3>
          {{#if (eq @model.statementFields null)}}
            <EmptyState @title="No plugin selected" @message="Select a plugin type to be able to configure it." />
          {{else}}
            {{#each @model.statementFields as |attr|}}
              <FormField data-test-field={{true}} @attr={{attr}} @model={{@model}} />
            {{/each}}
          {{/if}}
        </div>
      {{/unless}}
  
      <div class="field is-grouped is-grouped-split is-fullwidth box is-bottomless">
        <div class="field is-grouped">
          <div class="control">
            <button data-test-secret-save type="submit" disabled={{this.buttonDisabled}} class="button is-primary">
              Create database
            </button>
          </div>
          <div class="control">
            <SecretLink @mode="list" class="button">
              Cancel
            </SecretLink>
          </div>
        </div>
      </div>
    </form>
  {{else if (and (eq @mode "edit") @model.isAvailablePlugin)}}
    <form {{on "submit" this.handleUpdateConnection}} aria-label="plugin config form">
      {{#each @model.fieldAttrs as |attr|}}
        {{#if (or (eq attr.name "name") (eq attr.name "plugin_name"))}}
          <ReadonlyFormField @attr={{attr}} @value={{get @model attr.name}} />
        {{else if (not-eq attr.options.readOnly true)}}
          <FormField data-test-field={{true}} @attr={{attr}} @model={{@model}} />
        {{/if}}
      {{/each}}
  
      {{! Plugin Config Edit }}
      <div class="form-section box is-shadowless is-fullwidth">
        <fieldset class="form-fieldset">
          <legend class="title is-5">Plugin config</legend>
          {{#each @model.pluginFieldGroups as |fieldGroup|}}
            {{#each-in fieldGroup as |group fields|}}
              {{#if (eq group "default")}}
                <div class="columns is-desktop is-multiline">
                  {{#each fields as |attr|}}
                    {{#if
                      (includes attr.name (array "max_open_connections" "max_idle_connections" "max_connection_lifetime"))
                    }}
                      <div class="column is-one-third">
                        <FormField data-test-field={{true}} @attr={{attr}} @model={{@model}} />
                      </div>
                    {{else if (eq attr.name "password")}}
                      <div class="column is-full">
                        <label for={{attr.name}} class="is-label">
                          {{capitalize (or attr.options.label attr.name)}}
                        </label>
                        <div class="field">
                          <Toggle
                            @name="show-{{attr.name}}"
                            @status="success"
                            @size="small"
                            @onChange={{fn this.updateShowPassword (not this.showPasswordField)}}
                            @checked={{this.showPasswordField}}
                            data-test-toggle={{attr.name}}
                          >
                            <span class="ttl-picker-label has-text-grey">Update password</span><br />
                            <div class="description has-text-grey">
                              <span>
                                {{if
                                  this.showPasswordField
                                  "The new password that will be used when connecting to the database"
                                  "OpenBao will use the existing password"
                                }}
                              </span>
                            </div>
                            {{#if this.showPasswordField}}
                              <Input
                                {{on "change" (fn this.updatePassword attr.name)}}
                                @type="password"
                                @value={{get @model attr.name}}
                                name={{attr.name}}
                                class="input"
                                {{! Prevents browsers from auto-filling }}
                                autocomplete="new-password"
                                spellcheck="false"
                              />
                            {{/if}}
                          </Toggle>
                        </div>
                      </div>
                    {{else}}
                      <div class="column is-full">
                        <FormField data-test-field={{true}} @attr={{attr}} @model={{@model}} />
                      </div>
                    {{/if}}
                  {{/each}}
                </div>
              {{else}}
                {{#let (camelize (concat "show" group)) as |prop|}}
                  <ToggleButton
                    @isOpen={{get this prop}}
                    @openLabel={{concat "Hide " group}}
                    @closedLabel={{group}}
                    @onClick={{fn (mut (get this prop))}}
                    class="is-block"
                    data-test-toggle-group={{group}}
                  />
                  {{#if (get this prop)}}
                    <div class="box is-marginless">
                      {{#each fields as |attr|}}
                        <FormField data-test-field={{true}} @attr={{attr}} @model={{@model}} />
                      {{/each}}
                    </div>
                  {{/if}}
                {{/let}}
              {{/if}}
            {{/each-in}}
          {{/each}}
        </fieldset>
      </div>
  
      {{! Statements Edit Section }}
      {{#if (not (and @model.plugin_name (not @model.statementFields)))}}
        <div class="form-section box is-shadowless is-fullwidth">
          <fieldset class="form-fieldset">
            <legend class="title is-5">Statements</legend>
            {{#each @model.statementFields as |attr|}}
              <FormField data-test-field={{true}} @attr={{attr}} @model={{@model}} />
            {{/each}}
          </fieldset>
        </div>
      {{/if}}
  
      <div class="field is-grouped is-grouped-split is-fullwidth box is-bottomless">
        <div class="field is-grouped">
          <div class="control">
            <button data-test-secret-save type="submit" disabled={{this.buttonDisabled}} class="button is-primary">
              Save
            </button>
          </div>
          <div class="control">
            <SecretLink @mode="list" class="button">
              Cancel
            </SecretLink>
          </div>
        </div>
      </div>
    </form>
  {{else if (eq @model.isAvailablePlugin false)}}
    <EmptyState
      @title="Database type unavailable"
      @subTitle="Not supported in the UI"
      @icon="skip"
      @message="This database type cannot be viewed in the UI. You will have to use the API or CLI to perform actions here."
      @bottomBorder={{true}}
    >
      <LinkTo @route="vault.cluster.secrets.backend.list-root" class="link">
        <Chevron @direction="left" />
        Go back
      </LinkTo>
      <DocLink @path="/api/secret/databases">Documentation</DocLink>
    </EmptyState>
  {{else}}
    {{#each @model.showAttrs as |attr|}}
      {{#let attr.options.defaultShown as |defaultDisplay|}}
        {{#if (eq attr.type "object")}}
          <InfoTableRow
            @alwaysRender={{not (is-empty-value (get @model attr.name) hasDefault=defaultDisplay)}}
            @defaultShown={{defaultDisplay}}
            @label={{capitalize (or attr.options.label (humanize (dasherize attr.name)))}}
            @value={{stringify (get @model attr.name)}}
          />
        {{else if (eq attr.type "array")}}
          <InfoTableRow
            @alwaysRender={{not (is-empty-value (get @model attr.name) hasDefault=defaultDisplay)}}
            @defaultShown={{defaultDisplay}}
            @label={{capitalize (or attr.options.label (humanize (dasherize attr.name)))}}
            @value={{get @model attr.name}}
            @isLink={{true}}
            @queryParam="role"
            @type={{attr.type}}
          />
        {{else}}
          <InfoTableRow
            @alwaysRender={{not (is-empty-value (get @model attr.name) hasDefault=defaultDisplay)}}
            @defaultShown={{defaultDisplay}}
            @label={{capitalize (or attr.options.label (humanize (dasherize attr.name)))}}
            @value={{get @model attr.name}}
          />
        {{/if}}
      {{/let}}
    {{/each}}
  {{/if}}
  
  <Modal
    @title="Rotate your root credentials?"
    @onClose={{this.continueWithoutRotate}}
    @isActive={{this.showSaveModal}}
    @type="info"
    @showCloseButton={{false}}
  >
    <section class="modal-card-body">
      <p class="has-bottom-margin-s">
        It’s best practice to rotate the root credential immediately after the initial configuration of each database. Once
        rotated,
        <strong>only OpenBao knows the new root password</strong>.
      </p>
      <p>Would you like to rotate your new credentials? You can also do this later.</p>
    </section>
    <footer class="modal-card-foot modal-card-foot-outlined">
      <button
        type="button"
        class="button is-primary"
        {{on "click" this.continueWithRotate}}
        data-test-enable-rotate-connection
      >
        Rotate and enable
      </button>
      <button type="button" class="button is-secondary" {{on "click" this.continueWithoutRotate}} data-test-enable-connection>
        Enable without rotating
      </button>
    </footer>
  </Modal>
  
  <ConfirmationModal
    @title="Delete connection?"
    @onClose={{action (mut this.isDeleteModalActive) false}}
    @isActive={{this.isDeleteModalActive}}
    @confirmText={{@model.name}}
    @toConfirmMsg="deleting the connection"
    @onConfirm={{action "delete"}}
  >
    <p>
      Deleting the connection means that any associated roles won't be able to generate credentials until the connection is
      reconfigured.
    </p>
    <MessageError @model={{this.model}} @errorMessage={{this.error}} />
  </ConfirmationModal>
  */
  {
    "id": "odxiMiwd",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"top\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,1],null,[[\"@path\",\"@mode\",\"@root\",\"@showCurrent\"],[\"vault.cluster.secrets.backend.show\",[30,0,[\"mode\"]],[30,2],true]],null],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[14,\"data-test-secret-header\",\"true\"],[12],[1,\"\\n\"],[41,[28,[37,3],[[30,3],\"create\"],null],[[[1,\"        Create Connection\\n\"]],[]],[[[41,[28,[37,3],[[30,3],\"edit\"],null],[[[1,\"        Edit Connection\\n\"]],[]],[[[1,\"        \"],[1,[30,4,[\"id\"]]],[1,\"\\n      \"]],[]]]],[]]],[1,\"    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\\n\"],[41,[30,4,[\"isAvailablePlugin\"]],[[[41,[28,[37,3],[[30,3],\"show\"],null],[[[1,\"    \"],[8,[39,4],null,null,[[\"default\"],[[[[1,\"\\n      \"],[8,[39,5],null,null,[[\"default\"],[[[[1,\"\\n\"],[41,[30,4,[\"canDelete\"]],[[[1,\"          \"],[10,\"button\"],[14,0,\"toolbar-link\"],[15,\"onclick\",[28,[37,6],[[30,0],[28,[37,7],[[30,0,[\"isDeleteModalActive\"]]],null],true],null]],[14,\"data-test-database-connection-delete\",\"\"],[14,4,\"button\"],[12],[1,\"\\n            Delete connection\\n          \"],[13],[1,\"\\n\"]],[]],null],[41,[30,4,[\"canReset\"]],[[[1,\"          \"],[8,[39,8],[[24,\"data-test-database-connection-reset\",\"\"]],[[\"@buttonClasses\",\"@onConfirmAction\",\"@confirmTitle\",\"@confirmMessage\",\"@confirmButtonText\"],[\"toolbar-link\",[28,[37,6],[[30,0],\"reset\"],null],\"Reset connection?\",\"This will close the connection and its underlying plugin and restart it with the configuration stored in the barrier.\",\"Reset\"]],[[\"default\"],[[[[1,\"\\n            Reset connection\\n          \"]],[]]]]],[1,\"\\n\"]],[]],null],[41,[28,[37,9],[[30,4,[\"canReset\"]],[30,4,[\"canDelete\"]]],null],[[[1,\"          \"],[10,0],[14,0,\"toolbar-separator\"],[12],[13],[1,\"\\n\"]],[]],null],[41,[30,4,[\"canRotateRoot\"]],[[[1,\"          \"],[8,[39,8],[[24,\"data-test-database-connection-rotate\",\"\"]],[[\"@buttonClasses\",\"@onConfirmAction\",\"@confirmTitle\",\"@confirmMessage\",\"@confirmButtonText\"],[\"toolbar-link\",[30,0,[\"rotate\"]],\"Rotate credentials?\",\"This will rotate the \\\"root\\\" user credentials stored for the database connection. The password will not be accessible once rotated.\",\"Rotate\"]],[[\"default\"],[[[[1,\"\\n            Rotate root credentials\\n          \"]],[]]]]],[1,\"\\n\"]],[]],null],[41,[30,4,[\"canAddRole\"]],[[[1,\"          \"],[8,[39,10],[[16,\"data-test-secret-create\",true]],[[\"@secret\",\"@mode\",\"@type\",\"@queryParams\"],[\"\",\"create\",\"add\",[28,[37,11],null,[[\"initialKey\",\"itemType\"],[[30,4,[\"name\"]],\"role\"]]]]],[[\"default\"],[[[[1,\"\\n            Add role\\n          \"]],[]]]]],[1,\"\\n\"]],[]],null],[41,[30,4,[\"canEdit\"]],[[[1,\"          \"],[8,[39,10],[[16,\"data-test-edit-link\",true]],[[\"@secret\",\"@mode\",\"@replace\"],[[30,4,[\"id\"]],\"edit\",true]],[[\"default\"],[[[[1,\"\\n            Edit configuration\\n          \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"      \"]],[]]]]],[1,\"\\n    \"]],[]]]]],[1,\"\\n\"]],[]],null]],[]],null],[1,\"\\n\"],[41,[28,[37,3],[[30,3],\"create\"],null],[[[1,\"\\n\"],[41,[28,[37,3],[[30,4,[\"plugin_name\"]],\"vault-plugin-database-oracle\"],null],[[[1,\"    \"],[8,[39,12],null,[[\"@type\"],[\"warning\"]],[[\"default\"],[[[[1,\"\\n      Please ensure that your Oracle plugin has the default name of\\n      \"],[10,\"b\"],[12],[1,\"vault-plugin-database-oracle\"],[13],[1,\". Custom naming is not supported in the UI at this time. If the plugin is already\\n      named vault-plugin-database-oracle, disregard this warning.\\n    \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"\\n  \"],[11,\"form\"],[24,\"aria-label\",\"create connection form\"],[4,[38,13],[\"submit\",[30,0,[\"handleCreateConnection\"]]],null],[12],[1,\"\\n\"],[42,[28,[37,15],[[28,[37,15],[[30,4,[\"fieldAttrs\"]]],null]],null],null,[[[41,[28,[37,16],[[30,5,[\"options\",\"readOnly\"]],true],null],[[[1,\"        \"],[8,[39,17],[[16,\"data-test-field\",true]],[[\"@attr\",\"@model\"],[[30,5],[30,4]]],null],[1,\"\\n\"]],[]],null]],[5]],null],[1,\"\\n\"],[1,\"    \"],[10,0],[14,0,\"form-section box is-shadowless is-fullwidth\"],[12],[1,\"\\n      \"],[10,\"fieldset\"],[14,0,\"form-fieldset\"],[12],[1,\"\\n        \"],[10,\"legend\"],[14,0,\"title is-5\"],[12],[1,\"Plugin config\"],[13],[1,\"\\n\"],[41,[30,4,[\"pluginFieldGroups\"]],[[[42,[28,[37,15],[[28,[37,15],[[30,4,[\"pluginFieldGroups\"]]],null]],null],null,[[[42,[28,[37,18],[[30,6]],null],null,[[[41,[28,[37,3],[[30,8],\"default\"],null],[[[1,\"                \"],[10,0],[14,0,\"columns is-desktop is-multiline\"],[12],[1,\"\\n\"],[42,[28,[37,15],[[28,[37,15],[[30,7]],null]],null],null,[[[41,[28,[37,19],[[30,9,[\"name\"]],[28,[37,20],[\"max_open_connections\",\"max_idle_connections\",\"max_connection_lifetime\"],null]],null],[[[1,\"                      \"],[10,0],[14,0,\"column is-one-third\"],[12],[1,\"\\n                        \"],[8,[39,17],[[16,\"data-test-field\",true]],[[\"@attr\",\"@model\"],[[30,9],[30,4]]],null],[1,\"\\n                      \"],[13],[1,\"\\n\"]],[]],[[[1,\"                      \"],[10,0],[14,0,\"column is-full\"],[12],[1,\"\\n                        \"],[8,[39,17],[[16,\"data-test-field\",true]],[[\"@attr\",\"@model\"],[[30,9],[30,4]]],null],[1,\"\\n                      \"],[13],[1,\"\\n\"]],[]]]],[9]],null],[1,\"                \"],[13],[1,\"\\n\"]],[]],[[[44,[[28,[37,22],[[28,[37,23],[\"show\",[30,8]],null]],null]],[[[1,\"                  \"],[8,[39,24],[[24,0,\"is-block\"],[16,\"data-test-toggle-group\",[30,8]]],[[\"@isOpen\",\"@openLabel\",\"@closedLabel\",\"@onClick\"],[[28,[37,25],[[30,0],[30,10]],null],[28,[37,23],[\"Hide \",[30,8]],null],[30,8],[28,[37,26],[[28,[37,7],[[28,[37,25],[[30,0],[30,10]],null]],null]],null]]],null],[1,\"\\n\"],[41,[28,[37,25],[[30,0],[30,10]],null],[[[1,\"                    \"],[10,0],[14,0,\"box is-marginless\"],[12],[1,\"\\n\"],[42,[28,[37,15],[[28,[37,15],[[30,7]],null]],null],null,[[[1,\"                        \"],[8,[39,17],[[16,\"data-test-field\",true]],[[\"@attr\",\"@model\"],[[30,11],[30,4]]],null],[1,\"\\n\"]],[11]],null],[1,\"                    \"],[13],[1,\"\\n\"]],[]],null]],[10]]]],[]]]],[7,8]],null]],[6]],null]],[]],[[[1,\"          \"],[8,[39,27],null,[[\"@title\",\"@message\"],[\"No plugin selected\",\"Select a plugin type to be able to configure it.\"]],null],[1,\"\\n\"]],[]]],[1,\"      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n\\n\"],[41,[51,[28,[37,29],[[30,4,[\"plugin_name\"]],[28,[37,30],[[30,4,[\"statementFields\"]]],null]],null]],[[[1,\"      \"],[10,0],[14,0,\"form-section box is-shadowless is-fullwidth\"],[12],[1,\"\\n        \"],[10,\"h3\"],[14,0,\"title is-5\"],[12],[1,\"Statements\"],[13],[1,\"\\n\"],[41,[28,[37,3],[[30,4,[\"statementFields\"]],null],null],[[[1,\"          \"],[8,[39,27],null,[[\"@title\",\"@message\"],[\"No plugin selected\",\"Select a plugin type to be able to configure it.\"]],null],[1,\"\\n\"]],[]],[[[42,[28,[37,15],[[28,[37,15],[[30,4,[\"statementFields\"]]],null]],null],null,[[[1,\"            \"],[8,[39,17],[[16,\"data-test-field\",true]],[[\"@attr\",\"@model\"],[[30,12],[30,4]]],null],[1,\"\\n\"]],[12]],null]],[]]],[1,\"      \"],[13],[1,\"\\n\"]],[]],null],[1,\"\\n    \"],[10,0],[14,0,\"field is-grouped is-grouped-split is-fullwidth box is-bottomless\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"field is-grouped\"],[12],[1,\"\\n        \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n          \"],[10,\"button\"],[14,\"data-test-secret-save\",\"\"],[15,\"disabled\",[30,0,[\"buttonDisabled\"]]],[14,0,\"button is-primary\"],[14,4,\"submit\"],[12],[1,\"\\n            Create database\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n        \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n          \"],[8,[39,31],[[24,0,\"button\"]],[[\"@mode\"],[\"list\"]],[[\"default\"],[[[[1,\"\\n            Cancel\\n          \"]],[]]]]],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]],[[[41,[28,[37,29],[[28,[37,3],[[30,3],\"edit\"],null],[30,4,[\"isAvailablePlugin\"]]],null],[[[1,\"  \"],[11,\"form\"],[24,\"aria-label\",\"plugin config form\"],[4,[38,13],[\"submit\",[30,0,[\"handleUpdateConnection\"]]],null],[12],[1,\"\\n\"],[42,[28,[37,15],[[28,[37,15],[[30,4,[\"fieldAttrs\"]]],null]],null],null,[[[41,[28,[37,9],[[28,[37,3],[[30,13,[\"name\"]],\"name\"],null],[28,[37,3],[[30,13,[\"name\"]],\"plugin_name\"],null]],null],[[[1,\"        \"],[8,[39,32],null,[[\"@attr\",\"@value\"],[[30,13],[28,[37,25],[[30,4],[30,13,[\"name\"]]],null]]],null],[1,\"\\n\"]],[]],[[[41,[28,[37,16],[[30,13,[\"options\",\"readOnly\"]],true],null],[[[1,\"        \"],[8,[39,17],[[16,\"data-test-field\",true]],[[\"@attr\",\"@model\"],[[30,13],[30,4]]],null],[1,\"\\n      \"]],[]],null]],[]]]],[13]],null],[1,\"\\n\"],[1,\"    \"],[10,0],[14,0,\"form-section box is-shadowless is-fullwidth\"],[12],[1,\"\\n      \"],[10,\"fieldset\"],[14,0,\"form-fieldset\"],[12],[1,\"\\n        \"],[10,\"legend\"],[14,0,\"title is-5\"],[12],[1,\"Plugin config\"],[13],[1,\"\\n\"],[42,[28,[37,15],[[28,[37,15],[[30,4,[\"pluginFieldGroups\"]]],null]],null],null,[[[42,[28,[37,18],[[30,14]],null],null,[[[41,[28,[37,3],[[30,16],\"default\"],null],[[[1,\"              \"],[10,0],[14,0,\"columns is-desktop is-multiline\"],[12],[1,\"\\n\"],[42,[28,[37,15],[[28,[37,15],[[30,15]],null]],null],null,[[[41,[28,[37,19],[[30,17,[\"name\"]],[28,[37,20],[\"max_open_connections\",\"max_idle_connections\",\"max_connection_lifetime\"],null]],null],[[[1,\"                    \"],[10,0],[14,0,\"column is-one-third\"],[12],[1,\"\\n                      \"],[8,[39,17],[[16,\"data-test-field\",true]],[[\"@attr\",\"@model\"],[[30,17],[30,4]]],null],[1,\"\\n                    \"],[13],[1,\"\\n\"]],[]],[[[41,[28,[37,3],[[30,17,[\"name\"]],\"password\"],null],[[[1,\"                    \"],[10,0],[14,0,\"column is-full\"],[12],[1,\"\\n                      \"],[10,\"label\"],[15,\"for\",[30,17,[\"name\"]]],[14,0,\"is-label\"],[12],[1,\"\\n                        \"],[1,[28,[35,33],[[28,[37,9],[[30,17,[\"options\",\"label\"]],[30,17,[\"name\"]]],null]],null]],[1,\"\\n                      \"],[13],[1,\"\\n                      \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n                        \"],[8,[39,34],[[16,\"data-test-toggle\",[30,17,[\"name\"]]]],[[\"@name\",\"@status\",\"@size\",\"@onChange\",\"@checked\"],[[29,[\"show-\",[30,17,[\"name\"]]]],\"success\",\"small\",[28,[37,26],[[30,0,[\"updateShowPassword\"]],[28,[37,30],[[30,0,[\"showPasswordField\"]]],null]],null],[30,0,[\"showPasswordField\"]]]],[[\"default\"],[[[[1,\"\\n                          \"],[10,1],[14,0,\"ttl-picker-label has-text-grey\"],[12],[1,\"Update password\"],[13],[10,\"br\"],[12],[13],[1,\"\\n                          \"],[10,0],[14,0,\"description has-text-grey\"],[12],[1,\"\\n                            \"],[10,1],[12],[1,\"\\n                              \"],[1,[52,[30,0,[\"showPasswordField\"]],\"The new password that will be used when connecting to the database\",\"OpenBao will use the existing password\"]],[1,\"\\n                            \"],[13],[1,\"\\n                          \"],[13],[1,\"\\n\"],[41,[30,0,[\"showPasswordField\"]],[[[1,\"                            \"],[8,[39,35],[[16,3,[30,17,[\"name\"]]],[24,0,\"input\"],[24,\"autocomplete\",\"new-password\"],[24,\"spellcheck\",\"false\"],[4,[38,13],[\"change\",[28,[37,26],[[30,0,[\"updatePassword\"]],[30,17,[\"name\"]]],null]],null]],[[\"@type\",\"@value\"],[\"password\",[28,[37,25],[[30,4],[30,17,[\"name\"]]],null]]],null],[1,\"\\n\"]],[]],null],[1,\"                        \"]],[]]]]],[1,\"\\n                      \"],[13],[1,\"\\n                    \"],[13],[1,\"\\n\"]],[]],[[[1,\"                    \"],[10,0],[14,0,\"column is-full\"],[12],[1,\"\\n                      \"],[8,[39,17],[[16,\"data-test-field\",true]],[[\"@attr\",\"@model\"],[[30,17],[30,4]]],null],[1,\"\\n                    \"],[13],[1,\"\\n                  \"]],[]]]],[]]]],[17]],null],[1,\"              \"],[13],[1,\"\\n\"]],[]],[[[44,[[28,[37,22],[[28,[37,23],[\"show\",[30,16]],null]],null]],[[[1,\"                \"],[8,[39,24],[[24,0,\"is-block\"],[16,\"data-test-toggle-group\",[30,16]]],[[\"@isOpen\",\"@openLabel\",\"@closedLabel\",\"@onClick\"],[[28,[37,25],[[30,0],[30,18]],null],[28,[37,23],[\"Hide \",[30,16]],null],[30,16],[28,[37,26],[[28,[37,7],[[28,[37,25],[[30,0],[30,18]],null]],null]],null]]],null],[1,\"\\n\"],[41,[28,[37,25],[[30,0],[30,18]],null],[[[1,\"                  \"],[10,0],[14,0,\"box is-marginless\"],[12],[1,\"\\n\"],[42,[28,[37,15],[[28,[37,15],[[30,15]],null]],null],null,[[[1,\"                      \"],[8,[39,17],[[16,\"data-test-field\",true]],[[\"@attr\",\"@model\"],[[30,19],[30,4]]],null],[1,\"\\n\"]],[19]],null],[1,\"                  \"],[13],[1,\"\\n\"]],[]],null]],[18]]]],[]]]],[15,16]],null]],[14]],null],[1,\"      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n\\n\"],[41,[28,[37,30],[[28,[37,29],[[30,4,[\"plugin_name\"]],[28,[37,30],[[30,4,[\"statementFields\"]]],null]],null]],null],[[[1,\"      \"],[10,0],[14,0,\"form-section box is-shadowless is-fullwidth\"],[12],[1,\"\\n        \"],[10,\"fieldset\"],[14,0,\"form-fieldset\"],[12],[1,\"\\n          \"],[10,\"legend\"],[14,0,\"title is-5\"],[12],[1,\"Statements\"],[13],[1,\"\\n\"],[42,[28,[37,15],[[28,[37,15],[[30,4,[\"statementFields\"]]],null]],null],null,[[[1,\"            \"],[8,[39,17],[[16,\"data-test-field\",true]],[[\"@attr\",\"@model\"],[[30,20],[30,4]]],null],[1,\"\\n\"]],[20]],null],[1,\"        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n\"]],[]],null],[1,\"\\n    \"],[10,0],[14,0,\"field is-grouped is-grouped-split is-fullwidth box is-bottomless\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"field is-grouped\"],[12],[1,\"\\n        \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n          \"],[10,\"button\"],[14,\"data-test-secret-save\",\"\"],[15,\"disabled\",[30,0,[\"buttonDisabled\"]]],[14,0,\"button is-primary\"],[14,4,\"submit\"],[12],[1,\"\\n            Save\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n        \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n          \"],[8,[39,31],[[24,0,\"button\"]],[[\"@mode\"],[\"list\"]],[[\"default\"],[[[[1,\"\\n            Cancel\\n          \"]],[]]]]],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]],[[[41,[28,[37,3],[[30,4,[\"isAvailablePlugin\"]],false],null],[[[1,\"  \"],[8,[39,27],null,[[\"@title\",\"@subTitle\",\"@icon\",\"@message\",\"@bottomBorder\"],[\"Database type unavailable\",\"Not supported in the UI\",\"skip\",\"This database type cannot be viewed in the UI. You will have to use the API or CLI to perform actions here.\",true]],[[\"default\"],[[[[1,\"\\n    \"],[8,[39,36],[[24,0,\"link\"]],[[\"@route\"],[\"vault.cluster.secrets.backend.list-root\"]],[[\"default\"],[[[[1,\"\\n      \"],[8,[39,37],null,[[\"@direction\"],[\"left\"]],null],[1,\"\\n      Go back\\n    \"]],[]]]]],[1,\"\\n    \"],[8,[39,38],null,[[\"@path\"],[\"/api/secret/databases\"]],[[\"default\"],[[[[1,\"Documentation\"]],[]]]]],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]],[[[42,[28,[37,15],[[28,[37,15],[[30,4,[\"showAttrs\"]]],null]],null],null,[[[44,[[30,21,[\"options\",\"defaultShown\"]]],[[[41,[28,[37,3],[[30,21,[\"type\"]],\"object\"],null],[[[1,\"        \"],[8,[39,39],null,[[\"@alwaysRender\",\"@defaultShown\",\"@label\",\"@value\"],[[28,[37,30],[[28,[37,40],[[28,[37,25],[[30,4],[30,21,[\"name\"]]],null]],[[\"hasDefault\"],[[30,22]]]]],null],[30,22],[28,[37,33],[[28,[37,9],[[30,21,[\"options\",\"label\"]],[28,[37,41],[[28,[37,42],[[30,21,[\"name\"]]],null]],null]],null]],null],[28,[37,43],[[28,[37,25],[[30,4],[30,21,[\"name\"]]],null]],null]]],null],[1,\"\\n\"]],[]],[[[41,[28,[37,3],[[30,21,[\"type\"]],\"array\"],null],[[[1,\"        \"],[8,[39,39],null,[[\"@alwaysRender\",\"@defaultShown\",\"@label\",\"@value\",\"@isLink\",\"@queryParam\",\"@type\"],[[28,[37,30],[[28,[37,40],[[28,[37,25],[[30,4],[30,21,[\"name\"]]],null]],[[\"hasDefault\"],[[30,22]]]]],null],[30,22],[28,[37,33],[[28,[37,9],[[30,21,[\"options\",\"label\"]],[28,[37,41],[[28,[37,42],[[30,21,[\"name\"]]],null]],null]],null]],null],[28,[37,25],[[30,4],[30,21,[\"name\"]]],null],true,\"role\",[30,21,[\"type\"]]]],null],[1,\"\\n\"]],[]],[[[1,\"        \"],[8,[39,39],null,[[\"@alwaysRender\",\"@defaultShown\",\"@label\",\"@value\"],[[28,[37,30],[[28,[37,40],[[28,[37,25],[[30,4],[30,21,[\"name\"]]],null]],[[\"hasDefault\"],[[30,22]]]]],null],[30,22],[28,[37,33],[[28,[37,9],[[30,21,[\"options\",\"label\"]],[28,[37,41],[[28,[37,42],[[30,21,[\"name\"]]],null]],null]],null]],null],[28,[37,25],[[30,4],[30,21,[\"name\"]]],null]]],null],[1,\"\\n      \"]],[]]]],[]]]],[22]]]],[21]],null]],[]]]],[]]]],[]]],[1,\"\\n\"],[8,[39,44],null,[[\"@title\",\"@onClose\",\"@isActive\",\"@type\",\"@showCloseButton\"],[\"Rotate your root credentials?\",[30,0,[\"continueWithoutRotate\"]],[30,0,[\"showSaveModal\"]],\"info\",false]],[[\"default\"],[[[[1,\"\\n  \"],[10,\"section\"],[14,0,\"modal-card-body\"],[12],[1,\"\\n    \"],[10,2],[14,0,\"has-bottom-margin-s\"],[12],[1,\"\\n      It’s best practice to rotate the root credential immediately after the initial configuration of each database. Once\\n      rotated,\\n      \"],[10,\"strong\"],[12],[1,\"only OpenBao knows the new root password\"],[13],[1,\".\\n    \"],[13],[1,\"\\n    \"],[10,2],[12],[1,\"Would you like to rotate your new credentials? You can also do this later.\"],[13],[1,\"\\n  \"],[13],[1,\"\\n  \"],[10,\"footer\"],[14,0,\"modal-card-foot modal-card-foot-outlined\"],[12],[1,\"\\n    \"],[11,\"button\"],[24,0,\"button is-primary\"],[24,\"data-test-enable-rotate-connection\",\"\"],[24,4,\"button\"],[4,[38,13],[\"click\",[30,0,[\"continueWithRotate\"]]],null],[12],[1,\"\\n      Rotate and enable\\n    \"],[13],[1,\"\\n    \"],[11,\"button\"],[24,0,\"button is-secondary\"],[24,\"data-test-enable-connection\",\"\"],[24,4,\"button\"],[4,[38,13],[\"click\",[30,0,[\"continueWithoutRotate\"]]],null],[12],[1,\"\\n      Enable without rotating\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]]]]],[1,\"\\n\\n\"],[8,[39,45],null,[[\"@title\",\"@onClose\",\"@isActive\",\"@confirmText\",\"@toConfirmMsg\",\"@onConfirm\"],[\"Delete connection?\",[28,[37,6],[[30,0],[28,[37,7],[[30,0,[\"isDeleteModalActive\"]]],null],false],null],[30,0,[\"isDeleteModalActive\"]],[30,4,[\"name\"]],\"deleting the connection\",[28,[37,6],[[30,0],\"delete\"],null]]],[[\"default\"],[[[[1,\"\\n  \"],[10,2],[12],[1,\"\\n    Deleting the connection means that any associated roles won't be able to generate credentials until the connection is\\n    reconfigured.\\n  \"],[13],[1,\"\\n  \"],[8,[39,46],null,[[\"@model\",\"@errorMessage\"],[[30,0,[\"model\"]],[30,0,[\"error\"]]]],null],[1,\"\\n\"]],[]]]]]],[\"p\",\"@root\",\"@mode\",\"@model\",\"attr\",\"fieldGroup\",\"fields\",\"group\",\"attr\",\"prop\",\"attr\",\"attr\",\"attr\",\"fieldGroup\",\"fields\",\"group\",\"attr\",\"prop\",\"attr\",\"attr\",\"attr\",\"defaultDisplay\"],false,[\"page-header\",\"key-value-header\",\"if\",\"eq\",\"toolbar\",\"toolbar-actions\",\"action\",\"mut\",\"confirm-action\",\"or\",\"toolbar-secret-link\",\"hash\",\"alert-banner\",\"on\",\"each\",\"-track-array\",\"not-eq\",\"form-field\",\"-each-in\",\"includes\",\"array\",\"let\",\"camelize\",\"concat\",\"toggle-button\",\"get\",\"fn\",\"empty-state\",\"unless\",\"and\",\"not\",\"secret-link\",\"readonly-form-field\",\"capitalize\",\"toggle\",\"input\",\"link-to\",\"chevron\",\"doc-link\",\"info-table-row\",\"is-empty-value\",\"humanize\",\"dasherize\",\"stringify\",\"modal\",\"confirmation-modal\",\"message-error\"]]",
    "moduleName": "vault/templates/components/database-connection.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/database-role-edit", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.top>
      <KeyValueHeader @path="vault.cluster.secrets.backend.show" @mode={{this.mode}} @root={{@root}} @showCurrent={{true}} />
    </p.top>
    <p.levelLeft>
      <h1 class="title is-3" data-test-secret-header="true">
        {{#if (eq @mode "create")}}
          Create Role
        {{else if (eq @mode "edit")}}
          Edit Role
        {{else}}
          {{@model.id}}
        {{/if}}
      </h1>
    </p.levelLeft>
  </PageHeader>
  
  {{#if (eq @mode "show")}}
    <Toolbar>
      <ToolbarActions>
        {{#if @model.canDelete}}
          <ConfirmAction
            @buttonClasses="toolbar-link"
            @onConfirmAction={{action "delete"}}
            @confirmTitle="Delete role?"
            @confirmMessage="This role will be permanently deleted. You will need to recreate it to use it again."
            @confirmButtonText="Delete"
            data-test-database-role-delete
          >
            Delete role
          </ConfirmAction>
          <div class="toolbar-separator"></div>
        {{/if}}
        {{#if (and @model.canRotateRoleCredentials (eq @model.type "static"))}}
          <button type="button" class="toolbar-link" {{on "click" (fn this.rotateRoleCred @model.id)}}>
            Rotate credentials
          </button>
        {{/if}}
        {{#if
          (or
            (and (eq @model.type "static") @model.canGetCredentials)
            (and (eq @model.type "dynamic") @model.canGenerateCredentials)
          )
        }}
          <button
            type="button"
            class="toolbar-link"
            {{on "click" (fn this.generateCreds @model.id @model.type)}}
            data-test-database-role-creds={{@model.type}}
          >
            {{if (eq @model.type "static") "Get credentials" "Generate credentials"}}
          </button>
        {{/if}}
        {{#if @model.canEditRole}}
          <ToolbarSecretLink
            @secret={{concat "role/" @model.id}}
            @mode="edit"
            @replace={{true}}
            @queryParams={{hash itemType="role"}}
            data-test-edit-link={{true}}
          >
            Edit role
          </ToolbarSecretLink>
        {{/if}}
      </ToolbarActions>
    </Toolbar>
    {{#each @model.showFields as |attr|}}
      {{#let attr.options.defaultShown as |defaultDisplay|}}
        {{#if (eq attr.type "object")}}
          <InfoTableRow
            @alwaysRender={{true}}
            @defaultShown={{defaultDisplay}}
            @label={{capitalize (or attr.options.label (humanize (dasherize attr.name)))}}
            @value={{stringify (get @model attr.name)}}
          />
        {{else if (eq attr.options.editType "ttl")}}
          <InfoTableRow
            @alwaysRender={{true}}
            @defaultShown={{defaultDisplay}}
            @label={{capitalize (or attr.options.label (humanize (dasherize attr.name)))}}
            @value={{format-duration (get @model attr.name)}}
            @isLink={{eq attr.name "database"}}
          />
        {{else}}
          <InfoTableRow
            @alwaysRender={{true}}
            @defaultShown={{defaultDisplay}}
            @label={{capitalize (or attr.options.label (humanize (dasherize attr.name)))}}
            @value={{get @model attr.name}}
            @isLink={{eq attr.name "database"}}
          />
        {{/if}}
      {{/let}}
    {{/each}}
  {{else}}
    {{! Edit or Create }}
    <div class="box is-sideless is-fullwidth is-marginless">
      <form {{on "submit" this.handleCreateEditRole}}>
        {{#each @model.fieldAttrs as |attr|}}
          {{#if (eq @mode "edit")}}
            <ReadonlyFormField @attr={{attr}} @value={{get @model attr.name}} />
          {{else if (not-eq attr.options.readOnly true)}}
            <FormField data-test-field={{true}} @attr={{attr}} @model={{@model}} />
            {{! TODO: If database && !updateDB show warning }}
            {{#if (get this.warningMessages attr.name)}}
              <AlertBanner @type="warning" @message={{get this.warningMessages attr.name}} />
            {{/if}}
          {{/if}}
        {{/each}}
  
        <DatabaseRoleSettingForm
          @attrs={{@model.roleSettingAttrs}}
          @roleType={{@model.type}}
          @model={{@model}}
          @mode={{@mode}}
          @dbType={{await this.databaseType}}
        />
  
        <div class="field is-grouped is-grouped-split is-fullwidth box is-bottomless">
          <div class="field is-grouped">
            <div class="control">
              {{#if (is-empty-value this.warningMessages)}}
                <button
                  data-test-secret-save
                  type="submit"
                  disabled={{this.loading}}
                  class="button is-primary {{if this.loading 'is-loading'}}"
                >
                  {{#if (eq @mode "create")}}
                    Create role
                  {{else}}
                    Save
                  {{/if}}
                </button>
              {{else}}
                <ToolTip @horizontalPosition="left" as |T|>
                  <T.Trigger>
                    <button data-test-secret-save type="submit" disabled={{true}} class="button is-primary">
                      Save
                    </button>
                  </T.Trigger>
                  <T.Content @defaultClass="tool-tip">
                    <div class="box">
                      You don't have permissions required to
                      {{if (eq @mode "create") "create" "update"}}
                      this role. See form for details.
                    </div>
                  </T.Content>
                </ToolTip>
              {{/if}}
            </div>
            <div class="control">
              <SecretLink @mode="list" class="button">
                Cancel
              </SecretLink>
            </div>
          </div>
        </div>
      </form>
    </div>
  {{/if}}
  */
  {
    "id": "w519g20I",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"top\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,1],null,[[\"@path\",\"@mode\",\"@root\",\"@showCurrent\"],[\"vault.cluster.secrets.backend.show\",[30,0,[\"mode\"]],[30,2],true]],null],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[14,\"data-test-secret-header\",\"true\"],[12],[1,\"\\n\"],[41,[28,[37,3],[[30,3],\"create\"],null],[[[1,\"        Create Role\\n\"]],[]],[[[41,[28,[37,3],[[30,3],\"edit\"],null],[[[1,\"        Edit Role\\n\"]],[]],[[[1,\"        \"],[1,[30,4,[\"id\"]]],[1,\"\\n      \"]],[]]]],[]]],[1,\"    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\\n\"],[41,[28,[37,3],[[30,3],\"show\"],null],[[[1,\"  \"],[8,[39,4],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,5],null,null,[[\"default\"],[[[[1,\"\\n\"],[41,[30,4,[\"canDelete\"]],[[[1,\"        \"],[8,[39,6],[[24,\"data-test-database-role-delete\",\"\"]],[[\"@buttonClasses\",\"@onConfirmAction\",\"@confirmTitle\",\"@confirmMessage\",\"@confirmButtonText\"],[\"toolbar-link\",[28,[37,7],[[30,0],\"delete\"],null],\"Delete role?\",\"This role will be permanently deleted. You will need to recreate it to use it again.\",\"Delete\"]],[[\"default\"],[[[[1,\"\\n          Delete role\\n        \"]],[]]]]],[1,\"\\n        \"],[10,0],[14,0,\"toolbar-separator\"],[12],[13],[1,\"\\n\"]],[]],null],[41,[28,[37,8],[[30,4,[\"canRotateRoleCredentials\"]],[28,[37,3],[[30,4,[\"type\"]],\"static\"],null]],null],[[[1,\"        \"],[11,\"button\"],[24,0,\"toolbar-link\"],[24,4,\"button\"],[4,[38,9],[\"click\",[28,[37,10],[[30,0,[\"rotateRoleCred\"]],[30,4,[\"id\"]]],null]],null],[12],[1,\"\\n          Rotate credentials\\n        \"],[13],[1,\"\\n\"]],[]],null],[41,[28,[37,11],[[28,[37,8],[[28,[37,3],[[30,4,[\"type\"]],\"static\"],null],[30,4,[\"canGetCredentials\"]]],null],[28,[37,8],[[28,[37,3],[[30,4,[\"type\"]],\"dynamic\"],null],[30,4,[\"canGenerateCredentials\"]]],null]],null],[[[1,\"        \"],[11,\"button\"],[24,0,\"toolbar-link\"],[16,\"data-test-database-role-creds\",[30,4,[\"type\"]]],[24,4,\"button\"],[4,[38,9],[\"click\",[28,[37,10],[[30,0,[\"generateCreds\"]],[30,4,[\"id\"]],[30,4,[\"type\"]]],null]],null],[12],[1,\"\\n          \"],[1,[52,[28,[37,3],[[30,4,[\"type\"]],\"static\"],null],\"Get credentials\",\"Generate credentials\"]],[1,\"\\n        \"],[13],[1,\"\\n\"]],[]],null],[41,[30,4,[\"canEditRole\"]],[[[1,\"        \"],[8,[39,12],[[16,\"data-test-edit-link\",true]],[[\"@secret\",\"@mode\",\"@replace\",\"@queryParams\"],[[28,[37,13],[\"role/\",[30,4,[\"id\"]]],null],\"edit\",true,[28,[37,14],null,[[\"itemType\"],[\"role\"]]]]],[[\"default\"],[[[[1,\"\\n          Edit role\\n        \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"    \"]],[]]]]],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"],[42,[28,[37,16],[[28,[37,16],[[30,4,[\"showFields\"]]],null]],null],null,[[[44,[[30,5,[\"options\",\"defaultShown\"]]],[[[41,[28,[37,3],[[30,5,[\"type\"]],\"object\"],null],[[[1,\"        \"],[8,[39,18],null,[[\"@alwaysRender\",\"@defaultShown\",\"@label\",\"@value\"],[true,[30,6],[28,[37,19],[[28,[37,11],[[30,5,[\"options\",\"label\"]],[28,[37,20],[[28,[37,21],[[30,5,[\"name\"]]],null]],null]],null]],null],[28,[37,22],[[28,[37,23],[[30,4],[30,5,[\"name\"]]],null]],null]]],null],[1,\"\\n\"]],[]],[[[41,[28,[37,3],[[30,5,[\"options\",\"editType\"]],\"ttl\"],null],[[[1,\"        \"],[8,[39,18],null,[[\"@alwaysRender\",\"@defaultShown\",\"@label\",\"@value\",\"@isLink\"],[true,[30,6],[28,[37,19],[[28,[37,11],[[30,5,[\"options\",\"label\"]],[28,[37,20],[[28,[37,21],[[30,5,[\"name\"]]],null]],null]],null]],null],[28,[37,24],[[28,[37,23],[[30,4],[30,5,[\"name\"]]],null]],null],[28,[37,3],[[30,5,[\"name\"]],\"database\"],null]]],null],[1,\"\\n\"]],[]],[[[1,\"        \"],[8,[39,18],null,[[\"@alwaysRender\",\"@defaultShown\",\"@label\",\"@value\",\"@isLink\"],[true,[30,6],[28,[37,19],[[28,[37,11],[[30,5,[\"options\",\"label\"]],[28,[37,20],[[28,[37,21],[[30,5,[\"name\"]]],null]],null]],null]],null],[28,[37,23],[[30,4],[30,5,[\"name\"]]],null],[28,[37,3],[[30,5,[\"name\"]],\"database\"],null]]],null],[1,\"\\n      \"]],[]]]],[]]]],[6]]]],[5]],null]],[]],[[[1,\"  \"],[10,0],[14,0,\"box is-sideless is-fullwidth is-marginless\"],[12],[1,\"\\n    \"],[11,\"form\"],[4,[38,9],[\"submit\",[30,0,[\"handleCreateEditRole\"]]],null],[12],[1,\"\\n\"],[42,[28,[37,16],[[28,[37,16],[[30,4,[\"fieldAttrs\"]]],null]],null],null,[[[41,[28,[37,3],[[30,3],\"edit\"],null],[[[1,\"          \"],[8,[39,25],null,[[\"@attr\",\"@value\"],[[30,7],[28,[37,23],[[30,4],[30,7,[\"name\"]]],null]]],null],[1,\"\\n\"]],[]],[[[41,[28,[37,26],[[30,7,[\"options\",\"readOnly\"]],true],null],[[[1,\"          \"],[8,[39,27],[[16,\"data-test-field\",true]],[[\"@attr\",\"@model\"],[[30,7],[30,4]]],null],[1,\"\\n\"],[41,[28,[37,23],[[30,0,[\"warningMessages\"]],[30,7,[\"name\"]]],null],[[[1,\"            \"],[8,[39,28],null,[[\"@type\",\"@message\"],[\"warning\",[28,[37,23],[[30,0,[\"warningMessages\"]],[30,7,[\"name\"]]],null]]],null],[1,\"\\n\"]],[]],null],[1,\"        \"]],[]],null]],[]]]],[7]],null],[1,\"\\n      \"],[8,[39,29],null,[[\"@attrs\",\"@roleType\",\"@model\",\"@mode\",\"@dbType\"],[[30,4,[\"roleSettingAttrs\"]],[30,4,[\"type\"]],[30,4],[30,3],[28,[37,30],[[30,0,[\"databaseType\"]]],null]]],null],[1,\"\\n\\n      \"],[10,0],[14,0,\"field is-grouped is-grouped-split is-fullwidth box is-bottomless\"],[12],[1,\"\\n        \"],[10,0],[14,0,\"field is-grouped\"],[12],[1,\"\\n          \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n\"],[41,[28,[37,31],[[30,0,[\"warningMessages\"]]],null],[[[1,\"              \"],[10,\"button\"],[14,\"data-test-secret-save\",\"\"],[15,\"disabled\",[30,0,[\"loading\"]]],[15,0,[29,[\"button is-primary \",[52,[30,0,[\"loading\"]],\"is-loading\"]]]],[14,4,\"submit\"],[12],[1,\"\\n\"],[41,[28,[37,3],[[30,3],\"create\"],null],[[[1,\"                  Create role\\n\"]],[]],[[[1,\"                  Save\\n\"]],[]]],[1,\"              \"],[13],[1,\"\\n\"]],[]],[[[1,\"              \"],[8,[39,32],null,[[\"@horizontalPosition\"],[\"left\"]],[[\"default\"],[[[[1,\"\\n                \"],[8,[30,8,[\"Trigger\"]],null,null,[[\"default\"],[[[[1,\"\\n                  \"],[10,\"button\"],[14,\"data-test-secret-save\",\"\"],[15,\"disabled\",true],[14,0,\"button is-primary\"],[14,4,\"submit\"],[12],[1,\"\\n                    Save\\n                  \"],[13],[1,\"\\n                \"]],[]]]]],[1,\"\\n                \"],[8,[30,8,[\"Content\"]],null,[[\"@defaultClass\"],[\"tool-tip\"]],[[\"default\"],[[[[1,\"\\n                  \"],[10,0],[14,0,\"box\"],[12],[1,\"\\n                    You don't have permissions required to\\n                    \"],[1,[52,[28,[37,3],[[30,3],\"create\"],null],\"create\",\"update\"]],[1,\"\\n                    this role. See form for details.\\n                  \"],[13],[1,\"\\n                \"]],[]]]]],[1,\"\\n              \"]],[8]]]]],[1,\"\\n\"]],[]]],[1,\"          \"],[13],[1,\"\\n          \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n            \"],[8,[39,33],[[24,0,\"button\"]],[[\"@mode\"],[\"list\"]],[[\"default\"],[[[[1,\"\\n              Cancel\\n            \"]],[]]]]],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]]]],[\"p\",\"@root\",\"@mode\",\"@model\",\"attr\",\"defaultDisplay\",\"attr\",\"T\"],false,[\"page-header\",\"key-value-header\",\"if\",\"eq\",\"toolbar\",\"toolbar-actions\",\"confirm-action\",\"action\",\"and\",\"on\",\"fn\",\"or\",\"toolbar-secret-link\",\"concat\",\"hash\",\"each\",\"-track-array\",\"let\",\"info-table-row\",\"capitalize\",\"humanize\",\"dasherize\",\"stringify\",\"get\",\"format-duration\",\"readonly-form-field\",\"not-eq\",\"form-field\",\"alert-banner\",\"database-role-setting-form\",\"await\",\"is-empty-value\",\"tool-tip\",\"secret-link\"]]",
    "moduleName": "vault/templates/components/database-role-edit.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/database-role-setting-form", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <div class="box is-sideless is-fullwidth is-marginless" data-test-role-settings-section>
    <h3 class="title is-5">Role Settings</h3>
    {{#if this.settingFields}}
      <div class="form-section">
        {{#each this.settingFields as |attr|}}
          {{#if (and (eq @mode "edit") (eq attr.name "username"))}}
            <ReadonlyFormField @attr={{attr}} @value={{get @model attr.name}} />
          {{else}}
            <FormField data-test-field={{true}} @attr={{attr}} @model={{@model}} />
          {{/if}}
  
        {{/each}}
      </div>
    {{else}}
      <EmptyState @title="No role type selected" @message="Select a type of role to be able to configure it" />
    {{/if}}
  </div>
  {{! template-lint-configure simple-unless "warn"  }}
  {{#unless (and @roleType (not this.statementFields))}}
    <div class="box is-sideless is-fullwidth is-marginless" data-test-statements-section>
      <h3 class="title is-5">Statements</h3>
      {{#if this.statementFields}}
        <div class="form-section">
          {{#each this.statementFields as |attr|}}
            <FormField data-test-field={{true}} @attr={{attr}} @model={{@model}} />
          {{/each}}
        </div>
      {{else}}
        <EmptyState
          @title="No role type selected"
          @message="Select a type of role to be able to add statements for creation, revocation, and/or rotation."
        />
      {{/if}}
    </div>
  {{/unless}}
  */
  {
    "id": "HvjRrBaE",
    "block": "[[[10,0],[14,0,\"box is-sideless is-fullwidth is-marginless\"],[14,\"data-test-role-settings-section\",\"\"],[12],[1,\"\\n  \"],[10,\"h3\"],[14,0,\"title is-5\"],[12],[1,\"Role Settings\"],[13],[1,\"\\n\"],[41,[30,0,[\"settingFields\"]],[[[1,\"    \"],[10,0],[14,0,\"form-section\"],[12],[1,\"\\n\"],[42,[28,[37,2],[[28,[37,2],[[30,0,[\"settingFields\"]]],null]],null],null,[[[41,[28,[37,3],[[28,[37,4],[[30,2],\"edit\"],null],[28,[37,4],[[30,1,[\"name\"]],\"username\"],null]],null],[[[1,\"          \"],[8,[39,5],null,[[\"@attr\",\"@value\"],[[30,1],[28,[37,6],[[30,3],[30,1,[\"name\"]]],null]]],null],[1,\"\\n\"]],[]],[[[1,\"          \"],[8,[39,7],[[16,\"data-test-field\",true]],[[\"@attr\",\"@model\"],[[30,1],[30,3]]],null],[1,\"\\n\"]],[]]],[1,\"\\n\"]],[1]],null],[1,\"    \"],[13],[1,\"\\n\"]],[]],[[[1,\"    \"],[8,[39,8],null,[[\"@title\",\"@message\"],[\"No role type selected\",\"Select a type of role to be able to configure it\"]],null],[1,\"\\n\"]],[]]],[13],[1,\"\\n\"],[41,[51,[28,[37,3],[[30,4],[28,[37,10],[[30,0,[\"statementFields\"]]],null]],null]],[[[1,\"  \"],[10,0],[14,0,\"box is-sideless is-fullwidth is-marginless\"],[14,\"data-test-statements-section\",\"\"],[12],[1,\"\\n    \"],[10,\"h3\"],[14,0,\"title is-5\"],[12],[1,\"Statements\"],[13],[1,\"\\n\"],[41,[30,0,[\"statementFields\"]],[[[1,\"      \"],[10,0],[14,0,\"form-section\"],[12],[1,\"\\n\"],[42,[28,[37,2],[[28,[37,2],[[30,0,[\"statementFields\"]]],null]],null],null,[[[1,\"          \"],[8,[39,7],[[16,\"data-test-field\",true]],[[\"@attr\",\"@model\"],[[30,5],[30,3]]],null],[1,\"\\n\"]],[5]],null],[1,\"      \"],[13],[1,\"\\n\"]],[]],[[[1,\"      \"],[8,[39,8],null,[[\"@title\",\"@message\"],[\"No role type selected\",\"Select a type of role to be able to add statements for creation, revocation, and/or rotation.\"]],null],[1,\"\\n\"]],[]]],[1,\"  \"],[13],[1,\"\\n\"]],[]],null]],[\"attr\",\"@mode\",\"@model\",\"@roleType\",\"attr\"],false,[\"if\",\"each\",\"-track-array\",\"and\",\"eq\",\"readonly-form-field\",\"get\",\"form-field\",\"empty-state\",\"unless\",\"not\"]]",
    "moduleName": "vault/templates/components/database-role-setting-form.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/date-dropdown", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <div class="modal-card-custom has-padding-btm-left">
    <BasicDropdown @class="popup-menu" @horizontalPosition="auto-right" @verticalPosition="below" as |D|>
      <D.Trigger
        data-test-popup-menu-trigger="month"
        class={{concat "toolbar-link" (if D.isOpen " is-active")}}
        @htmlTag="button"
      >
        {{or this.selectedMonth.name "Month"}}
        <Chevron @direction="down" @isButton={{true}} />
      </D.Trigger>
      <D.Content @defaultClass="popup-menu-content is-wide">
        <nav class="box menu scroll" aria-label="months">
          <ul data-test-month-list class="menu-list">
            {{#each this.dropdownMonths as |month|}}
              <button
                data-test-dropdown-month={{month.name}}
                type="button"
                class="button link"
                disabled={{if (gt month.index this.maxMonthIdx) true false}}
                {{on "click" (fn this.selectMonth month D.actions)}}
              >
                {{month.name}}
              </button>
            {{/each}}
          </ul>
        </nav>
      </D.Content>
    </BasicDropdown>
    <BasicDropdown @class="popup-menu" @horizontalPosition="auto-right" @verticalPosition="below" as |D|>
      <D.Trigger
        data-test-popup-menu-trigger="year"
        class={{concat "toolbar-link" (if D.isOpen " is-active")}}
        @htmlTag="button"
      >
        {{or this.selectedYear "Year"}}
        <Chevron @direction="down" @isButton={{true}} />
      </D.Trigger>
      <D.Content @defaultClass="popup-menu-content is-wide">
        <nav class="box menu" aria-label="years">
          <ul data-test-year-list class="menu-list">
            {{#each this.dropdownYears as |year|}}
              <button
                data-test-dropdown-year={{year}}
                type="button"
                class="button link"
                disabled={{if (eq year this.disabledYear) true false}}
                {{on "click" (fn this.selectYear year D.actions)}}
              >
                {{year}}
              </button>
            {{/each}}
          </ul>
        </nav>
      </D.Content>
    </BasicDropdown>
    {{#unless @handleCancel}}
      <button
        data-test-date-dropdown-submit
        type="button"
        class="button is-primary"
        disabled={{if (and this.selectedMonth this.selectedYear) false true}}
        {{on "click" this.handleSubmit}}
      >
        {{or @submitText "Submit"}}
      </button>
    {{/unless}}
    {{#if this.invalidDate}}
      <AlertInline @type="danger" @message={{this.invalidDate}} @paddingTop={{true}} @mimicRefresh={{true}} />
    {{/if}}
  </div>
  {{#if @handleCancel}}
    <footer class="modal-card-foot modal-card-foot-outlined">
      <button
        data-test-date-dropdown-submit
        type="button"
        class="button is-primary"
        disabled={{if (and this.selectedMonth this.selectedYear) false true}}
        {{on "click" this.handleSubmit}}
      >
        {{or @submitText "Submit"}}
      </button>
      <button data-test-date-dropdown-cancel type="button" class="button is-secondary" {{on "click" this.handleCancel}}>
        Cancel
      </button>
    </footer>
  {{/if}}
  */
  {
    "id": "l20UvFmD",
    "block": "[[[10,0],[14,0,\"modal-card-custom has-padding-btm-left\"],[12],[1,\"\\n  \"],[8,[39,0],null,[[\"@class\",\"@horizontalPosition\",\"@verticalPosition\"],[\"popup-menu\",\"auto-right\",\"below\"]],[[\"default\"],[[[[1,\"\\n    \"],[8,[30,1,[\"Trigger\"]],[[24,\"data-test-popup-menu-trigger\",\"month\"],[16,0,[28,[37,1],[\"toolbar-link\",[52,[30,1,[\"isOpen\"]],\" is-active\"]],null]]],[[\"@htmlTag\"],[\"button\"]],[[\"default\"],[[[[1,\"\\n      \"],[1,[28,[35,3],[[30,0,[\"selectedMonth\",\"name\"]],\"Month\"],null]],[1,\"\\n      \"],[8,[39,4],null,[[\"@direction\",\"@isButton\"],[\"down\",true]],null],[1,\"\\n    \"]],[]]]]],[1,\"\\n    \"],[8,[30,1,[\"Content\"]],null,[[\"@defaultClass\"],[\"popup-menu-content is-wide\"]],[[\"default\"],[[[[1,\"\\n      \"],[10,\"nav\"],[14,0,\"box menu scroll\"],[14,\"aria-label\",\"months\"],[12],[1,\"\\n        \"],[10,\"ul\"],[14,\"data-test-month-list\",\"\"],[14,0,\"menu-list\"],[12],[1,\"\\n\"],[42,[28,[37,6],[[28,[37,6],[[30,0,[\"dropdownMonths\"]]],null]],null],null,[[[1,\"            \"],[11,\"button\"],[16,\"data-test-dropdown-month\",[30,2,[\"name\"]]],[24,0,\"button link\"],[16,\"disabled\",[52,[28,[37,7],[[30,2,[\"index\"]],[30,0,[\"maxMonthIdx\"]]],null],true,false]],[24,4,\"button\"],[4,[38,8],[\"click\",[28,[37,9],[[30,0,[\"selectMonth\"]],[30,2],[30,1,[\"actions\"]]],null]],null],[12],[1,\"\\n              \"],[1,[30,2,[\"name\"]]],[1,\"\\n            \"],[13],[1,\"\\n\"]],[2]],null],[1,\"        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"]],[]]]]],[1,\"\\n  \"]],[1]]]]],[1,\"\\n  \"],[8,[39,0],null,[[\"@class\",\"@horizontalPosition\",\"@verticalPosition\"],[\"popup-menu\",\"auto-right\",\"below\"]],[[\"default\"],[[[[1,\"\\n    \"],[8,[30,3,[\"Trigger\"]],[[24,\"data-test-popup-menu-trigger\",\"year\"],[16,0,[28,[37,1],[\"toolbar-link\",[52,[30,3,[\"isOpen\"]],\" is-active\"]],null]]],[[\"@htmlTag\"],[\"button\"]],[[\"default\"],[[[[1,\"\\n      \"],[1,[28,[35,3],[[30,0,[\"selectedYear\"]],\"Year\"],null]],[1,\"\\n      \"],[8,[39,4],null,[[\"@direction\",\"@isButton\"],[\"down\",true]],null],[1,\"\\n    \"]],[]]]]],[1,\"\\n    \"],[8,[30,3,[\"Content\"]],null,[[\"@defaultClass\"],[\"popup-menu-content is-wide\"]],[[\"default\"],[[[[1,\"\\n      \"],[10,\"nav\"],[14,0,\"box menu\"],[14,\"aria-label\",\"years\"],[12],[1,\"\\n        \"],[10,\"ul\"],[14,\"data-test-year-list\",\"\"],[14,0,\"menu-list\"],[12],[1,\"\\n\"],[42,[28,[37,6],[[28,[37,6],[[30,0,[\"dropdownYears\"]]],null]],null],null,[[[1,\"            \"],[11,\"button\"],[16,\"data-test-dropdown-year\",[30,4]],[24,0,\"button link\"],[16,\"disabled\",[52,[28,[37,10],[[30,4],[30,0,[\"disabledYear\"]]],null],true,false]],[24,4,\"button\"],[4,[38,8],[\"click\",[28,[37,9],[[30,0,[\"selectYear\"]],[30,4],[30,3,[\"actions\"]]],null]],null],[12],[1,\"\\n              \"],[1,[30,4]],[1,\"\\n            \"],[13],[1,\"\\n\"]],[4]],null],[1,\"        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"]],[]]]]],[1,\"\\n  \"]],[3]]]]],[1,\"\\n\"],[41,[51,[30,5]],[[[1,\"    \"],[11,\"button\"],[24,\"data-test-date-dropdown-submit\",\"\"],[24,0,\"button is-primary\"],[16,\"disabled\",[52,[28,[37,12],[[30,0,[\"selectedMonth\"]],[30,0,[\"selectedYear\"]]],null],false,true]],[24,4,\"button\"],[4,[38,8],[\"click\",[30,0,[\"handleSubmit\"]]],null],[12],[1,\"\\n      \"],[1,[28,[35,3],[[30,6],\"Submit\"],null]],[1,\"\\n    \"],[13],[1,\"\\n\"]],[]],null],[41,[30,0,[\"invalidDate\"]],[[[1,\"    \"],[8,[39,13],null,[[\"@type\",\"@message\",\"@paddingTop\",\"@mimicRefresh\"],[\"danger\",[30,0,[\"invalidDate\"]],true,true]],null],[1,\"\\n\"]],[]],null],[13],[1,\"\\n\"],[41,[30,5],[[[1,\"  \"],[10,\"footer\"],[14,0,\"modal-card-foot modal-card-foot-outlined\"],[12],[1,\"\\n    \"],[11,\"button\"],[24,\"data-test-date-dropdown-submit\",\"\"],[24,0,\"button is-primary\"],[16,\"disabled\",[52,[28,[37,12],[[30,0,[\"selectedMonth\"]],[30,0,[\"selectedYear\"]]],null],false,true]],[24,4,\"button\"],[4,[38,8],[\"click\",[30,0,[\"handleSubmit\"]]],null],[12],[1,\"\\n      \"],[1,[28,[35,3],[[30,6],\"Submit\"],null]],[1,\"\\n    \"],[13],[1,\"\\n    \"],[11,\"button\"],[24,\"data-test-date-dropdown-cancel\",\"\"],[24,0,\"button is-secondary\"],[24,4,\"button\"],[4,[38,8],[\"click\",[30,0,[\"handleCancel\"]]],null],[12],[1,\"\\n      Cancel\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]],null]],[\"D\",\"month\",\"D\",\"year\",\"@handleCancel\",\"@submitText\"],false,[\"basic-dropdown\",\"concat\",\"if\",\"or\",\"chevron\",\"each\",\"-track-array\",\"gt\",\"on\",\"fn\",\"eq\",\"unless\",\"and\",\"alert-inline\"]]",
    "moduleName": "vault/templates/components/date-dropdown.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/diff-version-selector", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <Toolbar>
    <div class="version-diff-toolbar" data-test-version-diff-toolbar>
      {{! Left side version }}
      <BasicDropdown @class="popup-menu" @horizontalPosition="auto-right" @verticalPosition="below" as |D|>
        <D.Trigger
          data-test-popup-menu-trigger="left-version"
          class={{concat "toolbar-link" (if D.isOpen " is-active")}}
          @htmlTag="button"
        >
          Version
          {{or this.leftSideVersionSelected @model.currentVersion}}
          <Chevron @direction="down" @isButton={{true}} />
        </D.Trigger>
        <D.Content @defaultClass="popup-menu-content">
          <nav class="box menu" aria-label="version">
            <ul class="menu-list">
              {{#each (reverse @model.versions) as |leftSideSecretVersion|}}
                <li class="action" data-test-leftSide-version={{leftSideSecretVersion.version}}>
                  <button
                    type="button"
                    class="link"
                    {{on "click" (fn this.selectVersion leftSideSecretVersion.version D.actions "left")}}
                  >
                    Version
                    {{leftSideSecretVersion.version}}
                    {{#if
                      (and
                        (eq leftSideSecretVersion.version (or this.leftSideVersionSelected @model.currentVersion))
                        (not leftSideSecretVersion.destroyed)
                        (not leftSideSecretVersion.deleted)
                      )
                    }}
                      <Icon @name="check-circle" class="has-text-success is-pulled-right" />
                    {{else if leftSideSecretVersion.destroyed}}
                      <Icon @name="x-square" class="has-text-danger is-pulled-right" />
                    {{else if leftSideSecretVersion.deleted}}
                      <Icon @name="x-square" class="has-text-grey is-pulled-right" />
                    {{/if}}
                  </button>
                </li>
              {{/each}}
            </ul>
          </nav>
        </D.Content>
      </BasicDropdown>
      {{! Right side version }}
      <BasicDropdown @class="popup-menu" @horizontalPosition="right" @verticalPosition="below" as |D|>
        <D.Trigger
          class={{concat "toolbar-link" (if D.isOpen " is-active")}}
          @htmlTag="button"
          data-test-popup-menu-trigger="right-version"
        >
          Version
          {{or this.rightSideVersionSelected this.rightSideVersionInit}}
          <Chevron @direction="down" @isButton={{true}} />
        </D.Trigger>
        <D.Content @defaultClass="popup-menu-content">
          <nav class="box menu" aria-label="versions to diff">
            <ul class="menu-list">
              {{#each (reverse @model.versions) as |rightSideSecretVersion|}}
                <li class="action">
                  <button
                    type="button"
                    class="link"
                    {{on "click" (fn this.selectVersion rightSideSecretVersion.version D.actions "right")}}
                    data-test-rightSide-version={{rightSideSecretVersion.version}}
                  >
                    Version
                    {{rightSideSecretVersion.version}}
                    {{#if
                      (and
                        (eq rightSideSecretVersion.version (or this.rightSideVersionSelected this.rightSideVersionInit))
                        (not rightSideSecretVersion.destroyed)
                        (not rightSideSecretVersion.deleted)
                      )
                    }}
                      <Icon @name="check-circle" class="has-text-success is-pulled-right" />
                    {{else if rightSideSecretVersion.destroyed}}
                      <Icon @name="x-square" class="has-text-danger is-pulled-right" />
                    {{else if rightSideSecretVersion.deleted}}
                      <Icon @name="x-square" class="has-text-grey is-pulled-right" />
                    {{/if}}
                  </button>
                </li>
              {{/each}}
            </ul>
          </nav>
        </D.Content>
      </BasicDropdown>
      {{! Status }}
      {{#if this.statesMatch}}
        <div class="diff-status">
          <span>States match</span>
          <Icon @name="check-circle-fill" class="has-text-success" />
        </div>
      {{/if}}
    </div>
  </Toolbar>
  
  <div class="form-section visual-diff">
    <pre>{{sanitized-html this.visualDiff}}</pre>
  </div>
  */
  {
    "id": "ncCh7PTW",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[10,0],[14,0,\"version-diff-toolbar\"],[14,\"data-test-version-diff-toolbar\",\"\"],[12],[1,\"\\n\"],[1,\"    \"],[8,[39,1],null,[[\"@class\",\"@horizontalPosition\",\"@verticalPosition\"],[\"popup-menu\",\"auto-right\",\"below\"]],[[\"default\"],[[[[1,\"\\n      \"],[8,[30,1,[\"Trigger\"]],[[24,\"data-test-popup-menu-trigger\",\"left-version\"],[16,0,[28,[37,2],[\"toolbar-link\",[52,[30,1,[\"isOpen\"]],\" is-active\"]],null]]],[[\"@htmlTag\"],[\"button\"]],[[\"default\"],[[[[1,\"\\n        Version\\n        \"],[1,[28,[35,4],[[30,0,[\"leftSideVersionSelected\"]],[30,2,[\"currentVersion\"]]],null]],[1,\"\\n        \"],[8,[39,5],null,[[\"@direction\",\"@isButton\"],[\"down\",true]],null],[1,\"\\n      \"]],[]]]]],[1,\"\\n      \"],[8,[30,1,[\"Content\"]],null,[[\"@defaultClass\"],[\"popup-menu-content\"]],[[\"default\"],[[[[1,\"\\n        \"],[10,\"nav\"],[14,0,\"box menu\"],[14,\"aria-label\",\"version\"],[12],[1,\"\\n          \"],[10,\"ul\"],[14,0,\"menu-list\"],[12],[1,\"\\n\"],[42,[28,[37,7],[[28,[37,7],[[28,[37,8],[[30,2,[\"versions\"]]],null]],null]],null],null,[[[1,\"              \"],[10,\"li\"],[14,0,\"action\"],[15,\"data-test-leftSide-version\",[30,3,[\"version\"]]],[12],[1,\"\\n                \"],[11,\"button\"],[24,0,\"link\"],[24,4,\"button\"],[4,[38,9],[\"click\",[28,[37,10],[[30,0,[\"selectVersion\"]],[30,3,[\"version\"]],[30,1,[\"actions\"]],\"left\"],null]],null],[12],[1,\"\\n                  Version\\n                  \"],[1,[30,3,[\"version\"]]],[1,\"\\n\"],[41,[28,[37,11],[[28,[37,12],[[30,3,[\"version\"]],[28,[37,4],[[30,0,[\"leftSideVersionSelected\"]],[30,2,[\"currentVersion\"]]],null]],null],[28,[37,13],[[30,3,[\"destroyed\"]]],null],[28,[37,13],[[30,3,[\"deleted\"]]],null]],null],[[[1,\"                    \"],[8,[39,14],[[24,0,\"has-text-success is-pulled-right\"]],[[\"@name\"],[\"check-circle\"]],null],[1,\"\\n\"]],[]],[[[41,[30,3,[\"destroyed\"]],[[[1,\"                    \"],[8,[39,14],[[24,0,\"has-text-danger is-pulled-right\"]],[[\"@name\"],[\"x-square\"]],null],[1,\"\\n\"]],[]],[[[41,[30,3,[\"deleted\"]],[[[1,\"                    \"],[8,[39,14],[[24,0,\"has-text-grey is-pulled-right\"]],[[\"@name\"],[\"x-square\"]],null],[1,\"\\n                  \"]],[]],null]],[]]]],[]]],[1,\"                \"],[13],[1,\"\\n              \"],[13],[1,\"\\n\"]],[3]],null],[1,\"          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"]],[]]]]],[1,\"\\n    \"]],[1]]]]],[1,\"\\n\"],[1,\"    \"],[8,[39,1],null,[[\"@class\",\"@horizontalPosition\",\"@verticalPosition\"],[\"popup-menu\",\"right\",\"below\"]],[[\"default\"],[[[[1,\"\\n      \"],[8,[30,4,[\"Trigger\"]],[[16,0,[28,[37,2],[\"toolbar-link\",[52,[30,4,[\"isOpen\"]],\" is-active\"]],null]],[24,\"data-test-popup-menu-trigger\",\"right-version\"]],[[\"@htmlTag\"],[\"button\"]],[[\"default\"],[[[[1,\"\\n        Version\\n        \"],[1,[28,[35,4],[[30,0,[\"rightSideVersionSelected\"]],[30,0,[\"rightSideVersionInit\"]]],null]],[1,\"\\n        \"],[8,[39,5],null,[[\"@direction\",\"@isButton\"],[\"down\",true]],null],[1,\"\\n      \"]],[]]]]],[1,\"\\n      \"],[8,[30,4,[\"Content\"]],null,[[\"@defaultClass\"],[\"popup-menu-content\"]],[[\"default\"],[[[[1,\"\\n        \"],[10,\"nav\"],[14,0,\"box menu\"],[14,\"aria-label\",\"versions to diff\"],[12],[1,\"\\n          \"],[10,\"ul\"],[14,0,\"menu-list\"],[12],[1,\"\\n\"],[42,[28,[37,7],[[28,[37,7],[[28,[37,8],[[30,2,[\"versions\"]]],null]],null]],null],null,[[[1,\"              \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                \"],[11,\"button\"],[24,0,\"link\"],[16,\"data-test-rightSide-version\",[30,5,[\"version\"]]],[24,4,\"button\"],[4,[38,9],[\"click\",[28,[37,10],[[30,0,[\"selectVersion\"]],[30,5,[\"version\"]],[30,4,[\"actions\"]],\"right\"],null]],null],[12],[1,\"\\n                  Version\\n                  \"],[1,[30,5,[\"version\"]]],[1,\"\\n\"],[41,[28,[37,11],[[28,[37,12],[[30,5,[\"version\"]],[28,[37,4],[[30,0,[\"rightSideVersionSelected\"]],[30,0,[\"rightSideVersionInit\"]]],null]],null],[28,[37,13],[[30,5,[\"destroyed\"]]],null],[28,[37,13],[[30,5,[\"deleted\"]]],null]],null],[[[1,\"                    \"],[8,[39,14],[[24,0,\"has-text-success is-pulled-right\"]],[[\"@name\"],[\"check-circle\"]],null],[1,\"\\n\"]],[]],[[[41,[30,5,[\"destroyed\"]],[[[1,\"                    \"],[8,[39,14],[[24,0,\"has-text-danger is-pulled-right\"]],[[\"@name\"],[\"x-square\"]],null],[1,\"\\n\"]],[]],[[[41,[30,5,[\"deleted\"]],[[[1,\"                    \"],[8,[39,14],[[24,0,\"has-text-grey is-pulled-right\"]],[[\"@name\"],[\"x-square\"]],null],[1,\"\\n                  \"]],[]],null]],[]]]],[]]],[1,\"                \"],[13],[1,\"\\n              \"],[13],[1,\"\\n\"]],[5]],null],[1,\"          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"]],[]]]]],[1,\"\\n    \"]],[4]]]]],[1,\"\\n\"],[41,[30,0,[\"statesMatch\"]],[[[1,\"      \"],[10,0],[14,0,\"diff-status\"],[12],[1,\"\\n        \"],[10,1],[12],[1,\"States match\"],[13],[1,\"\\n        \"],[8,[39,14],[[24,0,\"has-text-success\"]],[[\"@name\"],[\"check-circle-fill\"]],null],[1,\"\\n      \"],[13],[1,\"\\n\"]],[]],null],[1,\"  \"],[13],[1,\"\\n\"]],[]]]]],[1,\"\\n\\n\"],[10,0],[14,0,\"form-section visual-diff\"],[12],[1,\"\\n  \"],[10,\"pre\"],[12],[1,[28,[35,15],[[30,0,[\"visualDiff\"]]],null]],[13],[1,\"\\n\"],[13]],[\"D\",\"@model\",\"leftSideSecretVersion\",\"D\",\"rightSideSecretVersion\"],false,[\"toolbar\",\"basic-dropdown\",\"concat\",\"if\",\"or\",\"chevron\",\"each\",\"-track-array\",\"reverse\",\"on\",\"fn\",\"and\",\"eq\",\"not\",\"icon\",\"sanitized-html\"]]",
    "moduleName": "vault/templates/components/diff-version-selector.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/file-to-array-buffer", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <div class="field">
    <div class="control is-expanded">
      <label class="is-label">
        {{#if this.label}}
          {{this.label}}
        {{/if}}
      </label>
      <div class="file is-fullwidth">
        <div class="file-label" aria-label="Choose a file">
          <input id="file-input" class="file-input" type="file" onchange={{action "pickedFile"}} data-test-file-input />
          <label for="file-input" class="file-cta button">
            <Icon @name="upload" class="has-light-grey-text" />
            Choose a file…
          </label>
          <span class="file-name has-text-grey-dark" data-test-text-file-input-label={{true}}>
            {{or this.filename "No file chosen"}}
          </span>
          {{#if this.filename}}
            <button
              type="button"
              class="file-delete-button"
              aria-label="Clear file selection"
              {{action "clearFile"}}
              data-test-text-clear
            >
              <Icon @name="x-circle" />
            </button>
          {{/if}}
        </div>
      </div>
    </div>
    {{#if this.filename}}
      <p class="help has-text-grey">
        This file is
        {{this.fileSize}}
        and was created on
        {{date-format this.fileLastModified "MMM dd, yyyy hh:mm:ss a"}}.
      </p>
    {{/if}}
    {{#if @fileHelpText}}
      <p class="help has-text-grey">
        {{@fileHelpText}}
      </p>
    {{/if}}
  </div>
  */
  {
    "id": "dFTx2y/c",
    "block": "[[[10,0],[14,0,\"field\"],[12],[1,\"\\n  \"],[10,0],[14,0,\"control is-expanded\"],[12],[1,\"\\n    \"],[10,\"label\"],[14,0,\"is-label\"],[12],[1,\"\\n\"],[41,[30,0,[\"label\"]],[[[1,\"        \"],[1,[30,0,[\"label\"]]],[1,\"\\n\"]],[]],null],[1,\"    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"file is-fullwidth\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"file-label\"],[14,\"aria-label\",\"Choose a file\"],[12],[1,\"\\n        \"],[10,\"input\"],[14,1,\"file-input\"],[14,0,\"file-input\"],[15,\"onchange\",[28,[37,1],[[30,0],\"pickedFile\"],null]],[14,\"data-test-file-input\",\"\"],[14,4,\"file\"],[12],[13],[1,\"\\n        \"],[10,\"label\"],[14,\"for\",\"file-input\"],[14,0,\"file-cta button\"],[12],[1,\"\\n          \"],[8,[39,2],[[24,0,\"has-light-grey-text\"]],[[\"@name\"],[\"upload\"]],null],[1,\"\\n          Choose a file…\\n        \"],[13],[1,\"\\n        \"],[10,1],[14,0,\"file-name has-text-grey-dark\"],[15,\"data-test-text-file-input-label\",true],[12],[1,\"\\n          \"],[1,[28,[35,3],[[30,0,[\"filename\"]],\"No file chosen\"],null]],[1,\"\\n        \"],[13],[1,\"\\n\"],[41,[30,0,[\"filename\"]],[[[1,\"          \"],[11,\"button\"],[24,0,\"file-delete-button\"],[24,\"aria-label\",\"Clear file selection\"],[24,\"data-test-text-clear\",\"\"],[24,4,\"button\"],[4,[38,1],[[30,0],\"clearFile\"],null],[12],[1,\"\\n            \"],[8,[39,2],null,[[\"@name\"],[\"x-circle\"]],null],[1,\"\\n          \"],[13],[1,\"\\n\"]],[]],null],[1,\"      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"],[41,[30,0,[\"filename\"]],[[[1,\"    \"],[10,2],[14,0,\"help has-text-grey\"],[12],[1,\"\\n      This file is\\n      \"],[1,[30,0,[\"fileSize\"]]],[1,\"\\n      and was created on\\n      \"],[1,[28,[35,4],[[30,0,[\"fileLastModified\"]],\"MMM dd, yyyy hh:mm:ss a\"],null]],[1,\".\\n    \"],[13],[1,\"\\n\"]],[]],null],[41,[30,1],[[[1,\"    \"],[10,2],[14,0,\"help has-text-grey\"],[12],[1,\"\\n      \"],[1,[30,1]],[1,\"\\n    \"],[13],[1,\"\\n\"]],[]],null],[13]],[\"@fileHelpText\"],false,[\"if\",\"action\",\"icon\",\"or\",\"date-format\"]]",
    "moduleName": "vault/templates/components/file-to-array-buffer.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/form-field-from-model", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{! template-lint-configure simple-unless "warn"  }}
  <div class="field" data-test-form-field-from-model>
    {{#unless
      (or
        (includes
          @attr.options.editType (array "boolean" "searchSelect" "mountAccessor" "kv" "file" "ttl" "stringArray" "json")
        )
        (eq @attr.type "boolean")
      )
    }}
      {{#unless (eq @attr.type "object")}}
        <label for={{@attr.name}} class="is-label">
          {{capitalize (or @attr.options.label (humanize (dasherize @attr.name)))}}
          {{#if @attr.options.helpText}}
            <InfoTooltip>{{@attr.options.helpText}}</InfoTooltip>
          {{/if}}
        </label>
      {{/unless}}
    {{/unless}}
    {{#if @attr.options.possibleValues}}
      <div class="control is-expanded">
        <div class="select is-fullwidth">
          <select
            name={{@attr.name}}
            id={{@attr.name}}
            onchange={{action (mut (get @model @attr.name)) value="target.value"}}
            data-test-input={{@attr.name}}
          >
            {{#each @attr.options.possibleValues as |val|}}
              <option selected={{eq (get @model @attr.name) val}} value={{val}}>
                {{val}}
              </option>
            {{/each}}
          </select>
        </div>
      </div>
    {{else if (eq @attr.options.editType "ttl")}}
      <TtlPicker
        @initialValue={{or (get @model @attr.name) @attr.options.defaultValue}}
        @initialEnabled={{or (get @model @attr.name) false}}
        @label={{or @attr.options.label (humanize (dasherize @attr.name))}}
        @helperTextDisabled="If this is not set, the engine default will be used."
        @helperTextEnabled="Disable lease after"
        @onChange={{@updateTtl}}
      />
    {{else if (or (eq @attr.type "number") (eq @attr.type "string"))}}
      <div class="control">
        <Input
          id={{@attr.name}}
          @value={{get @model (or @attr.options.fieldValue @attr.name)}}
          class="input"
          data-test-input={{@attr.name}}
        />
      </div>
    {{else if (eq @attr.type "boolean")}}
      <div class="b-checkbox">
        <input
          type="checkbox"
          id={{@attr.name}}
          class="styled"
          checked={{get this.model @attr.name}}
          onchange={{action (mut (get this.model @attr.name)) value="target.checked"}}
          data-test-input={{@attr.name}}
        />
  
        <label for={{@attr.name}} class="is-label">
          {{capitalize (or @attr.options.label (humanize (dasherize @attr.name)))}}
          {{#if @attr.options.helpText}}
            <InfoTooltip>{{@attr.options.helpText}}</InfoTooltip>
          {{/if}}
        </label>
      </div>
    {{else if (eq @attr.type "object")}}
      <JsonEditor
        @title={{capitalize (or @attr.options.label (humanize (dasherize @attr.name)))}}
        @helpText={{@attr.options.helpText}}
        @value={{if (get @model @attr.name) (stringify (get @model @attr.name)) @emptyData}}
        @valueUpdated={{@codemirrorUpdated}}
      />
    {{/if}}
  </div>
  */
  {
    "id": "A0qKzE2Z",
    "block": "[[[10,0],[14,0,\"field\"],[14,\"data-test-form-field-from-model\",\"\"],[12],[1,\"\\n\"],[41,[51,[28,[37,1],[[28,[37,2],[[30,1,[\"options\",\"editType\"]],[28,[37,3],[\"boolean\",\"searchSelect\",\"mountAccessor\",\"kv\",\"file\",\"ttl\",\"stringArray\",\"json\"],null]],null],[28,[37,4],[[30,1,[\"type\"]],\"boolean\"],null]],null]],[[[41,[51,[28,[37,4],[[30,1,[\"type\"]],\"object\"],null]],[[[1,\"      \"],[10,\"label\"],[15,\"for\",[30,1,[\"name\"]]],[14,0,\"is-label\"],[12],[1,\"\\n        \"],[1,[28,[35,5],[[28,[37,1],[[30,1,[\"options\",\"label\"]],[28,[37,6],[[28,[37,7],[[30,1,[\"name\"]]],null]],null]],null]],null]],[1,\"\\n\"],[41,[30,1,[\"options\",\"helpText\"]],[[[1,\"          \"],[8,[39,9],null,null,[[\"default\"],[[[[1,[30,1,[\"options\",\"helpText\"]]]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"      \"],[13],[1,\"\\n\"]],[]],null]],[]],null],[41,[30,1,[\"options\",\"possibleValues\"]],[[[1,\"    \"],[10,0],[14,0,\"control is-expanded\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"select is-fullwidth\"],[12],[1,\"\\n        \"],[10,\"select\"],[15,3,[30,1,[\"name\"]]],[15,1,[30,1,[\"name\"]]],[15,\"onchange\",[28,[37,10],[[30,0],[28,[37,11],[[28,[37,12],[[30,2],[30,1,[\"name\"]]],null]],null]],[[\"value\"],[\"target.value\"]]]],[15,\"data-test-input\",[30,1,[\"name\"]]],[12],[1,\"\\n\"],[42,[28,[37,14],[[28,[37,14],[[30,1,[\"options\",\"possibleValues\"]]],null]],null],null,[[[1,\"            \"],[10,\"option\"],[15,\"selected\",[28,[37,4],[[28,[37,12],[[30,2],[30,1,[\"name\"]]],null],[30,3]],null]],[15,2,[30,3]],[12],[1,\"\\n              \"],[1,[30,3]],[1,\"\\n            \"],[13],[1,\"\\n\"]],[3]],null],[1,\"        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n\"]],[]],[[[41,[28,[37,4],[[30,1,[\"options\",\"editType\"]],\"ttl\"],null],[[[1,\"    \"],[8,[39,15],null,[[\"@initialValue\",\"@initialEnabled\",\"@label\",\"@helperTextDisabled\",\"@helperTextEnabled\",\"@onChange\"],[[28,[37,1],[[28,[37,12],[[30,2],[30,1,[\"name\"]]],null],[30,1,[\"options\",\"defaultValue\"]]],null],[28,[37,1],[[28,[37,12],[[30,2],[30,1,[\"name\"]]],null],false],null],[28,[37,1],[[30,1,[\"options\",\"label\"]],[28,[37,6],[[28,[37,7],[[30,1,[\"name\"]]],null]],null]],null],\"If this is not set, the engine default will be used.\",\"Disable lease after\",[30,4]]],null],[1,\"\\n\"]],[]],[[[41,[28,[37,1],[[28,[37,4],[[30,1,[\"type\"]],\"number\"],null],[28,[37,4],[[30,1,[\"type\"]],\"string\"],null]],null],[[[1,\"    \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n      \"],[8,[39,16],[[16,1,[30,1,[\"name\"]]],[24,0,\"input\"],[16,\"data-test-input\",[30,1,[\"name\"]]]],[[\"@value\"],[[28,[37,12],[[30,2],[28,[37,1],[[30,1,[\"options\",\"fieldValue\"]],[30,1,[\"name\"]]],null]],null]]],null],[1,\"\\n    \"],[13],[1,\"\\n\"]],[]],[[[41,[28,[37,4],[[30,1,[\"type\"]],\"boolean\"],null],[[[1,\"    \"],[10,0],[14,0,\"b-checkbox\"],[12],[1,\"\\n      \"],[10,\"input\"],[15,1,[30,1,[\"name\"]]],[14,0,\"styled\"],[15,\"checked\",[28,[37,12],[[30,0,[\"model\"]],[30,1,[\"name\"]]],null]],[15,\"onchange\",[28,[37,10],[[30,0],[28,[37,11],[[28,[37,12],[[30,0,[\"model\"]],[30,1,[\"name\"]]],null]],null]],[[\"value\"],[\"target.checked\"]]]],[15,\"data-test-input\",[30,1,[\"name\"]]],[14,4,\"checkbox\"],[12],[13],[1,\"\\n\\n      \"],[10,\"label\"],[15,\"for\",[30,1,[\"name\"]]],[14,0,\"is-label\"],[12],[1,\"\\n        \"],[1,[28,[35,5],[[28,[37,1],[[30,1,[\"options\",\"label\"]],[28,[37,6],[[28,[37,7],[[30,1,[\"name\"]]],null]],null]],null]],null]],[1,\"\\n\"],[41,[30,1,[\"options\",\"helpText\"]],[[[1,\"          \"],[8,[39,9],null,null,[[\"default\"],[[[[1,[30,1,[\"options\",\"helpText\"]]]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n\"]],[]],[[[41,[28,[37,4],[[30,1,[\"type\"]],\"object\"],null],[[[1,\"    \"],[8,[39,17],null,[[\"@title\",\"@helpText\",\"@value\",\"@valueUpdated\"],[[28,[37,5],[[28,[37,1],[[30,1,[\"options\",\"label\"]],[28,[37,6],[[28,[37,7],[[30,1,[\"name\"]]],null]],null]],null]],null],[30,1,[\"options\",\"helpText\"]],[52,[28,[37,12],[[30,2],[30,1,[\"name\"]]],null],[28,[37,18],[[28,[37,12],[[30,2],[30,1,[\"name\"]]],null]],null],[30,5]],[30,6]]],null],[1,\"\\n  \"]],[]],null]],[]]]],[]]]],[]]]],[]]],[13]],[\"@attr\",\"@model\",\"val\",\"@updateTtl\",\"@emptyData\",\"@codemirrorUpdated\"],false,[\"unless\",\"or\",\"includes\",\"array\",\"eq\",\"capitalize\",\"humanize\",\"dasherize\",\"if\",\"info-tooltip\",\"action\",\"mut\",\"get\",\"each\",\"-track-array\",\"ttl-picker\",\"input\",\"json-editor\",\"stringify\"]]",
    "moduleName": "vault/templates/components/form-field-from-model.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/generate-credentials-database", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.top>
      <nav class="breadcrumb" aria-label="breadcrumbs">
        <ul>
          <li>
            <span class="sep">&#x0002f;</span>
            <LinkTo @route="vault.cluster.secrets.backend.overview" @model={{@backendPath}}>
              {{@backendPath}}
            </LinkTo>
          </li>
        </ul>
      </nav>
    </p.top>
    <p.levelLeft>
      <h1 data-test-title class="title is-3">
        {{@roleName}}
      </h1>
    </p.levelLeft>
  </PageHeader>
  
  <div class={{if @roleType "box is-fullwidth is-sideless is-marginless"}}>
    {{! If no role type, that means both static and dynamic requests returned an error }}
    {{#unless @roleType}}
      <EmptyState
        @title={{this.errorTitle}}
        @subTitle="Error {{@model.errorHttpStatus}}"
        @icon="alert-circle"
        @bottomBorder={{true}}
        @message={{@model.errorMessage}}
      >
        <nav class="breadcrumb" aria-label="help breadcrumb">
          <ul class="is-grouped-split">
            <li>
              {{! Empty because they can't go "back" anywhere }}
            </li>
            <li>
              <DocLink @path="/docs/secrets/databases" @class="has-text-grey">
                Need help?
              </DocLink>
            </li>
          </ul>
        </nav>
      </EmptyState>
    {{/unless}}
    {{#if (and (not @model.errorMessage) (eq @roleType "dynamic"))}}
      <AlertBanner
        @type="warning"
        @message="You will not be able to access these credentials later, so please copy them now."
        data-test-warning
      />
    {{/if}}
    {{! DYNAMIC ROLE }}
    {{#if (and (eq @roleType "dynamic") @model.username)}}
      <InfoTableRow @label="Username" @value={{@model.username}}>
        <MaskedInput @value={{@model.username}} @name="Username" @displayOnly={{true}} @allowCopy={{true}} />
      </InfoTableRow>
      <InfoTableRow @label="Password" @value={{@model.password}}>
        <MaskedInput @value={{@model.password}} @name="Password" @displayOnly={{true}} @allowCopy={{true}} />
      </InfoTableRow>
      <InfoTableRow @label="Lease ID" @value={{@model.leaseId}} />
      <InfoTableRow @label="Lease Duration" @value={{format-duration @model.leaseDuration}} />
    {{/if}}
    {{! STATIC ROLE }}
    {{#if (and (eq @roleType "static") @model.username)}}
      <InfoTableRow
        @label="Last OpenBao rotation"
        @value={{date-format @model.lastVaultRotation "MMMM d yyyy, h:mm:ss a"}}
        @tooltipText={{@model.lastVaultRotation}}
        @isTooltipCopyable={{true}}
      />
      <InfoTableRow @label="Password" @value={{@model.password}}>
        <MaskedInput @value={{@model.password}} @name="Password" @displayOnly={{true}} @allowCopy={{true}} />
      </InfoTableRow>
      <InfoTableRow @label="Username" @value={{@model.username}} />
      <InfoTableRow @label="Rotation Period" @value={{format-duration @model.rotationPeriod}} />
      <InfoTableRow @label="Time Remaining" @value={{format-duration @model.ttl}} />
    {{/if}}
  </div>
  <div class="has-top-bottom-margin">
    <button
      type="button"
      onclick={{action "redirectPreviousPage"}}
      class="button is-primary"
      data-test-secret-generate-back="true"
    >
      Back
    </button>
  </div>
  */
  {
    "id": "wT2A/hwu",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"top\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"nav\"],[14,0,\"breadcrumb\"],[14,\"aria-label\",\"breadcrumbs\"],[12],[1,\"\\n      \"],[10,\"ul\"],[12],[1,\"\\n        \"],[10,\"li\"],[12],[1,\"\\n          \"],[10,1],[14,0,\"sep\"],[12],[1,\"/\"],[13],[1,\"\\n          \"],[8,[39,1],null,[[\"@route\",\"@model\"],[\"vault.cluster.secrets.backend.overview\",[30,2]]],[[\"default\"],[[[[1,\"\\n            \"],[1,[30,2]],[1,\"\\n          \"]],[]]]]],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,\"data-test-title\",\"\"],[14,0,\"title is-3\"],[12],[1,\"\\n      \"],[1,[30,3]],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\\n\"],[10,0],[15,0,[52,[30,4],\"box is-fullwidth is-sideless is-marginless\"]],[12],[1,\"\\n\"],[41,[51,[30,4]],[[[1,\"    \"],[8,[39,4],null,[[\"@title\",\"@subTitle\",\"@icon\",\"@bottomBorder\",\"@message\"],[[30,0,[\"errorTitle\"]],[29,[\"Error \",[30,5,[\"errorHttpStatus\"]]]],\"alert-circle\",true,[30,5,[\"errorMessage\"]]]],[[\"default\"],[[[[1,\"\\n      \"],[10,\"nav\"],[14,0,\"breadcrumb\"],[14,\"aria-label\",\"help breadcrumb\"],[12],[1,\"\\n        \"],[10,\"ul\"],[14,0,\"is-grouped-split\"],[12],[1,\"\\n          \"],[10,\"li\"],[12],[1,\"\\n\"],[1,\"          \"],[13],[1,\"\\n          \"],[10,\"li\"],[12],[1,\"\\n            \"],[8,[39,5],null,[[\"@path\",\"@class\"],[\"/docs/secrets/databases\",\"has-text-grey\"]],[[\"default\"],[[[[1,\"\\n              Need help?\\n            \"]],[]]]]],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"]],[]]]]],[1,\"\\n\"]],[]],null],[41,[28,[37,6],[[28,[37,7],[[30,5,[\"errorMessage\"]]],null],[28,[37,8],[[30,4],\"dynamic\"],null]],null],[[[1,\"    \"],[8,[39,9],[[24,\"data-test-warning\",\"\"]],[[\"@type\",\"@message\"],[\"warning\",\"You will not be able to access these credentials later, so please copy them now.\"]],null],[1,\"\\n\"]],[]],null],[41,[28,[37,6],[[28,[37,8],[[30,4],\"dynamic\"],null],[30,5,[\"username\"]]],null],[[[1,\"    \"],[8,[39,10],null,[[\"@label\",\"@value\"],[\"Username\",[30,5,[\"username\"]]]],[[\"default\"],[[[[1,\"\\n      \"],[8,[39,11],null,[[\"@value\",\"@name\",\"@displayOnly\",\"@allowCopy\"],[[30,5,[\"username\"]],\"Username\",true,true]],null],[1,\"\\n    \"]],[]]]]],[1,\"\\n    \"],[8,[39,10],null,[[\"@label\",\"@value\"],[\"Password\",[30,5,[\"password\"]]]],[[\"default\"],[[[[1,\"\\n      \"],[8,[39,11],null,[[\"@value\",\"@name\",\"@displayOnly\",\"@allowCopy\"],[[30,5,[\"password\"]],\"Password\",true,true]],null],[1,\"\\n    \"]],[]]]]],[1,\"\\n    \"],[8,[39,10],null,[[\"@label\",\"@value\"],[\"Lease ID\",[30,5,[\"leaseId\"]]]],null],[1,\"\\n    \"],[8,[39,10],null,[[\"@label\",\"@value\"],[\"Lease Duration\",[28,[37,12],[[30,5,[\"leaseDuration\"]]],null]]],null],[1,\"\\n\"]],[]],null],[41,[28,[37,6],[[28,[37,8],[[30,4],\"static\"],null],[30,5,[\"username\"]]],null],[[[1,\"    \"],[8,[39,10],null,[[\"@label\",\"@value\",\"@tooltipText\",\"@isTooltipCopyable\"],[\"Last OpenBao rotation\",[28,[37,13],[[30,5,[\"lastVaultRotation\"]],\"MMMM d yyyy, h:mm:ss a\"],null],[30,5,[\"lastVaultRotation\"]],true]],null],[1,\"\\n    \"],[8,[39,10],null,[[\"@label\",\"@value\"],[\"Password\",[30,5,[\"password\"]]]],[[\"default\"],[[[[1,\"\\n      \"],[8,[39,11],null,[[\"@value\",\"@name\",\"@displayOnly\",\"@allowCopy\"],[[30,5,[\"password\"]],\"Password\",true,true]],null],[1,\"\\n    \"]],[]]]]],[1,\"\\n    \"],[8,[39,10],null,[[\"@label\",\"@value\"],[\"Username\",[30,5,[\"username\"]]]],null],[1,\"\\n    \"],[8,[39,10],null,[[\"@label\",\"@value\"],[\"Rotation Period\",[28,[37,12],[[30,5,[\"rotationPeriod\"]]],null]]],null],[1,\"\\n    \"],[8,[39,10],null,[[\"@label\",\"@value\"],[\"Time Remaining\",[28,[37,12],[[30,5,[\"ttl\"]]],null]]],null],[1,\"\\n\"]],[]],null],[13],[1,\"\\n\"],[10,0],[14,0,\"has-top-bottom-margin\"],[12],[1,\"\\n  \"],[10,\"button\"],[15,\"onclick\",[28,[37,14],[[30,0],\"redirectPreviousPage\"],null]],[14,0,\"button is-primary\"],[14,\"data-test-secret-generate-back\",\"true\"],[14,4,\"button\"],[12],[1,\"\\n    Back\\n  \"],[13],[1,\"\\n\"],[13]],[\"p\",\"@backendPath\",\"@roleName\",\"@roleType\",\"@model\"],false,[\"page-header\",\"link-to\",\"if\",\"unless\",\"empty-state\",\"doc-link\",\"and\",\"not\",\"eq\",\"alert-banner\",\"info-table-row\",\"masked-input\",\"format-duration\",\"date-format\",\"action\"]]",
    "moduleName": "vault/templates/components/generate-credentials-database.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/generate-credentials", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.top>
      <nav class="breadcrumb">
        <ul>
          <li>
            <span class="sep">&#x0002f;</span>
            <LinkTo @route="vault.cluster.secrets.backend" @model={{this.backendPath}} data-test-link="role-list">
              {{this.backendPath}}
            </LinkTo>
          </li>
          <li class="is-active">
            <span class="sep">&#x0002f;</span>
            <LinkTo @route="vault.cluster.secrets.backend" @model={{this.backendPath}}>
              creds
            </LinkTo>
          </li>
          <li>
            <span class="sep">&#x0002f;</span>
            <LinkTo @route="vault.cluster.secrets.backend.show" @model={{this.roleName}}>
              {{this.roleName}}
            </LinkTo>
          </li>
        </ul>
      </nav>
    </p.top>
    <p.levelLeft>
      <h1 data-test-title class="title is-3">
        {{this.options.title}}
      </h1>
    </p.levelLeft>
  </PageHeader>
  
  {{#if this.model.hasGenerated}}
    <div class="box is-fullwidth is-sideless is-paddingless is-marginless">
      <MessageError @model={{this.model}} />
      {{#unless this.model.isError}}
        <AlertBanner
          @type="warning"
          @message="You will not be able to access this information later, so please copy the information below."
          data-test-warning
        />
      {{/unless}}
      {{#each this.model.attrs as |attr|}}
        {{#if (eq attr.type "object")}}
          <InfoTableRow
            @label={{capitalize (or attr.options.label (humanize (dasherize attr.name)))}}
            @value={{stringify (get this.model attr.name)}}
          />
        {{else}}
          {{#if
            (or
              (eq attr.name "key")
              (eq attr.name "secretKey")
              (eq attr.name "securityToken")
              (eq attr.name "privateKey")
              attr.options.masked
            )
          }}
            {{#if (get this.model attr.name)}}
              <InfoTableRow
                @label={{capitalize (or attr.options.label (humanize (dasherize attr.name)))}}
                @value={{get this.model attr.name}}
              >
                <MaskedInput
                  @value={{get this.model attr.name}}
                  @name={{attr.name}}
                  @displayOnly={{true}}
                  @allowCopy={{true}}
                />
              </InfoTableRow>
            {{/if}}
          {{else if (and (get this.model attr.name) (or (eq attr.name "issueDate") (eq attr.name "expiryDate")))}}
            <InfoTableRow
              data-test-table-row
              @label={{capitalize (or attr.options.label (humanize (dasherize attr.name)))}}
              @value={{date-format (get this.model attr.name) "MMM dd, yyyy hh:mm:ss a" isFormatted=true}}
            />
          {{else}}
            <InfoTableRow
              @label={{capitalize (or attr.options.label (humanize (dasherize attr.name)))}}
              @value={{get this.model attr.name}}
            />
          {{/if}}
        {{/if}}
      {{/each}}
    </div>
    <div class="field is-grouped box is-fullwidth is-bottomless">
      <div class="control">
        <CopyButton
          @clipboardText={{this.model.toCreds}}
          @class="button is-primary"
          @buttonType="button"
          @success={{action (set-flash-message "Credentials copied!")}}
        >
          Copy credentials
        </CopyButton>
      </div>
      {{#if this.model.leaseId}}
        <div class="control">
          <CopyButton
            @clipboardText={{this.model.leaseId}}
            @class="button"
            @buttonType="button"
            @success={{action (set-flash-message "Lease ID copied!")}}
          >
            Copy Lease ID
          </CopyButton>
        </div>
      {{/if}}
      <div class="control">
        {{#if this.options.backIsListLink}}
          <LinkTo
            @route="vault.cluster.secrets.backend.list-root"
            @model={{this.backendPath}}
            data-test-secret-generate-back={{true}}
            class="button"
          >
            Back
          </LinkTo>
        {{else}}
          <button type="button" {{action "newModel"}} class="button" data-test-secret-generate-back="true">
            Back
          </button>
        {{/if}}
      </div>
    </div>
  {{else}}
    <form {{action "create" on="submit"}} data-test-secret-generate-form="true">
      <div class="box is-sideless no-padding-top is-fullwidth is-marginless">
        <NamespaceReminder @mode="generate" @noun="credential" />
        <MessageError @model={{this.model}} />
        {{#if this.model.helpText}}
          <p class="is-hint">{{this.model.helpText}}</p>
        {{/if}}
        {{#if this.model.fieldGroups}}
          <FormFieldGroupsLoop @model={{this.model}} @mode={{this.mode}} />
        {{else}}
          {{#each this.model.attrs as |attr|}}
            <FormField data-test-field={{true}} @attr={{attr}} @model={{this.model}} />
          {{/each}}
        {{/if}}
      </div>
      <div class="field is-grouped box is-fullwidth is-bottomless">
        <div class="control">
          <button
            type="submit"
            disabled={{this.loading}}
            class="button is-primary {{if this.loading 'is-loading'}}"
            data-test-secret-generate={{true}}
          >
            Generate
          </button>
        </div>
        <div class="control">
          <LinkTo
            @route="vault.cluster.secrets.backend.list-root"
            @model={{this.backendPath}}
            class="button"
            data-test-secret-generate-cancel={{true}}
          >
            Cancel
          </LinkTo>
        </div>
      </div>
    </form>
  {{/if}}
  */
  {
    "id": "H0IC2e1o",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"top\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"nav\"],[14,0,\"breadcrumb\"],[12],[1,\"\\n      \"],[10,\"ul\"],[12],[1,\"\\n        \"],[10,\"li\"],[12],[1,\"\\n          \"],[10,1],[14,0,\"sep\"],[12],[1,\"/\"],[13],[1,\"\\n          \"],[8,[39,1],[[24,\"data-test-link\",\"role-list\"]],[[\"@route\",\"@model\"],[\"vault.cluster.secrets.backend\",[30,0,[\"backendPath\"]]]],[[\"default\"],[[[[1,\"\\n            \"],[1,[30,0,[\"backendPath\"]]],[1,\"\\n          \"]],[]]]]],[1,\"\\n        \"],[13],[1,\"\\n        \"],[10,\"li\"],[14,0,\"is-active\"],[12],[1,\"\\n          \"],[10,1],[14,0,\"sep\"],[12],[1,\"/\"],[13],[1,\"\\n          \"],[8,[39,1],null,[[\"@route\",\"@model\"],[\"vault.cluster.secrets.backend\",[30,0,[\"backendPath\"]]]],[[\"default\"],[[[[1,\"\\n            creds\\n          \"]],[]]]]],[1,\"\\n        \"],[13],[1,\"\\n        \"],[10,\"li\"],[12],[1,\"\\n          \"],[10,1],[14,0,\"sep\"],[12],[1,\"/\"],[13],[1,\"\\n          \"],[8,[39,1],null,[[\"@route\",\"@model\"],[\"vault.cluster.secrets.backend.show\",[30,0,[\"roleName\"]]]],[[\"default\"],[[[[1,\"\\n            \"],[1,[30,0,[\"roleName\"]]],[1,\"\\n          \"]],[]]]]],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,\"data-test-title\",\"\"],[14,0,\"title is-3\"],[12],[1,\"\\n      \"],[1,[30,0,[\"options\",\"title\"]]],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\\n\"],[41,[30,0,[\"model\",\"hasGenerated\"]],[[[1,\"  \"],[10,0],[14,0,\"box is-fullwidth is-sideless is-paddingless is-marginless\"],[12],[1,\"\\n    \"],[8,[39,3],null,[[\"@model\"],[[30,0,[\"model\"]]]],null],[1,\"\\n\"],[41,[51,[30,0,[\"model\",\"isError\"]]],[[[1,\"      \"],[8,[39,5],[[24,\"data-test-warning\",\"\"]],[[\"@type\",\"@message\"],[\"warning\",\"You will not be able to access this information later, so please copy the information below.\"]],null],[1,\"\\n\"]],[]],null],[42,[28,[37,7],[[28,[37,7],[[30,0,[\"model\",\"attrs\"]]],null]],null],null,[[[41,[28,[37,8],[[30,2,[\"type\"]],\"object\"],null],[[[1,\"        \"],[8,[39,9],null,[[\"@label\",\"@value\"],[[28,[37,10],[[28,[37,11],[[30,2,[\"options\",\"label\"]],[28,[37,12],[[28,[37,13],[[30,2,[\"name\"]]],null]],null]],null]],null],[28,[37,14],[[28,[37,15],[[30,0,[\"model\"]],[30,2,[\"name\"]]],null]],null]]],null],[1,\"\\n\"]],[]],[[[41,[28,[37,11],[[28,[37,8],[[30,2,[\"name\"]],\"key\"],null],[28,[37,8],[[30,2,[\"name\"]],\"secretKey\"],null],[28,[37,8],[[30,2,[\"name\"]],\"securityToken\"],null],[28,[37,8],[[30,2,[\"name\"]],\"privateKey\"],null],[30,2,[\"options\",\"masked\"]]],null],[[[41,[28,[37,15],[[30,0,[\"model\"]],[30,2,[\"name\"]]],null],[[[1,\"            \"],[8,[39,9],null,[[\"@label\",\"@value\"],[[28,[37,10],[[28,[37,11],[[30,2,[\"options\",\"label\"]],[28,[37,12],[[28,[37,13],[[30,2,[\"name\"]]],null]],null]],null]],null],[28,[37,15],[[30,0,[\"model\"]],[30,2,[\"name\"]]],null]]],[[\"default\"],[[[[1,\"\\n              \"],[8,[39,16],null,[[\"@value\",\"@name\",\"@displayOnly\",\"@allowCopy\"],[[28,[37,15],[[30,0,[\"model\"]],[30,2,[\"name\"]]],null],[30,2,[\"name\"]],true,true]],null],[1,\"\\n            \"]],[]]]]],[1,\"\\n\"]],[]],null]],[]],[[[41,[28,[37,17],[[28,[37,15],[[30,0,[\"model\"]],[30,2,[\"name\"]]],null],[28,[37,11],[[28,[37,8],[[30,2,[\"name\"]],\"issueDate\"],null],[28,[37,8],[[30,2,[\"name\"]],\"expiryDate\"],null]],null]],null],[[[1,\"          \"],[8,[39,9],[[24,\"data-test-table-row\",\"\"]],[[\"@label\",\"@value\"],[[28,[37,10],[[28,[37,11],[[30,2,[\"options\",\"label\"]],[28,[37,12],[[28,[37,13],[[30,2,[\"name\"]]],null]],null]],null]],null],[28,[37,18],[[28,[37,15],[[30,0,[\"model\"]],[30,2,[\"name\"]]],null],\"MMM dd, yyyy hh:mm:ss a\"],[[\"isFormatted\"],[true]]]]],null],[1,\"\\n\"]],[]],[[[1,\"          \"],[8,[39,9],null,[[\"@label\",\"@value\"],[[28,[37,10],[[28,[37,11],[[30,2,[\"options\",\"label\"]],[28,[37,12],[[28,[37,13],[[30,2,[\"name\"]]],null]],null]],null]],null],[28,[37,15],[[30,0,[\"model\"]],[30,2,[\"name\"]]],null]]],null],[1,\"\\n        \"]],[]]]],[]]]],[]]]],[2]],null],[1,\"  \"],[13],[1,\"\\n  \"],[10,0],[14,0,\"field is-grouped box is-fullwidth is-bottomless\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n      \"],[8,[39,19],null,[[\"@clipboardText\",\"@class\",\"@buttonType\",\"@success\"],[[30,0,[\"model\",\"toCreds\"]],\"button is-primary\",\"button\",[28,[37,20],[[30,0],[28,[37,21],[\"Credentials copied!\"],null]],null]]],[[\"default\"],[[[[1,\"\\n        Copy credentials\\n      \"]],[]]]]],[1,\"\\n    \"],[13],[1,\"\\n\"],[41,[30,0,[\"model\",\"leaseId\"]],[[[1,\"      \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n        \"],[8,[39,19],null,[[\"@clipboardText\",\"@class\",\"@buttonType\",\"@success\"],[[30,0,[\"model\",\"leaseId\"]],\"button\",\"button\",[28,[37,20],[[30,0],[28,[37,21],[\"Lease ID copied!\"],null]],null]]],[[\"default\"],[[[[1,\"\\n          Copy Lease ID\\n        \"]],[]]]]],[1,\"\\n      \"],[13],[1,\"\\n\"]],[]],null],[1,\"    \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n\"],[41,[30,0,[\"options\",\"backIsListLink\"]],[[[1,\"        \"],[8,[39,1],[[16,\"data-test-secret-generate-back\",true],[24,0,\"button\"]],[[\"@route\",\"@model\"],[\"vault.cluster.secrets.backend.list-root\",[30,0,[\"backendPath\"]]]],[[\"default\"],[[[[1,\"\\n          Back\\n        \"]],[]]]]],[1,\"\\n\"]],[]],[[[1,\"        \"],[11,\"button\"],[24,0,\"button\"],[24,\"data-test-secret-generate-back\",\"true\"],[24,4,\"button\"],[4,[38,20],[[30,0],\"newModel\"],null],[12],[1,\"\\n          Back\\n        \"],[13],[1,\"\\n\"]],[]]],[1,\"    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]],[[[1,\"  \"],[11,\"form\"],[24,\"data-test-secret-generate-form\",\"true\"],[4,[38,20],[[30,0],\"create\"],[[\"on\"],[\"submit\"]]],[12],[1,\"\\n    \"],[10,0],[14,0,\"box is-sideless no-padding-top is-fullwidth is-marginless\"],[12],[1,\"\\n      \"],[8,[39,22],null,[[\"@mode\",\"@noun\"],[\"generate\",\"credential\"]],null],[1,\"\\n      \"],[8,[39,3],null,[[\"@model\"],[[30,0,[\"model\"]]]],null],[1,\"\\n\"],[41,[30,0,[\"model\",\"helpText\"]],[[[1,\"        \"],[10,2],[14,0,\"is-hint\"],[12],[1,[30,0,[\"model\",\"helpText\"]]],[13],[1,\"\\n\"]],[]],null],[41,[30,0,[\"model\",\"fieldGroups\"]],[[[1,\"        \"],[8,[39,23],null,[[\"@model\",\"@mode\"],[[30,0,[\"model\"]],[30,0,[\"mode\"]]]],null],[1,\"\\n\"]],[]],[[[42,[28,[37,7],[[28,[37,7],[[30,0,[\"model\",\"attrs\"]]],null]],null],null,[[[1,\"          \"],[8,[39,24],[[16,\"data-test-field\",true]],[[\"@attr\",\"@model\"],[[30,3],[30,0,[\"model\"]]]],null],[1,\"\\n\"]],[3]],null]],[]]],[1,\"    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"field is-grouped box is-fullwidth is-bottomless\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n        \"],[10,\"button\"],[15,\"disabled\",[30,0,[\"loading\"]]],[15,0,[29,[\"button is-primary \",[52,[30,0,[\"loading\"]],\"is-loading\"]]]],[15,\"data-test-secret-generate\",true],[14,4,\"submit\"],[12],[1,\"\\n          Generate\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n      \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n        \"],[8,[39,1],[[24,0,\"button\"],[16,\"data-test-secret-generate-cancel\",true]],[[\"@route\",\"@model\"],[\"vault.cluster.secrets.backend.list-root\",[30,0,[\"backendPath\"]]]],[[\"default\"],[[[[1,\"\\n          Cancel\\n        \"]],[]]]]],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]]]],[\"p\",\"attr\",\"attr\"],false,[\"page-header\",\"link-to\",\"if\",\"message-error\",\"unless\",\"alert-banner\",\"each\",\"-track-array\",\"eq\",\"info-table-row\",\"capitalize\",\"or\",\"humanize\",\"dasherize\",\"stringify\",\"get\",\"masked-input\",\"and\",\"date-format\",\"copy-button\",\"action\",\"set-flash-message\",\"namespace-reminder\",\"form-field-groups-loop\",\"form-field\"]]",
    "moduleName": "vault/templates/components/generate-credentials.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/generated-item-list", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.top>
      <KeyValueHeader @path="vault.cluster.access.methods">
        <li>
          <span class="sep">
            /
          </span>
          <LinkTo @route="vault.cluster.access.methods">
            methods
          </LinkTo>
        </li>
      </KeyValueHeader>
    </p.top>
    <p.levelLeft>
      <h1 class="title is-3">
        {{@methodModel.id}}
      </h1>
    </p.levelLeft>
  </PageHeader>
  {{#let (tabs-for-auth-section @methodModel "authConfig" @paths) as |tabs|}}
    {{#if tabs.length}}
      <div class="tabs-container box is-sideless is-fullwidth is-paddingless is-marginless">
        <nav class="tabs">
          <ul>
            {{#each tabs as |tab|}}
              <li>
                <LinkTo @route={{get tab.routeParams 0}} @model={{get tab.routeParams 1}} data-test-auth-section-tab={{true}}>
                  {{tab.label}}
                </LinkTo>
              </li>
            {{/each}}
          </ul>
        </nav>
      </div>
    {{/if}}
  {{/let}}
  <Toolbar>
    <ToolbarActions>
      <ToolbarLink
        @route="vault.cluster.access.method.item.create"
        @model={{this.itemType}}
        @type="add"
        data-test-entity-create-link={{this.itemType}}
      >
        Create
        {{singularize this.itemType}}
      </ToolbarLink>
    </ToolbarActions>
  </Toolbar>
  <ListView
    @items={{this.model}}
    @itemNoun={{this.itemType}}
    @paginationRouteName="vault.cluster.access.method.item.list"
    as |list|
  >
    {{#if list.empty}}
      <list.empty
        @title="No {{pluralize this.itemType}} yet"
        @message="A list of {{pluralize
          this.itemType
        }} will be listed here. Create your first {{this.itemType}} to get started."
      >
        <LinkTo @route="vault.cluster.access.method.item.create" @model={{this.itemType}} class="link">
          Create
          {{singularize this.itemType}}
        </LinkTo>
      </list.empty>
    {{else if list.item}}
      <ListItem @linkParams={{array "vault.cluster.access.method.item.show" this.itemType list.item.id}} as |Item|>
        <Item.content>
          <Icon @name="folder" class="has-text-grey-light" />{{list.item.id}}
        </Item.content>
        <Item.menu as |Menu|>
          <li class="action">
            <LinkTo @route="vault.cluster.access.method.item.show" @model={{list.item.id}} class="is-block">
              View
              {{singularize this.itemType}}
            </LinkTo>
          </li>
          <li class="action">
            <LinkTo @route="vault.cluster.access.method.item.edit" @model={{list.item.id}} class="is-block">
              Edit
              {{singularize this.itemType}}
            </LinkTo>
          </li>
          <li>
            <Menu.Message
              @id={{list.item.id}}
              @buttonClasses="link is-destroy"
              @onConfirm={{action
                (perform
                  Item.callMethod
                  "destroyRecord"
                  list.item
                  (concat "Successfully deleted " (singularize this.itemType) " " list.item.id ".")
                  (concat "There was an error deleting this " (singularize this.itemType))
                  (action "refreshItemList")
                )
              }}
              @message={{concat "Are you sure you want to delete " (singularize this.itemType) " " list.item.id "?"}}
              data-test-secret-delete="true"
              @triggerText={{concat "Delete " (singularize this.itemType)}}
            />
          </li>
        </Item.menu>
      </ListItem>
    {{/if}}
  </ListView>
  */
  {
    "id": "ivJQRw82",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"top\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,1],null,[[\"@path\"],[\"vault.cluster.access.methods\"]],[[\"default\"],[[[[1,\"\\n      \"],[10,\"li\"],[12],[1,\"\\n        \"],[10,1],[14,0,\"sep\"],[12],[1,\"\\n          /\\n        \"],[13],[1,\"\\n        \"],[8,[39,2],null,[[\"@route\"],[\"vault.cluster.access.methods\"]],[[\"default\"],[[[[1,\"\\n          methods\\n        \"]],[]]]]],[1,\"\\n      \"],[13],[1,\"\\n    \"]],[]]]]],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n      \"],[1,[30,2,[\"id\"]]],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\"],[44,[[28,[37,4],[[30,2],\"authConfig\",[30,3]],null]],[[[41,[30,4,[\"length\"]],[[[1,\"    \"],[10,0],[14,0,\"tabs-container box is-sideless is-fullwidth is-paddingless is-marginless\"],[12],[1,\"\\n      \"],[10,\"nav\"],[14,0,\"tabs\"],[12],[1,\"\\n        \"],[10,\"ul\"],[12],[1,\"\\n\"],[42,[28,[37,7],[[28,[37,7],[[30,4]],null]],null],null,[[[1,\"            \"],[10,\"li\"],[12],[1,\"\\n              \"],[8,[39,2],[[16,\"data-test-auth-section-tab\",true]],[[\"@route\",\"@model\"],[[28,[37,8],[[30,5,[\"routeParams\"]],0],null],[28,[37,8],[[30,5,[\"routeParams\"]],1],null]]],[[\"default\"],[[[[1,\"\\n                \"],[1,[30,5,[\"label\"]]],[1,\"\\n              \"]],[]]]]],[1,\"\\n            \"],[13],[1,\"\\n\"]],[5]],null],[1,\"        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n\"]],[]],null]],[4]]],[8,[39,9],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[39,10],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,11],[[16,\"data-test-entity-create-link\",[30,0,[\"itemType\"]]]],[[\"@route\",\"@model\",\"@type\"],[\"vault.cluster.access.method.item.create\",[30,0,[\"itemType\"]],\"add\"]],[[\"default\"],[[[[1,\"\\n      Create\\n      \"],[1,[28,[35,12],[[30,0,[\"itemType\"]]],null]],[1,\"\\n    \"]],[]]]]],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]]]]],[1,\"\\n\"],[8,[39,13],null,[[\"@items\",\"@itemNoun\",\"@paginationRouteName\"],[[30,0,[\"model\"]],[30,0,[\"itemType\"]],\"vault.cluster.access.method.item.list\"]],[[\"default\"],[[[[1,\"\\n\"],[41,[30,6,[\"empty\"]],[[[1,\"    \"],[8,[30,6,[\"empty\"]],null,[[\"@title\",\"@message\"],[[29,[\"No \",[28,[37,14],[[30,0,[\"itemType\"]]],null],\" yet\"]],[29,[\"A list of \",[28,[37,14],[[30,0,[\"itemType\"]]],null],\" will be listed here. Create your first \",[30,0,[\"itemType\"]],\" to get started.\"]]]],[[\"default\"],[[[[1,\"\\n      \"],[8,[39,2],[[24,0,\"link\"]],[[\"@route\",\"@model\"],[\"vault.cluster.access.method.item.create\",[30,0,[\"itemType\"]]]],[[\"default\"],[[[[1,\"\\n        Create\\n        \"],[1,[28,[35,12],[[30,0,[\"itemType\"]]],null]],[1,\"\\n      \"]],[]]]]],[1,\"\\n    \"]],[]]]]],[1,\"\\n\"]],[]],[[[41,[30,6,[\"item\"]],[[[1,\"    \"],[8,[39,15],null,[[\"@linkParams\"],[[28,[37,16],[\"vault.cluster.access.method.item.show\",[30,0,[\"itemType\"]],[30,6,[\"item\",\"id\"]]],null]]],[[\"default\"],[[[[1,\"\\n      \"],[8,[30,7,[\"content\"]],null,null,[[\"default\"],[[[[1,\"\\n        \"],[8,[39,17],[[24,0,\"has-text-grey-light\"]],[[\"@name\"],[\"folder\"]],null],[1,[30,6,[\"item\",\"id\"]]],[1,\"\\n      \"]],[]]]]],[1,\"\\n      \"],[8,[30,7,[\"menu\"]],null,null,[[\"default\"],[[[[1,\"\\n        \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n          \"],[8,[39,2],[[24,0,\"is-block\"]],[[\"@route\",\"@model\"],[\"vault.cluster.access.method.item.show\",[30,6,[\"item\",\"id\"]]]],[[\"default\"],[[[[1,\"\\n            View\\n            \"],[1,[28,[35,12],[[30,0,[\"itemType\"]]],null]],[1,\"\\n          \"]],[]]]]],[1,\"\\n        \"],[13],[1,\"\\n        \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n          \"],[8,[39,2],[[24,0,\"is-block\"]],[[\"@route\",\"@model\"],[\"vault.cluster.access.method.item.edit\",[30,6,[\"item\",\"id\"]]]],[[\"default\"],[[[[1,\"\\n            Edit\\n            \"],[1,[28,[35,12],[[30,0,[\"itemType\"]]],null]],[1,\"\\n          \"]],[]]]]],[1,\"\\n        \"],[13],[1,\"\\n        \"],[10,\"li\"],[12],[1,\"\\n          \"],[8,[30,8,[\"Message\"]],[[24,\"data-test-secret-delete\",\"true\"]],[[\"@id\",\"@buttonClasses\",\"@onConfirm\",\"@message\",\"@triggerText\"],[[30,6,[\"item\",\"id\"]],\"link is-destroy\",[28,[37,18],[[30,0],[28,[37,19],[[30,7,[\"callMethod\"]],\"destroyRecord\",[30,6,[\"item\"]],[28,[37,20],[\"Successfully deleted \",[28,[37,12],[[30,0,[\"itemType\"]]],null],\" \",[30,6,[\"item\",\"id\"]],\".\"],null],[28,[37,20],[\"There was an error deleting this \",[28,[37,12],[[30,0,[\"itemType\"]]],null]],null],[28,[37,18],[[30,0],\"refreshItemList\"],null]],null]],null],[28,[37,20],[\"Are you sure you want to delete \",[28,[37,12],[[30,0,[\"itemType\"]]],null],\" \",[30,6,[\"item\",\"id\"]],\"?\"],null],[28,[37,20],[\"Delete \",[28,[37,12],[[30,0,[\"itemType\"]]],null]],null]]],null],[1,\"\\n        \"],[13],[1,\"\\n      \"]],[8]]]]],[1,\"\\n    \"]],[7]]]]],[1,\"\\n  \"]],[]],null]],[]]]],[6]]]]]],[\"p\",\"@methodModel\",\"@paths\",\"tabs\",\"tab\",\"list\",\"Item\",\"Menu\"],false,[\"page-header\",\"key-value-header\",\"link-to\",\"let\",\"tabs-for-auth-section\",\"if\",\"each\",\"-track-array\",\"get\",\"toolbar\",\"toolbar-actions\",\"toolbar-link\",\"singularize\",\"list-view\",\"pluralize\",\"list-item\",\"array\",\"icon\",\"action\",\"perform\",\"concat\"]]",
    "moduleName": "vault/templates/components/generated-item-list.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/generated-item", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.top>
      <nav class="breadcrumb">
        <ul>
          <li>
            <span class="sep">
              /
            </span>
            <LinkTo @route="vault.cluster.access.method.item.list" @model={{this.itemType}}>
              {{pluralize this.itemType}}
            </LinkTo>
          </li>
        </ul>
      </nav>
    </p.top>
    <p.levelLeft>
      {{#if (eq this.mode "show")}}
        <h1 class="title is-3">
          {{this.model.id}}
        </h1>
      {{else}}
        <h1 class="title is-3">
          {{capitalize this.mode}}
          {{singularize this.itemType}}
          {{#if (eq this.mode "edit")}}
            {{this.model.id}}
          {{/if}}
        </h1>
      {{/if}}
    </p.levelLeft>
  </PageHeader>
  {{#if (eq this.mode "show")}}
    <Toolbar>
      <ToolbarActions>
        <ConfirmAction
          @buttonClasses="toolbar-link"
          @onConfirmAction={{action "deleteItem"}}
          @confirmMessage={{concat "Are you sure you want to delete " this.itemType " " this.model.id "?"}}
          @cancelButtonText="Cancel"
          data-test-secret-delete="true"
        >
          Delete
          {{this.itemType}}
        </ConfirmAction>
        <div class="toolbar-separator"></div>
        <ToolbarLink
          @route="vault.cluster.access.method.item.edit"
          @models={{array this.itemType this.model.id}}
          data-test-configure-link="true"
        >
          Edit
          {{singularize this.itemType}}
        </ToolbarLink>
      </ToolbarActions>
    </Toolbar>
  {{/if}}
  {{#if (eq this.mode "show")}}
    <FieldGroupShow @model={{this.model}} @showAllFields={{true}} />
  {{else}}
    <form {{action (perform this.saveModel) on="submit"}}>
      <div class="box is-sideless is-fullwidth is-marginless">
        <NamespaceReminder @mode="save" @noun={{this.itemType}} />
        <MessageError @model={{this.model}} />
        <FormFieldGroups
          @model={{this.model}}
          @mode={{this.mode}}
          @onKeyUp={{action "onKeyUp"}}
          @modelValidations={{this.modelValidations}}
        />
      </div>
      <div class="field is-grouped-split box is-fullwidth is-bottomless">
        <div class="control">
          <button
            type="submit"
            data-test-save-config="true"
            class="button is-primary {{if this.saveModel.isRunning 'loading'}}"
            disabled={{or this.saveModel.isRunning this.isFormInvalid}}
          >
            Save
          </button>
          {{#if (eq this.mode "create")}}
            <LinkTo @route="vault.cluster.access.method.item.list" class="button" data-test-cancel-link={{true}}>
              Cancel
            </LinkTo>
          {{else}}
            <LinkTo
              @route="vault.cluster.access.method.item.show"
              @model={{this.model.id}}
              class="button"
              data-test-cancel-link={{true}}
            >
              Cancel
            </LinkTo>
          {{/if}}
        </div>
      </div>
    </form>
  {{/if}}
  */
  {
    "id": "90hZGd3n",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"top\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"nav\"],[14,0,\"breadcrumb\"],[12],[1,\"\\n      \"],[10,\"ul\"],[12],[1,\"\\n        \"],[10,\"li\"],[12],[1,\"\\n          \"],[10,1],[14,0,\"sep\"],[12],[1,\"\\n            /\\n          \"],[13],[1,\"\\n          \"],[8,[39,1],null,[[\"@route\",\"@model\"],[\"vault.cluster.access.method.item.list\",[30,0,[\"itemType\"]]]],[[\"default\"],[[[[1,\"\\n            \"],[1,[28,[35,2],[[30,0,[\"itemType\"]]],null]],[1,\"\\n          \"]],[]]]]],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n\"],[41,[28,[37,4],[[30,0,[\"mode\"]],\"show\"],null],[[[1,\"      \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n        \"],[1,[30,0,[\"model\",\"id\"]]],[1,\"\\n      \"],[13],[1,\"\\n\"]],[]],[[[1,\"      \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n        \"],[1,[28,[35,5],[[30,0,[\"mode\"]]],null]],[1,\"\\n        \"],[1,[28,[35,6],[[30,0,[\"itemType\"]]],null]],[1,\"\\n\"],[41,[28,[37,4],[[30,0,[\"mode\"]],\"edit\"],null],[[[1,\"          \"],[1,[30,0,[\"model\",\"id\"]]],[1,\"\\n\"]],[]],null],[1,\"      \"],[13],[1,\"\\n\"]],[]]],[1,\"  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\"],[41,[28,[37,4],[[30,0,[\"mode\"]],\"show\"],null],[[[1,\"  \"],[8,[39,7],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,8],null,null,[[\"default\"],[[[[1,\"\\n      \"],[8,[39,9],[[24,\"data-test-secret-delete\",\"true\"]],[[\"@buttonClasses\",\"@onConfirmAction\",\"@confirmMessage\",\"@cancelButtonText\"],[\"toolbar-link\",[28,[37,10],[[30,0],\"deleteItem\"],null],[28,[37,11],[\"Are you sure you want to delete \",[30,0,[\"itemType\"]],\" \",[30,0,[\"model\",\"id\"]],\"?\"],null],\"Cancel\"]],[[\"default\"],[[[[1,\"\\n        Delete\\n        \"],[1,[30,0,[\"itemType\"]]],[1,\"\\n      \"]],[]]]]],[1,\"\\n      \"],[10,0],[14,0,\"toolbar-separator\"],[12],[13],[1,\"\\n      \"],[8,[39,12],[[24,\"data-test-configure-link\",\"true\"]],[[\"@route\",\"@models\"],[\"vault.cluster.access.method.item.edit\",[28,[37,13],[[30,0,[\"itemType\"]],[30,0,[\"model\",\"id\"]]],null]]],[[\"default\"],[[[[1,\"\\n        Edit\\n        \"],[1,[28,[35,6],[[30,0,[\"itemType\"]]],null]],[1,\"\\n      \"]],[]]]]],[1,\"\\n    \"]],[]]]]],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]],null],[41,[28,[37,4],[[30,0,[\"mode\"]],\"show\"],null],[[[1,\"  \"],[8,[39,14],null,[[\"@model\",\"@showAllFields\"],[[30,0,[\"model\"]],true]],null],[1,\"\\n\"]],[]],[[[1,\"  \"],[11,\"form\"],[4,[38,10],[[30,0],[28,[37,15],[[30,0,[\"saveModel\"]]],null]],[[\"on\"],[\"submit\"]]],[12],[1,\"\\n    \"],[10,0],[14,0,\"box is-sideless is-fullwidth is-marginless\"],[12],[1,\"\\n      \"],[8,[39,16],null,[[\"@mode\",\"@noun\"],[\"save\",[30,0,[\"itemType\"]]]],null],[1,\"\\n      \"],[8,[39,17],null,[[\"@model\"],[[30,0,[\"model\"]]]],null],[1,\"\\n      \"],[8,[39,18],null,[[\"@model\",\"@mode\",\"@onKeyUp\",\"@modelValidations\"],[[30,0,[\"model\"]],[30,0,[\"mode\"]],[28,[37,10],[[30,0],\"onKeyUp\"],null],[30,0,[\"modelValidations\"]]]],null],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"field is-grouped-split box is-fullwidth is-bottomless\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n        \"],[10,\"button\"],[14,\"data-test-save-config\",\"true\"],[15,0,[29,[\"button is-primary \",[52,[30,0,[\"saveModel\",\"isRunning\"]],\"loading\"]]]],[15,\"disabled\",[28,[37,19],[[30,0,[\"saveModel\",\"isRunning\"]],[30,0,[\"isFormInvalid\"]]],null]],[14,4,\"submit\"],[12],[1,\"\\n          Save\\n        \"],[13],[1,\"\\n\"],[41,[28,[37,4],[[30,0,[\"mode\"]],\"create\"],null],[[[1,\"          \"],[8,[39,1],[[24,0,\"button\"],[16,\"data-test-cancel-link\",true]],[[\"@route\"],[\"vault.cluster.access.method.item.list\"]],[[\"default\"],[[[[1,\"\\n            Cancel\\n          \"]],[]]]]],[1,\"\\n\"]],[]],[[[1,\"          \"],[8,[39,1],[[24,0,\"button\"],[16,\"data-test-cancel-link\",true]],[[\"@route\",\"@model\"],[\"vault.cluster.access.method.item.show\",[30,0,[\"model\",\"id\"]]]],[[\"default\"],[[[[1,\"\\n            Cancel\\n          \"]],[]]]]],[1,\"\\n\"]],[]]],[1,\"      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]]]],[\"p\"],false,[\"page-header\",\"link-to\",\"pluralize\",\"if\",\"eq\",\"capitalize\",\"singularize\",\"toolbar\",\"toolbar-actions\",\"confirm-action\",\"action\",\"concat\",\"toolbar-link\",\"array\",\"field-group-show\",\"perform\",\"namespace-reminder\",\"message-error\",\"form-field-groups\",\"or\"]]",
    "moduleName": "vault/templates/components/generated-item.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/get-credentials-card", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <form {{on "submit" this.transitionToCredential}} class="selectable-card is-rounded no-flex data-test-get-credentials-card">
    <div class="is-flex-between is-fullwidth card-details">
      <h3 class="title is-5">{{@title}}</h3>
    </div>
    <div class="has-top-bottom-margin">
      <p class="is-label search-label">{{@searchLabel}}</p>
    </div>
    <p class="sub-text">{{@subText}}</p>
    {{#if @renderInputSearch}}
      <InputSearch
        @id="search-input-{{@type}}"
        @onChange={{this.handleInput}}
        @placeholder={{@placeholder}}
        @initialValue={{@initialValue}}
        data-test-search-roles
      />
    {{else}}
      <SearchSelect
        @id="search-input-{{@type}}"
        @models={{@models}}
        @selectLimit="1"
        @backend={{@backend}}
        @fallbackComponent="input-search"
        @onChange={{this.handleInput}}
        @placeholder={{@placeholder}}
        data-test-search-roles
      />
    {{/if}}
    <button type="submit" class="button is-secondary" disabled={{this.buttonDisabled}} data-test-get-credentials>
      {{this.buttonText}}
    </button>
  </form>
  */
  {
    "id": "4H1eE0JN",
    "block": "[[[11,\"form\"],[24,0,\"selectable-card is-rounded no-flex data-test-get-credentials-card\"],[4,[38,0],[\"submit\",[30,0,[\"transitionToCredential\"]]],null],[12],[1,\"\\n  \"],[10,0],[14,0,\"is-flex-between is-fullwidth card-details\"],[12],[1,\"\\n    \"],[10,\"h3\"],[14,0,\"title is-5\"],[12],[1,[30,1]],[13],[1,\"\\n  \"],[13],[1,\"\\n  \"],[10,0],[14,0,\"has-top-bottom-margin\"],[12],[1,\"\\n    \"],[10,2],[14,0,\"is-label search-label\"],[12],[1,[30,2]],[13],[1,\"\\n  \"],[13],[1,\"\\n  \"],[10,2],[14,0,\"sub-text\"],[12],[1,[30,3]],[13],[1,\"\\n\"],[41,[30,4],[[[1,\"    \"],[8,[39,2],[[24,\"data-test-search-roles\",\"\"]],[[\"@id\",\"@onChange\",\"@placeholder\",\"@initialValue\"],[[29,[\"search-input-\",[30,5]]],[30,0,[\"handleInput\"]],[30,6],[30,7]]],null],[1,\"\\n\"]],[]],[[[1,\"    \"],[8,[39,3],[[24,\"data-test-search-roles\",\"\"]],[[\"@id\",\"@models\",\"@selectLimit\",\"@backend\",\"@fallbackComponent\",\"@onChange\",\"@placeholder\"],[[29,[\"search-input-\",[30,5]]],[30,8],\"1\",[30,9],\"input-search\",[30,0,[\"handleInput\"]],[30,6]]],null],[1,\"\\n\"]],[]]],[1,\"  \"],[10,\"button\"],[14,0,\"button is-secondary\"],[15,\"disabled\",[30,0,[\"buttonDisabled\"]]],[14,\"data-test-get-credentials\",\"\"],[14,4,\"submit\"],[12],[1,\"\\n    \"],[1,[30,0,[\"buttonText\"]]],[1,\"\\n  \"],[13],[1,\"\\n\"],[13]],[\"@title\",\"@searchLabel\",\"@subText\",\"@renderInputSearch\",\"@type\",\"@placeholder\",\"@initialValue\",\"@models\",\"@backend\"],false,[\"on\",\"if\",\"input-search\",\"search-select\"]]",
    "moduleName": "vault/templates/components/get-credentials-card.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/hover-copy-button", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <div class={{if this.alwaysShow "hover-copy-button-static" "hover-copy-button"}} data-test-hover-copy>
    <ToolTip @onClose={{action (mut this.tooltipText) "Copy"}} as |T|>
      <T.Trigger data-test-tooltip-trigger tabindex="-1">
        <CopyButton
          data-test-hover-copy-button
          class="copy-button button is-compact is-transparent"
          @clipboardText={{this.copyValue}}
          @success={{action (mut this.tooltipText) "Copied!"}}
        >
          <Icon @name="clipboard-copy" aria-label="Copy" />
        </CopyButton>
      </T.Trigger>
      <T.Content @defaultClass="tool-tip">
        <div class="box" data-test-hover-copy-tooltip-text>
          {{this.tooltipText}}
        </div>
      </T.Content>
    </ToolTip>
  </div>
  */
  {
    "id": "s32rJZMD",
    "block": "[[[10,0],[15,0,[52,[30,0,[\"alwaysShow\"]],\"hover-copy-button-static\",\"hover-copy-button\"]],[14,\"data-test-hover-copy\",\"\"],[12],[1,\"\\n  \"],[8,[39,1],null,[[\"@onClose\"],[[28,[37,2],[[30,0],[28,[37,3],[[30,0,[\"tooltipText\"]]],null],\"Copy\"],null]]],[[\"default\"],[[[[1,\"\\n    \"],[8,[30,1,[\"Trigger\"]],[[24,\"data-test-tooltip-trigger\",\"\"],[24,\"tabindex\",\"-1\"]],null,[[\"default\"],[[[[1,\"\\n      \"],[8,[39,4],[[24,\"data-test-hover-copy-button\",\"\"],[24,0,\"copy-button button is-compact is-transparent\"]],[[\"@clipboardText\",\"@success\"],[[30,0,[\"copyValue\"]],[28,[37,2],[[30,0],[28,[37,3],[[30,0,[\"tooltipText\"]]],null],\"Copied!\"],null]]],[[\"default\"],[[[[1,\"\\n        \"],[8,[39,5],[[24,\"aria-label\",\"Copy\"]],[[\"@name\"],[\"clipboard-copy\"]],null],[1,\"\\n      \"]],[]]]]],[1,\"\\n    \"]],[]]]]],[1,\"\\n    \"],[8,[30,1,[\"Content\"]],null,[[\"@defaultClass\"],[\"tool-tip\"]],[[\"default\"],[[[[1,\"\\n      \"],[10,0],[14,0,\"box\"],[14,\"data-test-hover-copy-tooltip-text\",\"\"],[12],[1,\"\\n        \"],[1,[30,0,[\"tooltipText\"]]],[1,\"\\n      \"],[13],[1,\"\\n    \"]],[]]]]],[1,\"\\n  \"]],[1]]]]],[1,\"\\n\"],[13]],[\"T\"],false,[\"if\",\"tool-tip\",\"action\",\"mut\",\"copy-button\",\"icon\"]]",
    "moduleName": "vault/templates/components/hover-copy-button.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/identity/edit-form", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{#if (and (eq this.mode "edit") this.model.canDelete)}}
    <Toolbar>
      <ToolbarActions>
        <ConfirmAction
          @buttonClasses="toolbar-link"
          @onConfirmAction={{action "deleteItem" this.model}}
          data-test-entity-item-delete="true"
        >
          Delete
          {{this.model.identityType}}
        </ConfirmAction>
      </ToolbarActions>
    </Toolbar>
  {{/if}}
  
  <form {{action (perform this.save) on="submit"}}>
    <div class="box is-sideless is-fullwidth is-marginless">
      <NamespaceReminder @mode={{this.mode}} @noun={{lowercase (humanize this.model.identityType)}} />
      <MessageError @model={{this.model}} />
      {{#if (eq this.mode "merge")}}
        <AlertBanner
          @type="warning"
          @message="Metadata on merged entities is not preserved, you will need to recreate it on the entity you merge to."
        />
      {{/if}}
      {{#each this.model.fields as |attr|}}
        <FormField data-test-field={{true}} @attr={{attr}} @model={{@model}}>
          <div class="form-section">
            {{#if this.model.canCreatePolicies}}
              <SearchSelectWithModal
                @id="policies"
                @label="Policies"
                @labelClass="title is-4"
                @models={{array "policy/acl" "policy/rgp"}}
                @inputValue={{@model.policies}}
                @onChange={{action (mut this.model.policies)}}
                @fallbackComponent="string-list"
                @modalFormTemplate="modal-form/policy-template"
                @excludeOptions={{array "root"}}
              />
            {{else}}
              <SearchSelect
                @id="policies"
                @label="Policies"
                @labelClass="title is-4"
                @models={{array "policy/acl" "policy/rgp"}}
                @inputValue={{@model.policies}}
                @onChange={{action (mut this.model.policies)}}
                @fallbackComponent="string-list"
                @disallowNewItems={{true}}
              />
            {{/if}}
          </div>
        </FormField>
      {{/each}}
    </div>
  
    <div class="field is-grouped is-grouped-split is-fullwidth box is-bottomless">
      <div class="field is-grouped">
        <div class="control">
          <button
            type="submit"
            data-test-identity-submit={{true}}
            class="button is-primary {{if this.save.isRunning 'loading'}}"
            disabled={{this.save.isRunning}}
          >
            {{#if (eq this.mode "create")}}
              Create
            {{else}}
              Save
            {{/if}}
          </button>
          {{#if (or (eq this.mode "merge") (eq this.mode "create"))}}
            <LinkTo @route={{this.cancelLink}} class="button" data-test-cancel-link={{true}}>
              Cancel
            </LinkTo>
          {{else}}
            <LinkTo
              @route={{this.cancelLink}}
              @models={{array this.model.id "details"}}
              class="button"
              data-test-cancel-link={{true}}
            >
              Cancel
            </LinkTo>
          {{/if}}
        </div>
      </div>
    </div>
  </form>
  */
  {
    "id": "vaVwgK1q",
    "block": "[[[41,[28,[37,1],[[28,[37,2],[[30,0,[\"mode\"]],\"edit\"],null],[30,0,[\"model\",\"canDelete\"]]],null],[[[1,\"  \"],[8,[39,3],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,4],null,null,[[\"default\"],[[[[1,\"\\n      \"],[8,[39,5],[[24,\"data-test-entity-item-delete\",\"true\"]],[[\"@buttonClasses\",\"@onConfirmAction\"],[\"toolbar-link\",[28,[37,6],[[30,0],\"deleteItem\",[30,0,[\"model\"]]],null]]],[[\"default\"],[[[[1,\"\\n        Delete\\n        \"],[1,[30,0,[\"model\",\"identityType\"]]],[1,\"\\n      \"]],[]]]]],[1,\"\\n    \"]],[]]]]],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"\\n\"],[11,\"form\"],[4,[38,6],[[30,0],[28,[37,7],[[30,0,[\"save\"]]],null]],[[\"on\"],[\"submit\"]]],[12],[1,\"\\n  \"],[10,0],[14,0,\"box is-sideless is-fullwidth is-marginless\"],[12],[1,\"\\n    \"],[8,[39,8],null,[[\"@mode\",\"@noun\"],[[30,0,[\"mode\"]],[28,[37,9],[[28,[37,10],[[30,0,[\"model\",\"identityType\"]]],null]],null]]],null],[1,\"\\n    \"],[8,[39,11],null,[[\"@model\"],[[30,0,[\"model\"]]]],null],[1,\"\\n\"],[41,[28,[37,2],[[30,0,[\"mode\"]],\"merge\"],null],[[[1,\"      \"],[8,[39,12],null,[[\"@type\",\"@message\"],[\"warning\",\"Metadata on merged entities is not preserved, you will need to recreate it on the entity you merge to.\"]],null],[1,\"\\n\"]],[]],null],[42,[28,[37,14],[[28,[37,14],[[30,0,[\"model\",\"fields\"]]],null]],null],null,[[[1,\"      \"],[8,[39,15],[[16,\"data-test-field\",true]],[[\"@attr\",\"@model\"],[[30,1],[30,2]]],[[\"default\"],[[[[1,\"\\n        \"],[10,0],[14,0,\"form-section\"],[12],[1,\"\\n\"],[41,[30,0,[\"model\",\"canCreatePolicies\"]],[[[1,\"            \"],[8,[39,16],null,[[\"@id\",\"@label\",\"@labelClass\",\"@models\",\"@inputValue\",\"@onChange\",\"@fallbackComponent\",\"@modalFormTemplate\",\"@excludeOptions\"],[\"policies\",\"Policies\",\"title is-4\",[28,[37,17],[\"policy/acl\",\"policy/rgp\"],null],[30,2,[\"policies\"]],[28,[37,6],[[30,0],[28,[37,18],[[30,0,[\"model\",\"policies\"]]],null]],null],\"string-list\",\"modal-form/policy-template\",[28,[37,17],[\"root\"],null]]],null],[1,\"\\n\"]],[]],[[[1,\"            \"],[8,[39,19],null,[[\"@id\",\"@label\",\"@labelClass\",\"@models\",\"@inputValue\",\"@onChange\",\"@fallbackComponent\",\"@disallowNewItems\"],[\"policies\",\"Policies\",\"title is-4\",[28,[37,17],[\"policy/acl\",\"policy/rgp\"],null],[30,2,[\"policies\"]],[28,[37,6],[[30,0],[28,[37,18],[[30,0,[\"model\",\"policies\"]]],null]],null],\"string-list\",true]],null],[1,\"\\n\"]],[]]],[1,\"        \"],[13],[1,\"\\n      \"]],[]]]]],[1,\"\\n\"]],[1]],null],[1,\"  \"],[13],[1,\"\\n\\n  \"],[10,0],[14,0,\"field is-grouped is-grouped-split is-fullwidth box is-bottomless\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"field is-grouped\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n        \"],[10,\"button\"],[15,\"data-test-identity-submit\",true],[15,0,[29,[\"button is-primary \",[52,[30,0,[\"save\",\"isRunning\"]],\"loading\"]]]],[15,\"disabled\",[30,0,[\"save\",\"isRunning\"]]],[14,4,\"submit\"],[12],[1,\"\\n\"],[41,[28,[37,2],[[30,0,[\"mode\"]],\"create\"],null],[[[1,\"            Create\\n\"]],[]],[[[1,\"            Save\\n\"]],[]]],[1,\"        \"],[13],[1,\"\\n\"],[41,[28,[37,20],[[28,[37,2],[[30,0,[\"mode\"]],\"merge\"],null],[28,[37,2],[[30,0,[\"mode\"]],\"create\"],null]],null],[[[1,\"          \"],[8,[39,21],[[24,0,\"button\"],[16,\"data-test-cancel-link\",true]],[[\"@route\"],[[30,0,[\"cancelLink\"]]]],[[\"default\"],[[[[1,\"\\n            Cancel\\n          \"]],[]]]]],[1,\"\\n\"]],[]],[[[1,\"          \"],[8,[39,21],[[24,0,\"button\"],[16,\"data-test-cancel-link\",true]],[[\"@route\",\"@models\"],[[30,0,[\"cancelLink\"]],[28,[37,17],[[30,0,[\"model\",\"id\"]],\"details\"],null]]],[[\"default\"],[[[[1,\"\\n            Cancel\\n          \"]],[]]]]],[1,\"\\n\"]],[]]],[1,\"      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"],[13]],[\"attr\",\"@model\"],false,[\"if\",\"and\",\"eq\",\"toolbar\",\"toolbar-actions\",\"confirm-action\",\"action\",\"perform\",\"namespace-reminder\",\"lowercase\",\"humanize\",\"message-error\",\"alert-banner\",\"each\",\"-track-array\",\"form-field\",\"search-select-with-modal\",\"array\",\"mut\",\"search-select\",\"or\",\"link-to\"]]",
    "moduleName": "vault/templates/components/identity/edit-form.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/identity/entity-nav", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.levelLeft>
      <h1 class="title is-3">
        {{capitalize (pluralize this.identityType)}}
      </h1>
    </p.levelLeft>
  </PageHeader>
  <div class="tabs-container box is-sideless is-fullwidth is-paddingless is-marginless">
    <nav class="tabs">
      <ul>
        <LinkTo @route="vault.cluster.access.identity.index" @model={{pluralize this.identityType}}>
          {{capitalize (pluralize this.identityType)}}
        </LinkTo>
        <LinkTo @route="vault.cluster.access.identity.aliases.index" @model={{pluralize this.identityType}}>
          Aliases
        </LinkTo>
      </ul>
    </nav>
  </div>
  <Toolbar>
    {{#if this.model.meta.total}}
      <ToolbarFilters>
        <Identity::LookupInput @type={{this.identityType}} />
      </ToolbarFilters>
    {{/if}}
    <ToolbarActions>
      {{#if (eq this.identityType "entity")}}
        <ToolbarLink
          @route={{"vault.cluster.access.identity.merge"}}
          @model={{pluralize this.identityType}}
          data-test-entity-merge-link={{true}}
        >
          Merge
          {{pluralize this.identityType}}
        </ToolbarLink>
      {{/if}}
      <ToolbarLink
        @route="vault.cluster.access.identity.create"
        @model={{pluralize this.identityType}}
        @type="add"
        data-test-entity-create-link={{true}}
      >
        Create
        {{this.identityType}}
      </ToolbarLink>
    </ToolbarActions>
  </Toolbar>
  */
  {
    "id": "jmLkKnjQ",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n      \"],[1,[28,[35,1],[[28,[37,2],[[30,0,[\"identityType\"]]],null]],null]],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\"],[10,0],[14,0,\"tabs-container box is-sideless is-fullwidth is-paddingless is-marginless\"],[12],[1,\"\\n  \"],[10,\"nav\"],[14,0,\"tabs\"],[12],[1,\"\\n    \"],[10,\"ul\"],[12],[1,\"\\n      \"],[8,[39,3],null,[[\"@route\",\"@model\"],[\"vault.cluster.access.identity.index\",[28,[37,2],[[30,0,[\"identityType\"]]],null]]],[[\"default\"],[[[[1,\"\\n        \"],[1,[28,[35,1],[[28,[37,2],[[30,0,[\"identityType\"]]],null]],null]],[1,\"\\n      \"]],[]]]]],[1,\"\\n      \"],[8,[39,3],null,[[\"@route\",\"@model\"],[\"vault.cluster.access.identity.aliases.index\",[28,[37,2],[[30,0,[\"identityType\"]]],null]]],[[\"default\"],[[[[1,\"\\n        Aliases\\n      \"]],[]]]]],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"],[13],[1,\"\\n\"],[8,[39,4],null,null,[[\"default\"],[[[[1,\"\\n\"],[41,[30,0,[\"model\",\"meta\",\"total\"]],[[[1,\"    \"],[8,[39,6],null,null,[[\"default\"],[[[[1,\"\\n      \"],[8,[39,7],null,[[\"@type\"],[[30,0,[\"identityType\"]]]],null],[1,\"\\n    \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"  \"],[8,[39,8],null,null,[[\"default\"],[[[[1,\"\\n\"],[41,[28,[37,9],[[30,0,[\"identityType\"]],\"entity\"],null],[[[1,\"      \"],[8,[39,10],[[16,\"data-test-entity-merge-link\",true]],[[\"@route\",\"@model\"],[\"vault.cluster.access.identity.merge\",[28,[37,2],[[30,0,[\"identityType\"]]],null]]],[[\"default\"],[[[[1,\"\\n        Merge\\n        \"],[1,[28,[35,2],[[30,0,[\"identityType\"]]],null]],[1,\"\\n      \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"    \"],[8,[39,10],[[16,\"data-test-entity-create-link\",true]],[[\"@route\",\"@model\",\"@type\"],[\"vault.cluster.access.identity.create\",[28,[37,2],[[30,0,[\"identityType\"]]],null],\"add\"]],[[\"default\"],[[[[1,\"\\n      Create\\n      \"],[1,[30,0,[\"identityType\"]]],[1,\"\\n    \"]],[]]]]],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]]]]]],[\"p\"],false,[\"page-header\",\"capitalize\",\"pluralize\",\"link-to\",\"toolbar\",\"if\",\"toolbar-filters\",\"identity/lookup-input\",\"toolbar-actions\",\"eq\",\"toolbar-link\"]]",
    "moduleName": "vault/templates/components/identity/entity-nav.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/identity/item-alias/alias-details", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <InfoTableRow @label="Name" @value={{@model.name}} data-test-alias-name={{true}} />
  <InfoTableRow @label="ID" @value={{@model.id}} />
  <InfoTableRow @label={{if (eq @model.identityType "entity-alias") "Entity ID" "Group ID"}} @value={{this.model.canonicalId}}>
    <LinkTo
      @route="vault.cluster.access.identity.show"
      @models={{array (if (eq @model.identityType "entity-alias") "entities" "groups") @model.canonicalId "details"}}
      class="has-text-black is-font-mono"
    >
      {{@model.canonicalId}}
    </LinkTo>
  </InfoTableRow>
  <InfoTableRow @label="Merged from Entity ID" @value={{@model.mergedFromCanonicalIds}} />
  <InfoTableRow @label="Mount" @value={{@model.mountAccessor}}>
    <div>
      {{@model.mountPath}}
      <div>
        <span class="tag">{{@model.mountType}}</span>
        <code class="has-text-grey is-size-8">{{@model.mountAccessor}}</code>
      </div>
    </div>
  </InfoTableRow>
  <InfoTableRow @label="Created" @value={{@model.creationTime}}>
    <time datetime={{@model.creationTime}} title={{@model.creationTime}}>
      {{date-format @model.creationTime "MMM dd, yyyy h:mm a"}}
    </time>
  </InfoTableRow>
  <InfoTableRow @label="Last Updated" @value={{@model.lastUpdateTime}}>
    <time datetime={{@model.lastUpdateTime}} title={{@model.lastUpdateTime}}>
      {{date-format @model.lastUpdateTime "MMM dd, yyyy h:mm a"}}
    </time>
  </InfoTableRow>
  */
  {
    "id": "UR+OiKw/",
    "block": "[[[8,[39,0],[[16,\"data-test-alias-name\",true]],[[\"@label\",\"@value\"],[\"Name\",[30,1,[\"name\"]]]],null],[1,\"\\n\"],[8,[39,0],null,[[\"@label\",\"@value\"],[\"ID\",[30,1,[\"id\"]]]],null],[1,\"\\n\"],[8,[39,0],null,[[\"@label\",\"@value\"],[[52,[28,[37,2],[[30,1,[\"identityType\"]],\"entity-alias\"],null],\"Entity ID\",\"Group ID\"],[30,0,[\"model\",\"canonicalId\"]]]],[[\"default\"],[[[[1,\"\\n  \"],[8,[39,3],[[24,0,\"has-text-black is-font-mono\"]],[[\"@route\",\"@models\"],[\"vault.cluster.access.identity.show\",[28,[37,4],[[52,[28,[37,2],[[30,1,[\"identityType\"]],\"entity-alias\"],null],\"entities\",\"groups\"],[30,1,[\"canonicalId\"]],\"details\"],null]]],[[\"default\"],[[[[1,\"\\n    \"],[1,[30,1,[\"canonicalId\"]]],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]]]]],[1,\"\\n\"],[8,[39,0],null,[[\"@label\",\"@value\"],[\"Merged from Entity ID\",[30,1,[\"mergedFromCanonicalIds\"]]]],null],[1,\"\\n\"],[8,[39,0],null,[[\"@label\",\"@value\"],[\"Mount\",[30,1,[\"mountAccessor\"]]]],[[\"default\"],[[[[1,\"\\n  \"],[10,0],[12],[1,\"\\n    \"],[1,[30,1,[\"mountPath\"]]],[1,\"\\n    \"],[10,0],[12],[1,\"\\n      \"],[10,1],[14,0,\"tag\"],[12],[1,[30,1,[\"mountType\"]]],[13],[1,\"\\n      \"],[10,\"code\"],[14,0,\"has-text-grey is-size-8\"],[12],[1,[30,1,[\"mountAccessor\"]]],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]]]]],[1,\"\\n\"],[8,[39,0],null,[[\"@label\",\"@value\"],[\"Created\",[30,1,[\"creationTime\"]]]],[[\"default\"],[[[[1,\"\\n  \"],[10,\"time\"],[15,\"datetime\",[30,1,[\"creationTime\"]]],[15,\"title\",[30,1,[\"creationTime\"]]],[12],[1,\"\\n    \"],[1,[28,[35,5],[[30,1,[\"creationTime\"]],\"MMM dd, yyyy h:mm a\"],null]],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]]]]],[1,\"\\n\"],[8,[39,0],null,[[\"@label\",\"@value\"],[\"Last Updated\",[30,1,[\"lastUpdateTime\"]]]],[[\"default\"],[[[[1,\"\\n  \"],[10,\"time\"],[15,\"datetime\",[30,1,[\"lastUpdateTime\"]]],[15,\"title\",[30,1,[\"lastUpdateTime\"]]],[12],[1,\"\\n    \"],[1,[28,[35,5],[[30,1,[\"lastUpdateTime\"]],\"MMM dd, yyyy h:mm a\"],null]],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[\"@model\"],false,[\"info-table-row\",\"if\",\"eq\",\"link-to\",\"array\",\"date-format\"]]",
    "moduleName": "vault/templates/components/identity/item-alias/alias-details.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/identity/item-alias/alias-metadata", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{#each-in @model.metadata as |key value|}}
    <div class="info-table-row is-mobile">
      <div class="is-flex is-fullwidth">
        <div class="column is-one-quarter">
          <span class="is-label has-text-grey-dark">
            {{key}}
          </span>
        </div>
        <div class="column is-flex">
          {{value}}
        </div>
        <div class="column has-text-right">
        </div>
      </div>
    </div>
  {{else}}
    <EmptyState @title="No metadata associated with {{@model.name}} yet" />
  {{/each-in}}
  */
  {
    "id": "bqW/ppAz",
    "block": "[[[42,[28,[37,1],[[30,1,[\"metadata\"]]],null],null,[[[1,\"  \"],[10,0],[14,0,\"info-table-row is-mobile\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"is-flex is-fullwidth\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"column is-one-quarter\"],[12],[1,\"\\n        \"],[10,1],[14,0,\"is-label has-text-grey-dark\"],[12],[1,\"\\n          \"],[1,[30,3]],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n      \"],[10,0],[14,0,\"column is-flex\"],[12],[1,\"\\n        \"],[1,[30,2]],[1,\"\\n      \"],[13],[1,\"\\n      \"],[10,0],[14,0,\"column has-text-right\"],[12],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[2,3]],[[[1,\"  \"],[8,[39,2],null,[[\"@title\"],[[29,[\"No metadata associated with \",[30,1,[\"name\"]],\" yet\"]]]],null],[1,\"\\n\"]],[]]]],[\"@model\",\"value\",\"key\"],false,[\"each\",\"-each-in\",\"empty-state\"]]",
    "moduleName": "vault/templates/components/identity/item-alias/alias-metadata.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/identity/item-aliases", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{#each (if @model.alias.id (array @model.alias) @model.aliases) as |item|}}
    <LinkedBlock @params={{array "vault.cluster.access.identity.aliases.show" item.id "details"}} class="list-item-row">
      <div class="columns is-mobile">
        <div class="column is-10">
          <LinkTo
            @route="vault.cluster.access.identity.aliases.show"
            @models={{array item.id "details"}}
            class="has-text-black has-text-weight-semibold"
          >
            <Icon @name="user" class="has-text-grey-light" />
            <span class="has-text-weight-semibold">{{item.name}}</span>
          </LinkTo>
          <div class="has-text-grey">
            {{item.id}}
          </div>
          <span class="tag">{{item.mountType}}</span>
          <span class="has-text-grey is-size-8">
            {{item.mountAccessor}}
          </span>
        </div>
        <div class="column has-text-right">
          <Identity::PopupAlias @params={{array item}} />
        </div>
      </div>
    </LinkedBlock>
  {{else}}
    <EmptyState @title="No {{@model.identityType}} aliases for {{@model.name}} yet" />
  {{/each}}
  */
  {
    "id": "oxfXlYI8",
    "block": "[[[42,[28,[37,1],[[28,[37,1],[[52,[30,1,[\"alias\",\"id\"]],[28,[37,3],[[30,1,[\"alias\"]]],null],[30,1,[\"aliases\"]]]],null]],null],null,[[[1,\"  \"],[8,[39,4],[[24,0,\"list-item-row\"]],[[\"@params\"],[[28,[37,3],[\"vault.cluster.access.identity.aliases.show\",[30,2,[\"id\"]],\"details\"],null]]],[[\"default\"],[[[[1,\"\\n    \"],[10,0],[14,0,\"columns is-mobile\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"column is-10\"],[12],[1,\"\\n        \"],[8,[39,5],[[24,0,\"has-text-black has-text-weight-semibold\"]],[[\"@route\",\"@models\"],[\"vault.cluster.access.identity.aliases.show\",[28,[37,3],[[30,2,[\"id\"]],\"details\"],null]]],[[\"default\"],[[[[1,\"\\n          \"],[8,[39,6],[[24,0,\"has-text-grey-light\"]],[[\"@name\"],[\"user\"]],null],[1,\"\\n          \"],[10,1],[14,0,\"has-text-weight-semibold\"],[12],[1,[30,2,[\"name\"]]],[13],[1,\"\\n        \"]],[]]]]],[1,\"\\n        \"],[10,0],[14,0,\"has-text-grey\"],[12],[1,\"\\n          \"],[1,[30,2,[\"id\"]]],[1,\"\\n        \"],[13],[1,\"\\n        \"],[10,1],[14,0,\"tag\"],[12],[1,[30,2,[\"mountType\"]]],[13],[1,\"\\n        \"],[10,1],[14,0,\"has-text-grey is-size-8\"],[12],[1,\"\\n          \"],[1,[30,2,[\"mountAccessor\"]]],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n      \"],[10,0],[14,0,\"column has-text-right\"],[12],[1,\"\\n        \"],[8,[39,7],null,[[\"@params\"],[[28,[37,3],[[30,2]],null]]],null],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[2]],[[[1,\"  \"],[8,[39,8],null,[[\"@title\"],[[29,[\"No \",[30,1,[\"identityType\"]],\" aliases for \",[30,1,[\"name\"]],\" yet\"]]]],null],[1,\"\\n\"]],[]]]],[\"@model\",\"item\"],false,[\"each\",\"-track-array\",\"if\",\"array\",\"linked-block\",\"link-to\",\"icon\",\"identity/popup-alias\",\"empty-state\"]]",
    "moduleName": "vault/templates/components/identity/item-aliases.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/identity/item-details", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <div class="box is-shadowless is-marginless is-fullwidth">
    {{#if @model.disabled}}
      <AlertBanner
        @type="warning"
        @title="Attention"
        @message="This {{@model.identityType}} is disabled. All associated tokens cannot be used, but are not revoked."
        data-test-disabled-warning
      >
        {{#if @model.canEdit}}
          <button onclick={{action "enable" @model}} type="button" class="link" data-test-enable={{true}}>
            Enable
          </button>
        {{/if}}
      </AlertBanner>
    {{/if}}
    <InfoTableRow @label="Name" @value={{@model.name}} data-test-identity-item-name={{true}} />
    <InfoTableRow @label="Type" @value={{@model.type}} />
    <InfoTableRow @label="ID" @value={{@model.id}} />
    <InfoTableRow @label="Merged Ids" @value={{@model.mergedEntityIds}}>
      <div>
        {{#each @model.mergedEntityIds as |id|}}
          <div>
            <code class="has-text-black">{{id}}</code>
          </div>
        {{/each}}
      </div>
    </InfoTableRow>
    <InfoTableRow @label="Created" @value={{@model.creationTime}}>
      <time datetime={{@model.creationTime}} title={{@model.creationTime}}>
        {{date-format @model.creationTime "MMM dd, yyyy h:mm a"}}
      </time>
    </InfoTableRow>
    <InfoTableRow @label="Last Updated" @value={{this.model.lastUpdateTime}}>
      <time datetime={{this.model.lastUpdateTime}} title={{this.model.lastUpdateTime}}>
        {{date-format this.model.lastUpdateTime "MMM dd, yyyy h:mm a"}}
      </time>
    </InfoTableRow>
  </div>
  */
  {
    "id": "6RiZNy4S",
    "block": "[[[10,0],[14,0,\"box is-shadowless is-marginless is-fullwidth\"],[12],[1,\"\\n\"],[41,[30,1,[\"disabled\"]],[[[1,\"    \"],[8,[39,1],[[24,\"data-test-disabled-warning\",\"\"]],[[\"@type\",\"@title\",\"@message\"],[\"warning\",\"Attention\",[29,[\"This \",[30,1,[\"identityType\"]],\" is disabled. All associated tokens cannot be used, but are not revoked.\"]]]],[[\"default\"],[[[[1,\"\\n\"],[41,[30,1,[\"canEdit\"]],[[[1,\"        \"],[10,\"button\"],[15,\"onclick\",[28,[37,2],[[30,0],\"enable\",[30,1]],null]],[14,0,\"link\"],[15,\"data-test-enable\",true],[14,4,\"button\"],[12],[1,\"\\n          Enable\\n        \"],[13],[1,\"\\n\"]],[]],null],[1,\"    \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"  \"],[8,[39,3],[[16,\"data-test-identity-item-name\",true]],[[\"@label\",\"@value\"],[\"Name\",[30,1,[\"name\"]]]],null],[1,\"\\n  \"],[8,[39,3],null,[[\"@label\",\"@value\"],[\"Type\",[30,1,[\"type\"]]]],null],[1,\"\\n  \"],[8,[39,3],null,[[\"@label\",\"@value\"],[\"ID\",[30,1,[\"id\"]]]],null],[1,\"\\n  \"],[8,[39,3],null,[[\"@label\",\"@value\"],[\"Merged Ids\",[30,1,[\"mergedEntityIds\"]]]],[[\"default\"],[[[[1,\"\\n    \"],[10,0],[12],[1,\"\\n\"],[42,[28,[37,5],[[28,[37,5],[[30,1,[\"mergedEntityIds\"]]],null]],null],null,[[[1,\"        \"],[10,0],[12],[1,\"\\n          \"],[10,\"code\"],[14,0,\"has-text-black\"],[12],[1,[30,2]],[13],[1,\"\\n        \"],[13],[1,\"\\n\"]],[2]],null],[1,\"    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[39,3],null,[[\"@label\",\"@value\"],[\"Created\",[30,1,[\"creationTime\"]]]],[[\"default\"],[[[[1,\"\\n    \"],[10,\"time\"],[15,\"datetime\",[30,1,[\"creationTime\"]]],[15,\"title\",[30,1,[\"creationTime\"]]],[12],[1,\"\\n      \"],[1,[28,[35,6],[[30,1,[\"creationTime\"]],\"MMM dd, yyyy h:mm a\"],null]],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[39,3],null,[[\"@label\",\"@value\"],[\"Last Updated\",[30,0,[\"model\",\"lastUpdateTime\"]]]],[[\"default\"],[[[[1,\"\\n    \"],[10,\"time\"],[15,\"datetime\",[30,0,[\"model\",\"lastUpdateTime\"]]],[15,\"title\",[30,0,[\"model\",\"lastUpdateTime\"]]],[12],[1,\"\\n      \"],[1,[28,[35,6],[[30,0,[\"model\",\"lastUpdateTime\"]],\"MMM dd, yyyy h:mm a\"],null]],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"],[13]],[\"@model\",\"id\"],false,[\"if\",\"alert-banner\",\"action\",\"info-table-row\",\"each\",\"-track-array\",\"date-format\"]]",
    "moduleName": "vault/templates/components/identity/item-details.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/identity/item-groups", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{#if @model.groupIds}}
    {{#each @model.directGroupIds as |gid|}}
      <LinkTo @route="vault.cluster.access.identity.show" @models={{array "groups" gid "details"}} class="list-item-row">
        <Icon @name="folder" class="has-text-grey-light" />{{gid}}
      </LinkTo>
    {{/each}}
    {{#each @model.inheritedGroupIds as |gid|}}
      <LinkedBlock @params={{array "vault.cluster.access.identity.show" "groups" gid "details"}} class="list-item-row">
        <LinkTo @route="vault.cluster.access.identity.show" @models={{array "groups" gid "details"}} class="has-text-black">
          <Icon @name="folder" class="has-text-grey-light" />{{gid}}
        </LinkTo>
        <span class="tag has-text-grey is-size-8">inherited</span>
      </LinkedBlock>
    {{/each}}
  {{else}}
    <EmptyState @title="{{@model.name}} is not a member of any groups." />
  {{/if}}
  */
  {
    "id": "g3mZSC46",
    "block": "[[[41,[30,1,[\"groupIds\"]],[[[42,[28,[37,2],[[28,[37,2],[[30,1,[\"directGroupIds\"]]],null]],null],null,[[[1,\"    \"],[8,[39,3],[[24,0,\"list-item-row\"]],[[\"@route\",\"@models\"],[\"vault.cluster.access.identity.show\",[28,[37,4],[\"groups\",[30,2],\"details\"],null]]],[[\"default\"],[[[[1,\"\\n      \"],[8,[39,5],[[24,0,\"has-text-grey-light\"]],[[\"@name\"],[\"folder\"]],null],[1,[30,2]],[1,\"\\n    \"]],[]]]]],[1,\"\\n\"]],[2]],null],[42,[28,[37,2],[[28,[37,2],[[30,1,[\"inheritedGroupIds\"]]],null]],null],null,[[[1,\"    \"],[8,[39,6],[[24,0,\"list-item-row\"]],[[\"@params\"],[[28,[37,4],[\"vault.cluster.access.identity.show\",\"groups\",[30,3],\"details\"],null]]],[[\"default\"],[[[[1,\"\\n      \"],[8,[39,3],[[24,0,\"has-text-black\"]],[[\"@route\",\"@models\"],[\"vault.cluster.access.identity.show\",[28,[37,4],[\"groups\",[30,3],\"details\"],null]]],[[\"default\"],[[[[1,\"\\n        \"],[8,[39,5],[[24,0,\"has-text-grey-light\"]],[[\"@name\"],[\"folder\"]],null],[1,[30,3]],[1,\"\\n      \"]],[]]]]],[1,\"\\n      \"],[10,1],[14,0,\"tag has-text-grey is-size-8\"],[12],[1,\"inherited\"],[13],[1,\"\\n    \"]],[]]]]],[1,\"\\n\"]],[3]],null]],[]],[[[1,\"  \"],[8,[39,7],null,[[\"@title\"],[[29,[[30,1,[\"name\"]],\" is not a member of any groups.\"]]]],null],[1,\"\\n\"]],[]]]],[\"@model\",\"gid\",\"gid\"],false,[\"if\",\"each\",\"-track-array\",\"link-to\",\"array\",\"icon\",\"linked-block\",\"empty-state\"]]",
    "moduleName": "vault/templates/components/identity/item-groups.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/identity/item-members", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{#if @model.hasMembers}}
    {{#each @model.memberGroupIds as |gid|}}
      <LinkedBlock @params={{array "vault.cluster.access.identity.show" "groups" gid this.details}} class="list-item-row">
        <div class="columns is-mobile">
          <div class="column is-10">
            <LinkTo
              @route="vault.cluster.access.identity.show"
              @models={{array "groups" gid "details"}}
              class="is-block has-text-black has-text-weight-semibold"
            >
              <Icon @name="folder" class="has-text-grey-light" />{{gid}}
            </LinkTo>
          </div>
          <div class="column has-text-right">
            {{#if @model.canEdit}}
              <Identity::PopupMembers @params={{array @model "memberGroupIds" gid}} />
            {{/if}}
          </div>
        </div>
      </LinkedBlock>
    {{/each}}
    {{#each @model.memberEntityIds as |gid|}}
      <LinkedBlock @params={{array "vault.cluster.access.identity.show" "groups" gid this.details}} class="list-item-row">
        <div class="columns">
          <div class="column is-10">
            <LinkTo
              @route="vault.cluster.access.identity.show"
              @models={{array "entities" gid "details"}}
              class="is-block has-text-black has-text-weight-semibold"
            >
              <Icon @name="user" class="has-text-grey-light" />{{gid}}
            </LinkTo>
          </div>
          <div class="column has-text-right">
            {{#if @model.canEdit}}
              <Identity::PopupMembers @params={{array @model "memberEntityIds" gid}} />
            {{/if}}
          </div>
        </div>
      </LinkedBlock>
    {{/each}}
  {{else}}
    <EmptyState @title="No members in this group yet" />
  {{/if}}
  */
  {
    "id": "96IAMTod",
    "block": "[[[41,[30,1,[\"hasMembers\"]],[[[42,[28,[37,2],[[28,[37,2],[[30,1,[\"memberGroupIds\"]]],null]],null],null,[[[1,\"    \"],[8,[39,3],[[24,0,\"list-item-row\"]],[[\"@params\"],[[28,[37,4],[\"vault.cluster.access.identity.show\",\"groups\",[30,2],[30,0,[\"details\"]]],null]]],[[\"default\"],[[[[1,\"\\n      \"],[10,0],[14,0,\"columns is-mobile\"],[12],[1,\"\\n        \"],[10,0],[14,0,\"column is-10\"],[12],[1,\"\\n          \"],[8,[39,5],[[24,0,\"is-block has-text-black has-text-weight-semibold\"]],[[\"@route\",\"@models\"],[\"vault.cluster.access.identity.show\",[28,[37,4],[\"groups\",[30,2],\"details\"],null]]],[[\"default\"],[[[[1,\"\\n            \"],[8,[39,6],[[24,0,\"has-text-grey-light\"]],[[\"@name\"],[\"folder\"]],null],[1,[30,2]],[1,\"\\n          \"]],[]]]]],[1,\"\\n        \"],[13],[1,\"\\n        \"],[10,0],[14,0,\"column has-text-right\"],[12],[1,\"\\n\"],[41,[30,1,[\"canEdit\"]],[[[1,\"            \"],[8,[39,7],null,[[\"@params\"],[[28,[37,4],[[30,1],\"memberGroupIds\",[30,2]],null]]],null],[1,\"\\n\"]],[]],null],[1,\"        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"]],[]]]]],[1,\"\\n\"]],[2]],null],[42,[28,[37,2],[[28,[37,2],[[30,1,[\"memberEntityIds\"]]],null]],null],null,[[[1,\"    \"],[8,[39,3],[[24,0,\"list-item-row\"]],[[\"@params\"],[[28,[37,4],[\"vault.cluster.access.identity.show\",\"groups\",[30,3],[30,0,[\"details\"]]],null]]],[[\"default\"],[[[[1,\"\\n      \"],[10,0],[14,0,\"columns\"],[12],[1,\"\\n        \"],[10,0],[14,0,\"column is-10\"],[12],[1,\"\\n          \"],[8,[39,5],[[24,0,\"is-block has-text-black has-text-weight-semibold\"]],[[\"@route\",\"@models\"],[\"vault.cluster.access.identity.show\",[28,[37,4],[\"entities\",[30,3],\"details\"],null]]],[[\"default\"],[[[[1,\"\\n            \"],[8,[39,6],[[24,0,\"has-text-grey-light\"]],[[\"@name\"],[\"user\"]],null],[1,[30,3]],[1,\"\\n          \"]],[]]]]],[1,\"\\n        \"],[13],[1,\"\\n        \"],[10,0],[14,0,\"column has-text-right\"],[12],[1,\"\\n\"],[41,[30,1,[\"canEdit\"]],[[[1,\"            \"],[8,[39,7],null,[[\"@params\"],[[28,[37,4],[[30,1],\"memberEntityIds\",[30,3]],null]]],null],[1,\"\\n\"]],[]],null],[1,\"        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"]],[]]]]],[1,\"\\n\"]],[3]],null]],[]],[[[1,\"  \"],[8,[39,8],null,[[\"@title\"],[\"No members in this group yet\"]],null],[1,\"\\n\"]],[]]]],[\"@model\",\"gid\",\"gid\"],false,[\"if\",\"each\",\"-track-array\",\"linked-block\",\"array\",\"link-to\",\"icon\",\"identity/popup-members\",\"empty-state\"]]",
    "moduleName": "vault/templates/components/identity/item-members.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/identity/item-metadata", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{#each-in @model.metadata as |key value|}}
    <div class="info-table-row is-mobile">
      <div class="is-flex is-fullwidth">
        <div class="column is-one-quarter">
          <span class="is-label has-text-grey-dark">
            {{key}}
          </span>
        </div>
        <div class="column is-5">
          {{value}}
        </div>
        <div class="column has-text-right">
          {{#if @model.canEdit}}
            <Identity::PopupMetadata @params={{array @model key}} />
          {{/if}}
        </div>
      </div>
    </div>
  {{else}}
    <EmptyState
      @title="No metadata for {{@model.name}}"
      @message="You can store custom data that you want to associate with a {{lowercase
        (humanize @model.identityType)
      }}. Edit this {{lowercase (humanize @model.identityType)}} to get started."
    >
      <LinkTo @route="vault.cluster.access.identity.edit" @model={{@model.id}} class="link">
        Edit
        {{lowercase (humanize @model.identityType)}}
      </LinkTo>
      {{! TODO Add a link to a tutorial for 'auth-methods/identity' }}
    </EmptyState>
  {{/each-in}}
  */
  {
    "id": "dCp9KGTg",
    "block": "[[[42,[28,[37,1],[[30,1,[\"metadata\"]]],null],null,[[[1,\"  \"],[10,0],[14,0,\"info-table-row is-mobile\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"is-flex is-fullwidth\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"column is-one-quarter\"],[12],[1,\"\\n        \"],[10,1],[14,0,\"is-label has-text-grey-dark\"],[12],[1,\"\\n          \"],[1,[30,3]],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n      \"],[10,0],[14,0,\"column is-5\"],[12],[1,\"\\n        \"],[1,[30,2]],[1,\"\\n      \"],[13],[1,\"\\n      \"],[10,0],[14,0,\"column has-text-right\"],[12],[1,\"\\n\"],[41,[30,1,[\"canEdit\"]],[[[1,\"          \"],[8,[39,3],null,[[\"@params\"],[[28,[37,4],[[30,1],[30,3]],null]]],null],[1,\"\\n\"]],[]],null],[1,\"      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[2,3]],[[[1,\"  \"],[8,[39,5],null,[[\"@title\",\"@message\"],[[29,[\"No metadata for \",[30,1,[\"name\"]]]],[29,[\"You can store custom data that you want to associate with a \",[28,[37,6],[[28,[37,7],[[30,1,[\"identityType\"]]],null]],null],\". Edit this \",[28,[37,6],[[28,[37,7],[[30,1,[\"identityType\"]]],null]],null],\" to get started.\"]]]],[[\"default\"],[[[[1,\"\\n    \"],[8,[39,8],[[24,0,\"link\"]],[[\"@route\",\"@model\"],[\"vault.cluster.access.identity.edit\",[30,1,[\"id\"]]]],[[\"default\"],[[[[1,\"\\n      Edit\\n      \"],[1,[28,[35,6],[[28,[37,7],[[30,1,[\"identityType\"]]],null]],null]],[1,\"\\n    \"]],[]]]]],[1,\"\\n\"],[1,\"  \"]],[]]]]],[1,\"\\n\"]],[]]]],[\"@model\",\"value\",\"key\"],false,[\"each\",\"-each-in\",\"if\",\"identity/popup-metadata\",\"array\",\"empty-state\",\"lowercase\",\"humanize\",\"link-to\"]]",
    "moduleName": "vault/templates/components/identity/item-metadata.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/identity/item-parent-groups", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{#if @model.parentGroupIds.length}}
    {{#each @model.parentGroupIds as |gid|}}
      <LinkedBlock @params={{array "vault.cluster.access.identity.show" "groups" gid this.details}} class="list-item-row">
        <div class="columns is-mobile">
          <div class="column is-10">
            <LinkTo
              @route="vault.cluster.access.identity.show"
              @models={{array "groups" gid "details"}}
              class="is-block has-text-black has-text-weight-semibold"
            >
              <Icon @name="folder" class="has-text-grey-light" />{{gid}}
            </LinkTo>
          </div>
          <div class="column has-text-right">
          </div>
        </div>
      </LinkedBlock>
    {{/each}}
  {{else}}
    <EmptyState @title="This group has no parent groups yet" />
  {{/if}}
  */
  {
    "id": "LqizV5s+",
    "block": "[[[41,[30,1,[\"parentGroupIds\",\"length\"]],[[[42,[28,[37,2],[[28,[37,2],[[30,1,[\"parentGroupIds\"]]],null]],null],null,[[[1,\"    \"],[8,[39,3],[[24,0,\"list-item-row\"]],[[\"@params\"],[[28,[37,4],[\"vault.cluster.access.identity.show\",\"groups\",[30,2],[30,0,[\"details\"]]],null]]],[[\"default\"],[[[[1,\"\\n      \"],[10,0],[14,0,\"columns is-mobile\"],[12],[1,\"\\n        \"],[10,0],[14,0,\"column is-10\"],[12],[1,\"\\n          \"],[8,[39,5],[[24,0,\"is-block has-text-black has-text-weight-semibold\"]],[[\"@route\",\"@models\"],[\"vault.cluster.access.identity.show\",[28,[37,4],[\"groups\",[30,2],\"details\"],null]]],[[\"default\"],[[[[1,\"\\n            \"],[8,[39,6],[[24,0,\"has-text-grey-light\"]],[[\"@name\"],[\"folder\"]],null],[1,[30,2]],[1,\"\\n          \"]],[]]]]],[1,\"\\n        \"],[13],[1,\"\\n        \"],[10,0],[14,0,\"column has-text-right\"],[12],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"]],[]]]]],[1,\"\\n\"]],[2]],null]],[]],[[[1,\"  \"],[8,[39,7],null,[[\"@title\"],[\"This group has no parent groups yet\"]],null],[1,\"\\n\"]],[]]]],[\"@model\",\"gid\"],false,[\"if\",\"each\",\"-track-array\",\"linked-block\",\"array\",\"link-to\",\"icon\",\"empty-state\"]]",
    "moduleName": "vault/templates/components/identity/item-parent-groups.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/identity/item-policies", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{#each @model.policies as |policyName|}}
    <LinkedBlock @params={{array "vault.cluster.policy.show" "acl" policyName}} class="list-item-row">
      <div class="columns is-mobile">
        <div class="column is-10">
          <LinkTo
            @route="vault.cluster.policy.show"
            @models={{array "acl" policyName}}
            class="is-block has-text-black has-text-weight-semibold"
          >
            <span class="is-underline">{{policyName}}</span>
          </LinkTo>
        </div>
        <div class="column has-text-right">
          {{#if @model.canEdit}}
            <Identity::PopupPolicy @params={{array @model policyName}} />
          {{/if}}
        </div>
      </div>
    </LinkedBlock>
  {{else}}
    <EmptyState @title="No policies associated with {{@model.name}} yet" />
  {{/each}}
  */
  {
    "id": "kwVD24yq",
    "block": "[[[42,[28,[37,1],[[28,[37,1],[[30,1,[\"policies\"]]],null]],null],null,[[[1,\"  \"],[8,[39,2],[[24,0,\"list-item-row\"]],[[\"@params\"],[[28,[37,3],[\"vault.cluster.policy.show\",\"acl\",[30,2]],null]]],[[\"default\"],[[[[1,\"\\n    \"],[10,0],[14,0,\"columns is-mobile\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"column is-10\"],[12],[1,\"\\n        \"],[8,[39,4],[[24,0,\"is-block has-text-black has-text-weight-semibold\"]],[[\"@route\",\"@models\"],[\"vault.cluster.policy.show\",[28,[37,3],[\"acl\",[30,2]],null]]],[[\"default\"],[[[[1,\"\\n          \"],[10,1],[14,0,\"is-underline\"],[12],[1,[30,2]],[13],[1,\"\\n        \"]],[]]]]],[1,\"\\n      \"],[13],[1,\"\\n      \"],[10,0],[14,0,\"column has-text-right\"],[12],[1,\"\\n\"],[41,[30,1,[\"canEdit\"]],[[[1,\"          \"],[8,[39,6],null,[[\"@params\"],[[28,[37,3],[[30,1],[30,2]],null]]],null],[1,\"\\n\"]],[]],null],[1,\"      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[2]],[[[1,\"  \"],[8,[39,7],null,[[\"@title\"],[[29,[\"No policies associated with \",[30,1,[\"name\"]],\" yet\"]]]],null],[1,\"\\n\"]],[]]]],[\"@model\",\"policyName\"],false,[\"each\",\"-track-array\",\"linked-block\",\"array\",\"link-to\",\"if\",\"identity/popup-policy\",\"empty-state\"]]",
    "moduleName": "vault/templates/components/identity/item-policies.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/identity/lookup-input", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <form {{action (perform this.lookup) on="submit"}}>
    <div class="field is-flex">
      <div class="control">
        <div class="select is-fullwidth">
          <select name="param" id="param" onchange={{action (mut this.param) value="target.value"}}>
            {{#each (array "alias name" "name" "id" "alias id") as |paramOption|}}
              <option selected={{eq this.param paramOption}} value={{paramOption}}>
                Lookup by
                {{paramOption}}
              </option>
            {{/each}}
          </select>
        </div>
      </div>
      <div class="control">
        {{#if (eq this.param "alias name")}}
          <MountAccessorSelect @value={{this.aliasMountAccessor}} @onChange={{action (mut this.aliasMountAccessor)}} />
        {{/if}}
      </div>
      <div class="control is-expanded">
        <Input class="input" @value={{this.paramValue}} placeholder={{capitalize this.param}} />
      </div>
      <div class="control">
        <button type="submit" class="button is-hidden">Lookup</button>
      </div>
    </div>
  </form>
  */
  {
    "id": "KXtSd3+b",
    "block": "[[[11,\"form\"],[4,[38,0],[[30,0],[28,[37,1],[[30,0,[\"lookup\"]]],null]],[[\"on\"],[\"submit\"]]],[12],[1,\"\\n  \"],[10,0],[14,0,\"field is-flex\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"select is-fullwidth\"],[12],[1,\"\\n        \"],[10,\"select\"],[14,3,\"param\"],[14,1,\"param\"],[15,\"onchange\",[28,[37,0],[[30,0],[28,[37,2],[[30,0,[\"param\"]]],null]],[[\"value\"],[\"target.value\"]]]],[12],[1,\"\\n\"],[42,[28,[37,4],[[28,[37,4],[[28,[37,5],[\"alias name\",\"name\",\"id\",\"alias id\"],null]],null]],null],null,[[[1,\"            \"],[10,\"option\"],[15,\"selected\",[28,[37,6],[[30,0,[\"param\"]],[30,1]],null]],[15,2,[30,1]],[12],[1,\"\\n              Lookup by\\n              \"],[1,[30,1]],[1,\"\\n            \"],[13],[1,\"\\n\"]],[1]],null],[1,\"        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n\"],[41,[28,[37,6],[[30,0,[\"param\"]],\"alias name\"],null],[[[1,\"        \"],[8,[39,8],null,[[\"@value\",\"@onChange\"],[[30,0,[\"aliasMountAccessor\"]],[28,[37,0],[[30,0],[28,[37,2],[[30,0,[\"aliasMountAccessor\"]]],null]],null]]],null],[1,\"\\n\"]],[]],null],[1,\"    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"control is-expanded\"],[12],[1,\"\\n      \"],[8,[39,9],[[24,0,\"input\"],[16,\"placeholder\",[28,[37,10],[[30,0,[\"param\"]]],null]]],[[\"@value\"],[[30,0,[\"paramValue\"]]]],null],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n      \"],[10,\"button\"],[14,0,\"button is-hidden\"],[14,4,\"submit\"],[12],[1,\"Lookup\"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"],[13]],[\"paramOption\"],false,[\"action\",\"perform\",\"mut\",\"each\",\"-track-array\",\"array\",\"eq\",\"if\",\"mount-accessor-select\",\"input\",\"capitalize\"]]",
    "moduleName": "vault/templates/components/identity/lookup-input.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/identity/popup-alias", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PopupMenu @name="alias-menu">
    <Confirm as |c|>
      {{#let this.params.firstObject as |item|}}
        <nav class="menu">
          <ul class="menu-list">
            <li class="action">
              <LinkTo
                @route="vault.cluster.access.identity.aliases.show"
                @models={{array (pluralize item.parentType) item.id "details"}}
              >
                Details
              </LinkTo>
            </li>
            {{#if item.updatePath.isPending}}
              <li class="action">
                <button disabled type="button" class="link button is-loading is-transparent">
                  loading
                </button>
              </li>
            {{else}}
              {{#if item.canEdit}}
                <li class="action">
                  <LinkTo
                    @route="vault.cluster.access.identity.aliases.edit"
                    @models={{array (pluralize item.parentType) item.id}}
                  >
                    Edit
                  </LinkTo>
                </li>
              {{/if}}
              {{#if item.canDelete}}
                <li class="action">
                  <c.Message @id={{item.id}} @onConfirm={{action "performTransaction" item}} data-test-item-delete />
                </li>
              {{/if}}
            {{/if}}
          </ul>
        </nav>
      {{/let}}
    </Confirm>
  </PopupMenu>
  */
  {
    "id": "MmoKTjzM",
    "block": "[[[8,[39,0],null,[[\"@name\"],[\"alias-menu\"]],[[\"default\"],[[[[1,\"\\n  \"],[8,[39,1],null,null,[[\"default\"],[[[[1,\"\\n\"],[44,[[30,0,[\"params\",\"firstObject\"]]],[[[1,\"      \"],[10,\"nav\"],[14,0,\"menu\"],[12],[1,\"\\n        \"],[10,\"ul\"],[14,0,\"menu-list\"],[12],[1,\"\\n          \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n            \"],[8,[39,3],null,[[\"@route\",\"@models\"],[\"vault.cluster.access.identity.aliases.show\",[28,[37,4],[[28,[37,5],[[30,2,[\"parentType\"]]],null],[30,2,[\"id\"]],\"details\"],null]]],[[\"default\"],[[[[1,\"\\n              Details\\n            \"]],[]]]]],[1,\"\\n          \"],[13],[1,\"\\n\"],[41,[30,2,[\"updatePath\",\"isPending\"]],[[[1,\"            \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n              \"],[10,\"button\"],[14,\"disabled\",\"\"],[14,0,\"link button is-loading is-transparent\"],[14,4,\"button\"],[12],[1,\"\\n                loading\\n              \"],[13],[1,\"\\n            \"],[13],[1,\"\\n\"]],[]],[[[41,[30,2,[\"canEdit\"]],[[[1,\"              \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                \"],[8,[39,3],null,[[\"@route\",\"@models\"],[\"vault.cluster.access.identity.aliases.edit\",[28,[37,4],[[28,[37,5],[[30,2,[\"parentType\"]]],null],[30,2,[\"id\"]]],null]]],[[\"default\"],[[[[1,\"\\n                  Edit\\n                \"]],[]]]]],[1,\"\\n              \"],[13],[1,\"\\n\"]],[]],null],[41,[30,2,[\"canDelete\"]],[[[1,\"              \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                \"],[8,[30,1,[\"Message\"]],[[24,\"data-test-item-delete\",\"\"]],[[\"@id\",\"@onConfirm\"],[[30,2,[\"id\"]],[28,[37,7],[[30,0],\"performTransaction\",[30,2]],null]]],null],[1,\"\\n              \"],[13],[1,\"\\n\"]],[]],null]],[]]],[1,\"        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n\"]],[2]]],[1,\"  \"]],[1]]]]],[1,\"\\n\"]],[]]]]]],[\"c\",\"item\"],false,[\"popup-menu\",\"confirm\",\"let\",\"link-to\",\"array\",\"pluralize\",\"if\",\"action\"]]",
    "moduleName": "vault/templates/components/identity/popup-alias.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/identity/popup-members", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PopupMenu @name="member-edit-menu">
    <nav class="menu">
      <ul class="menu-list">
        <li class="action">
          <ConfirmAction
            @buttonClasses="link is-destroy"
            @confirmButtonText="Remove this group?"
            @confirmMessage="This may affect permissions for this group."
            @onConfirmAction={{action "performTransaction" this.model this.groupArray this.memberId}}
          >
            Remove
          </ConfirmAction>
        </li>
      </ul>
    </nav>
  </PopupMenu>
  */
  {
    "id": "Yw4v0s6V",
    "block": "[[[8,[39,0],null,[[\"@name\"],[\"member-edit-menu\"]],[[\"default\"],[[[[1,\"\\n  \"],[10,\"nav\"],[14,0,\"menu\"],[12],[1,\"\\n    \"],[10,\"ul\"],[14,0,\"menu-list\"],[12],[1,\"\\n      \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n        \"],[8,[39,1],null,[[\"@buttonClasses\",\"@confirmButtonText\",\"@confirmMessage\",\"@onConfirmAction\"],[\"link is-destroy\",\"Remove this group?\",\"This may affect permissions for this group.\",[28,[37,2],[[30,0],\"performTransaction\",[30,0,[\"model\"]],[30,0,[\"groupArray\"]],[30,0,[\"memberId\"]]],null]]],[[\"default\"],[[[[1,\"\\n          Remove\\n        \"]],[]]]]],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[],false,[\"popup-menu\",\"confirm-action\",\"action\"]]",
    "moduleName": "vault/templates/components/identity/popup-members.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/identity/popup-metadata", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PopupMenu @name="metadata-edit-menu">
    <nav class="menu">
      <ul class="menu-list">
        <li class="action">
          <ConfirmAction
            @buttonClasses="link is-destroy"
            @confirmTitle="Remove metadata?"
            @confirmMessage="This data may be used outside of OpenBao."
            @confirmButtonText="Remove"
            @onConfirmAction={{action "performTransaction" this.model this.key}}
          >
            Remove
          </ConfirmAction>
        </li>
      </ul>
    </nav>
  </PopupMenu>
  */
  {
    "id": "3crSZ7YB",
    "block": "[[[8,[39,0],null,[[\"@name\"],[\"metadata-edit-menu\"]],[[\"default\"],[[[[1,\"\\n  \"],[10,\"nav\"],[14,0,\"menu\"],[12],[1,\"\\n    \"],[10,\"ul\"],[14,0,\"menu-list\"],[12],[1,\"\\n      \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n        \"],[8,[39,1],null,[[\"@buttonClasses\",\"@confirmTitle\",\"@confirmMessage\",\"@confirmButtonText\",\"@onConfirmAction\"],[\"link is-destroy\",\"Remove metadata?\",\"This data may be used outside of OpenBao.\",\"Remove\",[28,[37,2],[[30,0],\"performTransaction\",[30,0,[\"model\"]],[30,0,[\"key\"]]],null]]],[[\"default\"],[[[[1,\"\\n          Remove\\n        \"]],[]]]]],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[],false,[\"popup-menu\",\"confirm-action\",\"action\"]]",
    "moduleName": "vault/templates/components/identity/popup-metadata.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/identity/popup-policy", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PopupMenu @name="policy-menu">
    <nav class="menu">
      <ul class="menu-list">
        <li class="action">
          <LinkTo @route="vault.cluster.policy.show" @models={{array "acl" this.policyName}}>
            View Policy
          </LinkTo>
        </li>
        <li class="action">
          <LinkTo @route="vault.cluster.policy.edit" @models={{array "acl" this.policyName}}>
            Edit Policy
          </LinkTo>
        </li>
        <li class="action">
          <ConfirmAction
            @buttonClasses="link is-destroy"
            @confirmButtonText="Remove"
            @confirmMessage="This policy may affect permissions to access OpenBao data."
            @onConfirmAction={{action "performTransaction" this.model this.policyName}}
          >
            Remove from
            {{this.model.identityType}}
          </ConfirmAction>
        </li>
      </ul>
    </nav>
  </PopupMenu>
  */
  {
    "id": "G5nuxxlA",
    "block": "[[[8,[39,0],null,[[\"@name\"],[\"policy-menu\"]],[[\"default\"],[[[[1,\"\\n  \"],[10,\"nav\"],[14,0,\"menu\"],[12],[1,\"\\n    \"],[10,\"ul\"],[14,0,\"menu-list\"],[12],[1,\"\\n      \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n        \"],[8,[39,1],null,[[\"@route\",\"@models\"],[\"vault.cluster.policy.show\",[28,[37,2],[\"acl\",[30,0,[\"policyName\"]]],null]]],[[\"default\"],[[[[1,\"\\n          View Policy\\n        \"]],[]]]]],[1,\"\\n      \"],[13],[1,\"\\n      \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n        \"],[8,[39,1],null,[[\"@route\",\"@models\"],[\"vault.cluster.policy.edit\",[28,[37,2],[\"acl\",[30,0,[\"policyName\"]]],null]]],[[\"default\"],[[[[1,\"\\n          Edit Policy\\n        \"]],[]]]]],[1,\"\\n      \"],[13],[1,\"\\n      \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n        \"],[8,[39,3],null,[[\"@buttonClasses\",\"@confirmButtonText\",\"@confirmMessage\",\"@onConfirmAction\"],[\"link is-destroy\",\"Remove\",\"This policy may affect permissions to access OpenBao data.\",[28,[37,4],[[30,0],\"performTransaction\",[30,0,[\"model\"]],[30,0,[\"policyName\"]]],null]]],[[\"default\"],[[[[1,\"\\n          Remove from\\n          \"],[1,[30,0,[\"model\",\"identityType\"]]],[1,\"\\n        \"]],[]]]]],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[],false,[\"popup-menu\",\"link-to\",\"array\",\"confirm-action\",\"action\"]]",
    "moduleName": "vault/templates/components/identity/popup-policy.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/key-version-select", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{#if (gt this.key.keysForEncryption.length 1)}}
    <div class="field" data-test-transit-key-version-select={{true}}>
      <label for="key_version" class="is-label">Key version</label>
      <div class="control is-expanded">
        <div class="select is-fullwidth">
          <select name="key_version" id="key_version" onchange={{action this.onVersionChange value="target.value"}}>
            {{#each this.key.keysForEncryption as |version|}}
              {{#if (eq version this.key.latestVersion)}}
                <option
                  selected={{if this.key_version (eq version this.key_version) (eq version this.key.latestVersion)}}
                  value={{0}}
                >
                  {{version}}
                  (latest)
                </option>
              {{else}}
                <option
                  selected={{if this.key_version (eq version this.key_version) (eq version this.key.latestVersion)}}
                  value={{version}}
                >
                  {{version}}
                </option>
              {{/if}}
            {{/each}}
          </select>
        </div>
      </div>
    </div>
  {{/if}}
  */
  {
    "id": "GIYEBJpl",
    "block": "[[[41,[28,[37,1],[[30,0,[\"key\",\"keysForEncryption\",\"length\"]],1],null],[[[1,\"  \"],[10,0],[14,0,\"field\"],[15,\"data-test-transit-key-version-select\",true],[12],[1,\"\\n    \"],[10,\"label\"],[14,\"for\",\"key_version\"],[14,0,\"is-label\"],[12],[1,\"Key version\"],[13],[1,\"\\n    \"],[10,0],[14,0,\"control is-expanded\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"select is-fullwidth\"],[12],[1,\"\\n        \"],[10,\"select\"],[14,3,\"key_version\"],[14,1,\"key_version\"],[15,\"onchange\",[28,[37,2],[[30,0],[30,0,[\"onVersionChange\"]]],[[\"value\"],[\"target.value\"]]]],[12],[1,\"\\n\"],[42,[28,[37,4],[[28,[37,4],[[30,0,[\"key\",\"keysForEncryption\"]]],null]],null],null,[[[41,[28,[37,5],[[30,1],[30,0,[\"key\",\"latestVersion\"]]],null],[[[1,\"              \"],[10,\"option\"],[15,\"selected\",[52,[30,0,[\"key_version\"]],[28,[37,5],[[30,1],[30,0,[\"key_version\"]]],null],[28,[37,5],[[30,1],[30,0,[\"key\",\"latestVersion\"]]],null]]],[15,2,0],[12],[1,\"\\n                \"],[1,[30,1]],[1,\"\\n                (latest)\\n              \"],[13],[1,\"\\n\"]],[]],[[[1,\"              \"],[10,\"option\"],[15,\"selected\",[52,[30,0,[\"key_version\"]],[28,[37,5],[[30,1],[30,0,[\"key_version\"]]],null],[28,[37,5],[[30,1],[30,0,[\"key\",\"latestVersion\"]]],null]]],[15,2,[30,1]],[12],[1,\"\\n                \"],[1,[30,1]],[1,\"\\n              \"],[13],[1,\"\\n\"]],[]]]],[1]],null],[1,\"        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]],null]],[\"version\"],false,[\"if\",\"gt\",\"action\",\"each\",\"-track-array\",\"eq\"]]",
    "moduleName": "vault/templates/components/key-version-select.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/keymgmt/distribute", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{#if @backend}}
    <form {{on "submit" (perform this.createDistribution)}} class="form-section" data-test-keymgmt-distribution-form>
      {{#unless @key}}
        <div class="field" data-test-keymgmt-dist-key>
          <SearchSelect
            @id="key"
            @models={{array "keymgmt/key"}}
            @onChange={{this.handleKeySelect}}
            @passObject={{true}}
            @inputValue={{this.formData.key}}
            @subText="Type to use the name of an existing key that you’d like to add to this provider, or to create one."
            @wildcardLabel="key"
            @label="Key name"
            @fallbackComponent="string-list"
            @selectLimit="1"
            @backend={{@backend}}
            @disallowNewItems={{false}}
          >
            {{#if (and this.validMatchError.key (not this.isNewKey))}}
              <AlertInline @paddingTop={{true}} @sizeSmall={{true}} @type="danger" data-test-keymgmt-error="key">
                {{this.validMatchError.key}}
                To check compatibility,
                <DocLink class="doc-link-subtle" @path="/docs/secrets/key-management#compatibility">refer to this table</DocLink>.
              </AlertInline>
            {{/if}}
          </SearchSelect>
        </div>
      {{/unless}}
  
      {{#if this.isNewKey}}
        <div class="field">
          <label class="is-label" for="keyType">Key Type</label>
          <p class="sub-text">The type of cryptographic key that will be created.</p>
          <div class="control is-expanded">
            <div class="select is-fullwidth">
              <select
                name="keyType"
                id="keyType"
                {{on "change" this.handleKeyType}}
                class={{if this.validMatchError.key "has-error-border"}}
                data-test-keymgmt-dist-keytype
              >
                <option value="">
                  Select one
                </option>
                {{#each this.keyTypes as |val|}}
                  <option selected={{eq this.keyType val}} value={{val}}>
                    {{val}}
                  </option>
                {{/each}}
              </select>
            </div>
            {{#if this.validMatchError.key}}
              <AlertInline @paddingTop={{true}} @sizeSmall={{true}} @type="danger" data-test-keymgmt-error="new-key">
                {{this.validMatchError.key}}
                To check compatibility,
                <DocLink class="doc-link-subtle" @path="/docs/secrets/key-management#compatibility">refer to this table</DocLink>.
              </AlertInline>
            {{/if}}
          </div>
        </div>
      {{/if}}
  
      {{#unless @provider}}
        <div class="field">
          <SearchSelect
            @id="provider"
            @models={{array "keymgmt/provider"}}
            @onChange={{this.handleProvider}}
            @passObject={{false}}
            @inputValue={{this.formData.provider}}
            @subText="Select a provider in OpenBao. If it doesn’t exist yet, you’ll need to add it first."
            @label="Provider"
            @fallbackComponent="input-search"
            @selectLimit="1"
            @backend={{@backend}}
            @disallowNewItems={{true}}
            data-test-keymgmt-dist-provider
          >
            {{#if this.validMatchError.provider}}
              <AlertInline @paddingTop={{true}} @sizeSmall={{true}} @type="danger" data-test-keymgmt-error="provider">
                {{this.validMatchError.provider}}
                To check compatibility,
                <DocLink class="doc-link-subtle" @path="/docs/secrets/key-management#compatibility">refer to this table</DocLink>.
              </AlertInline>
            {{/if}}
          </SearchSelect>
        </div>
      {{/unless}}
  
      <fieldset
        class="field form-fieldset"
        id="operations"
        disabled={{this.disableOperations}}
        data-test-keymgmt-dist-operations
      >
        <legend class="is-label">Operations</legend>
        <p class="sub-text">The types of operations this key can perform in the provider.</p>
        {{#each this.operations as |op|}}
          <div class="b-checkbox">
            <Input
              @type="checkbox"
              id={{op}}
              class="styled"
              @checked={{false}}
              {{on "input" this.handleOperation}}
              data-test-operation={{op}}
            />
            <label for={{op}}>{{capitalize op}}</label>
          </div>
        {{/each}}
      </fieldset>
  
      <fieldset class="field form-fieldset" id="protection" data-test-keymgmt-dist-protections>
        <legend class="is-label">Protection</legend>
        <p class="sub-text">Specifies the protection of the key.</p>
        <div>
          <RadioButton
            id="protection-hsm"
            name="hsm"
            class="radio"
            data-test-protection="hsm"
            @value="hsm"
            @groupValue={{this.formData.protection}}
            @onChange={{fn (mut this.formData.protection)}}
          />
          <label for="protection-hsm">HSM</label>
        </div>
        <div>
          <RadioButton
            id="protection-software"
            name="software"
            class="radio"
            data-test-protection="software"
            @value="software"
            @groupValue={{this.formData.protection}}
            @onChange={{fn (mut this.formData.protection)}}
          />
          <label for="protection-software">Software</label>
        </div>
      </fieldset>
  
      {{#if this.formErrors}}
        <AlertBanner @type="danger" @message={{this.formErrors}} data-test-keymgmt-distribute-error />
      {{/if}}
      <div class="field is-grouped box is-fullwidth is-bottomless">
        <div class="control">
          <button
            type="submit"
            disabled={{or this.validationErrorCount this.createDistribution.isRunning}}
            class="button is-primary"
            data-test-secret-save={{true}}
          >
            {{#if this.createDistribution.isRunning}}
              <span class="loader is-inline-block"></span>
            {{else}}
              {{if (or (not @key) this.isNewKey) "Add key" "Distribute key"}}
            {{/if}}
          </button>
        </div>
        <div class="control">
          <button type="button" class="button" {{on "click" @onClose}}>
            Cancel
          </button>
        </div>
      </div>
    </form>
  {{/if}}
  */
  {
    "id": "r7/de+T8",
    "block": "[[[41,[30,1],[[[1,\"  \"],[11,\"form\"],[24,0,\"form-section\"],[24,\"data-test-keymgmt-distribution-form\",\"\"],[4,[38,1],[\"submit\",[28,[37,2],[[30,0,[\"createDistribution\"]]],null]],null],[12],[1,\"\\n\"],[41,[51,[30,2]],[[[1,\"      \"],[10,0],[14,0,\"field\"],[14,\"data-test-keymgmt-dist-key\",\"\"],[12],[1,\"\\n        \"],[8,[39,4],null,[[\"@id\",\"@models\",\"@onChange\",\"@passObject\",\"@inputValue\",\"@subText\",\"@wildcardLabel\",\"@label\",\"@fallbackComponent\",\"@selectLimit\",\"@backend\",\"@disallowNewItems\"],[\"key\",[28,[37,5],[\"keymgmt/key\"],null],[30,0,[\"handleKeySelect\"]],true,[30,0,[\"formData\",\"key\"]],\"Type to use the name of an existing key that you’d like to add to this provider, or to create one.\",\"key\",\"Key name\",\"string-list\",\"1\",[30,1],false]],[[\"default\"],[[[[1,\"\\n\"],[41,[28,[37,6],[[30,0,[\"validMatchError\",\"key\"]],[28,[37,7],[[30,0,[\"isNewKey\"]]],null]],null],[[[1,\"            \"],[8,[39,8],[[24,\"data-test-keymgmt-error\",\"key\"]],[[\"@paddingTop\",\"@sizeSmall\",\"@type\"],[true,true,\"danger\"]],[[\"default\"],[[[[1,\"\\n              \"],[1,[30,0,[\"validMatchError\",\"key\"]]],[1,\"\\n              To check compatibility,\\n              \"],[8,[39,9],[[24,0,\"doc-link-subtle\"]],[[\"@path\"],[\"/docs/secrets/key-management#compatibility\"]],[[\"default\"],[[[[1,\"refer to this table\"]],[]]]]],[1,\".\\n            \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"        \"]],[]]]]],[1,\"\\n      \"],[13],[1,\"\\n\"]],[]],null],[1,\"\\n\"],[41,[30,0,[\"isNewKey\"]],[[[1,\"      \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n        \"],[10,\"label\"],[14,0,\"is-label\"],[14,\"for\",\"keyType\"],[12],[1,\"Key Type\"],[13],[1,\"\\n        \"],[10,2],[14,0,\"sub-text\"],[12],[1,\"The type of cryptographic key that will be created.\"],[13],[1,\"\\n        \"],[10,0],[14,0,\"control is-expanded\"],[12],[1,\"\\n          \"],[10,0],[14,0,\"select is-fullwidth\"],[12],[1,\"\\n            \"],[11,\"select\"],[24,3,\"keyType\"],[24,1,\"keyType\"],[16,0,[52,[30,0,[\"validMatchError\",\"key\"]],\"has-error-border\"]],[24,\"data-test-keymgmt-dist-keytype\",\"\"],[4,[38,1],[\"change\",[30,0,[\"handleKeyType\"]]],null],[12],[1,\"\\n              \"],[10,\"option\"],[14,2,\"\"],[12],[1,\"\\n                Select one\\n              \"],[13],[1,\"\\n\"],[42,[28,[37,11],[[28,[37,11],[[30,0,[\"keyTypes\"]]],null]],null],null,[[[1,\"                \"],[10,\"option\"],[15,\"selected\",[28,[37,12],[[30,0,[\"keyType\"]],[30,3]],null]],[15,2,[30,3]],[12],[1,\"\\n                  \"],[1,[30,3]],[1,\"\\n                \"],[13],[1,\"\\n\"]],[3]],null],[1,\"            \"],[13],[1,\"\\n          \"],[13],[1,\"\\n\"],[41,[30,0,[\"validMatchError\",\"key\"]],[[[1,\"            \"],[8,[39,8],[[24,\"data-test-keymgmt-error\",\"new-key\"]],[[\"@paddingTop\",\"@sizeSmall\",\"@type\"],[true,true,\"danger\"]],[[\"default\"],[[[[1,\"\\n              \"],[1,[30,0,[\"validMatchError\",\"key\"]]],[1,\"\\n              To check compatibility,\\n              \"],[8,[39,9],[[24,0,\"doc-link-subtle\"]],[[\"@path\"],[\"/docs/secrets/key-management#compatibility\"]],[[\"default\"],[[[[1,\"refer to this table\"]],[]]]]],[1,\".\\n            \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n\"]],[]],null],[1,\"\\n\"],[41,[51,[30,4]],[[[1,\"      \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n        \"],[8,[39,4],[[24,\"data-test-keymgmt-dist-provider\",\"\"]],[[\"@id\",\"@models\",\"@onChange\",\"@passObject\",\"@inputValue\",\"@subText\",\"@label\",\"@fallbackComponent\",\"@selectLimit\",\"@backend\",\"@disallowNewItems\"],[\"provider\",[28,[37,5],[\"keymgmt/provider\"],null],[30,0,[\"handleProvider\"]],false,[30,0,[\"formData\",\"provider\"]],\"Select a provider in OpenBao. If it doesn’t exist yet, you’ll need to add it first.\",\"Provider\",\"input-search\",\"1\",[30,1],true]],[[\"default\"],[[[[1,\"\\n\"],[41,[30,0,[\"validMatchError\",\"provider\"]],[[[1,\"            \"],[8,[39,8],[[24,\"data-test-keymgmt-error\",\"provider\"]],[[\"@paddingTop\",\"@sizeSmall\",\"@type\"],[true,true,\"danger\"]],[[\"default\"],[[[[1,\"\\n              \"],[1,[30,0,[\"validMatchError\",\"provider\"]]],[1,\"\\n              To check compatibility,\\n              \"],[8,[39,9],[[24,0,\"doc-link-subtle\"]],[[\"@path\"],[\"/docs/secrets/key-management#compatibility\"]],[[\"default\"],[[[[1,\"refer to this table\"]],[]]]]],[1,\".\\n            \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"        \"]],[]]]]],[1,\"\\n      \"],[13],[1,\"\\n\"]],[]],null],[1,\"\\n    \"],[10,\"fieldset\"],[14,0,\"field form-fieldset\"],[14,1,\"operations\"],[15,\"disabled\",[30,0,[\"disableOperations\"]]],[14,\"data-test-keymgmt-dist-operations\",\"\"],[12],[1,\"\\n      \"],[10,\"legend\"],[14,0,\"is-label\"],[12],[1,\"Operations\"],[13],[1,\"\\n      \"],[10,2],[14,0,\"sub-text\"],[12],[1,\"The types of operations this key can perform in the provider.\"],[13],[1,\"\\n\"],[42,[28,[37,11],[[28,[37,11],[[30,0,[\"operations\"]]],null]],null],null,[[[1,\"        \"],[10,0],[14,0,\"b-checkbox\"],[12],[1,\"\\n          \"],[8,[39,13],[[16,1,[30,5]],[24,0,\"styled\"],[16,\"data-test-operation\",[30,5]],[4,[38,1],[\"input\",[30,0,[\"handleOperation\"]]],null]],[[\"@type\",\"@checked\"],[\"checkbox\",false]],null],[1,\"\\n          \"],[10,\"label\"],[15,\"for\",[30,5]],[12],[1,[28,[35,14],[[30,5]],null]],[13],[1,\"\\n        \"],[13],[1,\"\\n\"]],[5]],null],[1,\"    \"],[13],[1,\"\\n\\n    \"],[10,\"fieldset\"],[14,0,\"field form-fieldset\"],[14,1,\"protection\"],[14,\"data-test-keymgmt-dist-protections\",\"\"],[12],[1,\"\\n      \"],[10,\"legend\"],[14,0,\"is-label\"],[12],[1,\"Protection\"],[13],[1,\"\\n      \"],[10,2],[14,0,\"sub-text\"],[12],[1,\"Specifies the protection of the key.\"],[13],[1,\"\\n      \"],[10,0],[12],[1,\"\\n        \"],[8,[39,15],[[24,1,\"protection-hsm\"],[24,3,\"hsm\"],[24,0,\"radio\"],[24,\"data-test-protection\",\"hsm\"]],[[\"@value\",\"@groupValue\",\"@onChange\"],[\"hsm\",[30,0,[\"formData\",\"protection\"]],[28,[37,16],[[28,[37,17],[[30,0,[\"formData\",\"protection\"]]],null]],null]]],null],[1,\"\\n        \"],[10,\"label\"],[14,\"for\",\"protection-hsm\"],[12],[1,\"HSM\"],[13],[1,\"\\n      \"],[13],[1,\"\\n      \"],[10,0],[12],[1,\"\\n        \"],[8,[39,15],[[24,1,\"protection-software\"],[24,3,\"software\"],[24,0,\"radio\"],[24,\"data-test-protection\",\"software\"]],[[\"@value\",\"@groupValue\",\"@onChange\"],[\"software\",[30,0,[\"formData\",\"protection\"]],[28,[37,16],[[28,[37,17],[[30,0,[\"formData\",\"protection\"]]],null]],null]]],null],[1,\"\\n        \"],[10,\"label\"],[14,\"for\",\"protection-software\"],[12],[1,\"Software\"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n\\n\"],[41,[30,0,[\"formErrors\"]],[[[1,\"      \"],[8,[39,18],[[24,\"data-test-keymgmt-distribute-error\",\"\"]],[[\"@type\",\"@message\"],[\"danger\",[30,0,[\"formErrors\"]]]],null],[1,\"\\n\"]],[]],null],[1,\"    \"],[10,0],[14,0,\"field is-grouped box is-fullwidth is-bottomless\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n        \"],[10,\"button\"],[15,\"disabled\",[28,[37,19],[[30,0,[\"validationErrorCount\"]],[30,0,[\"createDistribution\",\"isRunning\"]]],null]],[14,0,\"button is-primary\"],[15,\"data-test-secret-save\",true],[14,4,\"submit\"],[12],[1,\"\\n\"],[41,[30,0,[\"createDistribution\",\"isRunning\"]],[[[1,\"            \"],[10,1],[14,0,\"loader is-inline-block\"],[12],[13],[1,\"\\n\"]],[]],[[[1,\"            \"],[1,[52,[28,[37,19],[[28,[37,7],[[30,2]],null],[30,0,[\"isNewKey\"]]],null],\"Add key\",\"Distribute key\"]],[1,\"\\n\"]],[]]],[1,\"        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n      \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n        \"],[11,\"button\"],[24,0,\"button\"],[24,4,\"button\"],[4,[38,1],[\"click\",[30,6]],null],[12],[1,\"\\n          Cancel\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]],null]],[\"@backend\",\"@key\",\"val\",\"@provider\",\"op\",\"@onClose\"],false,[\"if\",\"on\",\"perform\",\"unless\",\"search-select\",\"array\",\"and\",\"not\",\"alert-inline\",\"doc-link\",\"each\",\"-track-array\",\"eq\",\"input\",\"capitalize\",\"radio-button\",\"fn\",\"mut\",\"alert-banner\",\"or\"]]",
    "moduleName": "vault/templates/components/keymgmt/distribute.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/keymgmt/key-edit", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.top>
      <KeyValueHeader @path="vault.cluster.secrets.backend.show" @mode={{this.mode}} @root={{@root}} @showCurrent={{true}} />
    </p.top>
    <p.levelLeft>
      <h1 class="title is-3" data-test-secret-header="true">
        {{#if this.isDistributing}}
          Distribute key
        {{else if (eq @mode "create")}}
          Create key
        {{else if (eq @mode "edit")}}
          Edit key
        {{else}}
          {{@model.id}}
        {{/if}}
      </h1>
    </p.levelLeft>
  </PageHeader>
  
  {{#if this.isDistributing}}
    <Keymgmt::Distribute @backend={{@model.backend}} @key={{@model.id}} @onClose={{fn (mut this.isDistributing) false}} />
  {{else}}
    {{#if (eq this.mode "show")}}
      <div class="tabs-container box is-sideless is-fullwidth is-paddingless is-marginless" data-test-keymgmt-key-toolbar>
        <nav class="tabs">
          <ul>
            <li class={{if (not-eq @tab "versions") "active"}}>
              <LinkTo
                @route="vault.cluster.secrets.backend.show"
                @model={{@model.id}}
                @query={{hash tab=""}}
                data-test-tab="Details"
              >
                Details
              </LinkTo>
            </li>
            <li class={{if (eq @tab "versions") "active"}}>
              <LinkTo
                @route="vault.cluster.secrets.backend.show"
                @model={{@model.id}}
                @query={{hash tab="versions"}}
                data-test-tab="Versions"
              >
                Versions
              </LinkTo>
            </li>
          </ul>
        </nav>
      </div>
      <Toolbar>
        <ToolbarActions>
          {{#unless @model.distribution}}
            <button
              type="button"
              class="toolbar-link"
              {{on "click" (fn (mut this.isDistributing) true)}}
              data-test-keymgmt-key-distribute
            >
              Distribute key
            </button>
          {{/unless}}
          {{#if @model.canDelete}}
            <button
              type="button"
              class="toolbar-link"
              disabled={{not @model.deletionAllowed}}
              {{on "click" (fn (mut this.isDeleteModalOpen) true)}}
              data-test-keymgmt-key-destroy
            >
              Destroy key
            </button>
          {{/if}}
          {{#if @model.provider}}
            <ConfirmAction
              @buttonClasses="toolbar-link"
              @onConfirmAction={{perform this.removeKey}}
              @confirmTitle="Remove this key?"
              @confirmMessage="This will remove all versions of the key from the KMS provider. The key will stay in OpenBao."
              @confirmButtonText="Remove"
              @isRunning={{this.removeKey.isRunning}}
              data-test-keymgmt-key-remove
            >
              Remove key
            </ConfirmAction>
          {{/if}}
          {{#if (or @model.canDelete @model.provider)}}
            <div class="toolbar-separator"></div>
          {{/if}}
          <ConfirmAction
            @buttonClasses="toolbar-link"
            @onConfirmAction={{perform this.rotateKey}}
            @confirmTitle="Rotate this key?"
            @confirmMessage="After rotation, all key actions will default to using the newest version of the key."
            @confirmButtonText="Rotate"
            @isRunning={{this.rotateKey.isRunning}}
            data-test-keymgmt-key-rotate
          >
            Rotate key
          </ConfirmAction>
          {{#if @model.canEdit}}
            <ToolbarSecretLink
              @secret={{@model.id}}
              @mode="edit"
              @replace={{true}}
              @queryParams={{hash itemType="key"}}
              @data-test-edit-link={{true}}
            >
              Edit key
            </ToolbarSecretLink>
          {{/if}}
        </ToolbarActions>
      </Toolbar>
    {{/if}}
  
    {{#if this.isMutable}}
      <form {{on "submit" (perform this.saveKey)}}>
        <div class="box is-sideless is-fullwidth is-marginless">
          {{#let (if (eq @mode "create") "createFields" "updateFields") as |fieldsKey|}}
            {{#each (get @model fieldsKey) as |attr|}}
              <FormField data-test-field={{true}} @attr={{attr}} @model={{@model}} />
            {{/each}}
            <div class="field is-grouped box is-fullwidth is-bottomless">
              <div class="control">
                <button
                  type="submit"
                  disabled={{this.saveTask.isRunning}}
                  class="button is-primary {{if this.saveTask.isRunning 'is-loading'}}"
                  data-test-keymgmt-key-submit
                >
                  {{if this.isCreating "Create key" "Update"}}
                </button>
              </div>
              <div class="control">
                <LinkTo
                  @route={{if this.isCreating @root.path "vault.cluster.secrets.backend.show"}}
                  @model={{if this.isCreating @root.model @model.id}}
                  @query={{unless this.isCreating (hash itemType="key") (hash itemType="")}}
                  @disabled={{this.savekey.isRunning}}
                  class="button"
                  data-test-keymgmt-key-cancel
                >
                  Cancel
                </LinkTo>
              </div>
            </div>
          {{/let}}
        </div>
      </form>
    {{else if (eq @tab "versions")}}
      {{#each @model.versions as |version|}}
        <div class="list-item-row" data-test-keymgmt-key-version>
          <div class="columns is-mobile">
            <div class="column is-3 has-text-weight-bold">
              <Icon @name="history" class="has-text-grey-light" />
              <span>Version {{version.id}}</span>
            </div>
            <div class="column is-3 has-text-grey">
              {{date-from-now version.creation_time addSuffix=true}}
            </div>
            <div class="column is-6 is-flex-center">
              {{#if (eq @model.minEnabledVersion version.id)}}
                <Icon @name="check-circle-fill" class="has-text-success" />
                <span data-test-keymgmt-key-current-min>Current mininum enabled version</span>
              {{/if}}
            </div>
          </div>
        </div>
      {{/each}}
    {{else}}
      <div class="has-top-margin-xl has-bottom-margin-s">
        <h2 class="title is-5 has-border-bottom-light">Key Details</h2>
        {{#each @model.showFields as |attr|}}
          <InfoTableRow
            @alwaysRender={{true}}
            @label={{capitalize (or attr.options.label (humanize (dasherize attr.name)))}}
            @value={{get @model attr.name}}
            @defaultShown={{attr.options.defaultShown}}
            @formatDate={{if (eq attr.type "date") "MMM d yyyy, h:mm:ss aaa"}}
          />
        {{/each}}
      </div>
      <div class="has-top-margin-xl has-bottom-margin-s">
        <h2 class="title is-5 {{if @model.distribution 'has-border-bottom-light' 'is-borderless'}}">
          Distribution Details
        </h2>
        {{#if @model.provider.permissionsError}}
          <EmptyState
            @title="You are not authorized"
            @subTitle="Error 403"
            @message={{concat
              "You must be granted permissions to see whether this key is distributed. Ask your administrator if you think you should have access to LIST /"
              @model.backend
              "/key/"
              @model.name
              "/kms."
            }}
            @icon="minus-circle"
          />
        {{else if (is-empty-value @model.provider)}}
          <EmptyState
            @title="Key not distributed"
            @message="When this key is distributed to a destination, those details will appear here."
            data-test-keymgmt-dist-empty-state
          >
            {{#if @model.canListProviders}}
              <button type="button" class="link" {{on "click" (fn (mut this.isDistributing) true)}}>
                Distribute key
                <Icon @name="chevron-right" />
              </button>
            {{/if}}
          </EmptyState>
        {{else}}
          <InfoTableRow @label="Distributed" @value={{@model.provider}}>
            <LinkTo @route="vault.cluster.secrets.backend.show" @model={{@model.provider}} @query={{hash itemType="provider"}}>
              <Icon @name="check-circle-fill" class="has-text-success" />{{@model.provider}}
            </LinkTo>
          </InfoTableRow>
          {{#if @model.distribution}}
            {{#each @model.distFields as |attr|}}
              <InfoTableRow
                @alwaysRender={{true}}
                @label={{capitalize (or attr.label (humanize (dasherize attr.name)))}}
                @value={{if
                  (eq attr.name "protection")
                  (uppercase (get @model.distribution attr.name))
                  (get @model.distribution attr.name)
                }}
                @defaultShown={{attr.defaultShown}}
                @helperText={{attr.subText}}
                @formatDate={{if (eq attr.type "date") "MMM d yyyy, h:mm:ss aaa"}}
              />
            {{/each}}
          {{else}}
            <EmptyState
              @title="You are not authorized"
              @subTitle="Error 403"
              @message={{concat
                "You must be granted permissions to view distribution details for this key. Ask your administrator if you think you should have access to GET /"
                @model.backend
                "/key/"
                @model.name
                "/kms."
              }}
              @icon="minus-circle"
            />
          {{/if}}
        {{/if}}
      </div>
    {{/if}}
  {{/if}}
  
  <ConfirmationModal
    @title="Destroy key?"
    @onClose={{fn (mut this.isDeleteModalOpen) false}}
    @isActive={{this.isDeleteModalOpen}}
    @confirmText={{@model.name}}
    @toConfirmMsg="deleting the key"
    @onConfirm={{fn this.deleteKey @model.id}}
  >
    <p>
      Destroying the
      <strong>{{@model.name}}</strong>
      key means that the underlying data will be lost and the key will become unusable for cryptographic operations. It is
      unrecoverable.
    </p>
    <MessageError @model={{this.model}} @errorMessage={{this.error}} />
  </ConfirmationModal>
  */
  {
    "id": "uZCCkEUj",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"top\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,1],null,[[\"@path\",\"@mode\",\"@root\",\"@showCurrent\"],[\"vault.cluster.secrets.backend.show\",[30,0,[\"mode\"]],[30,2],true]],null],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[14,\"data-test-secret-header\",\"true\"],[12],[1,\"\\n\"],[41,[30,0,[\"isDistributing\"]],[[[1,\"        Distribute key\\n\"]],[]],[[[41,[28,[37,3],[[30,3],\"create\"],null],[[[1,\"        Create key\\n\"]],[]],[[[41,[28,[37,3],[[30,3],\"edit\"],null],[[[1,\"        Edit key\\n\"]],[]],[[[1,\"        \"],[1,[30,4,[\"id\"]]],[1,\"\\n      \"]],[]]]],[]]]],[]]],[1,\"    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\\n\"],[41,[30,0,[\"isDistributing\"]],[[[1,\"  \"],[8,[39,4],null,[[\"@backend\",\"@key\",\"@onClose\"],[[30,4,[\"backend\"]],[30,4,[\"id\"]],[28,[37,5],[[28,[37,6],[[30,0,[\"isDistributing\"]]],null],false],null]]],null],[1,\"\\n\"]],[]],[[[41,[28,[37,3],[[30,0,[\"mode\"]],\"show\"],null],[[[1,\"    \"],[10,0],[14,0,\"tabs-container box is-sideless is-fullwidth is-paddingless is-marginless\"],[14,\"data-test-keymgmt-key-toolbar\",\"\"],[12],[1,\"\\n      \"],[10,\"nav\"],[14,0,\"tabs\"],[12],[1,\"\\n        \"],[10,\"ul\"],[12],[1,\"\\n          \"],[10,\"li\"],[15,0,[52,[28,[37,7],[[30,5],\"versions\"],null],\"active\"]],[12],[1,\"\\n            \"],[8,[39,8],[[24,\"data-test-tab\",\"Details\"]],[[\"@route\",\"@model\",\"@query\"],[\"vault.cluster.secrets.backend.show\",[30,4,[\"id\"]],[28,[37,9],null,[[\"tab\"],[\"\"]]]]],[[\"default\"],[[[[1,\"\\n              Details\\n            \"]],[]]]]],[1,\"\\n          \"],[13],[1,\"\\n          \"],[10,\"li\"],[15,0,[52,[28,[37,3],[[30,5],\"versions\"],null],\"active\"]],[12],[1,\"\\n            \"],[8,[39,8],[[24,\"data-test-tab\",\"Versions\"]],[[\"@route\",\"@model\",\"@query\"],[\"vault.cluster.secrets.backend.show\",[30,4,[\"id\"]],[28,[37,9],null,[[\"tab\"],[\"versions\"]]]]],[[\"default\"],[[[[1,\"\\n              Versions\\n            \"]],[]]]]],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n    \"],[8,[39,10],null,null,[[\"default\"],[[[[1,\"\\n      \"],[8,[39,11],null,null,[[\"default\"],[[[[1,\"\\n\"],[41,[51,[30,4,[\"distribution\"]]],[[[1,\"          \"],[11,\"button\"],[24,0,\"toolbar-link\"],[24,\"data-test-keymgmt-key-distribute\",\"\"],[24,4,\"button\"],[4,[38,13],[\"click\",[28,[37,5],[[28,[37,6],[[30,0,[\"isDistributing\"]]],null],true],null]],null],[12],[1,\"\\n            Distribute key\\n          \"],[13],[1,\"\\n\"]],[]],null],[41,[30,4,[\"canDelete\"]],[[[1,\"          \"],[11,\"button\"],[24,0,\"toolbar-link\"],[16,\"disabled\",[28,[37,14],[[30,4,[\"deletionAllowed\"]]],null]],[24,\"data-test-keymgmt-key-destroy\",\"\"],[24,4,\"button\"],[4,[38,13],[\"click\",[28,[37,5],[[28,[37,6],[[30,0,[\"isDeleteModalOpen\"]]],null],true],null]],null],[12],[1,\"\\n            Destroy key\\n          \"],[13],[1,\"\\n\"]],[]],null],[41,[30,4,[\"provider\"]],[[[1,\"          \"],[8,[39,15],[[24,\"data-test-keymgmt-key-remove\",\"\"]],[[\"@buttonClasses\",\"@onConfirmAction\",\"@confirmTitle\",\"@confirmMessage\",\"@confirmButtonText\",\"@isRunning\"],[\"toolbar-link\",[28,[37,16],[[30,0,[\"removeKey\"]]],null],\"Remove this key?\",\"This will remove all versions of the key from the KMS provider. The key will stay in OpenBao.\",\"Remove\",[30,0,[\"removeKey\",\"isRunning\"]]]],[[\"default\"],[[[[1,\"\\n            Remove key\\n          \"]],[]]]]],[1,\"\\n\"]],[]],null],[41,[28,[37,17],[[30,4,[\"canDelete\"]],[30,4,[\"provider\"]]],null],[[[1,\"          \"],[10,0],[14,0,\"toolbar-separator\"],[12],[13],[1,\"\\n\"]],[]],null],[1,\"        \"],[8,[39,15],[[24,\"data-test-keymgmt-key-rotate\",\"\"]],[[\"@buttonClasses\",\"@onConfirmAction\",\"@confirmTitle\",\"@confirmMessage\",\"@confirmButtonText\",\"@isRunning\"],[\"toolbar-link\",[28,[37,16],[[30,0,[\"rotateKey\"]]],null],\"Rotate this key?\",\"After rotation, all key actions will default to using the newest version of the key.\",\"Rotate\",[30,0,[\"rotateKey\",\"isRunning\"]]]],[[\"default\"],[[[[1,\"\\n          Rotate key\\n        \"]],[]]]]],[1,\"\\n\"],[41,[30,4,[\"canEdit\"]],[[[1,\"          \"],[8,[39,18],null,[[\"@secret\",\"@mode\",\"@replace\",\"@queryParams\",\"@data-test-edit-link\"],[[30,4,[\"id\"]],\"edit\",true,[28,[37,9],null,[[\"itemType\"],[\"key\"]]],true]],[[\"default\"],[[[[1,\"\\n            Edit key\\n          \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"      \"]],[]]]]],[1,\"\\n    \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"\\n\"],[41,[30,0,[\"isMutable\"]],[[[1,\"    \"],[11,\"form\"],[4,[38,13],[\"submit\",[28,[37,16],[[30,0,[\"saveKey\"]]],null]],null],[12],[1,\"\\n      \"],[10,0],[14,0,\"box is-sideless is-fullwidth is-marginless\"],[12],[1,\"\\n\"],[44,[[52,[28,[37,3],[[30,3],\"create\"],null],\"createFields\",\"updateFields\"]],[[[42,[28,[37,21],[[28,[37,21],[[28,[37,22],[[30,4],[30,6]],null]],null]],null],null,[[[1,\"            \"],[8,[39,23],[[16,\"data-test-field\",true]],[[\"@attr\",\"@model\"],[[30,7],[30,4]]],null],[1,\"\\n\"]],[7]],null],[1,\"          \"],[10,0],[14,0,\"field is-grouped box is-fullwidth is-bottomless\"],[12],[1,\"\\n            \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n              \"],[10,\"button\"],[15,\"disabled\",[30,0,[\"saveTask\",\"isRunning\"]]],[15,0,[29,[\"button is-primary \",[52,[30,0,[\"saveTask\",\"isRunning\"]],\"is-loading\"]]]],[14,\"data-test-keymgmt-key-submit\",\"\"],[14,4,\"submit\"],[12],[1,\"\\n                \"],[1,[52,[30,0,[\"isCreating\"]],\"Create key\",\"Update\"]],[1,\"\\n              \"],[13],[1,\"\\n            \"],[13],[1,\"\\n            \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n              \"],[8,[39,8],[[24,0,\"button\"],[24,\"data-test-keymgmt-key-cancel\",\"\"]],[[\"@route\",\"@model\",\"@query\",\"@disabled\"],[[52,[30,0,[\"isCreating\"]],[30,2,[\"path\"]],\"vault.cluster.secrets.backend.show\"],[52,[30,0,[\"isCreating\"]],[30,2,[\"model\"]],[30,4,[\"id\"]]],[52,[51,[30,0,[\"isCreating\"]]],[28,[37,9],null,[[\"itemType\"],[\"key\"]]],[28,[37,9],null,[[\"itemType\"],[\"\"]]]],[30,0,[\"savekey\",\"isRunning\"]]]],[[\"default\"],[[[[1,\"\\n                Cancel\\n              \"]],[]]]]],[1,\"\\n            \"],[13],[1,\"\\n          \"],[13],[1,\"\\n\"]],[6]]],[1,\"      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n\"]],[]],[[[41,[28,[37,3],[[30,5],\"versions\"],null],[[[42,[28,[37,21],[[28,[37,21],[[30,4,[\"versions\"]]],null]],null],null,[[[1,\"      \"],[10,0],[14,0,\"list-item-row\"],[14,\"data-test-keymgmt-key-version\",\"\"],[12],[1,\"\\n        \"],[10,0],[14,0,\"columns is-mobile\"],[12],[1,\"\\n          \"],[10,0],[14,0,\"column is-3 has-text-weight-bold\"],[12],[1,\"\\n            \"],[8,[39,24],[[24,0,\"has-text-grey-light\"]],[[\"@name\"],[\"history\"]],null],[1,\"\\n            \"],[10,1],[12],[1,\"Version \"],[1,[30,8,[\"id\"]]],[13],[1,\"\\n          \"],[13],[1,\"\\n          \"],[10,0],[14,0,\"column is-3 has-text-grey\"],[12],[1,\"\\n            \"],[1,[28,[35,25],[[30,8,[\"creation_time\"]]],[[\"addSuffix\"],[true]]]],[1,\"\\n          \"],[13],[1,\"\\n          \"],[10,0],[14,0,\"column is-6 is-flex-center\"],[12],[1,\"\\n\"],[41,[28,[37,3],[[30,4,[\"minEnabledVersion\"]],[30,8,[\"id\"]]],null],[[[1,\"              \"],[8,[39,24],[[24,0,\"has-text-success\"]],[[\"@name\"],[\"check-circle-fill\"]],null],[1,\"\\n              \"],[10,1],[14,\"data-test-keymgmt-key-current-min\",\"\"],[12],[1,\"Current mininum enabled version\"],[13],[1,\"\\n\"]],[]],null],[1,\"          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n\"]],[8]],null]],[]],[[[1,\"    \"],[10,0],[14,0,\"has-top-margin-xl has-bottom-margin-s\"],[12],[1,\"\\n      \"],[10,\"h2\"],[14,0,\"title is-5 has-border-bottom-light\"],[12],[1,\"Key Details\"],[13],[1,\"\\n\"],[42,[28,[37,21],[[28,[37,21],[[30,4,[\"showFields\"]]],null]],null],null,[[[1,\"        \"],[8,[39,26],null,[[\"@alwaysRender\",\"@label\",\"@value\",\"@defaultShown\",\"@formatDate\"],[true,[28,[37,27],[[28,[37,17],[[30,9,[\"options\",\"label\"]],[28,[37,28],[[28,[37,29],[[30,9,[\"name\"]]],null]],null]],null]],null],[28,[37,22],[[30,4],[30,9,[\"name\"]]],null],[30,9,[\"options\",\"defaultShown\"]],[52,[28,[37,3],[[30,9,[\"type\"]],\"date\"],null],\"MMM d yyyy, h:mm:ss aaa\"]]],null],[1,\"\\n\"]],[9]],null],[1,\"    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"has-top-margin-xl has-bottom-margin-s\"],[12],[1,\"\\n      \"],[10,\"h2\"],[15,0,[29,[\"title is-5 \",[52,[30,4,[\"distribution\"]],\"has-border-bottom-light\",\"is-borderless\"]]]],[12],[1,\"\\n        Distribution Details\\n      \"],[13],[1,\"\\n\"],[41,[30,4,[\"provider\",\"permissionsError\"]],[[[1,\"        \"],[8,[39,30],null,[[\"@title\",\"@subTitle\",\"@message\",\"@icon\"],[\"You are not authorized\",\"Error 403\",[28,[37,31],[\"You must be granted permissions to see whether this key is distributed. Ask your administrator if you think you should have access to LIST /\",[30,4,[\"backend\"]],\"/key/\",[30,4,[\"name\"]],\"/kms.\"],null],\"minus-circle\"]],null],[1,\"\\n\"]],[]],[[[41,[28,[37,32],[[30,4,[\"provider\"]]],null],[[[1,\"        \"],[8,[39,30],[[24,\"data-test-keymgmt-dist-empty-state\",\"\"]],[[\"@title\",\"@message\"],[\"Key not distributed\",\"When this key is distributed to a destination, those details will appear here.\"]],[[\"default\"],[[[[1,\"\\n\"],[41,[30,4,[\"canListProviders\"]],[[[1,\"            \"],[11,\"button\"],[24,0,\"link\"],[24,4,\"button\"],[4,[38,13],[\"click\",[28,[37,5],[[28,[37,6],[[30,0,[\"isDistributing\"]]],null],true],null]],null],[12],[1,\"\\n              Distribute key\\n              \"],[8,[39,24],null,[[\"@name\"],[\"chevron-right\"]],null],[1,\"\\n            \"],[13],[1,\"\\n\"]],[]],null],[1,\"        \"]],[]]]]],[1,\"\\n\"]],[]],[[[1,\"        \"],[8,[39,26],null,[[\"@label\",\"@value\"],[\"Distributed\",[30,4,[\"provider\"]]]],[[\"default\"],[[[[1,\"\\n          \"],[8,[39,8],null,[[\"@route\",\"@model\",\"@query\"],[\"vault.cluster.secrets.backend.show\",[30,4,[\"provider\"]],[28,[37,9],null,[[\"itemType\"],[\"provider\"]]]]],[[\"default\"],[[[[1,\"\\n            \"],[8,[39,24],[[24,0,\"has-text-success\"]],[[\"@name\"],[\"check-circle-fill\"]],null],[1,[30,4,[\"provider\"]]],[1,\"\\n          \"]],[]]]]],[1,\"\\n        \"]],[]]]]],[1,\"\\n\"],[41,[30,4,[\"distribution\"]],[[[42,[28,[37,21],[[28,[37,21],[[30,4,[\"distFields\"]]],null]],null],null,[[[1,\"            \"],[8,[39,26],null,[[\"@alwaysRender\",\"@label\",\"@value\",\"@defaultShown\",\"@helperText\",\"@formatDate\"],[true,[28,[37,27],[[28,[37,17],[[30,10,[\"label\"]],[28,[37,28],[[28,[37,29],[[30,10,[\"name\"]]],null]],null]],null]],null],[52,[28,[37,3],[[30,10,[\"name\"]],\"protection\"],null],[28,[37,33],[[28,[37,22],[[30,4,[\"distribution\"]],[30,10,[\"name\"]]],null]],null],[28,[37,22],[[30,4,[\"distribution\"]],[30,10,[\"name\"]]],null]],[30,10,[\"defaultShown\"]],[30,10,[\"subText\"]],[52,[28,[37,3],[[30,10,[\"type\"]],\"date\"],null],\"MMM d yyyy, h:mm:ss aaa\"]]],null],[1,\"\\n\"]],[10]],null]],[]],[[[1,\"          \"],[8,[39,30],null,[[\"@title\",\"@subTitle\",\"@message\",\"@icon\"],[\"You are not authorized\",\"Error 403\",[28,[37,31],[\"You must be granted permissions to view distribution details for this key. Ask your administrator if you think you should have access to GET /\",[30,4,[\"backend\"]],\"/key/\",[30,4,[\"name\"]],\"/kms.\"],null],\"minus-circle\"]],null],[1,\"\\n\"]],[]]],[1,\"      \"]],[]]]],[]]],[1,\"    \"],[13],[1,\"\\n  \"]],[]]]],[]]]],[]]],[1,\"\\n\"],[8,[39,34],null,[[\"@title\",\"@onClose\",\"@isActive\",\"@confirmText\",\"@toConfirmMsg\",\"@onConfirm\"],[\"Destroy key?\",[28,[37,5],[[28,[37,6],[[30,0,[\"isDeleteModalOpen\"]]],null],false],null],[30,0,[\"isDeleteModalOpen\"]],[30,4,[\"name\"]],\"deleting the key\",[28,[37,5],[[30,0,[\"deleteKey\"]],[30,4,[\"id\"]]],null]]],[[\"default\"],[[[[1,\"\\n  \"],[10,2],[12],[1,\"\\n    Destroying the\\n    \"],[10,\"strong\"],[12],[1,[30,4,[\"name\"]]],[13],[1,\"\\n    key means that the underlying data will be lost and the key will become unusable for cryptographic operations. It is\\n    unrecoverable.\\n  \"],[13],[1,\"\\n  \"],[8,[39,35],null,[[\"@model\",\"@errorMessage\"],[[30,0,[\"model\"]],[30,0,[\"error\"]]]],null],[1,\"\\n\"]],[]]]]]],[\"p\",\"@root\",\"@mode\",\"@model\",\"@tab\",\"fieldsKey\",\"attr\",\"version\",\"attr\",\"attr\"],false,[\"page-header\",\"key-value-header\",\"if\",\"eq\",\"keymgmt/distribute\",\"fn\",\"mut\",\"not-eq\",\"link-to\",\"hash\",\"toolbar\",\"toolbar-actions\",\"unless\",\"on\",\"not\",\"confirm-action\",\"perform\",\"or\",\"toolbar-secret-link\",\"let\",\"each\",\"-track-array\",\"get\",\"form-field\",\"icon\",\"date-from-now\",\"info-table-row\",\"capitalize\",\"humanize\",\"dasherize\",\"empty-state\",\"concat\",\"is-empty-value\",\"uppercase\",\"confirmation-modal\",\"message-error\"]]",
    "moduleName": "vault/templates/components/keymgmt/key-edit.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/keymgmt/provider-edit", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.top>
      <KeyValueHeader @path="vault.cluster.secrets.backend.show" @mode={{@mode}} @root={{@root}} @showCurrent={{true}} />
    </p.top>
    <p.levelLeft>
      <h1 class="title is-3" data-test-kms-provider-header>
        {{#if this.isDistributing}}
          Destribute key to provider
        {{else if this.isShowing}}
          Provider
          <span class="has-font-weight-normal">{{@model.id}}</span>
        {{else}}
          {{if this.isCreating "Create provider" "Update credentials"}}
        {{/if}}
      </h1>
    </p.levelLeft>
  </PageHeader>
  
  {{#if this.isDistributing}}
    <Keymgmt::Distribute @backend={{@model.backend}} @provider={{@model.id}} @onClose={{fn (mut this.isDistributing) false}} />
  {{else}}
    {{#if this.isShowing}}
      <div class="tabs-container box is-sideless is-fullwidth is-paddingless is-marginless">
        <nav class="tabs">
          <ul>
            <li class={{unless this.viewingKeys "active"}} data-test-kms-provider-tab="details">
              <LinkTo @route="vault.cluster.secrets.backend.show" @model={{@model.id}} @query={{hash tab=""}}>
                Details
              </LinkTo>
            </li>
            {{#if @model.canListKeys}}
              <li class={{if this.viewingKeys "active"}} data-test-kms-provider-tab="keys">
                <LinkTo @route="vault.cluster.secrets.backend.show" @model={{@model.id}} @query={{hash tab="keys"}}>
                  Keys
                </LinkTo>
              </li>
            {{/if}}
          </ul>
        </nav>
      </div>
      {{#unless this.viewingKeys}}
        <Toolbar data-test-kms-provider-details-actions>
          <ToolbarActions>
            {{#if @model.canDelete}}
              <ToolTip @verticalPosition="above" @horizontalPosition="center" as |T|>
                <T.Trigger data-test-tooltip-trigger>
                  <ConfirmAction
                    @buttonClasses="toolbar-link"
                    @onConfirmAction={{this.onDelete}}
                    @disabled={{@model.keys.length}}
                    data-test-kms-provider-delete={{true}}
                  >
                    Delete provider
                  </ConfirmAction>
                </T.Trigger>
                {{#if @model.keys.length}}
                  <T.Content class="tool-tip">
                    <div class="box" data-test-kms-provider-delete-tooltip>
                      This provider cannot be deleted until all
                      {{@model.keys.length}}
                      key(s) distributed to it are revoked. This can be done from the Keys tab.
                    </div>
                  </T.Content>
                {{/if}}
              </ToolTip>
            {{/if}}
            {{#if (and @model.canDelete (or @model.canListKeys @model.canEdit))}}
              <div class="toolbar-separator"></div>
            {{/if}}
            {{#if (or @model.canListKeys @model.canCreateKeys)}}
              <button
                type="button"
                class="toolbar-link"
                {{on "click" (fn (mut this.isDistributing) true)}}
                data-test-distribute-key
              >
                Distribute key
                <Icon @name="chevron-right" />
              </button>
            {{/if}}
            {{#if @model.canEdit}}
              <ToolbarSecretLink
                @secret={{@model.id}}
                @mode="edit"
                @replace={{true}}
                @queryParams={{hash itemType="provider"}}
                disabled={{(not @model.canEdit)}}
              >
                Update credentials
              </ToolbarSecretLink>
            {{/if}}
          </ToolbarActions>
        </Toolbar>
      {{/unless}}
    {{else}}
      <form aria-label="update credentials" {{on "submit" this.onSave}}>
        <div class="box is-sideless is-fullwidth is-marginless">
          {{#if this.isCreating}}
            {{#each @model.createFields as |attr index|}}
              {{#if (eq index 2)}}
                <div class="has-border-top-light">
                  <h2 class="title is-5 has-top-margin-l has-bottom-margin-m" data-test-kms-provider-config-title>
                    Provider configuration
                  </h2>
                </div>
                {{#if @model.provider}}
                  {{! Only show last field if provider selected }}
                  <FormField @attr={{attr}} @model={{@model}} @modelValidations={{this.modelValidations}} />
                {{else}}
                  <EmptyState @title="No provider selected" @message="Select a provider in order to configure it." />
                {{/if}}
              {{else}}
                <FormField @attr={{attr}} @model={{@model}} @modelValidations={{this.modelValidations}} />
              {{/if}}
            {{/each}}
          {{/if}}
          {{#unless this.isCreating}}
            <h2 class="title is-5" data-test-kms-provider-creds-title>
              New credentials
            </h2>
            <p class="sub-text has-bottom-margin-m">
              Old credentials cannot be read and will be lost as soon as new ones are added. Do this carefully.
            </p>
          {{/unless}}
          {{#each @model.credentialFields as |cred|}}
            <FormField @attr={{cred}} @model={{@model}} @modelValidations={{this.modelValidations}} />
          {{/each}}
        </div>
        <div class="field is-grouped box is-fullwidth is-bottomless">
          <div class="control">
            <button
              type="submit"
              disabled={{this.saveTask.isRunning}}
              class="button is-primary {{if this.saveTask.isRunning 'is-loading'}}"
              data-test-kms-provider-submit
            >
              {{if this.isCreating "Create provider" "Update"}}
            </button>
          </div>
          <div class="control">
            <LinkTo
              @route={{if this.isCreating @root.path "vault.cluster.secrets.backend.show"}}
              @model={{if this.isCreating @root.model @model.id}}
              @query={{if this.isCreating (hash tab="provider") (hash itemType="provider")}}
              @disabled={{this.saveTask.isRunning}}
              class="button"
              data-test-kms-provider-cancel
            >
              Cancel
            </LinkTo>
          </div>
        </div>
      </form>
    {{/if}}
  
    {{#if this.isShowing}}
      <div class="has-bottom-margin-s">
        {{#if this.viewingKeys}}
          {{#let (options-for-backend "keymgmt" "key") as |options|}}
            {{#if @model.keys.meta.total}}
              {{#each @model.keys as |key|}}
                <SecretList::Item
                  @item={{key}}
                  @backendModel={{@root}}
                  @backendType="keymgmt"
                  @delete={{fn this.onDeleteKey key}}
                  @itemPath={{concat options.modelPrefix key.id}}
                  @itemType={{options.item}}
                  @modelType={{@modelType}}
                  @options={{options}}
                />
              {{/each}}
              {{#if (gt @model.keys.meta.lastPage 1)}}
                <PaginationControls
                  @total={{@model.keys.meta.total}}
                  @onChange={{perform this.fetchKeys}}
                  class="has-top-margin-xl has-bottom-margin-l"
                />
              {{/if}}
            {{else}}
              <EmptyState
                @title="No keys for this provider"
                @message="Keys for this provider will be listed here. Add a key to get started."
              >
                <SecretLink @mode="create" @secret="" @queryParams={{hash itemType="key"}} class="link">
                  Create key
                </SecretLink>
              </EmptyState>
            {{/if}}
          {{/let}}
        {{else}}
          {{#each @model.showFields as |attr|}}
            {{#if attr.hasBlock}}
              <InfoTableRow @label={{attr.label}} @value={{attr.value}} data-test-kms-provider-field={{attr.name}}>
                {{#if attr.icon}}
                  <Icon @name={{attr.icon}} class="icon" />
                {{/if}}
                {{#if attr.isLink}}
                  <LinkTo @route="vault.cluster.secrets.backend.show" @model={{@model.id}} @query={{hash tab="keys"}}>
                    {{attr.value}}
                  </LinkTo>
                {{else}}
                  {{attr.value}}
                {{/if}}
              </InfoTableRow>
            {{else}}
              <InfoTableRow
                @alwaysRender={{true}}
                @label={{capitalize (or attr.options.label (humanize (dasherize attr.name)))}}
                @value={{get @model attr.name}}
                @defaultShown={{attr.options.defaultShown}}
                @formatDate={{if (eq attr.type "date") "MMM d yyyy, h:mm:ss aaa"}}
              />
            {{/if}}
          {{/each}}
        {{/if}}
      </div>
    {{/if}}
  {{/if}}
  */
  {
    "id": "gMASk1cI",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"top\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,1],null,[[\"@path\",\"@mode\",\"@root\",\"@showCurrent\"],[\"vault.cluster.secrets.backend.show\",[30,2],[30,3],true]],null],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[14,\"data-test-kms-provider-header\",\"\"],[12],[1,\"\\n\"],[41,[30,0,[\"isDistributing\"]],[[[1,\"        Destribute key to provider\\n\"]],[]],[[[41,[30,0,[\"isShowing\"]],[[[1,\"        Provider\\n        \"],[10,1],[14,0,\"has-font-weight-normal\"],[12],[1,[30,4,[\"id\"]]],[13],[1,\"\\n\"]],[]],[[[1,\"        \"],[1,[52,[30,0,[\"isCreating\"]],\"Create provider\",\"Update credentials\"]],[1,\"\\n      \"]],[]]]],[]]],[1,\"    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\\n\"],[41,[30,0,[\"isDistributing\"]],[[[1,\"  \"],[8,[39,3],null,[[\"@backend\",\"@provider\",\"@onClose\"],[[30,4,[\"backend\"]],[30,4,[\"id\"]],[28,[37,4],[[28,[37,5],[[30,0,[\"isDistributing\"]]],null],false],null]]],null],[1,\"\\n\"]],[]],[[[41,[30,0,[\"isShowing\"]],[[[1,\"    \"],[10,0],[14,0,\"tabs-container box is-sideless is-fullwidth is-paddingless is-marginless\"],[12],[1,\"\\n      \"],[10,\"nav\"],[14,0,\"tabs\"],[12],[1,\"\\n        \"],[10,\"ul\"],[12],[1,\"\\n          \"],[10,\"li\"],[15,0,[52,[51,[30,0,[\"viewingKeys\"]]],\"active\"]],[14,\"data-test-kms-provider-tab\",\"details\"],[12],[1,\"\\n            \"],[8,[39,7],null,[[\"@route\",\"@model\",\"@query\"],[\"vault.cluster.secrets.backend.show\",[30,4,[\"id\"]],[28,[37,8],null,[[\"tab\"],[\"\"]]]]],[[\"default\"],[[[[1,\"\\n              Details\\n            \"]],[]]]]],[1,\"\\n          \"],[13],[1,\"\\n\"],[41,[30,4,[\"canListKeys\"]],[[[1,\"            \"],[10,\"li\"],[15,0,[52,[30,0,[\"viewingKeys\"]],\"active\"]],[14,\"data-test-kms-provider-tab\",\"keys\"],[12],[1,\"\\n              \"],[8,[39,7],null,[[\"@route\",\"@model\",\"@query\"],[\"vault.cluster.secrets.backend.show\",[30,4,[\"id\"]],[28,[37,8],null,[[\"tab\"],[\"keys\"]]]]],[[\"default\"],[[[[1,\"\\n                Keys\\n              \"]],[]]]]],[1,\"\\n            \"],[13],[1,\"\\n\"]],[]],null],[1,\"        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n\"],[41,[51,[30,0,[\"viewingKeys\"]]],[[[1,\"      \"],[8,[39,9],[[24,\"data-test-kms-provider-details-actions\",\"\"]],null,[[\"default\"],[[[[1,\"\\n        \"],[8,[39,10],null,null,[[\"default\"],[[[[1,\"\\n\"],[41,[30,4,[\"canDelete\"]],[[[1,\"            \"],[8,[39,11],null,[[\"@verticalPosition\",\"@horizontalPosition\"],[\"above\",\"center\"]],[[\"default\"],[[[[1,\"\\n              \"],[8,[30,5,[\"Trigger\"]],[[24,\"data-test-tooltip-trigger\",\"\"]],null,[[\"default\"],[[[[1,\"\\n                \"],[8,[39,12],[[16,\"data-test-kms-provider-delete\",true]],[[\"@buttonClasses\",\"@onConfirmAction\",\"@disabled\"],[\"toolbar-link\",[30,0,[\"onDelete\"]],[30,4,[\"keys\",\"length\"]]]],[[\"default\"],[[[[1,\"\\n                  Delete provider\\n                \"]],[]]]]],[1,\"\\n              \"]],[]]]]],[1,\"\\n\"],[41,[30,4,[\"keys\",\"length\"]],[[[1,\"                \"],[8,[30,5,[\"Content\"]],[[24,0,\"tool-tip\"]],null,[[\"default\"],[[[[1,\"\\n                  \"],[10,0],[14,0,\"box\"],[14,\"data-test-kms-provider-delete-tooltip\",\"\"],[12],[1,\"\\n                    This provider cannot be deleted until all\\n                    \"],[1,[30,4,[\"keys\",\"length\"]]],[1,\"\\n                    key(s) distributed to it are revoked. This can be done from the Keys tab.\\n                  \"],[13],[1,\"\\n                \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"            \"]],[5]]]]],[1,\"\\n\"]],[]],null],[41,[28,[37,13],[[30,4,[\"canDelete\"]],[28,[37,14],[[30,4,[\"canListKeys\"]],[30,4,[\"canEdit\"]]],null]],null],[[[1,\"            \"],[10,0],[14,0,\"toolbar-separator\"],[12],[13],[1,\"\\n\"]],[]],null],[41,[28,[37,14],[[30,4,[\"canListKeys\"]],[30,4,[\"canCreateKeys\"]]],null],[[[1,\"            \"],[11,\"button\"],[24,0,\"toolbar-link\"],[24,\"data-test-distribute-key\",\"\"],[24,4,\"button\"],[4,[38,15],[\"click\",[28,[37,4],[[28,[37,5],[[30,0,[\"isDistributing\"]]],null],true],null]],null],[12],[1,\"\\n              Distribute key\\n              \"],[8,[39,16],null,[[\"@name\"],[\"chevron-right\"]],null],[1,\"\\n            \"],[13],[1,\"\\n\"]],[]],null],[41,[30,4,[\"canEdit\"]],[[[1,\"            \"],[8,[39,17],[[16,\"disabled\",[28,[37,18],[[30,4,[\"canEdit\"]]],null]]],[[\"@secret\",\"@mode\",\"@replace\",\"@queryParams\"],[[30,4,[\"id\"]],\"edit\",true,[28,[37,8],null,[[\"itemType\"],[\"provider\"]]]]],[[\"default\"],[[[[1,\"\\n              Update credentials\\n            \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"        \"]],[]]]]],[1,\"\\n      \"]],[]]]]],[1,\"\\n\"]],[]],null]],[]],[[[1,\"    \"],[11,\"form\"],[24,\"aria-label\",\"update credentials\"],[4,[38,15],[\"submit\",[30,0,[\"onSave\"]]],null],[12],[1,\"\\n      \"],[10,0],[14,0,\"box is-sideless is-fullwidth is-marginless\"],[12],[1,\"\\n\"],[41,[30,0,[\"isCreating\"]],[[[42,[28,[37,20],[[28,[37,20],[[30,4,[\"createFields\"]]],null]],null],null,[[[41,[28,[37,21],[[30,7],2],null],[[[1,\"              \"],[10,0],[14,0,\"has-border-top-light\"],[12],[1,\"\\n                \"],[10,\"h2\"],[14,0,\"title is-5 has-top-margin-l has-bottom-margin-m\"],[14,\"data-test-kms-provider-config-title\",\"\"],[12],[1,\"\\n                  Provider configuration\\n                \"],[13],[1,\"\\n              \"],[13],[1,\"\\n\"],[41,[30,4,[\"provider\"]],[[[1,\"                \"],[8,[39,22],null,[[\"@attr\",\"@model\",\"@modelValidations\"],[[30,6],[30,4],[30,0,[\"modelValidations\"]]]],null],[1,\"\\n\"]],[]],[[[1,\"                \"],[8,[39,23],null,[[\"@title\",\"@message\"],[\"No provider selected\",\"Select a provider in order to configure it.\"]],null],[1,\"\\n\"]],[]]]],[]],[[[1,\"              \"],[8,[39,22],null,[[\"@attr\",\"@model\",\"@modelValidations\"],[[30,6],[30,4],[30,0,[\"modelValidations\"]]]],null],[1,\"\\n\"]],[]]]],[6,7]],null]],[]],null],[41,[51,[30,0,[\"isCreating\"]]],[[[1,\"          \"],[10,\"h2\"],[14,0,\"title is-5\"],[14,\"data-test-kms-provider-creds-title\",\"\"],[12],[1,\"\\n            New credentials\\n          \"],[13],[1,\"\\n          \"],[10,2],[14,0,\"sub-text has-bottom-margin-m\"],[12],[1,\"\\n            Old credentials cannot be read and will be lost as soon as new ones are added. Do this carefully.\\n          \"],[13],[1,\"\\n\"]],[]],null],[42,[28,[37,20],[[28,[37,20],[[30,4,[\"credentialFields\"]]],null]],null],null,[[[1,\"          \"],[8,[39,22],null,[[\"@attr\",\"@model\",\"@modelValidations\"],[[30,8],[30,4],[30,0,[\"modelValidations\"]]]],null],[1,\"\\n\"]],[8]],null],[1,\"      \"],[13],[1,\"\\n      \"],[10,0],[14,0,\"field is-grouped box is-fullwidth is-bottomless\"],[12],[1,\"\\n        \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n          \"],[10,\"button\"],[15,\"disabled\",[30,0,[\"saveTask\",\"isRunning\"]]],[15,0,[29,[\"button is-primary \",[52,[30,0,[\"saveTask\",\"isRunning\"]],\"is-loading\"]]]],[14,\"data-test-kms-provider-submit\",\"\"],[14,4,\"submit\"],[12],[1,\"\\n            \"],[1,[52,[30,0,[\"isCreating\"]],\"Create provider\",\"Update\"]],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n        \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n          \"],[8,[39,7],[[24,0,\"button\"],[24,\"data-test-kms-provider-cancel\",\"\"]],[[\"@route\",\"@model\",\"@query\",\"@disabled\"],[[52,[30,0,[\"isCreating\"]],[30,3,[\"path\"]],\"vault.cluster.secrets.backend.show\"],[52,[30,0,[\"isCreating\"]],[30,3,[\"model\"]],[30,4,[\"id\"]]],[52,[30,0,[\"isCreating\"]],[28,[37,8],null,[[\"tab\"],[\"provider\"]]],[28,[37,8],null,[[\"itemType\"],[\"provider\"]]]],[30,0,[\"saveTask\",\"isRunning\"]]]],[[\"default\"],[[[[1,\"\\n            Cancel\\n          \"]],[]]]]],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n\"]],[]]],[1,\"\\n\"],[41,[30,0,[\"isShowing\"]],[[[1,\"    \"],[10,0],[14,0,\"has-bottom-margin-s\"],[12],[1,\"\\n\"],[41,[30,0,[\"viewingKeys\"]],[[[44,[[28,[37,25],[\"keymgmt\",\"key\"],null]],[[[41,[30,4,[\"keys\",\"meta\",\"total\"]],[[[42,[28,[37,20],[[28,[37,20],[[30,4,[\"keys\"]]],null]],null],null,[[[1,\"              \"],[8,[39,26],null,[[\"@item\",\"@backendModel\",\"@backendType\",\"@delete\",\"@itemPath\",\"@itemType\",\"@modelType\",\"@options\"],[[30,10],[30,3],\"keymgmt\",[28,[37,4],[[30,0,[\"onDeleteKey\"]],[30,10]],null],[28,[37,27],[[30,9,[\"modelPrefix\"]],[30,10,[\"id\"]]],null],[30,9,[\"item\"]],[30,11],[30,9]]],null],[1,\"\\n\"]],[10]],null],[41,[28,[37,28],[[30,4,[\"keys\",\"meta\",\"lastPage\"]],1],null],[[[1,\"              \"],[8,[39,29],[[24,0,\"has-top-margin-xl has-bottom-margin-l\"]],[[\"@total\",\"@onChange\"],[[30,4,[\"keys\",\"meta\",\"total\"]],[28,[37,30],[[30,0,[\"fetchKeys\"]]],null]]],null],[1,\"\\n\"]],[]],null]],[]],[[[1,\"            \"],[8,[39,23],null,[[\"@title\",\"@message\"],[\"No keys for this provider\",\"Keys for this provider will be listed here. Add a key to get started.\"]],[[\"default\"],[[[[1,\"\\n              \"],[8,[39,31],[[24,0,\"link\"]],[[\"@mode\",\"@secret\",\"@queryParams\"],[\"create\",\"\",[28,[37,8],null,[[\"itemType\"],[\"key\"]]]]],[[\"default\"],[[[[1,\"\\n                Create key\\n              \"]],[]]]]],[1,\"\\n            \"]],[]]]]],[1,\"\\n\"]],[]]]],[9]]]],[]],[[[42,[28,[37,20],[[28,[37,20],[[30,4,[\"showFields\"]]],null]],null],null,[[[41,[30,12,[\"hasBlock\"]],[[[1,\"            \"],[8,[39,32],[[16,\"data-test-kms-provider-field\",[30,12,[\"name\"]]]],[[\"@label\",\"@value\"],[[30,12,[\"label\"]],[30,12,[\"value\"]]]],[[\"default\"],[[[[1,\"\\n\"],[41,[30,12,[\"icon\"]],[[[1,\"                \"],[8,[39,16],[[24,0,\"icon\"]],[[\"@name\"],[[30,12,[\"icon\"]]]],null],[1,\"\\n\"]],[]],null],[41,[30,12,[\"isLink\"]],[[[1,\"                \"],[8,[39,7],null,[[\"@route\",\"@model\",\"@query\"],[\"vault.cluster.secrets.backend.show\",[30,4,[\"id\"]],[28,[37,8],null,[[\"tab\"],[\"keys\"]]]]],[[\"default\"],[[[[1,\"\\n                  \"],[1,[30,12,[\"value\"]]],[1,\"\\n                \"]],[]]]]],[1,\"\\n\"]],[]],[[[1,\"                \"],[1,[30,12,[\"value\"]]],[1,\"\\n\"]],[]]],[1,\"            \"]],[]]]]],[1,\"\\n\"]],[]],[[[1,\"            \"],[8,[39,32],null,[[\"@alwaysRender\",\"@label\",\"@value\",\"@defaultShown\",\"@formatDate\"],[true,[28,[37,33],[[28,[37,14],[[30,12,[\"options\",\"label\"]],[28,[37,34],[[28,[37,35],[[30,12,[\"name\"]]],null]],null]],null]],null],[28,[37,36],[[30,4],[30,12,[\"name\"]]],null],[30,12,[\"options\",\"defaultShown\"]],[52,[28,[37,21],[[30,12,[\"type\"]],\"date\"],null],\"MMM d yyyy, h:mm:ss aaa\"]]],null],[1,\"\\n\"]],[]]]],[12]],null]],[]]],[1,\"    \"],[13],[1,\"\\n\"]],[]],null]],[]]]],[\"p\",\"@mode\",\"@root\",\"@model\",\"T\",\"attr\",\"index\",\"cred\",\"options\",\"key\",\"@modelType\",\"attr\"],false,[\"page-header\",\"key-value-header\",\"if\",\"keymgmt/distribute\",\"fn\",\"mut\",\"unless\",\"link-to\",\"hash\",\"toolbar\",\"toolbar-actions\",\"tool-tip\",\"confirm-action\",\"and\",\"or\",\"on\",\"icon\",\"toolbar-secret-link\",\"not\",\"each\",\"-track-array\",\"eq\",\"form-field\",\"empty-state\",\"let\",\"options-for-backend\",\"secret-list/item\",\"concat\",\"gt\",\"pagination-controls\",\"perform\",\"secret-link\",\"info-table-row\",\"capitalize\",\"humanize\",\"dasherize\",\"get\"]]",
    "moduleName": "vault/templates/components/keymgmt/provider-edit.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/logo-edition", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <Icon @name="openbao-text-color" class="logo-edition" />
  */
  {
    "id": "ANv1EKWX",
    "block": "[[[8,[39,0],[[24,0,\"logo-edition\"]],[[\"@name\"],[\"openbao-text-color\"]],null]],[],false,[\"icon\"]]",
    "moduleName": "vault/templates/components/logo-edition.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/logo-splash", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <div class="is-flex-v-centered is-flex-1">
    <div class="columns is-centered">
      <div class="column is-narrow has-text-centered has-text-grey-dark has-current-color-fill">
        <LogoEdition />
      </div>
    </div>
  </div>
  */
  {
    "id": "4ZVY79MN",
    "block": "[[[10,0],[14,0,\"is-flex-v-centered is-flex-1\"],[12],[1,\"\\n  \"],[10,0],[14,0,\"columns is-centered\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"column is-narrow has-text-centered has-text-grey-dark has-current-color-fill\"],[12],[1,\"\\n      \"],[8,[39,0],null,null,null],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"],[13]],[],false,[\"logo-edition\"]]",
    "moduleName": "vault/templates/components/logo-splash.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/mfa/login-enforcement-list-item", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <LinkedBlock
    class="list-item-row"
    @params={{array "vault.cluster.access.mfa.enforcements.enforcement" @model.id}}
    data-test-list-item={{@model.name}}
  >
    <div class="level is-mobile">
      <div class="level-left">
        <div>
          <Icon @name="lock" />
          <span class="has-text-weight-semibold has-text-black" data-test-list-item-title={{@model.name}}>
            {{@model.name}}
          </span>
        </div>
      </div>
      <div class="level-right is-flex is-paddingless is-marginless">
        <div class="level-item">
          <PopupMenu>
            <nav class="menu">
              <ul class="menu-list">
                <li>
                  <LinkTo
                    @route="vault.cluster.access.mfa.enforcements.enforcement"
                    @model={{@model.name}}
                    data-test-list-item-link="details"
                  >
                    Details
                  </LinkTo>
                </li>
                <li>
                  <LinkTo
                    @route="vault.cluster.access.mfa.enforcements.enforcement.edit"
                    @model={{@model.name}}
                    data-test-list-item-link="edit"
                  >
                    Edit
                  </LinkTo>
                </li>
              </ul>
            </nav>
          </PopupMenu>
        </div>
      </div>
    </div>
  </LinkedBlock>
  */
  {
    "id": "QuJbRJOw",
    "block": "[[[8,[39,0],[[24,0,\"list-item-row\"],[16,\"data-test-list-item\",[30,1,[\"name\"]]]],[[\"@params\"],[[28,[37,1],[\"vault.cluster.access.mfa.enforcements.enforcement\",[30,1,[\"id\"]]],null]]],[[\"default\"],[[[[1,\"\\n  \"],[10,0],[14,0,\"level is-mobile\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"level-left\"],[12],[1,\"\\n      \"],[10,0],[12],[1,\"\\n        \"],[8,[39,2],null,[[\"@name\"],[\"lock\"]],null],[1,\"\\n        \"],[10,1],[14,0,\"has-text-weight-semibold has-text-black\"],[15,\"data-test-list-item-title\",[30,1,[\"name\"]]],[12],[1,\"\\n          \"],[1,[30,1,[\"name\"]]],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"level-right is-flex is-paddingless is-marginless\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"level-item\"],[12],[1,\"\\n        \"],[8,[39,3],null,null,[[\"default\"],[[[[1,\"\\n          \"],[10,\"nav\"],[14,0,\"menu\"],[12],[1,\"\\n            \"],[10,\"ul\"],[14,0,\"menu-list\"],[12],[1,\"\\n              \"],[10,\"li\"],[12],[1,\"\\n                \"],[8,[39,4],[[24,\"data-test-list-item-link\",\"details\"]],[[\"@route\",\"@model\"],[\"vault.cluster.access.mfa.enforcements.enforcement\",[30,1,[\"name\"]]]],[[\"default\"],[[[[1,\"\\n                  Details\\n                \"]],[]]]]],[1,\"\\n              \"],[13],[1,\"\\n              \"],[10,\"li\"],[12],[1,\"\\n                \"],[8,[39,4],[[24,\"data-test-list-item-link\",\"edit\"]],[[\"@route\",\"@model\"],[\"vault.cluster.access.mfa.enforcements.enforcement.edit\",[30,1,[\"name\"]]]],[[\"default\"],[[[[1,\"\\n                  Edit\\n                \"]],[]]]]],[1,\"\\n              \"],[13],[1,\"\\n            \"],[13],[1,\"\\n          \"],[13],[1,\"\\n        \"]],[]]]]],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[\"@model\"],false,[\"linked-block\",\"array\",\"icon\",\"popup-menu\",\"link-to\"]]",
    "moduleName": "vault/templates/components/mfa/login-enforcement-list-item.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/mfa/method-form", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <div class="box is-sideless is-fullwidth is-marginless" ...attributes>
    {{#each @model.attrs as |attr|}}
      <FormField @attr={{attr}} @model={{@model}} @modelValidations={{or @validations this.editValidations}} />
    {{/each}}
  </div>
  {{#if @hasActions}}
    <div class="field is-grouped-split box is-fullwidth is-bottomless">
      <div class="control">
        <button
          data-test-mfa-save
          type="button"
          class="button is-primary {{if this.save.isRunning 'is-loading'}}"
          disabled={{this.save.isRunning}}
          onclick={{this.initSave}}
          data-test-mfa-method-save
        >
          Save
        </button>
        <button type="button" class="button has-left-margin-s" disabled={{this.save.isRunning}} {{on "click" this.cancel}}>
          Cancel
        </button>
      </div>
    </div>
  {{/if}}
  
  <ConfirmationModal
    @title="Edit {{@model.type}} configuration?"
    @onClose={{action (mut this.isEditModalActive) false}}
    @isActive={{this.isEditModalActive}}
    @confirmText={{@model.type}}
    @onConfirm={{perform this.save}}
  >
    <p>
      Editing this configuration will have an impact on all authentication types, methods, groups and entities which make use
      of this MFA method. Please make sure you want to make these changes before doing so.
    </p>
  </ConfirmationModal>
  */
  {
    "id": "/fzyMFMi",
    "block": "[[[11,0],[24,0,\"box is-sideless is-fullwidth is-marginless\"],[17,1],[12],[1,\"\\n\"],[42,[28,[37,1],[[28,[37,1],[[30,2,[\"attrs\"]]],null]],null],null,[[[1,\"    \"],[8,[39,2],null,[[\"@attr\",\"@model\",\"@modelValidations\"],[[30,3],[30,2],[28,[37,3],[[30,4],[30,0,[\"editValidations\"]]],null]]],null],[1,\"\\n\"]],[3]],null],[13],[1,\"\\n\"],[41,[30,5],[[[1,\"  \"],[10,0],[14,0,\"field is-grouped-split box is-fullwidth is-bottomless\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n      \"],[10,\"button\"],[14,\"data-test-mfa-save\",\"\"],[15,0,[29,[\"button is-primary \",[52,[30,0,[\"save\",\"isRunning\"]],\"is-loading\"]]]],[15,\"disabled\",[30,0,[\"save\",\"isRunning\"]]],[15,\"onclick\",[30,0,[\"initSave\"]]],[14,\"data-test-mfa-method-save\",\"\"],[14,4,\"button\"],[12],[1,\"\\n        Save\\n      \"],[13],[1,\"\\n      \"],[11,\"button\"],[24,0,\"button has-left-margin-s\"],[16,\"disabled\",[30,0,[\"save\",\"isRunning\"]]],[24,4,\"button\"],[4,[38,5],[\"click\",[30,0,[\"cancel\"]]],null],[12],[1,\"\\n        Cancel\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]],null],[1,\"\\n\"],[8,[39,6],null,[[\"@title\",\"@onClose\",\"@isActive\",\"@confirmText\",\"@onConfirm\"],[[29,[\"Edit \",[30,2,[\"type\"]],\" configuration?\"]],[28,[37,7],[[30,0],[28,[37,8],[[30,0,[\"isEditModalActive\"]]],null],false],null],[30,0,[\"isEditModalActive\"]],[30,2,[\"type\"]],[28,[37,9],[[30,0,[\"save\"]]],null]]],[[\"default\"],[[[[1,\"\\n  \"],[10,2],[12],[1,\"\\n    Editing this configuration will have an impact on all authentication types, methods, groups and entities which make use\\n    of this MFA method. Please make sure you want to make these changes before doing so.\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[\"&attrs\",\"@model\",\"attr\",\"@validations\",\"@hasActions\"],false,[\"each\",\"-track-array\",\"form-field\",\"or\",\"if\",\"on\",\"confirmation-modal\",\"action\",\"mut\",\"perform\"]]",
    "moduleName": "vault/templates/components/mfa/method-form.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/mfa/method-list-item", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <LinkedBlock
    class="list-item-row"
    @params={{array "vault.cluster.access.mfa.methods.method" @model.id}}
    data-test-mfa-method-list-item={{@model.id}}
  >
    <div class="level is-mobile">
      <div class="level-left">
        <div class="is-flex-row">
          <Icon @size="24" @name={{@model.type}} class="has-text-grey" data-test-mfa-method-list-icon={{@model.type}} />
          <div>
            <span class="has-text-weight-semibold has-text-black">
              {{@model.name}}
            </span>
            <span class="tag has-left-margin-xs">
              {{@model.id}}
            </span>
            <div class="has-top-margin-xs">
              <code class="is-size-9">
                Namespace:
                {{@model.namespace_id}}
              </code>
            </div>
          </div>
        </div>
      </div>
      <div class="level-right is-flex is-paddingless is-marginless">
        <div class="level-item">
          <PopupMenu>
            <nav class="menu">
              <ul class="menu-list">
                <li>
                  <LinkTo
                    @route="vault.cluster.access.mfa.methods.method"
                    @model={{@model.id}}
                    data-test-mfa-method-menu-link="details"
                  >
                    Details
                  </LinkTo>
                </li>
                <li>
                  <LinkTo
                    @route="vault.cluster.access.mfa.methods.method.edit"
                    @model={{@model.id}}
                    data-test-mfa-method-menu-link="edit"
                  >
                    Edit
                  </LinkTo>
                </li>
              </ul>
            </nav>
          </PopupMenu>
        </div>
      </div>
    </div>
  </LinkedBlock>
  */
  {
    "id": "/whg02+b",
    "block": "[[[8,[39,0],[[24,0,\"list-item-row\"],[16,\"data-test-mfa-method-list-item\",[30,1,[\"id\"]]]],[[\"@params\"],[[28,[37,1],[\"vault.cluster.access.mfa.methods.method\",[30,1,[\"id\"]]],null]]],[[\"default\"],[[[[1,\"\\n  \"],[10,0],[14,0,\"level is-mobile\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"level-left\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"is-flex-row\"],[12],[1,\"\\n        \"],[8,[39,2],[[24,0,\"has-text-grey\"],[16,\"data-test-mfa-method-list-icon\",[30,1,[\"type\"]]]],[[\"@size\",\"@name\"],[\"24\",[30,1,[\"type\"]]]],null],[1,\"\\n        \"],[10,0],[12],[1,\"\\n          \"],[10,1],[14,0,\"has-text-weight-semibold has-text-black\"],[12],[1,\"\\n            \"],[1,[30,1,[\"name\"]]],[1,\"\\n          \"],[13],[1,\"\\n          \"],[10,1],[14,0,\"tag has-left-margin-xs\"],[12],[1,\"\\n            \"],[1,[30,1,[\"id\"]]],[1,\"\\n          \"],[13],[1,\"\\n          \"],[10,0],[14,0,\"has-top-margin-xs\"],[12],[1,\"\\n            \"],[10,\"code\"],[14,0,\"is-size-9\"],[12],[1,\"\\n              Namespace:\\n              \"],[1,[30,1,[\"namespace_id\"]]],[1,\"\\n            \"],[13],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"level-right is-flex is-paddingless is-marginless\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"level-item\"],[12],[1,\"\\n        \"],[8,[39,3],null,null,[[\"default\"],[[[[1,\"\\n          \"],[10,\"nav\"],[14,0,\"menu\"],[12],[1,\"\\n            \"],[10,\"ul\"],[14,0,\"menu-list\"],[12],[1,\"\\n              \"],[10,\"li\"],[12],[1,\"\\n                \"],[8,[39,4],[[24,\"data-test-mfa-method-menu-link\",\"details\"]],[[\"@route\",\"@model\"],[\"vault.cluster.access.mfa.methods.method\",[30,1,[\"id\"]]]],[[\"default\"],[[[[1,\"\\n                  Details\\n                \"]],[]]]]],[1,\"\\n              \"],[13],[1,\"\\n              \"],[10,\"li\"],[12],[1,\"\\n                \"],[8,[39,4],[[24,\"data-test-mfa-method-menu-link\",\"edit\"]],[[\"@route\",\"@model\"],[\"vault.cluster.access.mfa.methods.method.edit\",[30,1,[\"id\"]]]],[[\"default\"],[[[[1,\"\\n                  Edit\\n                \"]],[]]]]],[1,\"\\n              \"],[13],[1,\"\\n            \"],[13],[1,\"\\n          \"],[13],[1,\"\\n        \"]],[]]]]],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[\"@model\"],false,[\"linked-block\",\"array\",\"icon\",\"popup-menu\",\"link-to\"]]",
    "moduleName": "vault/templates/components/mfa/method-list-item.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/mfa/mfa-form", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <div class="auth-form" data-test-mfa-form>
    <div class="box is-marginless is-shadowless">
      <p data-test-mfa-description>
        {{this.description}}
      </p>
      <form id="auth-form" {{on "submit" this.submit}}>
        <MessageError @errorMessage={{this.error}} class="has-top-margin-s" />
        <div class="field has-top-margin-l">
          {{#each this.constraints as |constraint index|}}
            {{#if index}}
              <hr />
            {{/if}}
            {{#if (gt constraint.methods.length 1)}}
              <Select
                @label="Multi-factor authentication method"
                @options={{constraint.methods}}
                @valueAttribute={{"id"}}
                @labelAttribute={{"label"}}
                @isFullwidth={{true}}
                @noDefault={{true}}
                @selectedValue={{constraint.selectedId}}
                @onChange={{fn this.onSelect constraint}}
                data-test-mfa-select={{index}}
              />
            {{else}}
              <label for="passcode" class="is-label" data-test-mfa-label>
                {{constraint.selectedMethod.label}}
              </label>
            {{/if}}
            {{#if constraint.selectedMethod.uses_passcode}}
              <div class="control">
                {{! template-lint-disable no-autofocus-attribute}}
                <Input
                  id="passcode"
                  name="passcode"
                  class="input"
                  autocomplete="off"
                  placeholder={{if (gt constraint.methods.length 1) "Enter passcode"}}
                  spellcheck="false"
                  autofocus="true"
                  disabled={{or this.validate.isRunning this.newCodeDelay.isRunning}}
                  @value={{constraint.passcode}}
                  data-test-mfa-passcode={{index}}
                />
                {{! template-lint-enable no-autofocus-attribute}}
              </div>
            {{else if (eq constraint.methods.length 1)}}
              <p class="has-text-grey-400" data-test-mfa-push-instruction>
                Check device for push notification
              </p>
            {{/if}}
          {{/each}}
        </div>
        {{#if this.newCodeDelay.isRunning}}
          <div>
            <AlertInline @type="danger" @sizeSmall={{true}} @message={{this.codeDelayMessage}} />
          </div>
        {{/if}}
        <button
          id="validate"
          type="submit"
          disabled={{or this.validate.isRunning this.newCodeDelay.isRunning}}
          class="button is-primary {{if this.validate.isRunning 'is-loading'}}"
          data-test-mfa-validate
        >
          Verify
        </button>
        {{#if this.newCodeDelay.isRunning}}
          <Icon @name="delay" class="has-text-grey" />
          <span class="has-text-grey is-v-centered" data-test-mfa-countdown>{{this.countdown}}</span>
        {{/if}}
      </form>
    </div>
  </div>
  */
  {
    "id": "zG3zVrcs",
    "block": "[[[10,0],[14,0,\"auth-form\"],[14,\"data-test-mfa-form\",\"\"],[12],[1,\"\\n  \"],[10,0],[14,0,\"box is-marginless is-shadowless\"],[12],[1,\"\\n    \"],[10,2],[14,\"data-test-mfa-description\",\"\"],[12],[1,\"\\n      \"],[1,[30,0,[\"description\"]]],[1,\"\\n    \"],[13],[1,\"\\n    \"],[11,\"form\"],[24,1,\"auth-form\"],[4,[38,0],[\"submit\",[30,0,[\"submit\"]]],null],[12],[1,\"\\n      \"],[8,[39,1],[[24,0,\"has-top-margin-s\"]],[[\"@errorMessage\"],[[30,0,[\"error\"]]]],null],[1,\"\\n      \"],[10,0],[14,0,\"field has-top-margin-l\"],[12],[1,\"\\n\"],[42,[28,[37,3],[[28,[37,3],[[30,0,[\"constraints\"]]],null]],null],null,[[[41,[30,2],[[[1,\"            \"],[10,\"hr\"],[12],[13],[1,\"\\n\"]],[]],null],[41,[28,[37,5],[[30,1,[\"methods\",\"length\"]],1],null],[[[1,\"            \"],[8,[39,6],[[16,\"data-test-mfa-select\",[30,2]]],[[\"@label\",\"@options\",\"@valueAttribute\",\"@labelAttribute\",\"@isFullwidth\",\"@noDefault\",\"@selectedValue\",\"@onChange\"],[\"Multi-factor authentication method\",[30,1,[\"methods\"]],\"id\",\"label\",true,true,[30,1,[\"selectedId\"]],[28,[37,7],[[30,0,[\"onSelect\"]],[30,1]],null]]],null],[1,\"\\n\"]],[]],[[[1,\"            \"],[10,\"label\"],[14,\"for\",\"passcode\"],[14,0,\"is-label\"],[14,\"data-test-mfa-label\",\"\"],[12],[1,\"\\n              \"],[1,[30,1,[\"selectedMethod\",\"label\"]]],[1,\"\\n            \"],[13],[1,\"\\n\"]],[]]],[41,[30,1,[\"selectedMethod\",\"uses_passcode\"]],[[[1,\"            \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n\"],[1,\"              \"],[8,[39,8],[[24,1,\"passcode\"],[24,3,\"passcode\"],[24,0,\"input\"],[24,\"autocomplete\",\"off\"],[16,\"placeholder\",[52,[28,[37,5],[[30,1,[\"methods\",\"length\"]],1],null],\"Enter passcode\"]],[24,\"spellcheck\",\"false\"],[24,\"autofocus\",\"true\"],[16,\"disabled\",[28,[37,9],[[30,0,[\"validate\",\"isRunning\"]],[30,0,[\"newCodeDelay\",\"isRunning\"]]],null]],[16,\"data-test-mfa-passcode\",[30,2]]],[[\"@value\"],[[30,1,[\"passcode\"]]]],null],[1,\"\\n\"],[1,\"            \"],[13],[1,\"\\n\"]],[]],[[[41,[28,[37,10],[[30,1,[\"methods\",\"length\"]],1],null],[[[1,\"            \"],[10,2],[14,0,\"has-text-grey-400\"],[14,\"data-test-mfa-push-instruction\",\"\"],[12],[1,\"\\n              Check device for push notification\\n            \"],[13],[1,\"\\n          \"]],[]],null]],[]]]],[1,2]],null],[1,\"      \"],[13],[1,\"\\n\"],[41,[30,0,[\"newCodeDelay\",\"isRunning\"]],[[[1,\"        \"],[10,0],[12],[1,\"\\n          \"],[8,[39,11],null,[[\"@type\",\"@sizeSmall\",\"@message\"],[\"danger\",true,[30,0,[\"codeDelayMessage\"]]]],null],[1,\"\\n        \"],[13],[1,\"\\n\"]],[]],null],[1,\"      \"],[10,\"button\"],[14,1,\"validate\"],[15,\"disabled\",[28,[37,9],[[30,0,[\"validate\",\"isRunning\"]],[30,0,[\"newCodeDelay\",\"isRunning\"]]],null]],[15,0,[29,[\"button is-primary \",[52,[30,0,[\"validate\",\"isRunning\"]],\"is-loading\"]]]],[14,\"data-test-mfa-validate\",\"\"],[14,4,\"submit\"],[12],[1,\"\\n        Verify\\n      \"],[13],[1,\"\\n\"],[41,[30,0,[\"newCodeDelay\",\"isRunning\"]],[[[1,\"        \"],[8,[39,12],[[24,0,\"has-text-grey\"]],[[\"@name\"],[\"delay\"]],null],[1,\"\\n        \"],[10,1],[14,0,\"has-text-grey is-v-centered\"],[14,\"data-test-mfa-countdown\",\"\"],[12],[1,[30,0,[\"countdown\"]]],[13],[1,\"\\n\"]],[]],null],[1,\"    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"],[13]],[\"constraint\",\"index\"],false,[\"on\",\"message-error\",\"each\",\"-track-array\",\"if\",\"gt\",\"select\",\"fn\",\"input\",\"or\",\"eq\",\"alert-inline\",\"icon\"]]",
    "moduleName": "vault/templates/components/mfa/mfa-form.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/mfa/mfa-login-enforcement-form", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <div ...attributes>
    <FormFieldLabel
      for="name"
      @label="Name"
      @subText="The name for this enforcement. Giving it a name means that you can refer to it again later. This name will not be editable later."
      data-test-mlef-label="name"
    />
    <input
      autocomplete="off"
      spellcheck="false"
      value={{@model.name}}
      disabled={{not @model.isNew}}
      class="input field {{if this.errors.name.errors 'has-error-border'}}"
      data-test-mlef-input="name"
      {{on "input" (pipe (pick "target.value") (fn (mut @model.name)))}}
    />
    {{#if this.errors.name.errors}}
      <AlertInline @type="danger" @message={{join ", " this.errors.name.errors}} />
    {{/if}}
  
    {{#unless @isInline}}
      <div class="field">
        <FormFieldLabel
          for="methods"
          @label="MFA methods"
          @subText="The MFA method(s) that this enforcement will apply to."
          data-test-mlef-label="methods"
        />
        {{! component only computes inputValue on init -- ensure Ember Data hasMany promise has resolved }}
        {{#if @model.mfa_methods.isFulfilled}}
          <SearchSelect
            @placeholder="Type to search for existing MFA methods"
            @inputValue={{map-by "id" @model.mfa_methods}}
            @shouldRenderName={{true}}
            @disallowNewItems={{true}}
            @models={{array "mfa-method"}}
            @onChange={{this.onMethodChange}}
            data-test-mlef-search="methods"
          />
        {{/if}}
        {{#if this.errors.mfa_methods.errors}}
          <AlertInline @type="danger" @message={{join ", " this.errors.mfa_methods.errors}} />
        {{/if}}
      </div>
    {{/unless}}
  
    <div>
      <FormFieldLabel
        for="targets"
        @label="Targets"
        @subText="The list of authentication types, authentication mounts, groups, and/or entities that will require this MFA configuration."
        data-test-mlef-label="targets"
      />
      {{#each this.targets as |target|}}
        <div class="is-flex-center has-border-top-light" data-test-mlef-target={{target.label}}>
          <InfoTableRow @label={{target.label}} class="is-flex-1 has-no-shadow">
            {{#if target.value.id}}
              {{target.value.name}}
              <span class="tag has-left-margin-s">{{target.value.id}}</span>
            {{else}}
              {{target.value}}
            {{/if}}
          </InfoTableRow>
          <button
            type="button"
            class="button"
            data-test-mlef-remove-target={{target.label}}
            {{on "click" (fn this.removeTarget target)}}
          >
            <Icon @name="trash" />
          </button>
        </div>
      {{/each}}
      <div class="is-flex-row {{if this.targets 'has-top-padding-s has-border-top-light'}}">
        <Select
          @options={{this.targetTypes}}
          @labelAttribute="label"
          @valueAttribute="type"
          @selectedValue={{this.selectedTargetType}}
          @onChange={{this.onTargetSelect}}
          data-test-mlef-select="target-type"
        />
        <div class="has-left-margin-s is-flex-1">
          {{#if (eq this.selectedTargetType "accessor")}}
            <MountAccessorSelect
              @value={{this.selectedTargetValue}}
              @showAccessor={{true}}
              @noDefault={{true}}
              @onChange={{this.setTargetValue}}
              @filterToken={{true}}
              data-test-mlef-select="accessor"
            />
          {{else if (eq this.selectedTargetType "method")}}
            <Select
              @options={{this.authMethods}}
              @labelAttribute="displayName"
              @valueAttribute="value"
              @isFullwidth={{true}}
              @noDefault={{true}}
              @selectedValue={{this.selectedTargetValue}}
              @onChange={{this.setTargetValue}}
              data-test-mlef-select="auth-method"
            />
          {{else}}
            <SearchSelect
              @placeholder="Search for an existing target"
              @options={{this.searchSelect.options}}
              @parentManageSelected={{this.searchSelect.selected}}
              @shouldRenderName={{true}}
              @selectLimit={{1}}
              @onChange={{this.setTargetValue}}
              data-test-mlef-search={{this.selectedTargetType}}
            />
          {{/if}}
        </div>
        <button
          type="button"
          class="button has-left-margin-s"
          disabled={{not this.selectedTargetValue}}
          data-test-mlef-add-target
          {{on "click" this.addTarget}}
        >
          Add
        </button>
      </div>
      {{#if this.errors.targets.errors}}
        <AlertInline @type="danger" @message={{join ", " this.errors.targets.errors}} />
      {{/if}}
    </div>
    {{#unless @isInline}}
      <hr />
      <div class="has-top-padding-s">
        <button
          type="button"
          class="button is-primary {{if this.save.isRunning 'is-loading'}}"
          disabled={{this.save.isRunning}}
          data-test-mlef-save
          {{on "click" (perform this.save)}}
        >
          {{if @model.isNew "Create" "Update"}}
        </button>
        <button
          type="button"
          class="button has-left-margin-s"
          disabled={{this.save.isRunning}}
          data-test-mlef-cancel
          {{on "click" this.cancel}}
        >
          Cancel
        </button>
      </div>
    {{/unless}}
  </div>
  */
  {
    "id": "UOYdpq3z",
    "block": "[[[11,0],[17,1],[12],[1,\"\\n  \"],[8,[39,0],[[24,\"for\",\"name\"],[24,\"data-test-mlef-label\",\"name\"]],[[\"@label\",\"@subText\"],[\"Name\",\"The name for this enforcement. Giving it a name means that you can refer to it again later. This name will not be editable later.\"]],null],[1,\"\\n  \"],[11,\"input\"],[24,\"autocomplete\",\"off\"],[24,\"spellcheck\",\"false\"],[16,2,[30,2,[\"name\"]]],[16,\"disabled\",[28,[37,1],[[30,2,[\"isNew\"]]],null]],[16,0,[29,[\"input field \",[52,[30,0,[\"errors\",\"name\",\"errors\"]],\"has-error-border\"]]]],[24,\"data-test-mlef-input\",\"name\"],[4,[38,3],[\"input\",[28,[37,4],[[28,[37,5],[\"target.value\"],null],[28,[37,6],[[28,[37,7],[[30,2,[\"name\"]]],null]],null]],null]],null],[12],[13],[1,\"\\n\"],[41,[30,0,[\"errors\",\"name\",\"errors\"]],[[[1,\"    \"],[8,[39,8],null,[[\"@type\",\"@message\"],[\"danger\",[28,[37,9],[\", \",[30,0,[\"errors\",\"name\",\"errors\"]]],null]]],null],[1,\"\\n\"]],[]],null],[1,\"\\n\"],[41,[51,[30,3]],[[[1,\"    \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n      \"],[8,[39,0],[[24,\"for\",\"methods\"],[24,\"data-test-mlef-label\",\"methods\"]],[[\"@label\",\"@subText\"],[\"MFA methods\",\"The MFA method(s) that this enforcement will apply to.\"]],null],[1,\"\\n\"],[41,[30,2,[\"mfa_methods\",\"isFulfilled\"]],[[[1,\"        \"],[8,[39,11],[[24,\"data-test-mlef-search\",\"methods\"]],[[\"@placeholder\",\"@inputValue\",\"@shouldRenderName\",\"@disallowNewItems\",\"@models\",\"@onChange\"],[\"Type to search for existing MFA methods\",[28,[37,12],[\"id\",[30,2,[\"mfa_methods\"]]],null],true,true,[28,[37,13],[\"mfa-method\"],null],[30,0,[\"onMethodChange\"]]]],null],[1,\"\\n\"]],[]],null],[41,[30,0,[\"errors\",\"mfa_methods\",\"errors\"]],[[[1,\"        \"],[8,[39,8],null,[[\"@type\",\"@message\"],[\"danger\",[28,[37,9],[\", \",[30,0,[\"errors\",\"mfa_methods\",\"errors\"]]],null]]],null],[1,\"\\n\"]],[]],null],[1,\"    \"],[13],[1,\"\\n\"]],[]],null],[1,\"\\n  \"],[10,0],[12],[1,\"\\n    \"],[8,[39,0],[[24,\"for\",\"targets\"],[24,\"data-test-mlef-label\",\"targets\"]],[[\"@label\",\"@subText\"],[\"Targets\",\"The list of authentication types, authentication mounts, groups, and/or entities that will require this MFA configuration.\"]],null],[1,\"\\n\"],[42,[28,[37,15],[[28,[37,15],[[30,0,[\"targets\"]]],null]],null],null,[[[1,\"      \"],[10,0],[14,0,\"is-flex-center has-border-top-light\"],[15,\"data-test-mlef-target\",[30,4,[\"label\"]]],[12],[1,\"\\n        \"],[8,[39,16],[[24,0,\"is-flex-1 has-no-shadow\"]],[[\"@label\"],[[30,4,[\"label\"]]]],[[\"default\"],[[[[1,\"\\n\"],[41,[30,4,[\"value\",\"id\"]],[[[1,\"            \"],[1,[30,4,[\"value\",\"name\"]]],[1,\"\\n            \"],[10,1],[14,0,\"tag has-left-margin-s\"],[12],[1,[30,4,[\"value\",\"id\"]]],[13],[1,\"\\n\"]],[]],[[[1,\"            \"],[1,[30,4,[\"value\"]]],[1,\"\\n\"]],[]]],[1,\"        \"]],[]]]]],[1,\"\\n        \"],[11,\"button\"],[24,0,\"button\"],[16,\"data-test-mlef-remove-target\",[30,4,[\"label\"]]],[24,4,\"button\"],[4,[38,3],[\"click\",[28,[37,6],[[30,0,[\"removeTarget\"]],[30,4]],null]],null],[12],[1,\"\\n          \"],[8,[39,17],null,[[\"@name\"],[\"trash\"]],null],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n\"]],[4]],null],[1,\"    \"],[10,0],[15,0,[29,[\"is-flex-row \",[52,[30,0,[\"targets\"]],\"has-top-padding-s has-border-top-light\"]]]],[12],[1,\"\\n      \"],[8,[39,18],[[24,\"data-test-mlef-select\",\"target-type\"]],[[\"@options\",\"@labelAttribute\",\"@valueAttribute\",\"@selectedValue\",\"@onChange\"],[[30,0,[\"targetTypes\"]],\"label\",\"type\",[30,0,[\"selectedTargetType\"]],[30,0,[\"onTargetSelect\"]]]],null],[1,\"\\n      \"],[10,0],[14,0,\"has-left-margin-s is-flex-1\"],[12],[1,\"\\n\"],[41,[28,[37,19],[[30,0,[\"selectedTargetType\"]],\"accessor\"],null],[[[1,\"          \"],[8,[39,20],[[24,\"data-test-mlef-select\",\"accessor\"]],[[\"@value\",\"@showAccessor\",\"@noDefault\",\"@onChange\",\"@filterToken\"],[[30,0,[\"selectedTargetValue\"]],true,true,[30,0,[\"setTargetValue\"]],true]],null],[1,\"\\n\"]],[]],[[[41,[28,[37,19],[[30,0,[\"selectedTargetType\"]],\"method\"],null],[[[1,\"          \"],[8,[39,18],[[24,\"data-test-mlef-select\",\"auth-method\"]],[[\"@options\",\"@labelAttribute\",\"@valueAttribute\",\"@isFullwidth\",\"@noDefault\",\"@selectedValue\",\"@onChange\"],[[30,0,[\"authMethods\"]],\"displayName\",\"value\",true,true,[30,0,[\"selectedTargetValue\"]],[30,0,[\"setTargetValue\"]]]],null],[1,\"\\n\"]],[]],[[[1,\"          \"],[8,[39,11],[[16,\"data-test-mlef-search\",[30,0,[\"selectedTargetType\"]]]],[[\"@placeholder\",\"@options\",\"@parentManageSelected\",\"@shouldRenderName\",\"@selectLimit\",\"@onChange\"],[\"Search for an existing target\",[30,0,[\"searchSelect\",\"options\"]],[30,0,[\"searchSelect\",\"selected\"]],true,1,[30,0,[\"setTargetValue\"]]]],null],[1,\"\\n        \"]],[]]]],[]]],[1,\"      \"],[13],[1,\"\\n      \"],[11,\"button\"],[24,0,\"button has-left-margin-s\"],[16,\"disabled\",[28,[37,1],[[30,0,[\"selectedTargetValue\"]]],null]],[24,\"data-test-mlef-add-target\",\"\"],[24,4,\"button\"],[4,[38,3],[\"click\",[30,0,[\"addTarget\"]]],null],[12],[1,\"\\n        Add\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n\"],[41,[30,0,[\"errors\",\"targets\",\"errors\"]],[[[1,\"      \"],[8,[39,8],null,[[\"@type\",\"@message\"],[\"danger\",[28,[37,9],[\", \",[30,0,[\"errors\",\"targets\",\"errors\"]]],null]]],null],[1,\"\\n\"]],[]],null],[1,\"  \"],[13],[1,\"\\n\"],[41,[51,[30,3]],[[[1,\"    \"],[10,\"hr\"],[12],[13],[1,\"\\n    \"],[10,0],[14,0,\"has-top-padding-s\"],[12],[1,\"\\n      \"],[11,\"button\"],[16,0,[29,[\"button is-primary \",[52,[30,0,[\"save\",\"isRunning\"]],\"is-loading\"]]]],[16,\"disabled\",[30,0,[\"save\",\"isRunning\"]]],[24,\"data-test-mlef-save\",\"\"],[24,4,\"button\"],[4,[38,3],[\"click\",[28,[37,21],[[30,0,[\"save\"]]],null]],null],[12],[1,\"\\n        \"],[1,[52,[30,2,[\"isNew\"]],\"Create\",\"Update\"]],[1,\"\\n      \"],[13],[1,\"\\n      \"],[11,\"button\"],[24,0,\"button has-left-margin-s\"],[16,\"disabled\",[30,0,[\"save\",\"isRunning\"]]],[24,\"data-test-mlef-cancel\",\"\"],[24,4,\"button\"],[4,[38,3],[\"click\",[30,0,[\"cancel\"]]],null],[12],[1,\"\\n        Cancel\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n\"]],[]],null],[13]],[\"&attrs\",\"@model\",\"@isInline\",\"target\"],false,[\"form-field-label\",\"not\",\"if\",\"on\",\"pipe\",\"pick\",\"fn\",\"mut\",\"alert-inline\",\"join\",\"unless\",\"search-select\",\"map-by\",\"array\",\"each\",\"-track-array\",\"info-table-row\",\"icon\",\"select\",\"eq\",\"mount-accessor-select\",\"perform\"]]",
    "moduleName": "vault/templates/components/mfa/mfa-login-enforcement-form.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/mfa/mfa-login-enforcement-header", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{#if @isInline}}
    <h3 class="title is-5" data-test-mleh-title>Enforcement</h3>
  {{else}}
    <PageHeader as |p|>
      <p.top>
        <nav class="breadcrumb">
          <ul>
            <li>
              <span class="sep">&#x0002f;</span>
              <LinkTo @route="vault.cluster.access.mfa.enforcements.index">
                Enforcements
              </LinkTo>
            </li>
          </ul>
        </nav>
      </p.top>
      <p.levelLeft>
        <h1 class="title is-3" data-test-mleh-title>
          <Icon @name="lock" @size="24" />
          {{@heading}}
        </h1>
      </p.levelLeft>
    </PageHeader>
  {{/if}}
  <div class="has-border-top-light">
    <p class="has-top-margin-m" data-test-mleh-description>
      {{#if @isInline}}
        An enforcement includes the authentication types, authentication methods, groups, and entities that will require this
        MFA method. This is optional and can be added later.
      {{else}}
        An enforcement will define which auth types, auth mounts, groups, and/or entities will require this MFA method. Keep in
        mind that only one of these conditions needs to be satisfied. For example, if an authentication method is added here,
        all entities and groups which make use of that authentication method will be subject to an MFA request.
        <DocLink @path="/docs/auth/login-mfa">Learn more here.</DocLink>
      {{/if}}
    </p>
    {{#if @isInline}}
      <div class="is-flex-row">
        <RadioCard
          @title="Create new"
          @description="Create a new enforcement for this MFA method."
          @icon="plus-circle"
          @value="new"
          @groupValue={{@radioCardGroupValue}}
          @onChange={{@onRadioCardSelect}}
          data-test-mleh-radio="new"
        />
        <RadioCard
          @title="Use existing"
          @description="Use an existing enforcement configuration."
          @icon="list"
          @value="existing"
          @groupValue={{@radioCardGroupValue}}
          @disabled={{not this.enforcements.length}}
          @onChange={{@onRadioCardSelect}}
          data-test-mleh-radio="existing"
        />
        <RadioCard
          @title="Skip this step"
          @description="Create MFA without enforcement for now. "
          @icon="build"
          @value="skip"
          @groupValue={{@radioCardGroupValue}}
          @onChange={{@onRadioCardSelect}}
          data-test-mleh-radio="skip"
        />
      </div>
      {{#if (eq @radioCardGroupValue "existing")}}
        <SearchSelect
          @label="Enforcement"
          @subText="Choose the existing enforcement(s) to add to this MFA method."
          @placeholder="Search for an existing enforcement"
          @options={{this.enforcements}}
          @shouldRenderName={{true}}
          @selectLimit={{1}}
          @onChange={{this.onEnforcementSelect}}
        />
      {{/if}}
    {{/if}}
  </div>
  */
  {
    "id": "D18pl2tX",
    "block": "[[[41,[30,1],[[[1,\"  \"],[10,\"h3\"],[14,0,\"title is-5\"],[14,\"data-test-mleh-title\",\"\"],[12],[1,\"Enforcement\"],[13],[1,\"\\n\"]],[]],[[[1,\"  \"],[8,[39,1],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[30,2,[\"top\"]],null,null,[[\"default\"],[[[[1,\"\\n      \"],[10,\"nav\"],[14,0,\"breadcrumb\"],[12],[1,\"\\n        \"],[10,\"ul\"],[12],[1,\"\\n          \"],[10,\"li\"],[12],[1,\"\\n            \"],[10,1],[14,0,\"sep\"],[12],[1,\"/\"],[13],[1,\"\\n            \"],[8,[39,2],null,[[\"@route\"],[\"vault.cluster.access.mfa.enforcements.index\"]],[[\"default\"],[[[[1,\"\\n              Enforcements\\n            \"]],[]]]]],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"]],[]]]]],[1,\"\\n    \"],[8,[30,2,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n      \"],[10,\"h1\"],[14,0,\"title is-3\"],[14,\"data-test-mleh-title\",\"\"],[12],[1,\"\\n        \"],[8,[39,3],null,[[\"@name\",\"@size\"],[\"lock\",\"24\"]],null],[1,\"\\n        \"],[1,[30,3]],[1,\"\\n      \"],[13],[1,\"\\n    \"]],[]]]]],[1,\"\\n  \"]],[2]]]]],[1,\"\\n\"]],[]]],[10,0],[14,0,\"has-border-top-light\"],[12],[1,\"\\n  \"],[10,2],[14,0,\"has-top-margin-m\"],[14,\"data-test-mleh-description\",\"\"],[12],[1,\"\\n\"],[41,[30,1],[[[1,\"      An enforcement includes the authentication types, authentication methods, groups, and entities that will require this\\n      MFA method. This is optional and can be added later.\\n\"]],[]],[[[1,\"      An enforcement will define which auth types, auth mounts, groups, and/or entities will require this MFA method. Keep in\\n      mind that only one of these conditions needs to be satisfied. For example, if an authentication method is added here,\\n      all entities and groups which make use of that authentication method will be subject to an MFA request.\\n      \"],[8,[39,4],null,[[\"@path\"],[\"/docs/auth/login-mfa\"]],[[\"default\"],[[[[1,\"Learn more here.\"]],[]]]]],[1,\"\\n\"]],[]]],[1,\"  \"],[13],[1,\"\\n\"],[41,[30,1],[[[1,\"    \"],[10,0],[14,0,\"is-flex-row\"],[12],[1,\"\\n      \"],[8,[39,5],[[24,\"data-test-mleh-radio\",\"new\"]],[[\"@title\",\"@description\",\"@icon\",\"@value\",\"@groupValue\",\"@onChange\"],[\"Create new\",\"Create a new enforcement for this MFA method.\",\"plus-circle\",\"new\",[30,4],[30,5]]],null],[1,\"\\n      \"],[8,[39,5],[[24,\"data-test-mleh-radio\",\"existing\"]],[[\"@title\",\"@description\",\"@icon\",\"@value\",\"@groupValue\",\"@disabled\",\"@onChange\"],[\"Use existing\",\"Use an existing enforcement configuration.\",\"list\",\"existing\",[30,4],[28,[37,6],[[30,0,[\"enforcements\",\"length\"]]],null],[30,5]]],null],[1,\"\\n      \"],[8,[39,5],[[24,\"data-test-mleh-radio\",\"skip\"]],[[\"@title\",\"@description\",\"@icon\",\"@value\",\"@groupValue\",\"@onChange\"],[\"Skip this step\",\"Create MFA without enforcement for now. \",\"build\",\"skip\",[30,4],[30,5]]],null],[1,\"\\n    \"],[13],[1,\"\\n\"],[41,[28,[37,7],[[30,4],\"existing\"],null],[[[1,\"      \"],[8,[39,8],null,[[\"@label\",\"@subText\",\"@placeholder\",\"@options\",\"@shouldRenderName\",\"@selectLimit\",\"@onChange\"],[\"Enforcement\",\"Choose the existing enforcement(s) to add to this MFA method.\",\"Search for an existing enforcement\",[30,0,[\"enforcements\"]],true,1,[30,0,[\"onEnforcementSelect\"]]]],null],[1,\"\\n\"]],[]],null]],[]],null],[13]],[\"@isInline\",\"p\",\"@heading\",\"@radioCardGroupValue\",\"@onRadioCardSelect\"],false,[\"if\",\"page-header\",\"link-to\",\"icon\",\"doc-link\",\"radio-card\",\"not\",\"eq\",\"search-select\"]]",
    "moduleName": "vault/templates/components/mfa/mfa-login-enforcement-header.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/mfa/mfa-setup-step-one", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <div ...attributes>
    <p>
      TOTP Multi-factor authentication (MFA) can be enabled here if it is required by your administrator. This will ensure that
      you are not prevented from logging into OpenBao in the future, once MFA is fully enforced.
    </p>
    <form id="mfa-setup-step-one" {{on "submit" this.verifyUUID}}>
      <MessageError @errorMessage={{this.error}} class="has-top-margin-s" />
      <div class="field has-top-margin-l">
        <label class="is-label">
          Method ID
        </label>
  
        {{! template-lint-disable no-autofocus-attribute}}
        <p class="sub-text">Enter the UUID for your multi-factor authentication method. This can be provided to you by your
          administrator.</p>
        <Input
          id="uuid"
          name="uuid"
          class="input"
          autocomplete="off"
          spellcheck="false"
          autofocus="true"
          @value={{this.UUID}}
          data-test-input="uuid"
        />
      </div>
  
      <div class="is-flex-start has-gap">
        <button id="continue" type="submit" class="button is-primary" disabled={{(is-empty-value this.UUID)}} data-test-verify>
          Verify
        </button>
        <button id="cancel" type="button" {{on "click" this.redirectPreviousPage}} class="button">
          Cancel
        </button>
      </div>
    </form>
  </div>
  */
  {
    "id": "qF+2GNut",
    "block": "[[[11,0],[17,1],[12],[1,\"\\n  \"],[10,2],[12],[1,\"\\n    TOTP Multi-factor authentication (MFA) can be enabled here if it is required by your administrator. This will ensure that\\n    you are not prevented from logging into OpenBao in the future, once MFA is fully enforced.\\n  \"],[13],[1,\"\\n  \"],[11,\"form\"],[24,1,\"mfa-setup-step-one\"],[4,[38,0],[\"submit\",[30,0,[\"verifyUUID\"]]],null],[12],[1,\"\\n    \"],[8,[39,1],[[24,0,\"has-top-margin-s\"]],[[\"@errorMessage\"],[[30,0,[\"error\"]]]],null],[1,\"\\n    \"],[10,0],[14,0,\"field has-top-margin-l\"],[12],[1,\"\\n      \"],[10,\"label\"],[14,0,\"is-label\"],[12],[1,\"\\n        Method ID\\n      \"],[13],[1,\"\\n\\n\"],[1,\"      \"],[10,2],[14,0,\"sub-text\"],[12],[1,\"Enter the UUID for your multi-factor authentication method. This can be provided to you by your\\n        administrator.\"],[13],[1,\"\\n      \"],[8,[39,2],[[24,1,\"uuid\"],[24,3,\"uuid\"],[24,0,\"input\"],[24,\"autocomplete\",\"off\"],[24,\"spellcheck\",\"false\"],[24,\"autofocus\",\"true\"],[24,\"data-test-input\",\"uuid\"]],[[\"@value\"],[[30,0,[\"UUID\"]]]],null],[1,\"\\n    \"],[13],[1,\"\\n\\n    \"],[10,0],[14,0,\"is-flex-start has-gap\"],[12],[1,\"\\n      \"],[10,\"button\"],[14,1,\"continue\"],[14,0,\"button is-primary\"],[15,\"disabled\",[28,[37,3],[[30,0,[\"UUID\"]]],null]],[14,\"data-test-verify\",\"\"],[14,4,\"submit\"],[12],[1,\"\\n        Verify\\n      \"],[13],[1,\"\\n      \"],[11,\"button\"],[24,1,\"cancel\"],[24,0,\"button\"],[24,4,\"button\"],[4,[38,0],[\"click\",[30,0,[\"redirectPreviousPage\"]]],null],[12],[1,\"\\n        Cancel\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"],[13]],[\"&attrs\"],false,[\"on\",\"message-error\",\"input\",\"is-empty-value\"]]",
    "moduleName": "vault/templates/components/mfa/mfa-setup-step-one.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/mfa/mfa-setup-step-two", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <div ...attributes>
    <p>
      TOTP Multi-factor authentication (MFA) can be enabled here if it is required by your administrator. This will ensure that
      you are not prevented from logging into OpenBao in the future, once MFA is fully enforced.
    </p>
    <div class="field has-top-margin-l">
      <MessageError @errorMessage={{this.error}} class="has-top-margin-s" />
      {{#if @warning}}
        <AlertBanner
          @type="info"
          @title="MFA enabled"
          @message={{@warning}}
          class="has-top-margin-l"
          data-test-mfa-enabled-warning
        />
      {{else}}
        <div class="list-item-row">
          <div class="center-display">
            <QrCode
              @text={{@qrCode}}
              @colorLight="#F7F7F7"
              @width={{155}}
              @height={{155}}
              @correctLevel="L"
              data-test-qrcode
            />
          </div>
        </div>
        <div class="has-top-margin-s">
          <div class="info-table-row has-no-shadow">
            <div class="column info-table-row-edit"><Icon @name="alert-triangle-fill" class="has-text-highlight" /></div>
            <p class="is-size-8">
              After you leave this page, this QR code will be removed and
              <strong>cannot</strong>
              be regenerated.
            </p>
          </div>
        </div>
      {{/if}}
      <div class="is-flex-start has-gap has-top-margin-l">
        <button
          id="restart"
          type="button"
          class="button is-danger-outlined"
          {{on "click" this.restartSetup}}
          data-test-restart
        >
          Restart setup
        </button>
        <button id="cancel" type="button" {{on "click" this.redirectPreviousPage}} class="button is-primary" data-test-done>
          Done
        </button>
      </div>
    </div>
  </div>
  */
  {
    "id": "bwpcsr+u",
    "block": "[[[11,0],[17,1],[12],[1,\"\\n  \"],[10,2],[12],[1,\"\\n    TOTP Multi-factor authentication (MFA) can be enabled here if it is required by your administrator. This will ensure that\\n    you are not prevented from logging into OpenBao in the future, once MFA is fully enforced.\\n  \"],[13],[1,\"\\n  \"],[10,0],[14,0,\"field has-top-margin-l\"],[12],[1,\"\\n    \"],[8,[39,0],[[24,0,\"has-top-margin-s\"]],[[\"@errorMessage\"],[[30,0,[\"error\"]]]],null],[1,\"\\n\"],[41,[30,2],[[[1,\"      \"],[8,[39,2],[[24,0,\"has-top-margin-l\"],[24,\"data-test-mfa-enabled-warning\",\"\"]],[[\"@type\",\"@title\",\"@message\"],[\"info\",\"MFA enabled\",[30,2]]],null],[1,\"\\n\"]],[]],[[[1,\"      \"],[10,0],[14,0,\"list-item-row\"],[12],[1,\"\\n        \"],[10,0],[14,0,\"center-display\"],[12],[1,\"\\n          \"],[8,[39,3],[[24,\"data-test-qrcode\",\"\"]],[[\"@text\",\"@colorLight\",\"@width\",\"@height\",\"@correctLevel\"],[[30,3],\"#F7F7F7\",155,155,\"L\"]],null],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n      \"],[10,0],[14,0,\"has-top-margin-s\"],[12],[1,\"\\n        \"],[10,0],[14,0,\"info-table-row has-no-shadow\"],[12],[1,\"\\n          \"],[10,0],[14,0,\"column info-table-row-edit\"],[12],[8,[39,4],[[24,0,\"has-text-highlight\"]],[[\"@name\"],[\"alert-triangle-fill\"]],null],[13],[1,\"\\n          \"],[10,2],[14,0,\"is-size-8\"],[12],[1,\"\\n            After you leave this page, this QR code will be removed and\\n            \"],[10,\"strong\"],[12],[1,\"cannot\"],[13],[1,\"\\n            be regenerated.\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n\"]],[]]],[1,\"    \"],[10,0],[14,0,\"is-flex-start has-gap has-top-margin-l\"],[12],[1,\"\\n      \"],[11,\"button\"],[24,1,\"restart\"],[24,0,\"button is-danger-outlined\"],[24,\"data-test-restart\",\"\"],[24,4,\"button\"],[4,[38,5],[\"click\",[30,0,[\"restartSetup\"]]],null],[12],[1,\"\\n        Restart setup\\n      \"],[13],[1,\"\\n      \"],[11,\"button\"],[24,1,\"cancel\"],[24,0,\"button is-primary\"],[24,\"data-test-done\",\"\"],[24,4,\"button\"],[4,[38,5],[\"click\",[30,0,[\"redirectPreviousPage\"]]],null],[12],[1,\"\\n        Done\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"],[13]],[\"&attrs\",\"@warning\",\"@qrCode\"],false,[\"message-error\",\"if\",\"alert-banner\",\"qr-code\",\"icon\",\"on\"]]",
    "moduleName": "vault/templates/components/mfa/mfa-setup-step-two.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/mfa/nav", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <div class="tabs-container box is-sideless is-fullwidth is-paddingless is-marginless">
    <nav class="tabs">
      <ul>
        <LinkTo @route="vault.cluster.access.mfa.methods" data-test-tab="methods">
          Methods
        </LinkTo>
        <LinkTo @route="vault.cluster.access.mfa.enforcements" data-test-tab="enforcements">
          Enforcements
        </LinkTo>
      </ul>
    </nav>
  </div>
  */
  {
    "id": "bkLwt1xj",
    "block": "[[[10,0],[14,0,\"tabs-container box is-sideless is-fullwidth is-paddingless is-marginless\"],[12],[1,\"\\n  \"],[10,\"nav\"],[14,0,\"tabs\"],[12],[1,\"\\n    \"],[10,\"ul\"],[12],[1,\"\\n      \"],[8,[39,0],[[24,\"data-test-tab\",\"methods\"]],[[\"@route\"],[\"vault.cluster.access.mfa.methods\"]],[[\"default\"],[[[[1,\"\\n        Methods\\n      \"]],[]]]]],[1,\"\\n      \"],[8,[39,0],[[24,\"data-test-tab\",\"enforcements\"]],[[\"@route\"],[\"vault.cluster.access.mfa.enforcements\"]],[[\"default\"],[[[[1,\"\\n        Enforcements\\n      \"]],[]]]]],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"],[13]],[],false,[\"link-to\"]]",
    "moduleName": "vault/templates/components/mfa/nav.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/mount-accessor-select", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <div ...attributes>
    {{#if @label}}
      <label for={{@name}} class="is-label">
        {{@label}}
        {{#if @helpText}}
          <InfoTooltip>
            <span data-test-help-text>{{@helpText}}</span>
          </InfoTooltip>
        {{/if}}
      </label>
    {{/if}}
    {{#if this.authMethods.isRunning}}
      <div>
        <span class="loader is-inline-block"></span>
      </div>
    {{else if this.authMethods.last.value}}
      <div class="control is-expanded">
        <div class="select is-fullwidth">
          <select name={{@name}} id={{@name}} {{on "change" this.change}} data-test-mount-accessor-select>
            {{#if this.noDefault}}
              <option value="">Select one</option>
            {{/if}}
            {{#each this.authMethods.last.value as |method|}}
              {{! token type does not need to be authorized via MFA }}
              {{#if this.filterToken}}
                {{#if (not-eq method.id "token")}}
                  <option selected={{eq @value method.accessor}} value={{method.accessor}}>
                    {{method.path}}
                    ({{if @showAccessor method.accessor method.type}})
                  </option>
                {{/if}}
              {{else}}
                <option selected={{eq @value method.accessor}} value={{method.accessor}}>
                  {{method.path}}
                  ({{if @showAccessor method.accessor method.type}})
                </option>
              {{/if}}
            {{/each}}
          </select>
        </div>
      </div>
    {{else}}
      <input
        name={{@name}}
        id={{@name}}
        class="input"
        value={{@value}}
        placeholder="Mount accessor"
        {{on "change" this.change}}
        data-test-mount-accessor-default
      />
    {{/if}}
  </div>
  */
  {
    "id": "GXhgbJCf",
    "block": "[[[11,0],[17,1],[12],[1,\"\\n\"],[41,[30,2],[[[1,\"    \"],[10,\"label\"],[15,\"for\",[30,3]],[14,0,\"is-label\"],[12],[1,\"\\n      \"],[1,[30,2]],[1,\"\\n\"],[41,[30,4],[[[1,\"        \"],[8,[39,1],null,null,[[\"default\"],[[[[1,\"\\n          \"],[10,1],[14,\"data-test-help-text\",\"\"],[12],[1,[30,4]],[13],[1,\"\\n        \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"    \"],[13],[1,\"\\n\"]],[]],null],[41,[30,0,[\"authMethods\",\"isRunning\"]],[[[1,\"    \"],[10,0],[12],[1,\"\\n      \"],[10,1],[14,0,\"loader is-inline-block\"],[12],[13],[1,\"\\n    \"],[13],[1,\"\\n\"]],[]],[[[41,[30,0,[\"authMethods\",\"last\",\"value\"]],[[[1,\"    \"],[10,0],[14,0,\"control is-expanded\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"select is-fullwidth\"],[12],[1,\"\\n        \"],[11,\"select\"],[16,3,[30,3]],[16,1,[30,3]],[24,\"data-test-mount-accessor-select\",\"\"],[4,[38,2],[\"change\",[30,0,[\"change\"]]],null],[12],[1,\"\\n\"],[41,[30,0,[\"noDefault\"]],[[[1,\"            \"],[10,\"option\"],[14,2,\"\"],[12],[1,\"Select one\"],[13],[1,\"\\n\"]],[]],null],[42,[28,[37,4],[[28,[37,4],[[30,0,[\"authMethods\",\"last\",\"value\"]]],null]],null],null,[[[41,[30,0,[\"filterToken\"]],[[[41,[28,[37,5],[[30,5,[\"id\"]],\"token\"],null],[[[1,\"                \"],[10,\"option\"],[15,\"selected\",[28,[37,6],[[30,6],[30,5,[\"accessor\"]]],null]],[15,2,[30,5,[\"accessor\"]]],[12],[1,\"\\n                  \"],[1,[30,5,[\"path\"]]],[1,\"\\n                  (\"],[1,[52,[30,7],[30,5,[\"accessor\"]],[30,5,[\"type\"]]]],[1,\")\\n                \"],[13],[1,\"\\n\"]],[]],null]],[]],[[[1,\"              \"],[10,\"option\"],[15,\"selected\",[28,[37,6],[[30,6],[30,5,[\"accessor\"]]],null]],[15,2,[30,5,[\"accessor\"]]],[12],[1,\"\\n                \"],[1,[30,5,[\"path\"]]],[1,\"\\n                (\"],[1,[52,[30,7],[30,5,[\"accessor\"]],[30,5,[\"type\"]]]],[1,\")\\n              \"],[13],[1,\"\\n\"]],[]]]],[5]],null],[1,\"        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n\"]],[]],[[[1,\"    \"],[11,\"input\"],[16,3,[30,3]],[16,1,[30,3]],[24,0,\"input\"],[16,2,[30,6]],[24,\"placeholder\",\"Mount accessor\"],[24,\"data-test-mount-accessor-default\",\"\"],[4,[38,2],[\"change\",[30,0,[\"change\"]]],null],[12],[13],[1,\"\\n  \"]],[]]]],[]]],[13]],[\"&attrs\",\"@label\",\"@name\",\"@helpText\",\"method\",\"@value\",\"@showAccessor\"],false,[\"if\",\"info-tooltip\",\"on\",\"each\",\"-track-array\",\"not-eq\",\"eq\"]]",
    "moduleName": "vault/templates/components/mount-accessor-select.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/mount-backend-form", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.levelLeft>
      <h1 class="title is-3 title-with-icon" data-test-mount-form-header="true">
        {{#if this.showEnable}}
          {{#let (find-by "type" @mountModel.type @mountTypes) as |typeInfo|}}
            <Icon @name={{or typeInfo.glyph typeInfo.type}} @size="24" class="has-text-grey-light" />
            {{#if (eq @mountType "secret")}}
              {{concat "Enable " typeInfo.displayName " Secrets Engine"}}
            {{else}}
              {{concat "Enable " typeInfo.displayName " Authentication Method"}}
            {{/if}}
          {{/let}}
        {{else if (eq @mountType "secret")}}
          Enable a Secrets Engine
        {{else}}
          Enable an Authentication Method
        {{/if}}
      </h1>
    </p.levelLeft>
  </PageHeader>
  
  <div class="box is-sideless is-fullwidth is-marginless">
    <NamespaceReminder @mode="enable" @noun={{if (eq @mountType "secret") "Secret Engine" "Auth Method"}} />
    <MessageError @errorMessage={{this.errorMessage}} />
    {{#if @mountModel.type}}
      <form {{on "submit" (perform this.mountBackend)}}>
        <FormFieldGroups
          @model={{@mountModel}}
          @renderGroup="default"
          @modelValidations={{this.modelValidations}}
          @onKeyUp={{this.onKeyUp}}
        />
        <FormFieldGroups @model={{@mountModel}} @renderGroup="Method Options" />
  
        <div class="field is-grouped box is-fullwidth is-bottomless">
          <div class="control">
            <button
              type="submit"
              data-test-mount-submit="true"
              class="button is-primary {{if this.mountBackend.isRunning 'loading'}}"
              disabled={{this.mountBackend.isRunning}}
            >
              {{#if (eq @mountType "secret")}}
                Enable Engine
              {{else}}
                Enable Method
              {{/if}}
            </button>
          </div>
          <div class="control">
            <button data-test-mount-back type="button" class="button" {{on "click" (fn this.setMountType "")}}>
              Back
            </button>
          </div>
          {{#if this.invalidFormAlert}}
            <div class="control">
              <AlertInline @type="danger" @paddingTop={{true}} @message={{this.invalidFormAlert}} @mimicRefresh={{true}} />
            </div>
          {{/if}}
        </div>
      </form>
    {{else}}
      {{!  Type not yet set, show type options }}
      <MountBackend::TypeForm @setMountType={{this.setMountType}} @mountType={{@mountType}} />
    {{/if}}
  </div>
  */
  {
    "id": "mJcU8LZB",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3 title-with-icon\"],[14,\"data-test-mount-form-header\",\"true\"],[12],[1,\"\\n\"],[41,[30,0,[\"showEnable\"]],[[[44,[[28,[37,3],[\"type\",[30,2,[\"type\"]],[30,3]],null]],[[[1,\"          \"],[8,[39,4],[[24,0,\"has-text-grey-light\"]],[[\"@name\",\"@size\"],[[28,[37,5],[[30,4,[\"glyph\"]],[30,4,[\"type\"]]],null],\"24\"]],null],[1,\"\\n\"],[41,[28,[37,6],[[30,5],\"secret\"],null],[[[1,\"            \"],[1,[28,[35,7],[\"Enable \",[30,4,[\"displayName\"]],\" Secrets Engine\"],null]],[1,\"\\n\"]],[]],[[[1,\"            \"],[1,[28,[35,7],[\"Enable \",[30,4,[\"displayName\"]],\" Authentication Method\"],null]],[1,\"\\n\"]],[]]]],[4]]]],[]],[[[41,[28,[37,6],[[30,5],\"secret\"],null],[[[1,\"        Enable a Secrets Engine\\n\"]],[]],[[[1,\"        Enable an Authentication Method\\n      \"]],[]]]],[]]],[1,\"    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\\n\"],[10,0],[14,0,\"box is-sideless is-fullwidth is-marginless\"],[12],[1,\"\\n  \"],[8,[39,8],null,[[\"@mode\",\"@noun\"],[\"enable\",[52,[28,[37,6],[[30,5],\"secret\"],null],\"Secret Engine\",\"Auth Method\"]]],null],[1,\"\\n  \"],[8,[39,9],null,[[\"@errorMessage\"],[[30,0,[\"errorMessage\"]]]],null],[1,\"\\n\"],[41,[30,2,[\"type\"]],[[[1,\"    \"],[11,\"form\"],[4,[38,10],[\"submit\",[28,[37,11],[[30,0,[\"mountBackend\"]]],null]],null],[12],[1,\"\\n      \"],[8,[39,12],null,[[\"@model\",\"@renderGroup\",\"@modelValidations\",\"@onKeyUp\"],[[30,2],\"default\",[30,0,[\"modelValidations\"]],[30,0,[\"onKeyUp\"]]]],null],[1,\"\\n      \"],[8,[39,12],null,[[\"@model\",\"@renderGroup\"],[[30,2],\"Method Options\"]],null],[1,\"\\n\\n      \"],[10,0],[14,0,\"field is-grouped box is-fullwidth is-bottomless\"],[12],[1,\"\\n        \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n          \"],[10,\"button\"],[14,\"data-test-mount-submit\",\"true\"],[15,0,[29,[\"button is-primary \",[52,[30,0,[\"mountBackend\",\"isRunning\"]],\"loading\"]]]],[15,\"disabled\",[30,0,[\"mountBackend\",\"isRunning\"]]],[14,4,\"submit\"],[12],[1,\"\\n\"],[41,[28,[37,6],[[30,5],\"secret\"],null],[[[1,\"              Enable Engine\\n\"]],[]],[[[1,\"              Enable Method\\n\"]],[]]],[1,\"          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n        \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n          \"],[11,\"button\"],[24,\"data-test-mount-back\",\"\"],[24,0,\"button\"],[24,4,\"button\"],[4,[38,10],[\"click\",[28,[37,13],[[30,0,[\"setMountType\"]],\"\"],null]],null],[12],[1,\"\\n            Back\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n\"],[41,[30,0,[\"invalidFormAlert\"]],[[[1,\"          \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n            \"],[8,[39,14],null,[[\"@type\",\"@paddingTop\",\"@message\",\"@mimicRefresh\"],[\"danger\",true,[30,0,[\"invalidFormAlert\"]],true]],null],[1,\"\\n          \"],[13],[1,\"\\n\"]],[]],null],[1,\"      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n\"]],[]],[[[1,\"    \"],[8,[39,15],null,[[\"@setMountType\",\"@mountType\"],[[30,0,[\"setMountType\"]],[30,5]]],null],[1,\"\\n\"]],[]]],[13]],[\"p\",\"@mountModel\",\"@mountTypes\",\"typeInfo\",\"@mountType\"],false,[\"page-header\",\"if\",\"let\",\"find-by\",\"icon\",\"or\",\"eq\",\"concat\",\"namespace-reminder\",\"message-error\",\"on\",\"perform\",\"form-field-groups\",\"fn\",\"alert-inline\",\"mount-backend/type-form\"]]",
    "moduleName": "vault/templates/components/mount-backend-form.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/mount-info", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.top>
      <KeyValueHeader @baseKey={{this.model}} @path="vault.cluster.access.method" @root={{this.root}} @showCurrent={{true}} />
    </p.top>
    <p.levelLeft>
      <h1 class="title is-3">
        {{capitalize this.model.methodType}}
      </h1>
    </p.levelLeft>
    <p.levelRight>
      {{#if (eq this.section "configuration")}}
        <div class="field is-grouped">
          <div class="control">
            <LinkTo
              @route="vault.cluster.settings.auth.configure"
              @model={{this.model.id}}
              class="button is-ghost has-icon-right is-compact"
              data-test-configure-link={{true}}
            >
              Configure
              <Chevron />
            </LinkTo>
          </div>
        </div>
      {{/if}}
    </p.levelRight>
  </PageHeader>
  {{section-tabs this.model "authShow"}}
  {{component (concat "auth-method/" this.section) model=this.model}}
  */
  {
    "id": "DsuWJqgX",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"top\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,1],null,[[\"@baseKey\",\"@path\",\"@root\",\"@showCurrent\"],[[30,0,[\"model\"]],\"vault.cluster.access.method\",[30,0,[\"root\"]],true]],null],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n      \"],[1,[28,[35,2],[[30,0,[\"model\",\"methodType\"]]],null]],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[30,1,[\"levelRight\"]],null,null,[[\"default\"],[[[[1,\"\\n\"],[41,[28,[37,4],[[30,0,[\"section\"]],\"configuration\"],null],[[[1,\"      \"],[10,0],[14,0,\"field is-grouped\"],[12],[1,\"\\n        \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n          \"],[8,[39,5],[[24,0,\"button is-ghost has-icon-right is-compact\"],[16,\"data-test-configure-link\",true]],[[\"@route\",\"@model\"],[\"vault.cluster.settings.auth.configure\",[30,0,[\"model\",\"id\"]]]],[[\"default\"],[[[[1,\"\\n            Configure\\n            \"],[8,[39,6],null,null,null],[1,\"\\n          \"]],[]]]]],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n\"]],[]],null],[1,\"  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\"],[1,[28,[35,7],[[30,0,[\"model\"]],\"authShow\"],null]],[1,\"\\n\"],[46,[28,[37,9],[\"auth-method/\",[30,0,[\"section\"]]],null],null,[[\"model\"],[[30,0,[\"model\"]]]],null]],[\"p\"],false,[\"page-header\",\"key-value-header\",\"capitalize\",\"if\",\"eq\",\"link-to\",\"chevron\",\"section-tabs\",\"component\",\"concat\"]]",
    "moduleName": "vault/templates/components/mount-info.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/namespace-link", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <ExternalLink
    @href={{this.namespaceLink}}
    @sameTab={{true}}
    class={{concat "is-block " this.class}}
    data-test-namespace-link={{this.normalizedNamespace}}
  >
    {{#if (has-block)}}
      {{yield}}
    {{else}}
      <div class="level is-mobile">
        <span class="level-left">{{this.namespaceDisplay}}</span>
        <span class="level-right">
          <Chevron @isButton={{true}} class="button is-ghost icon has-text-grey" />
        </span>
      </div>
    {{/if}}
  </ExternalLink>
  */
  {
    "id": "3L4yx85D",
    "block": "[[[8,[39,0],[[16,0,[28,[37,1],[\"is-block \",[30,0,[\"class\"]]],null]],[16,\"data-test-namespace-link\",[30,0,[\"normalizedNamespace\"]]]],[[\"@href\",\"@sameTab\"],[[30,0,[\"namespaceLink\"]],true]],[[\"default\"],[[[[1,\"\\n\"],[41,[48,[30,1]],[[[1,\"    \"],[18,1,null],[1,\"\\n\"]],[]],[[[1,\"    \"],[10,0],[14,0,\"level is-mobile\"],[12],[1,\"\\n      \"],[10,1],[14,0,\"level-left\"],[12],[1,[30,0,[\"namespaceDisplay\"]]],[13],[1,\"\\n      \"],[10,1],[14,0,\"level-right\"],[12],[1,\"\\n        \"],[8,[39,5],[[24,0,\"button is-ghost icon has-text-grey\"]],[[\"@isButton\"],[true]],null],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n\"]],[]]]],[]]]]]],[\"&default\"],false,[\"external-link\",\"concat\",\"if\",\"has-block\",\"yield\",\"chevron\"]]",
    "moduleName": "vault/templates/components/namespace-link.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/namespace-picker", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <div class="namespace-picker" ...attributes>
    <BasicDropdown @horizontalPosition="left" @verticalPosition="above" as |D|>
      <D.Trigger
        @htmlTag="button"
        class="button is-transparent namespace-picker-trigger has-current-color"
        data-test-namespace-toggle
      >
        <div class="is-flex-center is-flex-1">
          <Icon @name="org" />
          <span class="is-flex-1 is-word-break has-text-left is-size-6 has-left-margin-xs">{{this.namespaceDisplay}}</span>
        </div>
        <Icon @name="caret" />
      </D.Trigger>
      <D.Content @defaultClass="namespace-picker-content">
        <div class="is-mobile level-left">
          <h5 class="list-header">Current namespace</h5>
        </div>
        <div class="namespace-header-bar level is-mobile">
          <div class="level-left">
            <header>
              <div class="level is-mobile namespace-link">
                <span class="level-left" data-test-current-namespace>
                  {{if this.namespacePath (concat this.namespacePath "/") "root"}}
                </span>
              </div>
            </header>
          </div>
        </div>
        <div class="namespace-list {{if this.isAnimating 'animated-list'}}">
          <div class="is-mobile level-left">
            {{#unless this.isUserRootNamespace}}
              <NamespaceLink
                @targetNamespace={{or
                  (object-at (dec 2 this.menuLeaves.length) this.lastMenuLeaves)
                  this.auth.authData.userRootNamespace
                }}
                @class="namespace-link is-current button is-transparent icon"
              >
                <Chevron @direction="left" @class="has-text-grey" />
              </NamespaceLink>
            {{/unless}}
            <h5 class="list-header">Namespaces</h5>
          </div>
          {{#if (includes "" this.lastMenuLeaves)}}
            {{! leaf is '' which is the root namespace, and then we need to iterate the root leaves }}
            <div class="leaf-panel {{if (eq '' this.currentLeaf) 'leaf-panel-current' 'leaf-panel-left'}} ">
              {{#each this.rootLeaves as |rootLeaf|}}
                <NamespaceLink @targetNamespace={{rootLeaf}} @class="namespace-link" @showLastSegment={{true}} />
              {{/each}}
            </div>
          {{/if}}
          {{#each this.lastMenuLeaves as |leaf|}}
            {{#if leaf}}
              <div
                class="leaf-panel
                  {{if (eq leaf this.currentLeaf) 'leaf-panel-current' 'leaf-panel-left'}}
                  {{if (and this.isAdding (eq leaf this.changedLeaf)) 'leaf-panel-adding'}}
                  {{if (and (not this.isAdding) (eq leaf this.changedLeaf)) 'leaf-panel-exiting'}}
                  "
              >
                {{#each-in (get this.namespaceTree leaf) as |leafName|}}
                  <NamespaceLink
                    @targetNamespace={{concat leaf "/" leafName}}
                    @class="namespace-link"
                    @showLastSegment={{true}}
                  />
                {{/each-in}}
              </div>
            {{/if}}
          {{/each}}
          {{#if this.canList}}
            <div class="leaf-panel leaf-panel-current">
              <div class="level">
                <span class="level-left">
                  <LinkTo @route="vault.cluster.access.namespaces" class="is-block namespace-link namespace-manage-link">
                    Manage Namespaces
                  </LinkTo>
                </span>
                <span class="level-right">
                  <button
                    type="button"
                    class="button is-ghost icon has-right-margin-m"
                    data-test-refresh-namespaces
                    onclick={{action "refreshNamespaceList"}}
                  >
                    <Icon @name="reload" class="has-text-grey" />
                  </button>
                </span>
              </div>
            </div>
          {{/if}}
        </div>
      </D.Content>
    </BasicDropdown>
  </div>
  */
  {
    "id": "MEHhcjH5",
    "block": "[[[11,0],[24,0,\"namespace-picker\"],[17,1],[12],[1,\"\\n  \"],[8,[39,0],null,[[\"@horizontalPosition\",\"@verticalPosition\"],[\"left\",\"above\"]],[[\"default\"],[[[[1,\"\\n    \"],[8,[30,2,[\"Trigger\"]],[[24,0,\"button is-transparent namespace-picker-trigger has-current-color\"],[24,\"data-test-namespace-toggle\",\"\"]],[[\"@htmlTag\"],[\"button\"]],[[\"default\"],[[[[1,\"\\n      \"],[10,0],[14,0,\"is-flex-center is-flex-1\"],[12],[1,\"\\n        \"],[8,[39,1],null,[[\"@name\"],[\"org\"]],null],[1,\"\\n        \"],[10,1],[14,0,\"is-flex-1 is-word-break has-text-left is-size-6 has-left-margin-xs\"],[12],[1,[30,0,[\"namespaceDisplay\"]]],[13],[1,\"\\n      \"],[13],[1,\"\\n      \"],[8,[39,1],null,[[\"@name\"],[\"caret\"]],null],[1,\"\\n    \"]],[]]]]],[1,\"\\n    \"],[8,[30,2,[\"Content\"]],null,[[\"@defaultClass\"],[\"namespace-picker-content\"]],[[\"default\"],[[[[1,\"\\n      \"],[10,0],[14,0,\"is-mobile level-left\"],[12],[1,\"\\n        \"],[10,\"h5\"],[14,0,\"list-header\"],[12],[1,\"Current namespace\"],[13],[1,\"\\n      \"],[13],[1,\"\\n      \"],[10,0],[14,0,\"namespace-header-bar level is-mobile\"],[12],[1,\"\\n        \"],[10,0],[14,0,\"level-left\"],[12],[1,\"\\n          \"],[10,\"header\"],[12],[1,\"\\n            \"],[10,0],[14,0,\"level is-mobile namespace-link\"],[12],[1,\"\\n              \"],[10,1],[14,0,\"level-left\"],[14,\"data-test-current-namespace\",\"\"],[12],[1,\"\\n                \"],[1,[52,[30,0,[\"namespacePath\"]],[28,[37,3],[[30,0,[\"namespacePath\"]],\"/\"],null],\"root\"]],[1,\"\\n              \"],[13],[1,\"\\n            \"],[13],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n      \"],[10,0],[15,0,[29,[\"namespace-list \",[52,[30,0,[\"isAnimating\"]],\"animated-list\"]]]],[12],[1,\"\\n        \"],[10,0],[14,0,\"is-mobile level-left\"],[12],[1,\"\\n\"],[41,[51,[30,0,[\"isUserRootNamespace\"]]],[[[1,\"            \"],[8,[39,5],null,[[\"@targetNamespace\",\"@class\"],[[28,[37,6],[[28,[37,7],[[28,[37,8],[2,[30,0,[\"menuLeaves\",\"length\"]]],null],[30,0,[\"lastMenuLeaves\"]]],null],[30,0,[\"auth\",\"authData\",\"userRootNamespace\"]]],null],\"namespace-link is-current button is-transparent icon\"]],[[\"default\"],[[[[1,\"\\n              \"],[8,[39,9],null,[[\"@direction\",\"@class\"],[\"left\",\"has-text-grey\"]],null],[1,\"\\n            \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"          \"],[10,\"h5\"],[14,0,\"list-header\"],[12],[1,\"Namespaces\"],[13],[1,\"\\n        \"],[13],[1,\"\\n\"],[41,[28,[37,10],[\"\",[30,0,[\"lastMenuLeaves\"]]],null],[[[1,\"          \"],[10,0],[15,0,[29,[\"leaf-panel \",[52,[28,[37,11],[\"\",[30,0,[\"currentLeaf\"]]],null],\"leaf-panel-current\",\"leaf-panel-left\"],\" \"]]],[12],[1,\"\\n\"],[42,[28,[37,13],[[28,[37,13],[[30,0,[\"rootLeaves\"]]],null]],null],null,[[[1,\"              \"],[8,[39,5],null,[[\"@targetNamespace\",\"@class\",\"@showLastSegment\"],[[30,3],\"namespace-link\",true]],null],[1,\"\\n\"]],[3]],null],[1,\"          \"],[13],[1,\"\\n\"]],[]],null],[42,[28,[37,13],[[28,[37,13],[[30,0,[\"lastMenuLeaves\"]]],null]],null],null,[[[41,[30,4],[[[1,\"            \"],[10,0],[15,0,[29,[\"leaf-panel\\n                \",[52,[28,[37,11],[[30,4],[30,0,[\"currentLeaf\"]]],null],\"leaf-panel-current\",\"leaf-panel-left\"],\"\\n                \",[52,[28,[37,14],[[30,0,[\"isAdding\"]],[28,[37,11],[[30,4],[30,0,[\"changedLeaf\"]]],null]],null],\"leaf-panel-adding\"],\"\\n                \",[52,[28,[37,14],[[28,[37,15],[[30,0,[\"isAdding\"]]],null],[28,[37,11],[[30,4],[30,0,[\"changedLeaf\"]]],null]],null],\"leaf-panel-exiting\"],\"\\n                \"]]],[12],[1,\"\\n\"],[42,[28,[37,16],[[28,[37,17],[[30,0,[\"namespaceTree\"]],[30,4]],null]],null],null,[[[1,\"                \"],[8,[39,5],null,[[\"@targetNamespace\",\"@class\",\"@showLastSegment\"],[[28,[37,3],[[30,4],\"/\",[30,6]],null],\"namespace-link\",true]],null],[1,\"\\n\"]],[5,6]],null],[1,\"            \"],[13],[1,\"\\n\"]],[]],null]],[4]],null],[41,[30,0,[\"canList\"]],[[[1,\"          \"],[10,0],[14,0,\"leaf-panel leaf-panel-current\"],[12],[1,\"\\n            \"],[10,0],[14,0,\"level\"],[12],[1,\"\\n              \"],[10,1],[14,0,\"level-left\"],[12],[1,\"\\n                \"],[8,[39,18],[[24,0,\"is-block namespace-link namespace-manage-link\"]],[[\"@route\"],[\"vault.cluster.access.namespaces\"]],[[\"default\"],[[[[1,\"\\n                  Manage Namespaces\\n                \"]],[]]]]],[1,\"\\n              \"],[13],[1,\"\\n              \"],[10,1],[14,0,\"level-right\"],[12],[1,\"\\n                \"],[10,\"button\"],[14,0,\"button is-ghost icon has-right-margin-m\"],[14,\"data-test-refresh-namespaces\",\"\"],[15,\"onclick\",[28,[37,19],[[30,0],\"refreshNamespaceList\"],null]],[14,4,\"button\"],[12],[1,\"\\n                  \"],[8,[39,1],[[24,0,\"has-text-grey\"]],[[\"@name\"],[\"reload\"]],null],[1,\"\\n                \"],[13],[1,\"\\n              \"],[13],[1,\"\\n            \"],[13],[1,\"\\n          \"],[13],[1,\"\\n\"]],[]],null],[1,\"      \"],[13],[1,\"\\n    \"]],[]]]]],[1,\"\\n  \"]],[2]]]]],[1,\"\\n\"],[13]],[\"&attrs\",\"D\",\"rootLeaf\",\"leaf\",\"( unused value )\",\"leafName\"],false,[\"basic-dropdown\",\"icon\",\"if\",\"concat\",\"unless\",\"namespace-link\",\"or\",\"object-at\",\"dec\",\"chevron\",\"includes\",\"eq\",\"each\",\"-track-array\",\"and\",\"not\",\"-each-in\",\"get\",\"link-to\",\"action\"]]",
    "moduleName": "vault/templates/components/namespace-picker.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/not-found", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <div class="box is-shadowless" data-test-not-found>
    <PageHeader as |p|>
      <p.levelLeft>
        <h1 class="title is-3 has-text-grey">
          404 Not Found
        </h1>
      </p.levelLeft>
    </PageHeader>
    <div class="box is-sideless has-background-white-bis has-text-grey has-text-centered">
      <p>Sorry, we were unable to find any content at <code>{{or this.model.path this.path}}</code>.</p>
      <p>
        Double check the url or
        <ExternalLink @href="/" @sameTab={{true}}>go back home</ExternalLink>.
      </p>
    </div>
  </div>
  */
  {
    "id": "O0HR6KPG",
    "block": "[[[10,0],[14,0,\"box is-shadowless\"],[14,\"data-test-not-found\",\"\"],[12],[1,\"\\n  \"],[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n      \"],[10,\"h1\"],[14,0,\"title is-3 has-text-grey\"],[12],[1,\"\\n        404 Not Found\\n      \"],[13],[1,\"\\n    \"]],[]]]]],[1,\"\\n  \"]],[1]]]]],[1,\"\\n  \"],[10,0],[14,0,\"box is-sideless has-background-white-bis has-text-grey has-text-centered\"],[12],[1,\"\\n    \"],[10,2],[12],[1,\"Sorry, we were unable to find any content at \"],[10,\"code\"],[12],[1,[28,[35,1],[[30,0,[\"model\",\"path\"]],[30,0,[\"path\"]]],null]],[13],[1,\".\"],[13],[1,\"\\n    \"],[10,2],[12],[1,\"\\n      Double check the url or\\n      \"],[8,[39,2],null,[[\"@href\",\"@sameTab\"],[\"/\",true]],[[\"default\"],[[[[1,\"go back home\"]],[]]]]],[1,\".\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"],[13]],[\"p\"],false,[\"page-header\",\"or\",\"external-link\"]]",
    "moduleName": "vault/templates/components/not-found.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/oidc-callback-splash", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <div class="splash-page-container section is-flex-v-centered-tablet is-flex-1 is-fullwidth">
    <div class="columns is-centered is-gapless is-fullwidth">
      <div class="column is-4-desktop is-6-tablet">
        <div class="has-text-grey has-bottom-margin-m has-current-color-fill">
          <LogoEdition />
        </div>
        <AlertBanner
          @type="success"
          @title="Signing in with your OIDC provider..."
          @message="This window will close automatically"
        />
      </div>
    </div>
  </div>
  */
  {
    "id": "U9J+K80l",
    "block": "[[[10,0],[14,0,\"splash-page-container section is-flex-v-centered-tablet is-flex-1 is-fullwidth\"],[12],[1,\"\\n  \"],[10,0],[14,0,\"columns is-centered is-gapless is-fullwidth\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"column is-4-desktop is-6-tablet\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"has-text-grey has-bottom-margin-m has-current-color-fill\"],[12],[1,\"\\n        \"],[8,[39,0],null,null,null],[1,\"\\n      \"],[13],[1,\"\\n      \"],[8,[39,1],null,[[\"@type\",\"@title\",\"@message\"],[\"success\",\"Signing in with your OIDC provider...\",\"This window will close automatically\"]],null],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"],[13]],[],false,[\"logo-edition\",\"alert-banner\"]]",
    "moduleName": "vault/templates/components/oidc-callback-splash.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/oidc-consent-block", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{#if this.didCancel}}
    <h3 class="title is-3" data-test-consent-title>
      Consent Not Given
    </h3>
    <div class="box">
      <p class="has-bottom-margin-l has-top-margin-l">Login attempt has been terminated.</p>
    </div>
  {{else}}
    <h3 class="title is-3" data-test-consent-title>
      Consent
    </h3>
    <form class="box" {{on "submit" this.handleSubmit}} data-test-consent-form>
      <p class="has-bottom-margin-s">
        In order to complete the login process, you must consent to OpenBao sharing your profile, email, address, and phone
        with the client.
      </p>
      <p class="has-bottom-margin-s">Do you want to continue?</p>
      <FormSaveButtons
        @saveButtonText="Yes"
        @isSaving={{false}}
        @cancelButtonText="No"
        @onCancel={{this.handleCancel}}
        @includeBox={{false}}
      />
    </form>
  {{/if}}
  */
  {
    "id": "oRGkx0aq",
    "block": "[[[41,[30,0,[\"didCancel\"]],[[[1,\"  \"],[10,\"h3\"],[14,0,\"title is-3\"],[14,\"data-test-consent-title\",\"\"],[12],[1,\"\\n    Consent Not Given\\n  \"],[13],[1,\"\\n  \"],[10,0],[14,0,\"box\"],[12],[1,\"\\n    \"],[10,2],[14,0,\"has-bottom-margin-l has-top-margin-l\"],[12],[1,\"Login attempt has been terminated.\"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]],[[[1,\"  \"],[10,\"h3\"],[14,0,\"title is-3\"],[14,\"data-test-consent-title\",\"\"],[12],[1,\"\\n    Consent\\n  \"],[13],[1,\"\\n  \"],[11,\"form\"],[24,0,\"box\"],[24,\"data-test-consent-form\",\"\"],[4,[38,1],[\"submit\",[30,0,[\"handleSubmit\"]]],null],[12],[1,\"\\n    \"],[10,2],[14,0,\"has-bottom-margin-s\"],[12],[1,\"\\n      In order to complete the login process, you must consent to OpenBao sharing your profile, email, address, and phone\\n      with the client.\\n    \"],[13],[1,\"\\n    \"],[10,2],[14,0,\"has-bottom-margin-s\"],[12],[1,\"Do you want to continue?\"],[13],[1,\"\\n    \"],[8,[39,2],null,[[\"@saveButtonText\",\"@isSaving\",\"@cancelButtonText\",\"@onCancel\",\"@includeBox\"],[\"Yes\",false,\"No\",[30,0,[\"handleCancel\"]],false]],null],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]]]],[],false,[\"if\",\"on\",\"form-save-buttons\"]]",
    "moduleName": "vault/templates/components/oidc-consent-block.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/oidc/assignment-form", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <form {{on "submit" (perform this.save)}}>
    <div class="box is-sideless is-fullwidth is-marginless">
      <MessageError @errorMessage={{this.errorBanner}} class="has-top-margin-s" />
      <FormFieldLabel for="name" @label="Name" />
      <input
        autocomplete="off"
        spellcheck="false"
        value={{@model.name}}
        disabled={{not @model.isNew}}
        class="input field {{if this.modelValidations.name.errors 'has-error-border'}}"
        {{on "input" this.handleOperation}}
        data-test-input="name"
      />
      {{#if this.modelValidations.name.errors}}
        <AlertInline @type="danger" @message={{join ", " this.modelValidations.name.errors}} />
      {{/if}}
      <SearchSelect
        @id="entities"
        @label="Entities"
        @placeholder="Search"
        @models={{array "identity/entity"}}
        @inputValue={{@model.entityIds}}
        @shouldRenderName={{true}}
        @onChange={{this.onEntitiesSelect}}
        @disallowNewItems={{true}}
        @fallbackComponent="string-list"
        data-test-search-select="entities"
      />
      <SearchSelect
        @id="groups"
        @label="Groups"
        @placeholder="Search"
        @models={{array "identity/group"}}
        @inputValue={{@model.groupIds}}
        @shouldRenderName={{true}}
        @onChange={{this.onGroupsSelect}}
        @disallowNewItems={{true}}
        @fallbackComponent="string-list"
        data-test-search-select="groups"
      />
    </div>
    <div class="has-top-padding-s">
      <button
        type="submit"
        class="button is-primary {{if this.save.isRunning 'is-loading'}}"
        disabled={{this.save.isRunning}}
        data-test-oidc-assignment-save
      >
        {{if @model.isNew "Create" "Update"}}
      </button>
      <button
        type="button"
        class="button has-left-margin-s"
        disabled={{this.save.isRunning}}
        {{on "click" this.cancel}}
        data-test-oidc-assignment-cancel
      >
        Cancel
      </button>
      {{#if this.modelValidations.targets.errors}}
        <AlertInline @type="danger" @message={{join ", " this.modelValidations.targets.errors}} @paddingTop={{true}} />
      {{/if}}
    </div>
  </form>
  */
  {
    "id": "Djw4o271",
    "block": "[[[11,\"form\"],[4,[38,0],[\"submit\",[28,[37,1],[[30,0,[\"save\"]]],null]],null],[12],[1,\"\\n  \"],[10,0],[14,0,\"box is-sideless is-fullwidth is-marginless\"],[12],[1,\"\\n    \"],[8,[39,2],[[24,0,\"has-top-margin-s\"]],[[\"@errorMessage\"],[[30,0,[\"errorBanner\"]]]],null],[1,\"\\n    \"],[8,[39,3],[[24,\"for\",\"name\"]],[[\"@label\"],[\"Name\"]],null],[1,\"\\n    \"],[11,\"input\"],[24,\"autocomplete\",\"off\"],[24,\"spellcheck\",\"false\"],[16,2,[30,1,[\"name\"]]],[16,\"disabled\",[28,[37,4],[[30,1,[\"isNew\"]]],null]],[16,0,[29,[\"input field \",[52,[30,0,[\"modelValidations\",\"name\",\"errors\"]],\"has-error-border\"]]]],[24,\"data-test-input\",\"name\"],[4,[38,0],[\"input\",[30,0,[\"handleOperation\"]]],null],[12],[13],[1,\"\\n\"],[41,[30,0,[\"modelValidations\",\"name\",\"errors\"]],[[[1,\"      \"],[8,[39,6],null,[[\"@type\",\"@message\"],[\"danger\",[28,[37,7],[\", \",[30,0,[\"modelValidations\",\"name\",\"errors\"]]],null]]],null],[1,\"\\n\"]],[]],null],[1,\"    \"],[8,[39,8],[[24,\"data-test-search-select\",\"entities\"]],[[\"@id\",\"@label\",\"@placeholder\",\"@models\",\"@inputValue\",\"@shouldRenderName\",\"@onChange\",\"@disallowNewItems\",\"@fallbackComponent\"],[\"entities\",\"Entities\",\"Search\",[28,[37,9],[\"identity/entity\"],null],[30,1,[\"entityIds\"]],true,[30,0,[\"onEntitiesSelect\"]],true,\"string-list\"]],null],[1,\"\\n    \"],[8,[39,8],[[24,\"data-test-search-select\",\"groups\"]],[[\"@id\",\"@label\",\"@placeholder\",\"@models\",\"@inputValue\",\"@shouldRenderName\",\"@onChange\",\"@disallowNewItems\",\"@fallbackComponent\"],[\"groups\",\"Groups\",\"Search\",[28,[37,9],[\"identity/group\"],null],[30,1,[\"groupIds\"]],true,[30,0,[\"onGroupsSelect\"]],true,\"string-list\"]],null],[1,\"\\n  \"],[13],[1,\"\\n  \"],[10,0],[14,0,\"has-top-padding-s\"],[12],[1,\"\\n    \"],[10,\"button\"],[15,0,[29,[\"button is-primary \",[52,[30,0,[\"save\",\"isRunning\"]],\"is-loading\"]]]],[15,\"disabled\",[30,0,[\"save\",\"isRunning\"]]],[14,\"data-test-oidc-assignment-save\",\"\"],[14,4,\"submit\"],[12],[1,\"\\n      \"],[1,[52,[30,1,[\"isNew\"]],\"Create\",\"Update\"]],[1,\"\\n    \"],[13],[1,\"\\n    \"],[11,\"button\"],[24,0,\"button has-left-margin-s\"],[16,\"disabled\",[30,0,[\"save\",\"isRunning\"]]],[24,\"data-test-oidc-assignment-cancel\",\"\"],[24,4,\"button\"],[4,[38,0],[\"click\",[30,0,[\"cancel\"]]],null],[12],[1,\"\\n      Cancel\\n    \"],[13],[1,\"\\n\"],[41,[30,0,[\"modelValidations\",\"targets\",\"errors\"]],[[[1,\"      \"],[8,[39,6],null,[[\"@type\",\"@message\",\"@paddingTop\"],[\"danger\",[28,[37,7],[\", \",[30,0,[\"modelValidations\",\"targets\",\"errors\"]]],null],true]],null],[1,\"\\n\"]],[]],null],[1,\"  \"],[13],[1,\"\\n\"],[13]],[\"@model\"],false,[\"on\",\"perform\",\"message-error\",\"form-field-label\",\"not\",\"if\",\"alert-inline\",\"join\",\"search-select\",\"array\"]]",
    "moduleName": "vault/templates/components/oidc/assignment-form.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/oidc/client-form", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.top>
      <nav class="breadcrumb">
        <ul>
          <li>
            <span class="sep">&#x0002f;</span>
            {{#if @model.isNew}}
              <LinkTo @route="vault.cluster.access.oidc.clients">
                Applications
              </LinkTo>
            {{else}}
              <LinkTo @route="vault.cluster.access.oidc.clients.client.details" @model={{@model.name}}>
                Details
              </LinkTo>
            {{/if}}
          </li>
        </ul>
      </nav>
    </p.top>
    <p.levelLeft>
      <h1 class="title is-3" data-test-oidc-client-title>
        {{if @model.isNew "Create" "Edit"}}
        application
      </h1>
    </p.levelLeft>
  </PageHeader>
  <form {{on "submit" (perform this.save)}}>
    <div class="box is-sideless is-fullwidth is-bottomless">
      <MessageError @errorMessage={{this.errorBanner}} class="has-top-margin-s" />
      {{#each @model.formFields as |attr|}}
        <FormField @attr={{attr}} @model={{@model}} @modelValidations={{this.modelValidations}} />
      {{/each}}
  
      {{! MORE OPTIONS TOGGLE }}
      <FormFieldGroups @renderGroup="More options" @model={{@model}} @modelValidations={{this.modelValidations}} />
    </div>
    {{! RADIO CARD + SEARCH SELECT }}
    <div class="box is-sideless is-fullwidth is-marginless has-top-padding-xxl">
      <h4 class="title is-4">Assign access</h4>
      <div class="is-flex-row">
        <RadioCard
          data-test-oidc-radio="allow-all"
          @title="Allow everyone to access existing"
          @description="All OpenBao entities can authenticate through this application."
          @icon="org"
          @value="allow_all"
          @groupValue={{this.radioCardGroupValue}}
          @onChange={{this.handleAssignmentSelection}}
        />
        <RadioCard
          data-test-oidc-radio="limited"
          @title="Limit access to selected users"
          @description="Choose or create an assignment to give access to selected entities."
          @icon="users"
          @value="limited"
          @groupValue={{this.radioCardGroupValue}}
          @onChange={{this.handleAssignmentSelection}}
        />
      </div>
      {{#if (eq this.radioCardGroupValue "limited")}}
        <SearchSelectWithModal
          @id="assignments"
          @label="Assignment name"
          @subText="Search for an existing assignment, or type a new name to create it."
          @models={{array "oidc/assignment"}}
          @inputValue={{this.modelAssignments}}
          @onChange={{this.handleAssignmentSelection}}
          @excludeOptions={{array "allow_all"}}
          @fallbackComponent="string-list"
          @modalFormTemplate="modal-form/oidc-assignment-template"
          @modalSubtext="Use assignment to specify which OpenBao entities and groups are allowed to authenticate."
        />
      {{/if}}
    </div>
    <div class="field box is-fullwidth is-bottomless">
      <div class="control">
        <button
          type="submit"
          class="button is-primary {{if this.save.isRunning 'is-loading'}}"
          disabled={{this.save.isRunning}}
          data-test-oidc-client-save
        >
          {{if @model.isNew "Create" "Update"}}
        </button>
        <button
          type="button"
          class="button has-left-margin-s"
          disabled={{this.save.isRunning}}
          {{on "click" this.cancel}}
          data-test-oidc-client-cancel
        >
          Cancel
        </button>
      </div>
      {{#if this.invalidFormAlert}}
        <div class="control">
          <AlertInline @type="danger" @paddingTop={{true}} @message={{this.invalidFormAlert}} @mimicRefresh={{true}} />
        </div>
      {{/if}}
    </div>
  </form>
  */
  {
    "id": "mZ17CJ+y",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"top\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"nav\"],[14,0,\"breadcrumb\"],[12],[1,\"\\n      \"],[10,\"ul\"],[12],[1,\"\\n        \"],[10,\"li\"],[12],[1,\"\\n          \"],[10,1],[14,0,\"sep\"],[12],[1,\"/\"],[13],[1,\"\\n\"],[41,[30,2,[\"isNew\"]],[[[1,\"            \"],[8,[39,2],null,[[\"@route\"],[\"vault.cluster.access.oidc.clients\"]],[[\"default\"],[[[[1,\"\\n              Applications\\n            \"]],[]]]]],[1,\"\\n\"]],[]],[[[1,\"            \"],[8,[39,2],null,[[\"@route\",\"@model\"],[\"vault.cluster.access.oidc.clients.client.details\",[30,2,[\"name\"]]]],[[\"default\"],[[[[1,\"\\n              Details\\n            \"]],[]]]]],[1,\"\\n\"]],[]]],[1,\"        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[14,\"data-test-oidc-client-title\",\"\"],[12],[1,\"\\n      \"],[1,[52,[30,2,[\"isNew\"]],\"Create\",\"Edit\"]],[1,\"\\n      application\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\"],[11,\"form\"],[4,[38,3],[\"submit\",[28,[37,4],[[30,0,[\"save\"]]],null]],null],[12],[1,\"\\n  \"],[10,0],[14,0,\"box is-sideless is-fullwidth is-bottomless\"],[12],[1,\"\\n    \"],[8,[39,5],[[24,0,\"has-top-margin-s\"]],[[\"@errorMessage\"],[[30,0,[\"errorBanner\"]]]],null],[1,\"\\n\"],[42,[28,[37,7],[[28,[37,7],[[30,2,[\"formFields\"]]],null]],null],null,[[[1,\"      \"],[8,[39,8],null,[[\"@attr\",\"@model\",\"@modelValidations\"],[[30,3],[30,2],[30,0,[\"modelValidations\"]]]],null],[1,\"\\n\"]],[3]],null],[1,\"\\n\"],[1,\"    \"],[8,[39,9],null,[[\"@renderGroup\",\"@model\",\"@modelValidations\"],[\"More options\",[30,2],[30,0,[\"modelValidations\"]]]],null],[1,\"\\n  \"],[13],[1,\"\\n\"],[1,\"  \"],[10,0],[14,0,\"box is-sideless is-fullwidth is-marginless has-top-padding-xxl\"],[12],[1,\"\\n    \"],[10,\"h4\"],[14,0,\"title is-4\"],[12],[1,\"Assign access\"],[13],[1,\"\\n    \"],[10,0],[14,0,\"is-flex-row\"],[12],[1,\"\\n      \"],[8,[39,10],[[24,\"data-test-oidc-radio\",\"allow-all\"]],[[\"@title\",\"@description\",\"@icon\",\"@value\",\"@groupValue\",\"@onChange\"],[\"Allow everyone to access existing\",\"All OpenBao entities can authenticate through this application.\",\"org\",\"allow_all\",[30,0,[\"radioCardGroupValue\"]],[30,0,[\"handleAssignmentSelection\"]]]],null],[1,\"\\n      \"],[8,[39,10],[[24,\"data-test-oidc-radio\",\"limited\"]],[[\"@title\",\"@description\",\"@icon\",\"@value\",\"@groupValue\",\"@onChange\"],[\"Limit access to selected users\",\"Choose or create an assignment to give access to selected entities.\",\"users\",\"limited\",[30,0,[\"radioCardGroupValue\"]],[30,0,[\"handleAssignmentSelection\"]]]],null],[1,\"\\n    \"],[13],[1,\"\\n\"],[41,[28,[37,11],[[30,0,[\"radioCardGroupValue\"]],\"limited\"],null],[[[1,\"      \"],[8,[39,12],null,[[\"@id\",\"@label\",\"@subText\",\"@models\",\"@inputValue\",\"@onChange\",\"@excludeOptions\",\"@fallbackComponent\",\"@modalFormTemplate\",\"@modalSubtext\"],[\"assignments\",\"Assignment name\",\"Search for an existing assignment, or type a new name to create it.\",[28,[37,13],[\"oidc/assignment\"],null],[30,0,[\"modelAssignments\"]],[30,0,[\"handleAssignmentSelection\"]],[28,[37,13],[\"allow_all\"],null],\"string-list\",\"modal-form/oidc-assignment-template\",\"Use assignment to specify which OpenBao entities and groups are allowed to authenticate.\"]],null],[1,\"\\n\"]],[]],null],[1,\"  \"],[13],[1,\"\\n  \"],[10,0],[14,0,\"field box is-fullwidth is-bottomless\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n      \"],[10,\"button\"],[15,0,[29,[\"button is-primary \",[52,[30,0,[\"save\",\"isRunning\"]],\"is-loading\"]]]],[15,\"disabled\",[30,0,[\"save\",\"isRunning\"]]],[14,\"data-test-oidc-client-save\",\"\"],[14,4,\"submit\"],[12],[1,\"\\n        \"],[1,[52,[30,2,[\"isNew\"]],\"Create\",\"Update\"]],[1,\"\\n      \"],[13],[1,\"\\n      \"],[11,\"button\"],[24,0,\"button has-left-margin-s\"],[16,\"disabled\",[30,0,[\"save\",\"isRunning\"]]],[24,\"data-test-oidc-client-cancel\",\"\"],[24,4,\"button\"],[4,[38,3],[\"click\",[30,0,[\"cancel\"]]],null],[12],[1,\"\\n        Cancel\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n\"],[41,[30,0,[\"invalidFormAlert\"]],[[[1,\"      \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n        \"],[8,[39,14],null,[[\"@type\",\"@paddingTop\",\"@message\",\"@mimicRefresh\"],[\"danger\",true,[30,0,[\"invalidFormAlert\"]],true]],null],[1,\"\\n      \"],[13],[1,\"\\n\"]],[]],null],[1,\"  \"],[13],[1,\"\\n\"],[13]],[\"p\",\"@model\",\"attr\"],false,[\"page-header\",\"if\",\"link-to\",\"on\",\"perform\",\"message-error\",\"each\",\"-track-array\",\"form-field\",\"form-field-groups\",\"radio-card\",\"eq\",\"search-select-with-modal\",\"array\",\"alert-inline\"]]",
    "moduleName": "vault/templates/components/oidc/client-form.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/oidc/client-list", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{#each @model as |client|}}
    <LinkedBlock
      class="list-item-row"
      @params={{array "vault.cluster.access.oidc.clients.client.details" client.name}}
      data-test-oidc-client-linked-block={{client.name}}
    >
      <div class="level is-mobile">
        <div class="level-left">
          <div>
            <Icon @name="code" class="has-text-grey-light" />
            <span class="has-text-weight-semibold is-underline">
              {{client.name}}
            </span>
            <div class="has-text-grey is-size-8">
              Client ID:
              {{client.clientId}}
            </div>
          </div>
        </div>
        <div class="level-right is-flex is-paddingless is-marginless">
          <div class="level-item">
            <PopupMenu>
              <nav class="menu">
                <ul class="menu-list">
                  <li>
                    <LinkTo
                      @route="vault.cluster.access.oidc.clients.client.details"
                      @model={{client.name}}
                      @disabled={{eq client.canRead false}}
                      data-test-oidc-client-menu-link="details"
                    >
                      Details
                    </LinkTo>
                  </li>
                  <li>
                    <LinkTo
                      @route="vault.cluster.access.oidc.clients.client.edit"
                      @model={{client.name}}
                      @disabled={{eq client.canEdit false}}
                      data-test-oidc-client-menu-link="edit"
                    >
                      Edit
                    </LinkTo>
                  </li>
                </ul>
              </nav>
            </PopupMenu>
          </div>
        </div>
      </div>
    </LinkedBlock>
  {{/each}}
  */
  {
    "id": "5oHh7e/X",
    "block": "[[[42,[28,[37,1],[[28,[37,1],[[30,1]],null]],null],null,[[[1,\"  \"],[8,[39,2],[[24,0,\"list-item-row\"],[16,\"data-test-oidc-client-linked-block\",[30,2,[\"name\"]]]],[[\"@params\"],[[28,[37,3],[\"vault.cluster.access.oidc.clients.client.details\",[30,2,[\"name\"]]],null]]],[[\"default\"],[[[[1,\"\\n    \"],[10,0],[14,0,\"level is-mobile\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"level-left\"],[12],[1,\"\\n        \"],[10,0],[12],[1,\"\\n          \"],[8,[39,4],[[24,0,\"has-text-grey-light\"]],[[\"@name\"],[\"code\"]],null],[1,\"\\n          \"],[10,1],[14,0,\"has-text-weight-semibold is-underline\"],[12],[1,\"\\n            \"],[1,[30,2,[\"name\"]]],[1,\"\\n          \"],[13],[1,\"\\n          \"],[10,0],[14,0,\"has-text-grey is-size-8\"],[12],[1,\"\\n            Client ID:\\n            \"],[1,[30,2,[\"clientId\"]]],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n      \"],[10,0],[14,0,\"level-right is-flex is-paddingless is-marginless\"],[12],[1,\"\\n        \"],[10,0],[14,0,\"level-item\"],[12],[1,\"\\n          \"],[8,[39,5],null,null,[[\"default\"],[[[[1,\"\\n            \"],[10,\"nav\"],[14,0,\"menu\"],[12],[1,\"\\n              \"],[10,\"ul\"],[14,0,\"menu-list\"],[12],[1,\"\\n                \"],[10,\"li\"],[12],[1,\"\\n                  \"],[8,[39,6],[[24,\"data-test-oidc-client-menu-link\",\"details\"]],[[\"@route\",\"@model\",\"@disabled\"],[\"vault.cluster.access.oidc.clients.client.details\",[30,2,[\"name\"]],[28,[37,7],[[30,2,[\"canRead\"]],false],null]]],[[\"default\"],[[[[1,\"\\n                    Details\\n                  \"]],[]]]]],[1,\"\\n                \"],[13],[1,\"\\n                \"],[10,\"li\"],[12],[1,\"\\n                  \"],[8,[39,6],[[24,\"data-test-oidc-client-menu-link\",\"edit\"]],[[\"@route\",\"@model\",\"@disabled\"],[\"vault.cluster.access.oidc.clients.client.edit\",[30,2,[\"name\"]],[28,[37,7],[[30,2,[\"canEdit\"]],false],null]]],[[\"default\"],[[[[1,\"\\n                    Edit\\n                  \"]],[]]]]],[1,\"\\n                \"],[13],[1,\"\\n              \"],[13],[1,\"\\n            \"],[13],[1,\"\\n          \"]],[]]]]],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[2]],null]],[\"@model\",\"client\"],false,[\"each\",\"-track-array\",\"linked-block\",\"array\",\"icon\",\"popup-menu\",\"link-to\",\"eq\"]]",
    "moduleName": "vault/templates/components/oidc/client-list.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/oidc/key-form", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.top>
      <nav class="breadcrumb">
        <ul>
          <li>
            <span class="sep">&#x0002f;</span>
            {{#if @model.isNew}}
              <LinkTo @route="vault.cluster.access.oidc.keys">
                Keys
              </LinkTo>
            {{else}}
              <LinkTo @route="vault.cluster.access.oidc.keys.key.details" @model={{@model.name}}>
                Details
              </LinkTo>
            {{/if}}
          </li>
        </ul>
      </nav>
    </p.top>
    <p.levelLeft>
      <h1 class="title is-3" data-test-oidc-key-title>
        {{if @model.isNew "Create" "Edit"}}
        key
      </h1>
    </p.levelLeft>
  </PageHeader>
  
  <form {{on "submit" (perform this.save)}}>
    <div class="box is-sideless is-fullwidth is-bottomless">
      <MessageError @errorMessage={{this.errorBanner}} class="has-top-margin-s" />
      {{#each @model.formFields as |attr|}}
        <FormField @attr={{attr}} @model={{@model}} @modelValidations={{this.modelValidations}} />
      {{/each}}
    </div>
    {{! RADIO CARD + SEARCH SELECT }}
    <div class="box is-sideless is-fullwidth is-marginless has-top-padding-xxl">
      <h4 class="title is-4">Allowed applications</h4>
      <div class="is-flex-row">
        <RadioCard
          data-test-oidc-radio="allow-all"
          @title="Allow every application to use"
          @description="All applications can use this key for authentication requests."
          @icon="globe"
          @value="allow_all"
          @groupValue={{this.radioCardGroupValue}}
          @onChange={{this.handleClientSelection}}
        />
        <RadioCard
          data-test-oidc-radio="limited"
          @title="Limit access to selected application"
          @description="Only selected applications can use this key for authentication requests."
          @icon="globe-private"
          @value="limited"
          @groupValue={{this.radioCardGroupValue}}
          @onChange={{this.handleClientSelection}}
          @disabled={{@model.isNew}}
          @disabledTooltipMessage="This option has been disabled for now. To limit access, you must first create an application that references this key."
        />
      </div>
      {{#if (eq this.radioCardGroupValue "limited")}}
        <SearchSelect
          @id="allowedClientIds"
          @label="Application name"
          @subText="Select which applications are allowed to use this key. Only applications that currently reference this key will appear in the dropdown."
          @models={{array "oidc/client"}}
          @inputValue={{@model.allowedClientIds}}
          @onChange={{this.handleClientSelection}}
          @disallowNewItems={{true}}
          @fallbackComponent="string-list"
          @passObject={{true}}
          @objectKeys={{array "clientId"}}
          @queryObject={{this.filterDropdownOptions}}
        />
      {{/if}}
    </div>
    <div class="field box is-fullwidth is-bottomless">
      <div class="control">
        <button
          type="submit"
          class="button is-primary {{if this.save.isRunning 'is-loading'}}"
          disabled={{this.save.isRunning}}
          data-test-oidc-key-save
        >
          {{if @model.isNew "Create" "Update"}}
        </button>
        <button
          type="button"
          class="button has-left-margin-s"
          disabled={{this.save.isRunning}}
          {{on "click" this.cancel}}
          data-test-oidc-key-cancel
        >
          Cancel
        </button>
      </div>
      {{#if this.invalidFormAlert}}
        <div class="control">
          <AlertInline @type="danger" @paddingTop={{true}} @message={{this.invalidFormAlert}} @mimicRefresh={{true}} />
        </div>
      {{/if}}
    </div>
  </form>
  */
  {
    "id": "I0iAzG2W",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"top\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"nav\"],[14,0,\"breadcrumb\"],[12],[1,\"\\n      \"],[10,\"ul\"],[12],[1,\"\\n        \"],[10,\"li\"],[12],[1,\"\\n          \"],[10,1],[14,0,\"sep\"],[12],[1,\"/\"],[13],[1,\"\\n\"],[41,[30,2,[\"isNew\"]],[[[1,\"            \"],[8,[39,2],null,[[\"@route\"],[\"vault.cluster.access.oidc.keys\"]],[[\"default\"],[[[[1,\"\\n              Keys\\n            \"]],[]]]]],[1,\"\\n\"]],[]],[[[1,\"            \"],[8,[39,2],null,[[\"@route\",\"@model\"],[\"vault.cluster.access.oidc.keys.key.details\",[30,2,[\"name\"]]]],[[\"default\"],[[[[1,\"\\n              Details\\n            \"]],[]]]]],[1,\"\\n\"]],[]]],[1,\"        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[14,\"data-test-oidc-key-title\",\"\"],[12],[1,\"\\n      \"],[1,[52,[30,2,[\"isNew\"]],\"Create\",\"Edit\"]],[1,\"\\n      key\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\\n\"],[11,\"form\"],[4,[38,3],[\"submit\",[28,[37,4],[[30,0,[\"save\"]]],null]],null],[12],[1,\"\\n  \"],[10,0],[14,0,\"box is-sideless is-fullwidth is-bottomless\"],[12],[1,\"\\n    \"],[8,[39,5],[[24,0,\"has-top-margin-s\"]],[[\"@errorMessage\"],[[30,0,[\"errorBanner\"]]]],null],[1,\"\\n\"],[42,[28,[37,7],[[28,[37,7],[[30,2,[\"formFields\"]]],null]],null],null,[[[1,\"      \"],[8,[39,8],null,[[\"@attr\",\"@model\",\"@modelValidations\"],[[30,3],[30,2],[30,0,[\"modelValidations\"]]]],null],[1,\"\\n\"]],[3]],null],[1,\"  \"],[13],[1,\"\\n\"],[1,\"  \"],[10,0],[14,0,\"box is-sideless is-fullwidth is-marginless has-top-padding-xxl\"],[12],[1,\"\\n    \"],[10,\"h4\"],[14,0,\"title is-4\"],[12],[1,\"Allowed applications\"],[13],[1,\"\\n    \"],[10,0],[14,0,\"is-flex-row\"],[12],[1,\"\\n      \"],[8,[39,9],[[24,\"data-test-oidc-radio\",\"allow-all\"]],[[\"@title\",\"@description\",\"@icon\",\"@value\",\"@groupValue\",\"@onChange\"],[\"Allow every application to use\",\"All applications can use this key for authentication requests.\",\"globe\",\"allow_all\",[30,0,[\"radioCardGroupValue\"]],[30,0,[\"handleClientSelection\"]]]],null],[1,\"\\n      \"],[8,[39,9],[[24,\"data-test-oidc-radio\",\"limited\"]],[[\"@title\",\"@description\",\"@icon\",\"@value\",\"@groupValue\",\"@onChange\",\"@disabled\",\"@disabledTooltipMessage\"],[\"Limit access to selected application\",\"Only selected applications can use this key for authentication requests.\",\"globe-private\",\"limited\",[30,0,[\"radioCardGroupValue\"]],[30,0,[\"handleClientSelection\"]],[30,2,[\"isNew\"]],\"This option has been disabled for now. To limit access, you must first create an application that references this key.\"]],null],[1,\"\\n    \"],[13],[1,\"\\n\"],[41,[28,[37,10],[[30,0,[\"radioCardGroupValue\"]],\"limited\"],null],[[[1,\"      \"],[8,[39,11],null,[[\"@id\",\"@label\",\"@subText\",\"@models\",\"@inputValue\",\"@onChange\",\"@disallowNewItems\",\"@fallbackComponent\",\"@passObject\",\"@objectKeys\",\"@queryObject\"],[\"allowedClientIds\",\"Application name\",\"Select which applications are allowed to use this key. Only applications that currently reference this key will appear in the dropdown.\",[28,[37,12],[\"oidc/client\"],null],[30,2,[\"allowedClientIds\"]],[30,0,[\"handleClientSelection\"]],true,\"string-list\",true,[28,[37,12],[\"clientId\"],null],[30,0,[\"filterDropdownOptions\"]]]],null],[1,\"\\n\"]],[]],null],[1,\"  \"],[13],[1,\"\\n  \"],[10,0],[14,0,\"field box is-fullwidth is-bottomless\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n      \"],[10,\"button\"],[15,0,[29,[\"button is-primary \",[52,[30,0,[\"save\",\"isRunning\"]],\"is-loading\"]]]],[15,\"disabled\",[30,0,[\"save\",\"isRunning\"]]],[14,\"data-test-oidc-key-save\",\"\"],[14,4,\"submit\"],[12],[1,\"\\n        \"],[1,[52,[30,2,[\"isNew\"]],\"Create\",\"Update\"]],[1,\"\\n      \"],[13],[1,\"\\n      \"],[11,\"button\"],[24,0,\"button has-left-margin-s\"],[16,\"disabled\",[30,0,[\"save\",\"isRunning\"]]],[24,\"data-test-oidc-key-cancel\",\"\"],[24,4,\"button\"],[4,[38,3],[\"click\",[30,0,[\"cancel\"]]],null],[12],[1,\"\\n        Cancel\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n\"],[41,[30,0,[\"invalidFormAlert\"]],[[[1,\"      \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n        \"],[8,[39,13],null,[[\"@type\",\"@paddingTop\",\"@message\",\"@mimicRefresh\"],[\"danger\",true,[30,0,[\"invalidFormAlert\"]],true]],null],[1,\"\\n      \"],[13],[1,\"\\n\"]],[]],null],[1,\"  \"],[13],[1,\"\\n\"],[13]],[\"p\",\"@model\",\"attr\"],false,[\"page-header\",\"if\",\"link-to\",\"on\",\"perform\",\"message-error\",\"each\",\"-track-array\",\"form-field\",\"radio-card\",\"eq\",\"search-select\",\"array\",\"alert-inline\"]]",
    "moduleName": "vault/templates/components/oidc/key-form.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/oidc/provider-form", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.top>
      <nav class="breadcrumb">
        <ul>
          <li>
            <span class="sep">&#x0002f;</span>
            {{#if @model.isNew}}
              <LinkTo @route="vault.cluster.access.oidc.providers">
                Providers
              </LinkTo>
            {{else}}
              <LinkTo @route="vault.cluster.access.oidc.providers.provider.details" @model={{@model.name}}>
                Details
              </LinkTo>
            {{/if}}
          </li>
        </ul>
      </nav>
    </p.top>
    <p.levelLeft>
      <h1 class="title is-3" data-test-oidc-provider-title>
        {{if @model.isNew "Create" "Edit"}}
        provider
      </h1>
    </p.levelLeft>
  </PageHeader>
  
  <form {{on "submit" (perform this.save)}} {{did-insert this.setIssuer @model}}>
    <div class="box is-sideless is-fullwidth is-bottomless">
      <MessageError @errorMessage={{this.errorBanner}} class="has-top-margin-s" />
      {{! name field }}
      <FormField
        data-test-field={{true}}
        @attr={{get @model.formFields "0"}}
        @model={{@model}}
        @modelValidations={{this.modelValidations}}
      />
      {{#let (get @model.formFields "1") as |attr|}}
        <FormFieldLabel
          for={{attr.name}}
          @label="Issuer"
          @helpText={{attr.options.helpText}}
          @subText={{attr.options.subText}}
          @docLink={{attr.options.docLink}}
        />
        <Input
          data-test-field={{true}}
          data-test-input={{attr.name}}
          id={{attr.name}}
          autocomplete="off"
          spellcheck="false"
          @value={{@model.issuer}}
          class="input {{if this.validationError 'has-error-border'}}"
          placeholder={{attr.options.placeholderText}}
        />
      {{/let}}
      {{! scopesSupported field }}
      <FormField
        data-test-field={{true}}
        @attr={{get @model.formFields "2"}}
        @model={{@model}}
        @modelValidations={{this.modelValidations}}
      />
    </div>
    {{! RADIO CARD + SEARCH SELECT }}
    <div class="box is-sideless is-fullwidth is-marginless has-top-padding-xxl">
      <h4 class="title is-4">Allowed applications</h4>
      <div class="is-flex-row">
        <RadioCard
          data-test-oidc-radio="allow-all"
          @title="Allow every application to use"
          @description="All applications can use this provider for authentication requests."
          @icon="globe"
          @value="allow_all"
          @groupValue={{this.radioCardGroupValue}}
          @onChange={{this.handleClientSelection}}
        />
        <RadioCard
          data-test-oidc-radio="limited"
          @title="Limit access to selected application"
          @description="Only selected applications can use this provider for authentication requests."
          @icon="globe-private"
          @value="limited"
          @groupValue={{this.radioCardGroupValue}}
          @onChange={{this.handleClientSelection}}
        />
      </div>
      {{#if (eq this.radioCardGroupValue "limited")}}
        <SearchSelect
          @id="allowedClientIds"
          @label="Application name"
          @models={{array "oidc/client"}}
          @inputValue={{@model.allowedClientIds}}
          @onChange={{this.handleClientSelection}}
          @disallowNewItems={{true}}
          @fallbackComponent="string-list"
          @passObject={{true}}
          @objectKeys={{array "clientId"}}
          @renderInfoTooltip={{this.renderInfoTooltip}}
        />
      {{/if}}
    </div>
    <div class="field box is-fullwidth is-bottomless">
      <div class="control">
        <button
          type="submit"
          class="button is-primary {{if this.save.isRunning 'is-loading'}}"
          disabled={{this.save.isRunning}}
          data-test-oidc-provider-save
        >
          {{if @model.isNew "Create" "Update"}}
        </button>
        <button
          type="button"
          class="button has-left-margin-s"
          disabled={{this.save.isRunning}}
          {{on "click" this.cancel}}
          data-test-oidc-provider-cancel
        >
          Cancel
        </button>
      </div>
      {{#if this.invalidFormAlert}}
        <div class="control">
          <AlertInline @type="danger" @paddingTop={{true}} @message={{this.invalidFormAlert}} @mimicRefresh={{true}} />
        </div>
      {{/if}}
    </div>
  </form>
  */
  {
    "id": "BQNIB35i",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"top\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"nav\"],[14,0,\"breadcrumb\"],[12],[1,\"\\n      \"],[10,\"ul\"],[12],[1,\"\\n        \"],[10,\"li\"],[12],[1,\"\\n          \"],[10,1],[14,0,\"sep\"],[12],[1,\"/\"],[13],[1,\"\\n\"],[41,[30,2,[\"isNew\"]],[[[1,\"            \"],[8,[39,2],null,[[\"@route\"],[\"vault.cluster.access.oidc.providers\"]],[[\"default\"],[[[[1,\"\\n              Providers\\n            \"]],[]]]]],[1,\"\\n\"]],[]],[[[1,\"            \"],[8,[39,2],null,[[\"@route\",\"@model\"],[\"vault.cluster.access.oidc.providers.provider.details\",[30,2,[\"name\"]]]],[[\"default\"],[[[[1,\"\\n              Details\\n            \"]],[]]]]],[1,\"\\n\"]],[]]],[1,\"        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[14,\"data-test-oidc-provider-title\",\"\"],[12],[1,\"\\n      \"],[1,[52,[30,2,[\"isNew\"]],\"Create\",\"Edit\"]],[1,\"\\n      provider\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\\n\"],[11,\"form\"],[4,[38,3],[\"submit\",[28,[37,4],[[30,0,[\"save\"]]],null]],null],[4,[38,5],[[30,0,[\"setIssuer\"]],[30,2]],null],[12],[1,\"\\n  \"],[10,0],[14,0,\"box is-sideless is-fullwidth is-bottomless\"],[12],[1,\"\\n    \"],[8,[39,6],[[24,0,\"has-top-margin-s\"]],[[\"@errorMessage\"],[[30,0,[\"errorBanner\"]]]],null],[1,\"\\n\"],[1,\"    \"],[8,[39,7],[[16,\"data-test-field\",true]],[[\"@attr\",\"@model\",\"@modelValidations\"],[[28,[37,8],[[30,2,[\"formFields\"]],\"0\"],null],[30,2],[30,0,[\"modelValidations\"]]]],null],[1,\"\\n\"],[44,[[28,[37,8],[[30,2,[\"formFields\"]],\"1\"],null]],[[[1,\"      \"],[8,[39,10],[[16,\"for\",[30,3,[\"name\"]]]],[[\"@label\",\"@helpText\",\"@subText\",\"@docLink\"],[\"Issuer\",[30,3,[\"options\",\"helpText\"]],[30,3,[\"options\",\"subText\"]],[30,3,[\"options\",\"docLink\"]]]],null],[1,\"\\n      \"],[8,[39,11],[[16,\"data-test-field\",true],[16,\"data-test-input\",[30,3,[\"name\"]]],[16,1,[30,3,[\"name\"]]],[24,\"autocomplete\",\"off\"],[24,\"spellcheck\",\"false\"],[16,0,[29,[\"input \",[52,[30,0,[\"validationError\"]],\"has-error-border\"]]]],[16,\"placeholder\",[30,3,[\"options\",\"placeholderText\"]]]],[[\"@value\"],[[30,2,[\"issuer\"]]]],null],[1,\"\\n\"]],[3]]],[1,\"    \"],[8,[39,7],[[16,\"data-test-field\",true]],[[\"@attr\",\"@model\",\"@modelValidations\"],[[28,[37,8],[[30,2,[\"formFields\"]],\"2\"],null],[30,2],[30,0,[\"modelValidations\"]]]],null],[1,\"\\n  \"],[13],[1,\"\\n\"],[1,\"  \"],[10,0],[14,0,\"box is-sideless is-fullwidth is-marginless has-top-padding-xxl\"],[12],[1,\"\\n    \"],[10,\"h4\"],[14,0,\"title is-4\"],[12],[1,\"Allowed applications\"],[13],[1,\"\\n    \"],[10,0],[14,0,\"is-flex-row\"],[12],[1,\"\\n      \"],[8,[39,12],[[24,\"data-test-oidc-radio\",\"allow-all\"]],[[\"@title\",\"@description\",\"@icon\",\"@value\",\"@groupValue\",\"@onChange\"],[\"Allow every application to use\",\"All applications can use this provider for authentication requests.\",\"globe\",\"allow_all\",[30,0,[\"radioCardGroupValue\"]],[30,0,[\"handleClientSelection\"]]]],null],[1,\"\\n      \"],[8,[39,12],[[24,\"data-test-oidc-radio\",\"limited\"]],[[\"@title\",\"@description\",\"@icon\",\"@value\",\"@groupValue\",\"@onChange\"],[\"Limit access to selected application\",\"Only selected applications can use this provider for authentication requests.\",\"globe-private\",\"limited\",[30,0,[\"radioCardGroupValue\"]],[30,0,[\"handleClientSelection\"]]]],null],[1,\"\\n    \"],[13],[1,\"\\n\"],[41,[28,[37,13],[[30,0,[\"radioCardGroupValue\"]],\"limited\"],null],[[[1,\"      \"],[8,[39,14],null,[[\"@id\",\"@label\",\"@models\",\"@inputValue\",\"@onChange\",\"@disallowNewItems\",\"@fallbackComponent\",\"@passObject\",\"@objectKeys\",\"@renderInfoTooltip\"],[\"allowedClientIds\",\"Application name\",[28,[37,15],[\"oidc/client\"],null],[30,2,[\"allowedClientIds\"]],[30,0,[\"handleClientSelection\"]],true,\"string-list\",true,[28,[37,15],[\"clientId\"],null],[30,0,[\"renderInfoTooltip\"]]]],null],[1,\"\\n\"]],[]],null],[1,\"  \"],[13],[1,\"\\n  \"],[10,0],[14,0,\"field box is-fullwidth is-bottomless\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n      \"],[10,\"button\"],[15,0,[29,[\"button is-primary \",[52,[30,0,[\"save\",\"isRunning\"]],\"is-loading\"]]]],[15,\"disabled\",[30,0,[\"save\",\"isRunning\"]]],[14,\"data-test-oidc-provider-save\",\"\"],[14,4,\"submit\"],[12],[1,\"\\n        \"],[1,[52,[30,2,[\"isNew\"]],\"Create\",\"Update\"]],[1,\"\\n      \"],[13],[1,\"\\n      \"],[11,\"button\"],[24,0,\"button has-left-margin-s\"],[16,\"disabled\",[30,0,[\"save\",\"isRunning\"]]],[24,\"data-test-oidc-provider-cancel\",\"\"],[24,4,\"button\"],[4,[38,3],[\"click\",[30,0,[\"cancel\"]]],null],[12],[1,\"\\n        Cancel\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n\"],[41,[30,0,[\"invalidFormAlert\"]],[[[1,\"      \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n        \"],[8,[39,16],null,[[\"@type\",\"@paddingTop\",\"@message\",\"@mimicRefresh\"],[\"danger\",true,[30,0,[\"invalidFormAlert\"]],true]],null],[1,\"\\n      \"],[13],[1,\"\\n\"]],[]],null],[1,\"  \"],[13],[1,\"\\n\"],[13]],[\"p\",\"@model\",\"attr\"],false,[\"page-header\",\"if\",\"link-to\",\"on\",\"perform\",\"did-insert\",\"message-error\",\"form-field\",\"get\",\"let\",\"form-field-label\",\"input\",\"radio-card\",\"eq\",\"search-select\",\"array\",\"alert-inline\"]]",
    "moduleName": "vault/templates/components/oidc/provider-form.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/oidc/provider-list", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{#each @model as |provider|}}
    <LinkedBlock
      class="list-item-row"
      @params={{array "vault.cluster.access.oidc.providers.provider.details" provider.name}}
      data-test-oidc-provider-linked-block={{provider.name}}
    >
      <div class="level is-mobile">
        <div class="level-left">
          <div>
            <Icon @name="provider" class="has-text-grey-light" />
            <span class="has-text-weight-semibold is-underline">
              {{provider.name}}
            </span>
            <div class="has-text-grey is-size-8">
              Issuer:
              {{provider.issuer}}
            </div>
          </div>
        </div>
        <div class="level-right is-flex is-paddingless is-marginless">
          <div class="level-item">
            <PopupMenu>
              <nav class="menu">
                <ul class="menu-list">
                  <li>
                    <LinkTo
                      @route="vault.cluster.access.oidc.providers.provider.details"
                      @model={{provider.name}}
                      @disabled={{eq provider.canRead false}}
                      data-test-oidc-provider-menu-link="details"
                    >
                      Details
                    </LinkTo>
                  </li>
                  <li>
                    <LinkTo
                      @route="vault.cluster.access.oidc.providers.provider.edit"
                      @model={{provider.name}}
                      @disabled={{not provider.canEdit}}
                      data-test-oidc-provider-menu-link="edit"
                    >
                      Edit
                    </LinkTo>
                  </li>
                </ul>
              </nav>
            </PopupMenu>
          </div>
        </div>
      </div>
    </LinkedBlock>
  {{/each}}
  */
  {
    "id": "RjWBKfdS",
    "block": "[[[42,[28,[37,1],[[28,[37,1],[[30,1]],null]],null],null,[[[1,\"  \"],[8,[39,2],[[24,0,\"list-item-row\"],[16,\"data-test-oidc-provider-linked-block\",[30,2,[\"name\"]]]],[[\"@params\"],[[28,[37,3],[\"vault.cluster.access.oidc.providers.provider.details\",[30,2,[\"name\"]]],null]]],[[\"default\"],[[[[1,\"\\n    \"],[10,0],[14,0,\"level is-mobile\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"level-left\"],[12],[1,\"\\n        \"],[10,0],[12],[1,\"\\n          \"],[8,[39,4],[[24,0,\"has-text-grey-light\"]],[[\"@name\"],[\"provider\"]],null],[1,\"\\n          \"],[10,1],[14,0,\"has-text-weight-semibold is-underline\"],[12],[1,\"\\n            \"],[1,[30,2,[\"name\"]]],[1,\"\\n          \"],[13],[1,\"\\n          \"],[10,0],[14,0,\"has-text-grey is-size-8\"],[12],[1,\"\\n            Issuer:\\n            \"],[1,[30,2,[\"issuer\"]]],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n      \"],[10,0],[14,0,\"level-right is-flex is-paddingless is-marginless\"],[12],[1,\"\\n        \"],[10,0],[14,0,\"level-item\"],[12],[1,\"\\n          \"],[8,[39,5],null,null,[[\"default\"],[[[[1,\"\\n            \"],[10,\"nav\"],[14,0,\"menu\"],[12],[1,\"\\n              \"],[10,\"ul\"],[14,0,\"menu-list\"],[12],[1,\"\\n                \"],[10,\"li\"],[12],[1,\"\\n                  \"],[8,[39,6],[[24,\"data-test-oidc-provider-menu-link\",\"details\"]],[[\"@route\",\"@model\",\"@disabled\"],[\"vault.cluster.access.oidc.providers.provider.details\",[30,2,[\"name\"]],[28,[37,7],[[30,2,[\"canRead\"]],false],null]]],[[\"default\"],[[[[1,\"\\n                    Details\\n                  \"]],[]]]]],[1,\"\\n                \"],[13],[1,\"\\n                \"],[10,\"li\"],[12],[1,\"\\n                  \"],[8,[39,6],[[24,\"data-test-oidc-provider-menu-link\",\"edit\"]],[[\"@route\",\"@model\",\"@disabled\"],[\"vault.cluster.access.oidc.providers.provider.edit\",[30,2,[\"name\"]],[28,[37,8],[[30,2,[\"canEdit\"]]],null]]],[[\"default\"],[[[[1,\"\\n                    Edit\\n                  \"]],[]]]]],[1,\"\\n                \"],[13],[1,\"\\n              \"],[13],[1,\"\\n            \"],[13],[1,\"\\n          \"]],[]]]]],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[2]],null]],[\"@model\",\"provider\"],false,[\"each\",\"-track-array\",\"linked-block\",\"array\",\"icon\",\"popup-menu\",\"link-to\",\"eq\",\"not\"]]",
    "moduleName": "vault/templates/components/oidc/provider-list.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/oidc/scope-form", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.top>
      <nav class="breadcrumb" aria-label="breadcrumbs">
        <ul>
          <li>
            <span class="sep">&#x0002f;</span>
            {{#if @model.isNew}}
              <LinkTo @route={{"vault.cluster.access.oidc.scopes"}}>
                Scopes
              </LinkTo>
            {{else}}
              {{! You're editing in this view }}
              <LinkTo @route={{"vault.cluster.access.oidc.scopes.scope.details"}} @model={{@model.name}}>
                Details
              </LinkTo>
            {{/if}}
          </li>
        </ul>
      </nav>
    </p.top>
    <p.levelLeft>
      <h1 class="title is-3" data-test-oidc-scope-title>
        {{if @model.isNew "Create" "Edit"}}
        scope
      </h1>
    </p.levelLeft>
  </PageHeader>
  
  <form {{on "submit" (perform this.save)}}>
    <div class="box is-sideless is-fullwidth is-marginless">
      <p class="has-bottom-margin-l">
        Providers may reference a set of scopes to make specific identity information available as claims
      </p>
      <MessageError @errorMessage={{this.errorBanner}} class="has-top-margin-s" />
      {{#each @model.formFields as |field|}}
        <FormField @attr={{field}} @model={{@model}} @modelValidations={{this.modelValidations}} />
      {{/each}}
      <p class="is-size-9 has-text-grey has-bottom-margin-l">
        You can use Alt+Tab (Option+Tab on MacOS) in the code editor to skip to the next field. See
        <button
          type="button"
          class="text-button has-text-info"
          {{on "click" (fn (mut this.showTemplateModal))}}
          data-test-oidc-scope-example
        >
          example template
        </button>.
      </p>
    </div>
    <div class="has-top-margin-l has-bottom-margin-l">
      <button
        type="submit"
        class="button is-primary {{if this.save.isRunning 'is-loading'}}"
        disabled={{this.save.isRunning}}
        data-test-oidc-scope-save
      >
        {{if @model.isNew "Create" "Update"}}
      </button>
      <button
        type="button"
        class="button has-left-margin-s"
        disabled={{this.save.isRunning}}
        {{on "click" this.cancel}}
        data-test-oidc-scope-cancel
      >
        Cancel
      </button>
    </div>
    {{#if this.invalidFormAlert}}
      <div class="control">
        <AlertInline @type="danger" @paddingTop={{true}} @message={{this.invalidFormAlert}} @mimicRefresh={{true}} />
      </div>
    {{/if}}
  </form>
  
  <Modal
    @title="Scope template"
    @onClose={{fn (mut this.showTemplateModal) false}}
    @isActive={{this.showTemplateModal}}
    @showCloseButton={{true}}
  >
    <section class="modal-card-body">
      <div class="is-flex-between is-flex-center has-bottom-margin-s">
        <p data-test-modal-copy>
          Example of a JSON template for scopes:
        </p>
        <CopyButton
          class="button is-transparent"
          @clipboardText={{this.exampleTemplate}}
          @buttonType="button"
          @success={{fn (set-flash-message "Example template copied!")}}
        >
          <Icon @name="clipboard-copy" aria-label="Copy" />
        </CopyButton>
      </div>
      {{! code-mirror modifier does not render value initially in wormhole until focus event fires }}
      {{! wait until the Modal is rendered and then show the JsonEditor }}
      {{#if this.showTemplateModal}}
        <JsonEditor @value={{this.exampleTemplate}} @mode="ruby" @readOnly={{true}} @showToolbar={{false}} />
      {{/if}}
      <p class="has-top-margin-m">
        The full list of template parameters can be found
        <DocLink @path="/docs/concepts/oidc-provider#scopes">
          here.
        </DocLink>
      </p>
    </section>
    <div class="modal-card-head has-border-top-light">
      <button type="button" class="button" {{on "click" (fn (mut this.showTemplateModal) false)}} data-test-close-modal>
        Close
      </button>
    </div>
  </Modal>
  */
  {
    "id": "5/w8Lzg7",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"top\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"nav\"],[14,0,\"breadcrumb\"],[14,\"aria-label\",\"breadcrumbs\"],[12],[1,\"\\n      \"],[10,\"ul\"],[12],[1,\"\\n        \"],[10,\"li\"],[12],[1,\"\\n          \"],[10,1],[14,0,\"sep\"],[12],[1,\"/\"],[13],[1,\"\\n\"],[41,[30,2,[\"isNew\"]],[[[1,\"            \"],[8,[39,2],null,[[\"@route\"],[\"vault.cluster.access.oidc.scopes\"]],[[\"default\"],[[[[1,\"\\n              Scopes\\n            \"]],[]]]]],[1,\"\\n\"]],[]],[[[1,\"            \"],[8,[39,2],null,[[\"@route\",\"@model\"],[\"vault.cluster.access.oidc.scopes.scope.details\",[30,2,[\"name\"]]]],[[\"default\"],[[[[1,\"\\n              Details\\n            \"]],[]]]]],[1,\"\\n\"]],[]]],[1,\"        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[14,\"data-test-oidc-scope-title\",\"\"],[12],[1,\"\\n      \"],[1,[52,[30,2,[\"isNew\"]],\"Create\",\"Edit\"]],[1,\"\\n      scope\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\\n\"],[11,\"form\"],[4,[38,3],[\"submit\",[28,[37,4],[[30,0,[\"save\"]]],null]],null],[12],[1,\"\\n  \"],[10,0],[14,0,\"box is-sideless is-fullwidth is-marginless\"],[12],[1,\"\\n    \"],[10,2],[14,0,\"has-bottom-margin-l\"],[12],[1,\"\\n      Providers may reference a set of scopes to make specific identity information available as claims\\n    \"],[13],[1,\"\\n    \"],[8,[39,5],[[24,0,\"has-top-margin-s\"]],[[\"@errorMessage\"],[[30,0,[\"errorBanner\"]]]],null],[1,\"\\n\"],[42,[28,[37,7],[[28,[37,7],[[30,2,[\"formFields\"]]],null]],null],null,[[[1,\"      \"],[8,[39,8],null,[[\"@attr\",\"@model\",\"@modelValidations\"],[[30,3],[30,2],[30,0,[\"modelValidations\"]]]],null],[1,\"\\n\"]],[3]],null],[1,\"    \"],[10,2],[14,0,\"is-size-9 has-text-grey has-bottom-margin-l\"],[12],[1,\"\\n      You can use Alt+Tab (Option+Tab on MacOS) in the code editor to skip to the next field. See\\n      \"],[11,\"button\"],[24,0,\"text-button has-text-info\"],[24,\"data-test-oidc-scope-example\",\"\"],[24,4,\"button\"],[4,[38,3],[\"click\",[28,[37,9],[[28,[37,10],[[30,0,[\"showTemplateModal\"]]],null]],null]],null],[12],[1,\"\\n        example template\\n      \"],[13],[1,\".\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n  \"],[10,0],[14,0,\"has-top-margin-l has-bottom-margin-l\"],[12],[1,\"\\n    \"],[10,\"button\"],[15,0,[29,[\"button is-primary \",[52,[30,0,[\"save\",\"isRunning\"]],\"is-loading\"]]]],[15,\"disabled\",[30,0,[\"save\",\"isRunning\"]]],[14,\"data-test-oidc-scope-save\",\"\"],[14,4,\"submit\"],[12],[1,\"\\n      \"],[1,[52,[30,2,[\"isNew\"]],\"Create\",\"Update\"]],[1,\"\\n    \"],[13],[1,\"\\n    \"],[11,\"button\"],[24,0,\"button has-left-margin-s\"],[16,\"disabled\",[30,0,[\"save\",\"isRunning\"]]],[24,\"data-test-oidc-scope-cancel\",\"\"],[24,4,\"button\"],[4,[38,3],[\"click\",[30,0,[\"cancel\"]]],null],[12],[1,\"\\n      Cancel\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"],[41,[30,0,[\"invalidFormAlert\"]],[[[1,\"    \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n      \"],[8,[39,11],null,[[\"@type\",\"@paddingTop\",\"@message\",\"@mimicRefresh\"],[\"danger\",true,[30,0,[\"invalidFormAlert\"]],true]],null],[1,\"\\n    \"],[13],[1,\"\\n\"]],[]],null],[13],[1,\"\\n\\n\"],[8,[39,12],null,[[\"@title\",\"@onClose\",\"@isActive\",\"@showCloseButton\"],[\"Scope template\",[28,[37,9],[[28,[37,10],[[30,0,[\"showTemplateModal\"]]],null],false],null],[30,0,[\"showTemplateModal\"]],true]],[[\"default\"],[[[[1,\"\\n  \"],[10,\"section\"],[14,0,\"modal-card-body\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"is-flex-between is-flex-center has-bottom-margin-s\"],[12],[1,\"\\n      \"],[10,2],[14,\"data-test-modal-copy\",\"\"],[12],[1,\"\\n        Example of a JSON template for scopes:\\n      \"],[13],[1,\"\\n      \"],[8,[39,13],[[24,0,\"button is-transparent\"]],[[\"@clipboardText\",\"@buttonType\",\"@success\"],[[30,0,[\"exampleTemplate\"]],\"button\",[28,[37,9],[[28,[37,14],[\"Example template copied!\"],null]],null]]],[[\"default\"],[[[[1,\"\\n        \"],[8,[39,15],[[24,\"aria-label\",\"Copy\"]],[[\"@name\"],[\"clipboard-copy\"]],null],[1,\"\\n      \"]],[]]]]],[1,\"\\n    \"],[13],[1,\"\\n\"],[41,[30,0,[\"showTemplateModal\"]],[[[1,\"      \"],[8,[39,16],null,[[\"@value\",\"@mode\",\"@readOnly\",\"@showToolbar\"],[[30,0,[\"exampleTemplate\"]],\"ruby\",true,false]],null],[1,\"\\n\"]],[]],null],[1,\"    \"],[10,2],[14,0,\"has-top-margin-m\"],[12],[1,\"\\n      The full list of template parameters can be found\\n      \"],[8,[39,17],null,[[\"@path\"],[\"/docs/concepts/oidc-provider#scopes\"]],[[\"default\"],[[[[1,\"\\n        here.\\n      \"]],[]]]]],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n  \"],[10,0],[14,0,\"modal-card-head has-border-top-light\"],[12],[1,\"\\n    \"],[11,\"button\"],[24,0,\"button\"],[24,\"data-test-close-modal\",\"\"],[24,4,\"button\"],[4,[38,3],[\"click\",[28,[37,9],[[28,[37,10],[[30,0,[\"showTemplateModal\"]]],null],false],null]],null],[12],[1,\"\\n      Close\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[\"p\",\"@model\",\"field\"],false,[\"page-header\",\"if\",\"link-to\",\"on\",\"perform\",\"message-error\",\"each\",\"-track-array\",\"form-field\",\"fn\",\"mut\",\"alert-inline\",\"modal\",\"copy-button\",\"set-flash-message\",\"icon\",\"json-editor\",\"doc-link\"]]",
    "moduleName": "vault/templates/components/oidc/scope-form.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/pagination-controls", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <div class="is-flex-between is-flex-center" ...attributes>
    <div class="is-fullwidth is-flex-center">
      <p class="has-text-grey has-left-margin-l" data-test-page-display-info>
        {{this.displayInfo}}
      </p>
    </div>
    <div class="is-fullwidth is-flex-v-centered">
      <button
        type="button"
        class="button is-flat has-short-padding"
        disabled={{eq this.page 1}}
        data-test-previous-page
        {{on "click" (fn this.changePage (sub this.page 1))}}
      >
        <Icon @name="chevron-left" />
        Previous
      </button>
      {{#each this.pages as |page|}}
        <button
          type="button"
          class="button is-flat has-left-margin-xxs {{if (eq this.page page) 'is-primary is-underlined is-active'}}"
          data-test-page={{page}}
          {{on "click" (fn this.changePage page)}}
        >
          {{page}}
        </button>
      {{/each}}
      {{#if this.hasMorePages}}
        <span class="has-text-grey has-left-margin-m" data-test-more-pages>...</span>
      {{/if}}
      <button
        type="button"
        class="button is-flat has-short-padding has-left-margin-l"
        disabled={{eq this.page this.totalPages}}
        data-test-next-page
        {{on "click" (fn this.changePage (add this.page 1))}}
      >
        Next
        <Icon @name="chevron-right" />
      </button>
    </div>
    {{! intentionally empty to place buttons in the middle }}
    <div class="is-fullwidth"></div>
  </div>
  */
  {
    "id": "NQ2xL5r3",
    "block": "[[[11,0],[24,0,\"is-flex-between is-flex-center\"],[17,1],[12],[1,\"\\n  \"],[10,0],[14,0,\"is-fullwidth is-flex-center\"],[12],[1,\"\\n    \"],[10,2],[14,0,\"has-text-grey has-left-margin-l\"],[14,\"data-test-page-display-info\",\"\"],[12],[1,\"\\n      \"],[1,[30,0,[\"displayInfo\"]]],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n  \"],[10,0],[14,0,\"is-fullwidth is-flex-v-centered\"],[12],[1,\"\\n    \"],[11,\"button\"],[24,0,\"button is-flat has-short-padding\"],[16,\"disabled\",[28,[37,0],[[30,0,[\"page\"]],1],null]],[24,\"data-test-previous-page\",\"\"],[24,4,\"button\"],[4,[38,1],[\"click\",[28,[37,2],[[30,0,[\"changePage\"]],[28,[37,3],[[30,0,[\"page\"]],1],null]],null]],null],[12],[1,\"\\n      \"],[8,[39,4],null,[[\"@name\"],[\"chevron-left\"]],null],[1,\"\\n      Previous\\n    \"],[13],[1,\"\\n\"],[42,[28,[37,6],[[28,[37,6],[[30,0,[\"pages\"]]],null]],null],null,[[[1,\"      \"],[11,\"button\"],[16,0,[29,[\"button is-flat has-left-margin-xxs \",[52,[28,[37,0],[[30,0,[\"page\"]],[30,2]],null],\"is-primary is-underlined is-active\"]]]],[16,\"data-test-page\",[30,2]],[24,4,\"button\"],[4,[38,1],[\"click\",[28,[37,2],[[30,0,[\"changePage\"]],[30,2]],null]],null],[12],[1,\"\\n        \"],[1,[30,2]],[1,\"\\n      \"],[13],[1,\"\\n\"]],[2]],null],[41,[30,0,[\"hasMorePages\"]],[[[1,\"      \"],[10,1],[14,0,\"has-text-grey has-left-margin-m\"],[14,\"data-test-more-pages\",\"\"],[12],[1,\"...\"],[13],[1,\"\\n\"]],[]],null],[1,\"    \"],[11,\"button\"],[24,0,\"button is-flat has-short-padding has-left-margin-l\"],[16,\"disabled\",[28,[37,0],[[30,0,[\"page\"]],[30,0,[\"totalPages\"]]],null]],[24,\"data-test-next-page\",\"\"],[24,4,\"button\"],[4,[38,1],[\"click\",[28,[37,2],[[30,0,[\"changePage\"]],[28,[37,8],[[30,0,[\"page\"]],1],null]],null]],null],[12],[1,\"\\n      Next\\n      \"],[8,[39,4],null,[[\"@name\"],[\"chevron-right\"]],null],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"],[1,\"  \"],[10,0],[14,0,\"is-fullwidth\"],[12],[13],[1,\"\\n\"],[13]],[\"&attrs\",\"page\"],false,[\"eq\",\"on\",\"fn\",\"sub\",\"icon\",\"each\",\"-track-array\",\"if\",\"add\"]]",
    "moduleName": "vault/templates/components/pagination-controls.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/pgp-file", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <div class="level is-mobile">
    <div class="level-left">
      <label class="is-label" data-test-pgp-label>
        {{#if this.label}}
          {{this.label}}
        {{else}}
          PGP KEY
          {{if (not-eq this.index "") (inc this.index)}}
        {{/if}}
      </label>
    </div>
    <div class="level-right">
      <div class="control is-flex">
        <input
          data-test-text-toggle
          id={{concat "useText-" this.elementId}}
          type="checkbox"
          name={{concat "useText-" this.elementId}}
          class="switch is-rounded is-success is-small"
          checked={{this.key.enterAsText}}
          onchange={{action (toggle "enterAsText" this.key)}}
        />
        <label for={{concat "useText-" this.elementId}}>
          Enter as text
        </label>
      </div>
    </div>
  </div>
  <div class="field">
    {{#if this.key.enterAsText}}
      <div class="control">
        <textarea
          class="textarea"
          oninput={{action "updateData"}}
          data-test-pgp-file-textarea={{true}}
        >{{this.key.value}}</textarea>
      </div>
      <p class="help has-text-grey">
        {{#if this.textareaHelpText}}
          {{this.textareaHelpText}}
        {{else}}
          Enter a base64-encoded key
        {{/if}}
      </p>
    {{else}}
      <div class="control is-expanded">
        <div class="file">
          <div class="file-label is-fullwidth">
            <input
              id="file-input"
              class="file-input"
              type="file"
              onchange={{action "pickedFile"}}
              data-test-pgp-file-input={{true}}
            />
            <span class="file-cta is-fullwidth">
              <span class="file-icon has-text-grey-dark">
                <Icon @name="file" />
              </span>
              <label for="file-input" class="file-label has-text-grey-dark" data-test-pgp-file-input-label={{true}}>
                {{#if this.key.filename}}
                  {{this.key.filename}}
                {{else}}
                  Choose a file&hellip;
                {{/if}}
              </label>
              {{#if this.key.filename}}
                <button type="button" class="file-delete-button" {{action "clearKey"}} data-test-pgp-clear={{true}}>
                  <Icon @name="x" aria-label="Close" />
                </button>
              {{/if}}
            </span>
          </div>
        </div>
      </div>
      <p class="help has-text-grey">
        {{#if this.fileHelpText}}
          {{this.fileHelpText}}
        {{else}}
          Select a PGP key from your computer
        {{/if}}
      </p>
    {{/if}}
  </div>
  */
  {
    "id": "yuvHe14r",
    "block": "[[[10,0],[14,0,\"level is-mobile\"],[12],[1,\"\\n  \"],[10,0],[14,0,\"level-left\"],[12],[1,\"\\n    \"],[10,\"label\"],[14,0,\"is-label\"],[14,\"data-test-pgp-label\",\"\"],[12],[1,\"\\n\"],[41,[30,0,[\"label\"]],[[[1,\"        \"],[1,[30,0,[\"label\"]]],[1,\"\\n\"]],[]],[[[1,\"        PGP KEY\\n        \"],[1,[52,[28,[37,1],[[30,0,[\"index\"]],\"\"],null],[28,[37,2],[[30,0,[\"index\"]]],null]]],[1,\"\\n\"]],[]]],[1,\"    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n  \"],[10,0],[14,0,\"level-right\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"control is-flex\"],[12],[1,\"\\n      \"],[10,\"input\"],[14,\"data-test-text-toggle\",\"\"],[15,1,[28,[37,3],[\"useText-\",[30,0,[\"elementId\"]]],null]],[15,3,[28,[37,3],[\"useText-\",[30,0,[\"elementId\"]]],null]],[14,0,\"switch is-rounded is-success is-small\"],[15,\"checked\",[30,0,[\"key\",\"enterAsText\"]]],[15,\"onchange\",[28,[37,4],[[30,0],[28,[37,5],[\"enterAsText\",[30,0,[\"key\"]]],null]],null]],[14,4,\"checkbox\"],[12],[13],[1,\"\\n      \"],[10,\"label\"],[15,\"for\",[28,[37,3],[\"useText-\",[30,0,[\"elementId\"]]],null]],[12],[1,\"\\n        Enter as text\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"],[13],[1,\"\\n\"],[10,0],[14,0,\"field\"],[12],[1,\"\\n\"],[41,[30,0,[\"key\",\"enterAsText\"]],[[[1,\"    \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n      \"],[10,\"textarea\"],[14,0,\"textarea\"],[15,\"oninput\",[28,[37,4],[[30,0],\"updateData\"],null]],[15,\"data-test-pgp-file-textarea\",true],[12],[1,[30,0,[\"key\",\"value\"]]],[13],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,2],[14,0,\"help has-text-grey\"],[12],[1,\"\\n\"],[41,[30,0,[\"textareaHelpText\"]],[[[1,\"        \"],[1,[30,0,[\"textareaHelpText\"]]],[1,\"\\n\"]],[]],[[[1,\"        Enter a base64-encoded key\\n\"]],[]]],[1,\"    \"],[13],[1,\"\\n\"]],[]],[[[1,\"    \"],[10,0],[14,0,\"control is-expanded\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"file\"],[12],[1,\"\\n        \"],[10,0],[14,0,\"file-label is-fullwidth\"],[12],[1,\"\\n          \"],[10,\"input\"],[14,1,\"file-input\"],[14,0,\"file-input\"],[15,\"onchange\",[28,[37,4],[[30,0],\"pickedFile\"],null]],[15,\"data-test-pgp-file-input\",true],[14,4,\"file\"],[12],[13],[1,\"\\n          \"],[10,1],[14,0,\"file-cta is-fullwidth\"],[12],[1,\"\\n            \"],[10,1],[14,0,\"file-icon has-text-grey-dark\"],[12],[1,\"\\n              \"],[8,[39,6],null,[[\"@name\"],[\"file\"]],null],[1,\"\\n            \"],[13],[1,\"\\n            \"],[10,\"label\"],[14,\"for\",\"file-input\"],[14,0,\"file-label has-text-grey-dark\"],[15,\"data-test-pgp-file-input-label\",true],[12],[1,\"\\n\"],[41,[30,0,[\"key\",\"filename\"]],[[[1,\"                \"],[1,[30,0,[\"key\",\"filename\"]]],[1,\"\\n\"]],[]],[[[1,\"                Choose a file…\\n\"]],[]]],[1,\"            \"],[13],[1,\"\\n\"],[41,[30,0,[\"key\",\"filename\"]],[[[1,\"              \"],[11,\"button\"],[24,0,\"file-delete-button\"],[16,\"data-test-pgp-clear\",true],[24,4,\"button\"],[4,[38,4],[[30,0],\"clearKey\"],null],[12],[1,\"\\n                \"],[8,[39,6],[[24,\"aria-label\",\"Close\"]],[[\"@name\"],[\"x\"]],null],[1,\"\\n              \"],[13],[1,\"\\n\"]],[]],null],[1,\"          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,2],[14,0,\"help has-text-grey\"],[12],[1,\"\\n\"],[41,[30,0,[\"fileHelpText\"]],[[[1,\"        \"],[1,[30,0,[\"fileHelpText\"]]],[1,\"\\n\"]],[]],[[[1,\"        Select a PGP key from your computer\\n\"]],[]]],[1,\"    \"],[13],[1,\"\\n\"]],[]]],[13]],[],false,[\"if\",\"not-eq\",\"inc\",\"concat\",\"action\",\"toggle\",\"icon\"]]",
    "moduleName": "vault/templates/components/pgp-file.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/pgp-list", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{#each this.listData as |key index|}}
    <PgpFile @key={{key}} @index={{index}} @onChange={{action "setKey"}} />
  {{else}}
    <p class="has-text-grey" data-test-empty-text>
      Enter a number of Key Shares to enter PGP keys.
    </p>
  {{/each}}
  */
  {
    "id": "/ZNRDDyZ",
    "block": "[[[42,[28,[37,1],[[28,[37,1],[[30,0,[\"listData\"]]],null]],null],null,[[[1,\"  \"],[8,[39,2],null,[[\"@key\",\"@index\",\"@onChange\"],[[30,1],[30,2],[28,[37,3],[[30,0],\"setKey\"],null]]],null],[1,\"\\n\"]],[1,2]],[[[1,\"  \"],[10,2],[14,0,\"has-text-grey\"],[14,\"data-test-empty-text\",\"\"],[12],[1,\"\\n    Enter a number of Key Shares to enter PGP keys.\\n  \"],[13],[1,\"\\n\"]],[]]]],[\"key\",\"index\"],false,[\"each\",\"-track-array\",\"pgp-file\",\"action\"]]",
    "moduleName": "vault/templates/components/pgp-list.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/radial-progress", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <circle
    data-test-path
    class="path"
    cx={{this.centerValue}}
    cy={{this.centerValue}}
    r={{this.r}}
    fill="none"
    stroke-width={{this.strokeWidth}}
  ></circle>
  <circle
    data-test-progress
    class="progress-fill"
    cx={{this.centerValue}}
    cy={{this.centerValue}}
    r={{this.r}}
    fill="none"
    stroke-width={{this.strokeWidth}}
    stroke-dasharray={{this.c}}
    stroke-dashoffset={{this.dashArrayOffset}}
  ></circle>
  */
  {
    "id": "973pumSc",
    "block": "[[[10,\"circle\"],[14,\"data-test-path\",\"\"],[14,0,\"path\"],[15,\"cx\",[30,0,[\"centerValue\"]]],[15,\"cy\",[30,0,[\"centerValue\"]]],[15,\"r\",[30,0,[\"r\"]]],[14,\"fill\",\"none\"],[15,\"stroke-width\",[30,0,[\"strokeWidth\"]]],[12],[13],[1,\"\\n\"],[10,\"circle\"],[14,\"data-test-progress\",\"\"],[14,0,\"progress-fill\"],[15,\"cx\",[30,0,[\"centerValue\"]]],[15,\"cy\",[30,0,[\"centerValue\"]]],[15,\"r\",[30,0,[\"r\"]]],[14,\"fill\",\"none\"],[15,\"stroke-width\",[30,0,[\"strokeWidth\"]]],[15,\"stroke-dasharray\",[30,0,[\"c\"]]],[15,\"stroke-dashoffset\",[30,0,[\"dashArrayOffset\"]]],[12],[13]],[],false,[]]",
    "moduleName": "vault/templates/components/radial-progress.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/raft-join", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <AlertBanner @type="warning" class="is-marginless" @title="OpenBao is sealed" />
  {{#if this.showJoinForm}}
    <div class="box is-marginless is-shadowless">
      <h2 class="title is-5" data-test-join-header>
        Join an existing Raft cluster
      </h2>
      <EditForm
        @model={{compute (action "newModel")}}
        @saveButtonText="Join"
        @cancelButtonText="Back"
        @onCancel={{action (mut this.showJoinForm) false}}
        @onSave={{transition-to "vault.cluster.unseal"}}
        @flashEnabled={{false}}
        @includeBox={{false}}
      />
    </div>
  {{else}}
    <form onsubmit={{action "advanceFirstScreen"}} data-test-join-choice>
      <div class="box is-marginless is-shadowless">
        <h2 class="title is-6">
          This server is configured to use Raft Storage.
          <br />
          <br />
          How do you want to get started?
        </h2>
        <div class="vlt-radio is-block">
          <RadioButton
            id="join"
            name="setup-pref"
            @value="join"
            @groupValue={{this.preference}}
            @onChange={{fn (mut this.preference)}}
          />
          <label for="join"></label>
          Join an existing Raft cluster
        </div>
        <div class="vlt-radio is-block">
          <RadioButton
            id="init"
            name="setup-pref"
            @value="init"
            @groupValue={{this.preference}}
            @onChange={{fn (mut this.preference)}}
          />
          <label for="init" data-test-join-init></label>
          Create a new Raft cluster
        </div>
      </div>
      <div class="box is-marginless is-shadowless">
        <button type="submit" class="button is-primary" data-test-next>
          Next
        </button>
      </div>
    </form>
  {{/if}}
  */
  {
    "id": "8asz2O05",
    "block": "[[[8,[39,0],[[24,0,\"is-marginless\"]],[[\"@type\",\"@title\"],[\"warning\",\"OpenBao is sealed\"]],null],[1,\"\\n\"],[41,[30,0,[\"showJoinForm\"]],[[[1,\"  \"],[10,0],[14,0,\"box is-marginless is-shadowless\"],[12],[1,\"\\n    \"],[10,\"h2\"],[14,0,\"title is-5\"],[14,\"data-test-join-header\",\"\"],[12],[1,\"\\n      Join an existing Raft cluster\\n    \"],[13],[1,\"\\n    \"],[8,[39,2],null,[[\"@model\",\"@saveButtonText\",\"@cancelButtonText\",\"@onCancel\",\"@onSave\",\"@flashEnabled\",\"@includeBox\"],[[28,[37,3],[[28,[37,4],[[30,0],\"newModel\"],null]],null],\"Join\",\"Back\",[28,[37,4],[[30,0],[28,[37,5],[[30,0,[\"showJoinForm\"]]],null],false],null],[28,[37,6],[\"vault.cluster.unseal\"],null],false,false]],null],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]],[[[1,\"  \"],[10,\"form\"],[15,\"onsubmit\",[28,[37,4],[[30,0],\"advanceFirstScreen\"],null]],[14,\"data-test-join-choice\",\"\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"box is-marginless is-shadowless\"],[12],[1,\"\\n      \"],[10,\"h2\"],[14,0,\"title is-6\"],[12],[1,\"\\n        This server is configured to use Raft Storage.\\n        \"],[10,\"br\"],[12],[13],[1,\"\\n        \"],[10,\"br\"],[12],[13],[1,\"\\n        How do you want to get started?\\n      \"],[13],[1,\"\\n      \"],[10,0],[14,0,\"vlt-radio is-block\"],[12],[1,\"\\n        \"],[8,[39,7],[[24,1,\"join\"],[24,3,\"setup-pref\"]],[[\"@value\",\"@groupValue\",\"@onChange\"],[\"join\",[30,0,[\"preference\"]],[28,[37,8],[[28,[37,5],[[30,0,[\"preference\"]]],null]],null]]],null],[1,\"\\n        \"],[10,\"label\"],[14,\"for\",\"join\"],[12],[13],[1,\"\\n        Join an existing Raft cluster\\n      \"],[13],[1,\"\\n      \"],[10,0],[14,0,\"vlt-radio is-block\"],[12],[1,\"\\n        \"],[8,[39,7],[[24,1,\"init\"],[24,3,\"setup-pref\"]],[[\"@value\",\"@groupValue\",\"@onChange\"],[\"init\",[30,0,[\"preference\"]],[28,[37,8],[[28,[37,5],[[30,0,[\"preference\"]]],null]],null]]],null],[1,\"\\n        \"],[10,\"label\"],[14,\"for\",\"init\"],[14,\"data-test-join-init\",\"\"],[12],[13],[1,\"\\n        Create a new Raft cluster\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"box is-marginless is-shadowless\"],[12],[1,\"\\n      \"],[10,\"button\"],[14,0,\"button is-primary\"],[14,\"data-test-next\",\"\"],[14,4,\"submit\"],[12],[1,\"\\n        Next\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]]]],[],false,[\"alert-banner\",\"if\",\"edit-form\",\"compute\",\"action\",\"mut\",\"transition-to\",\"radio-button\",\"fn\"]]",
    "moduleName": "vault/templates/components/raft-join.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/raft-storage-overview", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.levelLeft>
      <h1 class="title is-3">
        Raft Storage
      </h1>
    </p.levelLeft>
  </PageHeader>
  <Toolbar>
    <ToolbarActions>
      <BasicDropdown @class="popup-menu" @horizontalPosition="auto-right" @verticalPosition="below" as |D|>
        <D.Trigger
          data-test-popup-menu-trigger="true"
          class={{concat "toolbar-link" (if D.isOpen " is-active")}}
          @htmlTag="button"
        >
          Snapshots
          <Chevron @direction="down" @isButton={{true}} />
        </D.Trigger>
        <D.Content @defaultClass="popup-menu-content">
          <nav class="box menu" aria-label="snapshots actions">
            <ul class="menu-list">
              <li class="action">
                {{#if this.useServiceWorker}}
                  <ExternalLink
                    @href="/v1/sys/storage/raft/snapshot"
                    @sameTab={{true}}
                    onclick={{queue (action "downloadViaServiceWorker") (action D.actions.close)}}
                  >
                    Download
                  </ExternalLink>
                {{else}}
                  <button
                    type="button"
                    class="link is-ghost"
                    onclick={{queue (action "downloadSnapshot") (action D.actions.close)}}
                  >
                    Download
                  </button>
                {{/if}}
              </li>
              <li class="action">
                <LinkTo @route="vault.cluster.storage-restore">
                  Restore
                </LinkTo>
              </li>
            </ul>
          </nav>
        </D.Content>
      </BasicDropdown>
    </ToolbarActions>
  </Toolbar>
  
  <table class="vlt-table is-fullwidth">
    <caption class="is-collapsed">Raft servers</caption>
    <thead class="has-text-weight-semibold">
      <tr>
        <th scope="col">Address</th>
        <th scope="col">Voter</th>
        <th scope="col"></th>
      </tr>
    </thead>
    <tbody>
      {{#each @model as |server|}}
        <tr data-raft-row>
          <td>
            {{server.address}}
            {{#if server.leader}}
              <span class="tag">Leader</span>
            {{/if}}
          </td>
          <td>
  
            {{#if server.voter}}
              <Icon @name="check-circle" aria-label="Yes" class="icon-true has-text-success" />
            {{else}}
              <Icon @name="x-square" aria-label="No" class="icon-false" />
            {{/if}}
          </td>
          <td class="middle no-padding has-text-right">
            <PopupMenu>
              <Confirm as |c|>
                <nav aria-label="remove peer">
                  <ul>
                    <li class="action">
                      <c.Message
                        @id={{server.nodeId}}
                        @onConfirm={{action "removePeer" server}}
                        @triggerText="Remove Peer"
                        @confirmButtonText="Remove"
                        @title={{concat "Remove " server.nodeId "?"}}
                        @message="This will remove the server from the raft cluster."
                      />
                    </li>
                  </ul>
                </nav>
              </Confirm>
            </PopupMenu>
          </td>
        </tr>
      {{/each}}
    </tbody>
  </table>
  */
  {
    "id": "P5NUQox1",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n      Raft Storage\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\"],[8,[39,1],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[39,2],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,3],null,[[\"@class\",\"@horizontalPosition\",\"@verticalPosition\"],[\"popup-menu\",\"auto-right\",\"below\"]],[[\"default\"],[[[[1,\"\\n      \"],[8,[30,2,[\"Trigger\"]],[[24,\"data-test-popup-menu-trigger\",\"true\"],[16,0,[28,[37,4],[\"toolbar-link\",[52,[30,2,[\"isOpen\"]],\" is-active\"]],null]]],[[\"@htmlTag\"],[\"button\"]],[[\"default\"],[[[[1,\"\\n        Snapshots\\n        \"],[8,[39,6],null,[[\"@direction\",\"@isButton\"],[\"down\",true]],null],[1,\"\\n      \"]],[]]]]],[1,\"\\n      \"],[8,[30,2,[\"Content\"]],null,[[\"@defaultClass\"],[\"popup-menu-content\"]],[[\"default\"],[[[[1,\"\\n        \"],[10,\"nav\"],[14,0,\"box menu\"],[14,\"aria-label\",\"snapshots actions\"],[12],[1,\"\\n          \"],[10,\"ul\"],[14,0,\"menu-list\"],[12],[1,\"\\n            \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n\"],[41,[30,0,[\"useServiceWorker\"]],[[[1,\"                \"],[8,[39,7],[[16,\"onclick\",[28,[37,8],[[28,[37,9],[[30,0],\"downloadViaServiceWorker\"],null],[28,[37,9],[[30,0],[30,2,[\"actions\",\"close\"]]],null]],null]]],[[\"@href\",\"@sameTab\"],[\"/v1/sys/storage/raft/snapshot\",true]],[[\"default\"],[[[[1,\"\\n                  Download\\n                \"]],[]]]]],[1,\"\\n\"]],[]],[[[1,\"                \"],[10,\"button\"],[14,0,\"link is-ghost\"],[15,\"onclick\",[28,[37,8],[[28,[37,9],[[30,0],\"downloadSnapshot\"],null],[28,[37,9],[[30,0],[30,2,[\"actions\",\"close\"]]],null]],null]],[14,4,\"button\"],[12],[1,\"\\n                  Download\\n                \"],[13],[1,\"\\n\"]],[]]],[1,\"            \"],[13],[1,\"\\n            \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n              \"],[8,[39,10],null,[[\"@route\"],[\"vault.cluster.storage-restore\"]],[[\"default\"],[[[[1,\"\\n                Restore\\n              \"]],[]]]]],[1,\"\\n            \"],[13],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"]],[]]]]],[1,\"\\n    \"]],[2]]]]],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]]]]],[1,\"\\n\\n\"],[10,\"table\"],[14,0,\"vlt-table is-fullwidth\"],[12],[1,\"\\n  \"],[10,\"caption\"],[14,0,\"is-collapsed\"],[12],[1,\"Raft servers\"],[13],[1,\"\\n  \"],[10,\"thead\"],[14,0,\"has-text-weight-semibold\"],[12],[1,\"\\n    \"],[10,\"tr\"],[12],[1,\"\\n      \"],[10,\"th\"],[14,\"scope\",\"col\"],[12],[1,\"Address\"],[13],[1,\"\\n      \"],[10,\"th\"],[14,\"scope\",\"col\"],[12],[1,\"Voter\"],[13],[1,\"\\n      \"],[10,\"th\"],[14,\"scope\",\"col\"],[12],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n  \"],[10,\"tbody\"],[12],[1,\"\\n\"],[42,[28,[37,12],[[28,[37,12],[[30,3]],null]],null],null,[[[1,\"      \"],[10,\"tr\"],[14,\"data-raft-row\",\"\"],[12],[1,\"\\n        \"],[10,\"td\"],[12],[1,\"\\n          \"],[1,[30,4,[\"address\"]]],[1,\"\\n\"],[41,[30,4,[\"leader\"]],[[[1,\"            \"],[10,1],[14,0,\"tag\"],[12],[1,\"Leader\"],[13],[1,\"\\n\"]],[]],null],[1,\"        \"],[13],[1,\"\\n        \"],[10,\"td\"],[12],[1,\"\\n\\n\"],[41,[30,4,[\"voter\"]],[[[1,\"            \"],[8,[39,13],[[24,\"aria-label\",\"Yes\"],[24,0,\"icon-true has-text-success\"]],[[\"@name\"],[\"check-circle\"]],null],[1,\"\\n\"]],[]],[[[1,\"            \"],[8,[39,13],[[24,\"aria-label\",\"No\"],[24,0,\"icon-false\"]],[[\"@name\"],[\"x-square\"]],null],[1,\"\\n\"]],[]]],[1,\"        \"],[13],[1,\"\\n        \"],[10,\"td\"],[14,0,\"middle no-padding has-text-right\"],[12],[1,\"\\n          \"],[8,[39,14],null,null,[[\"default\"],[[[[1,\"\\n            \"],[8,[39,15],null,null,[[\"default\"],[[[[1,\"\\n              \"],[10,\"nav\"],[14,\"aria-label\",\"remove peer\"],[12],[1,\"\\n                \"],[10,\"ul\"],[12],[1,\"\\n                  \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                    \"],[8,[30,5,[\"Message\"]],null,[[\"@id\",\"@onConfirm\",\"@triggerText\",\"@confirmButtonText\",\"@title\",\"@message\"],[[30,4,[\"nodeId\"]],[28,[37,9],[[30,0],\"removePeer\",[30,4]],null],\"Remove Peer\",\"Remove\",[28,[37,4],[\"Remove \",[30,4,[\"nodeId\"]],\"?\"],null],\"This will remove the server from the raft cluster.\"]],null],[1,\"\\n                  \"],[13],[1,\"\\n                \"],[13],[1,\"\\n              \"],[13],[1,\"\\n            \"]],[5]]]]],[1,\"\\n          \"]],[]]]]],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n\"]],[4]],null],[1,\"  \"],[13],[1,\"\\n\"],[13]],[\"p\",\"D\",\"@model\",\"server\",\"c\"],false,[\"page-header\",\"toolbar\",\"toolbar-actions\",\"basic-dropdown\",\"concat\",\"if\",\"chevron\",\"external-link\",\"queue\",\"action\",\"link-to\",\"each\",\"-track-array\",\"icon\",\"popup-menu\",\"confirm\"]]",
    "moduleName": "vault/templates/components/raft-storage-overview.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/raft-storage-restore", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.top>
      <nav class="key-value-header breadcrumb">
        <ul>
          <li>
            <span class="sep">&#x0002f;</span>
            <LinkTo @route="vault.cluster.storage">
              Raft Storage
            </LinkTo>
          </li>
        </ul>
      </nav>
    </p.top>
    <p.levelLeft>
      <h1 class="title is-3">
        Restore Snapshot
      </h1>
    </p.levelLeft>
  </PageHeader>
  
  <form {{action (perform this.restore this.file) on="submit"}}>
    <MessageError @errors={{this.errors}} />
  
    {{#if this.isUploading}}
      <div class="box is-sideless is-fullwidth is-marginless">
        <AlertBanner
          @type="warning"
          @title="Uploading your file..."
          @message="Raft snapshots can be very large files. Uploading the snapshot may take some time."
        />
      </div>
      <div class="box is-fullwidth is-shadowless">
        <button type="button" class="button" onclick={{action "cancelUpload"}}>
          Cancel upload
        </button>
      </div>
    {{else}}
      <div class="box is-sideless is-fullwidth is-marginless">
        <AlertBanner
          @type="warning"
          @title="This might take a while"
          @message="Raft snapshots can be very large files. Uploading the snapshot may take some time."
        />
        <FileToArrayBuffer @onChange={{action (mut this.file)}} />
        <div class="b-checkbox">
          <input
            type="checkbox"
            id="force-restore"
            class="styled"
            checked={{this.forceRestore}}
            onchange={{action (mut this.forceRestore) value="target.checked"}}
          />
          <label for="force-restore" class="is-label">
            Force restore
          </label>
          <p class="checkbox-help-text">
            Bypass checks to ensure the AutoUnseal or Shamir keys are consistent with the snapshot data.
          </p>
        </div>
      </div>
      <FormSaveButtons
        @saveButtonText="Restore"
        @isSaving={{this.restore.isRunning}}
        @cancelLinkParams={{array "vault.cluster.storage"}}
      />
    {{/if}}
  </form>
  */
  {
    "id": "lt40slg8",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"top\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"nav\"],[14,0,\"key-value-header breadcrumb\"],[12],[1,\"\\n      \"],[10,\"ul\"],[12],[1,\"\\n        \"],[10,\"li\"],[12],[1,\"\\n          \"],[10,1],[14,0,\"sep\"],[12],[1,\"/\"],[13],[1,\"\\n          \"],[8,[39,1],null,[[\"@route\"],[\"vault.cluster.storage\"]],[[\"default\"],[[[[1,\"\\n            Raft Storage\\n          \"]],[]]]]],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n      Restore Snapshot\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\\n\"],[11,\"form\"],[4,[38,2],[[30,0],[28,[37,3],[[30,0,[\"restore\"]],[30,0,[\"file\"]]],null]],[[\"on\"],[\"submit\"]]],[12],[1,\"\\n  \"],[8,[39,4],null,[[\"@errors\"],[[30,0,[\"errors\"]]]],null],[1,\"\\n\\n\"],[41,[30,0,[\"isUploading\"]],[[[1,\"    \"],[10,0],[14,0,\"box is-sideless is-fullwidth is-marginless\"],[12],[1,\"\\n      \"],[8,[39,6],null,[[\"@type\",\"@title\",\"@message\"],[\"warning\",\"Uploading your file...\",\"Raft snapshots can be very large files. Uploading the snapshot may take some time.\"]],null],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"box is-fullwidth is-shadowless\"],[12],[1,\"\\n      \"],[10,\"button\"],[14,0,\"button\"],[15,\"onclick\",[28,[37,2],[[30,0],\"cancelUpload\"],null]],[14,4,\"button\"],[12],[1,\"\\n        Cancel upload\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n\"]],[]],[[[1,\"    \"],[10,0],[14,0,\"box is-sideless is-fullwidth is-marginless\"],[12],[1,\"\\n      \"],[8,[39,6],null,[[\"@type\",\"@title\",\"@message\"],[\"warning\",\"This might take a while\",\"Raft snapshots can be very large files. Uploading the snapshot may take some time.\"]],null],[1,\"\\n      \"],[8,[39,7],null,[[\"@onChange\"],[[28,[37,2],[[30,0],[28,[37,8],[[30,0,[\"file\"]]],null]],null]]],null],[1,\"\\n      \"],[10,0],[14,0,\"b-checkbox\"],[12],[1,\"\\n        \"],[10,\"input\"],[14,1,\"force-restore\"],[14,0,\"styled\"],[15,\"checked\",[30,0,[\"forceRestore\"]]],[15,\"onchange\",[28,[37,2],[[30,0],[28,[37,8],[[30,0,[\"forceRestore\"]]],null]],[[\"value\"],[\"target.checked\"]]]],[14,4,\"checkbox\"],[12],[13],[1,\"\\n        \"],[10,\"label\"],[14,\"for\",\"force-restore\"],[14,0,\"is-label\"],[12],[1,\"\\n          Force restore\\n        \"],[13],[1,\"\\n        \"],[10,2],[14,0,\"checkbox-help-text\"],[12],[1,\"\\n          Bypass checks to ensure the AutoUnseal or Shamir keys are consistent with the snapshot data.\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n    \"],[8,[39,9],null,[[\"@saveButtonText\",\"@isSaving\",\"@cancelLinkParams\"],[\"Restore\",[30,0,[\"restore\",\"isRunning\"]],[28,[37,10],[\"vault.cluster.storage\"],null]]],null],[1,\"\\n\"]],[]]],[13]],[\"p\"],false,[\"page-header\",\"link-to\",\"action\",\"perform\",\"message-error\",\"if\",\"alert-banner\",\"file-to-array-buffer\",\"mut\",\"form-save-buttons\",\"array\"]]",
    "moduleName": "vault/templates/components/raft-storage-restore.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/role-aws-edit", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.top>
      <KeyValueHeader
        @baseKey={{this.model}}
        @path="vault.cluster.secrets.backend.list"
        @mode={{this.mode}}
        @root={{this.root}}
        @showCurrent={{true}}
      />
    </p.top>
    <p.levelLeft>
      <h1 class="title is-3" data-test-secret-header="true">
        {{#if (eq this.mode "create")}}
          Create an AWS Role
        {{else if (eq this.mode "edit")}}
          Edit AWS Role
          <code>{{this.model.id}}</code>
        {{else}}
          AWS Role
          <code>{{this.model.id}}</code>
        {{/if}}
      </h1>
    </p.levelLeft>
  </PageHeader>
  
  {{#if (eq this.mode "show")}}
    <Toolbar>
      <ToolbarActions>
        {{#if this.model.canDelete}}
          <ConfirmAction @buttonClasses="toolbar-link" @onConfirmAction={{action "delete"}}>
            Delete role
          </ConfirmAction>
          <div class="toolbar-separator"></div>
        {{/if}}
        {{#if this.model.canGenerate}}
          <ToolbarSecretLink @secret={{this.model.id}} @mode="credentials" data-test-backend-credentials="iam">
            Generate credentials
          </ToolbarSecretLink>
        {{/if}}
        {{#if this.model.canEdit}}
          <ToolbarSecretLink @secret={{this.model.id}} @mode="edit" @replace={{true}}>
            Edit role
          </ToolbarSecretLink>
        {{/if}}
      </ToolbarActions>
    </Toolbar>
  {{/if}}
  
  {{#if (or (eq this.mode "edit") (eq this.mode "create"))}}
    <form onsubmit={{action "createOrUpdate" "create"}}>
      <div class="box is-sideless is-fullwidth is-marginless">
        <MessageError @model={{this.model}} />
        <NamespaceReminder @mode={{this.mode}} @noun="AWS role" />
        {{#if (gt this.model.credentialTypes.length 1)}}
          <AlertBanner
            @type="warning"
            @message="This role has more than one credential_type, currently: {{join ', ' this.model.credentialTypes}}.
              Multiple credential types is deprecated and you must choose one in order to save this role."
          />
        {{/if}}
        {{#each (if (eq this.mode "edit") (drop 1 (or this.model.fields (array))) this.model.fields) as |attr|}}
          <FormField data-test-field={{true}} @attr={{attr}} @model={{@model}} />
        {{/each}}
      </div>
      <div class="field is-grouped-split box is-fullwidth is-bottomless">
        <div class="control">
          <button type="submit" disabled={{this.buttonDisabled}} class="button is-primary" data-test-role-aws-create={{true}}>
            {{#if (eq this.mode "create")}}
              Create role
            {{else if (eq this.mode "edit")}}
              Save
            {{/if}}
          </button>
          <SecretLink @mode={{if (eq this.mode "create") "list" "show"}} class="button" @secret={{this.model.id}}>
            Cancel
          </SecretLink>
        </div>
      </div>
    </form>
  {{else}}
    <div class="box is-fullwidth is-sideless is-paddingless is-marginless">
      {{#if (gt this.model.credentialTypes.length 1)}}
        <AlertBanner
          @type="warning"
          @message="This role has more than one credential_type, currently: {{join ', ' this.model.credentialTypes}}.
            When you next edit this role, you will have to choose a single credential type."
        />
      {{/if}}
      {{#each this.model.fields as |attr|}}
        {{#if (eq attr.name "policyDocument")}}
          <InfoTableRow
            @label={{capitalize (or attr.options.label (humanize (dasherize attr.name)))}}
            @value={{this.model.policyDocument}}
          >
            <pre><code class="is-paddingless">{{stringify (jsonify this.model.policyDocument)}}</code></pre>
          </InfoTableRow>
        {{else}}
          <InfoTableRow
            @label={{capitalize (or attr.options.label (humanize (dasherize attr.name)))}}
            @value={{get this.model attr.name}}
          />
        {{/if}}
      {{/each}}
    </div>
  {{/if}}
  */
  {
    "id": "4qpLj7Kl",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"top\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,1],null,[[\"@baseKey\",\"@path\",\"@mode\",\"@root\",\"@showCurrent\"],[[30,0,[\"model\"]],\"vault.cluster.secrets.backend.list\",[30,0,[\"mode\"]],[30,0,[\"root\"]],true]],null],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[14,\"data-test-secret-header\",\"true\"],[12],[1,\"\\n\"],[41,[28,[37,3],[[30,0,[\"mode\"]],\"create\"],null],[[[1,\"        Create an AWS Role\\n\"]],[]],[[[41,[28,[37,3],[[30,0,[\"mode\"]],\"edit\"],null],[[[1,\"        Edit AWS Role\\n        \"],[10,\"code\"],[12],[1,[30,0,[\"model\",\"id\"]]],[13],[1,\"\\n\"]],[]],[[[1,\"        AWS Role\\n        \"],[10,\"code\"],[12],[1,[30,0,[\"model\",\"id\"]]],[13],[1,\"\\n      \"]],[]]]],[]]],[1,\"    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\\n\"],[41,[28,[37,3],[[30,0,[\"mode\"]],\"show\"],null],[[[1,\"  \"],[8,[39,4],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,5],null,null,[[\"default\"],[[[[1,\"\\n\"],[41,[30,0,[\"model\",\"canDelete\"]],[[[1,\"        \"],[8,[39,6],null,[[\"@buttonClasses\",\"@onConfirmAction\"],[\"toolbar-link\",[28,[37,7],[[30,0],\"delete\"],null]]],[[\"default\"],[[[[1,\"\\n          Delete role\\n        \"]],[]]]]],[1,\"\\n        \"],[10,0],[14,0,\"toolbar-separator\"],[12],[13],[1,\"\\n\"]],[]],null],[41,[30,0,[\"model\",\"canGenerate\"]],[[[1,\"        \"],[8,[39,8],[[24,\"data-test-backend-credentials\",\"iam\"]],[[\"@secret\",\"@mode\"],[[30,0,[\"model\",\"id\"]],\"credentials\"]],[[\"default\"],[[[[1,\"\\n          Generate credentials\\n        \"]],[]]]]],[1,\"\\n\"]],[]],null],[41,[30,0,[\"model\",\"canEdit\"]],[[[1,\"        \"],[8,[39,8],null,[[\"@secret\",\"@mode\",\"@replace\"],[[30,0,[\"model\",\"id\"]],\"edit\",true]],[[\"default\"],[[[[1,\"\\n          Edit role\\n        \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"    \"]],[]]]]],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"\\n\"],[41,[28,[37,9],[[28,[37,3],[[30,0,[\"mode\"]],\"edit\"],null],[28,[37,3],[[30,0,[\"mode\"]],\"create\"],null]],null],[[[1,\"  \"],[10,\"form\"],[15,\"onsubmit\",[28,[37,7],[[30,0],\"createOrUpdate\",\"create\"],null]],[12],[1,\"\\n    \"],[10,0],[14,0,\"box is-sideless is-fullwidth is-marginless\"],[12],[1,\"\\n      \"],[8,[39,10],null,[[\"@model\"],[[30,0,[\"model\"]]]],null],[1,\"\\n      \"],[8,[39,11],null,[[\"@mode\",\"@noun\"],[[30,0,[\"mode\"]],\"AWS role\"]],null],[1,\"\\n\"],[41,[28,[37,12],[[30,0,[\"model\",\"credentialTypes\",\"length\"]],1],null],[[[1,\"        \"],[8,[39,13],null,[[\"@type\",\"@message\"],[\"warning\",[29,[\"This role has more than one credential_type, currently: \",[28,[37,14],[\", \",[30,0,[\"model\",\"credentialTypes\"]]],null],\".\\n            Multiple credential types is deprecated and you must choose one in order to save this role.\"]]]],null],[1,\"\\n\"]],[]],null],[42,[28,[37,16],[[28,[37,16],[[52,[28,[37,3],[[30,0,[\"mode\"]],\"edit\"],null],[28,[37,17],[1,[28,[37,9],[[30,0,[\"model\",\"fields\"]],[28,[37,18],null,null]],null]],null],[30,0,[\"model\",\"fields\"]]]],null]],null],null,[[[1,\"        \"],[8,[39,19],[[16,\"data-test-field\",true]],[[\"@attr\",\"@model\"],[[30,2],[30,3]]],null],[1,\"\\n\"]],[2]],null],[1,\"    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"field is-grouped-split box is-fullwidth is-bottomless\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n        \"],[10,\"button\"],[15,\"disabled\",[30,0,[\"buttonDisabled\"]]],[14,0,\"button is-primary\"],[15,\"data-test-role-aws-create\",true],[14,4,\"submit\"],[12],[1,\"\\n\"],[41,[28,[37,3],[[30,0,[\"mode\"]],\"create\"],null],[[[1,\"            Create role\\n\"]],[]],[[[41,[28,[37,3],[[30,0,[\"mode\"]],\"edit\"],null],[[[1,\"            Save\\n          \"]],[]],null]],[]]],[1,\"        \"],[13],[1,\"\\n        \"],[8,[39,20],[[24,0,\"button\"]],[[\"@mode\",\"@secret\"],[[52,[28,[37,3],[[30,0,[\"mode\"]],\"create\"],null],\"list\",\"show\"],[30,0,[\"model\",\"id\"]]]],[[\"default\"],[[[[1,\"\\n          Cancel\\n        \"]],[]]]]],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]],[[[1,\"  \"],[10,0],[14,0,\"box is-fullwidth is-sideless is-paddingless is-marginless\"],[12],[1,\"\\n\"],[41,[28,[37,12],[[30,0,[\"model\",\"credentialTypes\",\"length\"]],1],null],[[[1,\"      \"],[8,[39,13],null,[[\"@type\",\"@message\"],[\"warning\",[29,[\"This role has more than one credential_type, currently: \",[28,[37,14],[\", \",[30,0,[\"model\",\"credentialTypes\"]]],null],\".\\n          When you next edit this role, you will have to choose a single credential type.\"]]]],null],[1,\"\\n\"]],[]],null],[42,[28,[37,16],[[28,[37,16],[[30,0,[\"model\",\"fields\"]]],null]],null],null,[[[41,[28,[37,3],[[30,4,[\"name\"]],\"policyDocument\"],null],[[[1,\"        \"],[8,[39,21],null,[[\"@label\",\"@value\"],[[28,[37,22],[[28,[37,9],[[30,4,[\"options\",\"label\"]],[28,[37,23],[[28,[37,24],[[30,4,[\"name\"]]],null]],null]],null]],null],[30,0,[\"model\",\"policyDocument\"]]]],[[\"default\"],[[[[1,\"\\n          \"],[10,\"pre\"],[12],[10,\"code\"],[14,0,\"is-paddingless\"],[12],[1,[28,[35,25],[[28,[37,26],[[30,0,[\"model\",\"policyDocument\"]]],null]],null]],[13],[13],[1,\"\\n        \"]],[]]]]],[1,\"\\n\"]],[]],[[[1,\"        \"],[8,[39,21],null,[[\"@label\",\"@value\"],[[28,[37,22],[[28,[37,9],[[30,4,[\"options\",\"label\"]],[28,[37,23],[[28,[37,24],[[30,4,[\"name\"]]],null]],null]],null]],null],[28,[37,27],[[30,0,[\"model\"]],[30,4,[\"name\"]]],null]]],null],[1,\"\\n\"]],[]]]],[4]],null],[1,\"  \"],[13],[1,\"\\n\"]],[]]]],[\"p\",\"attr\",\"@model\",\"attr\"],false,[\"page-header\",\"key-value-header\",\"if\",\"eq\",\"toolbar\",\"toolbar-actions\",\"confirm-action\",\"action\",\"toolbar-secret-link\",\"or\",\"message-error\",\"namespace-reminder\",\"gt\",\"alert-banner\",\"join\",\"each\",\"-track-array\",\"drop\",\"array\",\"form-field\",\"secret-link\",\"info-table-row\",\"capitalize\",\"humanize\",\"dasherize\",\"stringify\",\"jsonify\",\"get\"]]",
    "moduleName": "vault/templates/components/role-aws-edit.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/role-ssh-edit", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.top>
      <KeyValueHeader
        @baseKey={{this.model}}
        @path="vault.cluster.secrets.backend.list"
        @mode={{this.mode}}
        @root={{this.root}}
        @showCurrent={{true}}
      />
    </p.top>
    <p.levelLeft>
      <h1 class="title is-3" data-test-secret-header="true">
        {{#if (eq this.mode "create")}}
          Create an SSH role
        {{else if (eq this.mode "edit")}}
          Edit SSH role
        {{else}}
          SSH role
          <code>{{this.model.id}}</code>
        {{/if}}
      </h1>
    </p.levelLeft>
  </PageHeader>
  
  {{#if (eq this.mode "show")}}
    <Toolbar>
      <ToolbarActions>
        {{#if this.model.canDelete}}
          <ConfirmAction @buttonClasses="toolbar-link" @onConfirmAction={{action "delete"}}>
            Delete role
          </ConfirmAction>
          <div class="toolbar-separator"></div>
        {{/if}}
        {{#if (eq this.model.keyType "otp")}}
          <ToolbarSecretLink
            @secret={{this.model.id}}
            @mode="credentials"
            data-test-backend-credentials={{true}}
            @replace={{true}}
          >
            Generate Credential
          </ToolbarSecretLink>
        {{else}}
          <ToolbarSecretLink @secret={{this.model.id}} @mode="sign" data-test-backend-credentials={{true}} @replace={{true}}>
            Sign Keys
          </ToolbarSecretLink>
        {{/if}}
        {{#if (or this.model.canUpdate this.model.canDelete)}}
          <ToolbarSecretLink @secret={{this.model.id}} @mode="edit" data-test-edit-link={{true}} @replace={{true}}>
            Edit role
          </ToolbarSecretLink>
        {{/if}}
      </ToolbarActions>
    </Toolbar>
  {{/if}}
  
  {{#if (or (eq this.mode "edit") (eq this.mode "create"))}}
    <form onsubmit={{action "createOrUpdate" "create"}}>
      <div class="box is-sideless is-fullwidth is-marginless">
        <MessageError @model={{this.model}} />
        <NamespaceReminder @mode={{this.mode}} @noun="SSH role" />
        <FormFieldGroupsLoop @model={{this.model}} @mode={{this.mode}} />
      </div>
      <div class="field is-grouped-split box is-fullwidth is-bottomless">
        <div class="control">
          <button type="submit" disabled={{this.buttonDisabled}} class="button is-primary" data-test-role-ssh-create={{true}}>
            {{#if (eq this.mode "create")}}
              Create role
            {{else if (eq this.mode "edit")}}
              Save
            {{/if}}
          </button>
          <SecretLink @mode={{if (eq this.mode "create") "list" "show"}} class="button" @secret={{this.model.id}}>
            Cancel
          </SecretLink>
        </div>
      </div>
    </form>
  {{else}}
    <div class="box is-fullwidth is-sideless is-paddingless is-marginless">
      {{#each this.model.showFields as |attr|}}
        {{#if (eq attr.type "object")}}
          <InfoTableRow
            @label={{capitalize (or attr.options.label (humanize (dasherize attr.name)))}}
            @value={{stringify (get this.model attr.name)}}
          />
        {{else}}
          <InfoTableRow
            @label={{capitalize (or attr.options.label (humanize (dasherize attr.name)))}}
            @value={{get this.model attr.name}}
          />
        {{/if}}
      {{/each}}
    </div>
  {{/if}}
  */
  {
    "id": "7ZRE2qg+",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"top\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,1],null,[[\"@baseKey\",\"@path\",\"@mode\",\"@root\",\"@showCurrent\"],[[30,0,[\"model\"]],\"vault.cluster.secrets.backend.list\",[30,0,[\"mode\"]],[30,0,[\"root\"]],true]],null],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[14,\"data-test-secret-header\",\"true\"],[12],[1,\"\\n\"],[41,[28,[37,3],[[30,0,[\"mode\"]],\"create\"],null],[[[1,\"        Create an SSH role\\n\"]],[]],[[[41,[28,[37,3],[[30,0,[\"mode\"]],\"edit\"],null],[[[1,\"        Edit SSH role\\n\"]],[]],[[[1,\"        SSH role\\n        \"],[10,\"code\"],[12],[1,[30,0,[\"model\",\"id\"]]],[13],[1,\"\\n      \"]],[]]]],[]]],[1,\"    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\\n\"],[41,[28,[37,3],[[30,0,[\"mode\"]],\"show\"],null],[[[1,\"  \"],[8,[39,4],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,5],null,null,[[\"default\"],[[[[1,\"\\n\"],[41,[30,0,[\"model\",\"canDelete\"]],[[[1,\"        \"],[8,[39,6],null,[[\"@buttonClasses\",\"@onConfirmAction\"],[\"toolbar-link\",[28,[37,7],[[30,0],\"delete\"],null]]],[[\"default\"],[[[[1,\"\\n          Delete role\\n        \"]],[]]]]],[1,\"\\n        \"],[10,0],[14,0,\"toolbar-separator\"],[12],[13],[1,\"\\n\"]],[]],null],[41,[28,[37,3],[[30,0,[\"model\",\"keyType\"]],\"otp\"],null],[[[1,\"        \"],[8,[39,8],[[16,\"data-test-backend-credentials\",true]],[[\"@secret\",\"@mode\",\"@replace\"],[[30,0,[\"model\",\"id\"]],\"credentials\",true]],[[\"default\"],[[[[1,\"\\n          Generate Credential\\n        \"]],[]]]]],[1,\"\\n\"]],[]],[[[1,\"        \"],[8,[39,8],[[16,\"data-test-backend-credentials\",true]],[[\"@secret\",\"@mode\",\"@replace\"],[[30,0,[\"model\",\"id\"]],\"sign\",true]],[[\"default\"],[[[[1,\"\\n          Sign Keys\\n        \"]],[]]]]],[1,\"\\n\"]],[]]],[41,[28,[37,9],[[30,0,[\"model\",\"canUpdate\"]],[30,0,[\"model\",\"canDelete\"]]],null],[[[1,\"        \"],[8,[39,8],[[16,\"data-test-edit-link\",true]],[[\"@secret\",\"@mode\",\"@replace\"],[[30,0,[\"model\",\"id\"]],\"edit\",true]],[[\"default\"],[[[[1,\"\\n          Edit role\\n        \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"    \"]],[]]]]],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"\\n\"],[41,[28,[37,9],[[28,[37,3],[[30,0,[\"mode\"]],\"edit\"],null],[28,[37,3],[[30,0,[\"mode\"]],\"create\"],null]],null],[[[1,\"  \"],[10,\"form\"],[15,\"onsubmit\",[28,[37,7],[[30,0],\"createOrUpdate\",\"create\"],null]],[12],[1,\"\\n    \"],[10,0],[14,0,\"box is-sideless is-fullwidth is-marginless\"],[12],[1,\"\\n      \"],[8,[39,10],null,[[\"@model\"],[[30,0,[\"model\"]]]],null],[1,\"\\n      \"],[8,[39,11],null,[[\"@mode\",\"@noun\"],[[30,0,[\"mode\"]],\"SSH role\"]],null],[1,\"\\n      \"],[8,[39,12],null,[[\"@model\",\"@mode\"],[[30,0,[\"model\"]],[30,0,[\"mode\"]]]],null],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"field is-grouped-split box is-fullwidth is-bottomless\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n        \"],[10,\"button\"],[15,\"disabled\",[30,0,[\"buttonDisabled\"]]],[14,0,\"button is-primary\"],[15,\"data-test-role-ssh-create\",true],[14,4,\"submit\"],[12],[1,\"\\n\"],[41,[28,[37,3],[[30,0,[\"mode\"]],\"create\"],null],[[[1,\"            Create role\\n\"]],[]],[[[41,[28,[37,3],[[30,0,[\"mode\"]],\"edit\"],null],[[[1,\"            Save\\n          \"]],[]],null]],[]]],[1,\"        \"],[13],[1,\"\\n        \"],[8,[39,13],[[24,0,\"button\"]],[[\"@mode\",\"@secret\"],[[52,[28,[37,3],[[30,0,[\"mode\"]],\"create\"],null],\"list\",\"show\"],[30,0,[\"model\",\"id\"]]]],[[\"default\"],[[[[1,\"\\n          Cancel\\n        \"]],[]]]]],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]],[[[1,\"  \"],[10,0],[14,0,\"box is-fullwidth is-sideless is-paddingless is-marginless\"],[12],[1,\"\\n\"],[42,[28,[37,15],[[28,[37,15],[[30,0,[\"model\",\"showFields\"]]],null]],null],null,[[[41,[28,[37,3],[[30,2,[\"type\"]],\"object\"],null],[[[1,\"        \"],[8,[39,16],null,[[\"@label\",\"@value\"],[[28,[37,17],[[28,[37,9],[[30,2,[\"options\",\"label\"]],[28,[37,18],[[28,[37,19],[[30,2,[\"name\"]]],null]],null]],null]],null],[28,[37,20],[[28,[37,21],[[30,0,[\"model\"]],[30,2,[\"name\"]]],null]],null]]],null],[1,\"\\n\"]],[]],[[[1,\"        \"],[8,[39,16],null,[[\"@label\",\"@value\"],[[28,[37,17],[[28,[37,9],[[30,2,[\"options\",\"label\"]],[28,[37,18],[[28,[37,19],[[30,2,[\"name\"]]],null]],null]],null]],null],[28,[37,21],[[30,0,[\"model\"]],[30,2,[\"name\"]]],null]]],null],[1,\"\\n\"]],[]]]],[2]],null],[1,\"  \"],[13],[1,\"\\n\"]],[]]]],[\"p\",\"attr\"],false,[\"page-header\",\"key-value-header\",\"if\",\"eq\",\"toolbar\",\"toolbar-actions\",\"confirm-action\",\"action\",\"toolbar-secret-link\",\"or\",\"message-error\",\"namespace-reminder\",\"form-field-groups-loop\",\"secret-link\",\"each\",\"-track-array\",\"info-table-row\",\"capitalize\",\"humanize\",\"dasherize\",\"stringify\",\"get\"]]",
    "moduleName": "vault/templates/components/role-ssh-edit.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/secret-create-or-update", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{#if (eq @mode "create")}}
    <form
      class={{if @showAdvancedMode "advanced-edit" "simple-edit"}}
      onsubmit={{action "createOrUpdateKey" @mode}}
      aria-label="secret create form"
      {{did-insert this.setup @secretData @model @mode}}
    >
      <div class="field box is-fullwidth is-sideless is-marginless">
        <NamespaceReminder @mode="create" @noun="secret" />
        <MessageError @model={{@modelForData}} @errorMessage={{this.error}} />
        <label class="is-label" for="kv-key">Path for this secret</label>
        <p class="control is-expanded">
          <Input
            autocomplete="off"
            spellcheck="false"
            data-test-secret-path="true"
            id="kv-key"
            class="input {{if (get this.validationMessages 'path') 'has-error-border'}}"
            @value={{get @modelForData @modelForData.pathAttr}}
            {{on "keyup" (perform this.waitForKeyUp "path" value="target.value")}}
          />
        </p>
        {{#if (get this.validationMessages "path")}}
          <AlertInline
            @type="danger"
            @message={{get this.validationMessages "path"}}
            @paddingTop={{true}}
            @isMarginless={{true}}
          />
        {{/if}}
        {{#if @modelForData.isFolder}}
          <p class="help has-text-danger">
            The secret path may not end in
            <code>/</code>
          </p>
        {{/if}}
        {{#if this.pathWhiteSpaceWarning}}
          <div class="has-top-margin-m">
            <AlertBanner
              @type="warning"
              @message="Your secret path contains whitespace. If this is desired, you'll need to encode it with %20 in API calls."
              @marginTop={{true}}
              data-test-whitespace-warning
            />
          </div>
        {{/if}}
      </div>
      {{#if @showAdvancedMode}}
        <div class="form-section">
          <JsonEditor
            @title={{if @isV2 "Version Data" "Secret Data"}}
            @value={{this.codemirrorString}}
            @valueUpdated={{action "codemirrorUpdated"}}
            @onFocusOut={{action "formatJSON"}}
          />
        </div>
      {{else}}
        <div class="form-section">
          <label class="title is-5">
            Secret data
          </label>
          {{#each @secretData as |secret index|}}
            <div class="info-table-row">
              <div class="column is-one-quarter info-table-row-edit">
                <Input
                  data-test-secret-key={{true}}
                  @value={{secret.name}}
                  placeholder="key"
                  {{on "change" (action "handleChange")}}
                  class="input"
                  autocomplete="off"
                  spellcheck="false"
                />
              </div>
              <div class="column info-table-row-edit">
                <MaskedInput
                  @name={{secret.name}}
                  @onChange={{fn this.handleMaskedInputChange secret index}}
                  @value={{secret.value}}
                  data-test-secret-value="true"
                />
              </div>
              <div class="column is-narrow info-table-row-edit">
                {{#if (eq @secretData.length (inc index))}}
                  <button
                    type="button"
                    {{action "addRow"}}
                    class="button is-outlined is-primary"
                    data-test-secret-add-row="true"
                  >
                    Add
                  </button>
                {{else}}
                  <button
                    class="button has-text-grey is-expanded is-icon"
                    type="button"
                    {{on "click" (fn this.deleteRow secret.name)}}
                    aria-label="Delete row"
                  >
                    <Icon @name="trash" class="has-text-grey-light" />
                  </button>
                {{/if}}
              </div>
            </div>
            {{#if this.validationMessages.key}}
              <AlertInline
                @type="danger"
                @message={{this.validationMessages.key}}
                @paddingTop={{true}}
                @isMarginless={{true}}
              />
            {{/if}}
          {{/each}}
        </div>
      {{/if}}
      {{! must have UPDATE permissions to add secret metadata. Create only will not work }}
      {{#if (and @isV2 @canUpdateSecretMetadata)}}
        <ToggleButton
          @isOpen={{this.showMetadata}}
          @openLabel="Hide secret metadata"
          @closedLabel="Show secret metadata"
          @onClick={{fn (mut this.showMetadata)}}
          class="is-block"
          data-test-show-metadata-toggle
        />
        {{#if this.showMetadata}}
          <SecretEditMetadata
            @model={{@model}}
            @mode="create"
            @updateValidationErrorCount={{action "updateValidationErrorCount"}}
          />
        {{/if}}
      {{/if}}
      <div class="field is-grouped box is-fullwidth is-bottomless">
        <div class="control">
          <button type="submit" disabled={{@buttonDisabled}} class="button is-primary" data-test-secret-save={{true}}>
            Save
          </button>
        </div>
        <div class="control">
          <SecretLink @mode="list" @secret={{@model.parentKey}} class="button">
            Cancel
          </SecretLink>
        </div>
      </div>
    </form>
  {{/if}}
  
  {{#if (eq @mode "edit")}}
    {{! no metadata option because metadata is version agnostic }}
    <form
      onsubmit={{action "createOrUpdateKey" "edit"}}
      aria-label="secret edit form"
      {{did-insert this.setup @secretData @model @mode}}
    >
      <div class="box is-sideless is-fullwidth is-marginless padding-top">
        <MessageError @model={{@modelForData}} @errorMessage={{this.error}} />
        {{#if (eq @canReadSecretData false)}}
          <AlertBanner
            @type="warning"
            @message="You do not have read permissions. If a secret exists here creating a new secret will overwrite it."
            data-test-warning-no-read-permissions
          />
        {{/if}}
        <NamespaceReminder @mode="edit" @noun="secret" />
        {{#if this.isCreateNewVersionFromOldVersion}}
          <div class="form-section">
            <AlertBanner
              @type="warning"
              @class="is-marginless"
              @message="You are creating a new version based on data from Version {{@model.selectedVersion.version}}. The current version for {{@model.id}} is Version {{@model.currentVersion}}."
            />
          </div>
        {{/if}}
        {{#if @showAdvancedMode}}
          <div class="form-section">
            <JsonEditor
              @title={{if @isV2 "Version Data" "Secret Data"}}
              @value={{this.codemirrorString}}
              @valueUpdated={{action "codemirrorUpdated"}}
              @onFocusOut={{action "formatJSON"}}
            />
          </div>
        {{else}}
          <div class="form-section">
            <label class="title is-5">
              {{#if @isV2}}
                Version data
              {{else}}
                Secret data
              {{/if}}
            </label>
            {{#each @secretData as |secret index|}}
              <div class="columns is-variable has-no-shadow">
                <div class="column is-one-quarter">
                  <Input
                    data-test-secret-key={{true}}
                    @value={{secret.name}}
                    placeholder="key"
                    {{on "change" (action "handleChange")}}
                    class="input"
                    autocomplete="off"
                    spellcheck="false"
                  />
                </div>
                <div class="column">
                  <MaskedInput
                    @name={{secret.name}}
                    @onChange={{fn this.handleMaskedInputChange secret index}}
                    @value={{secret.value}}
                    data-test-secret-value="true"
                  />
                </div>
                <div class="column is-narrow">
                  {{#if (eq @secretData.length (inc index))}}
                    <button
                      type="button"
                      {{action "addRow"}}
                      class="button is-outlined is-primary"
                      data-test-secret-add-row="true"
                    >
                      Add
                    </button>
                  {{else}}
                    <button
                      class="button has-text-grey is-expanded is-icon"
                      type="button"
                      {{action "deleteRow" secret.name}}
                      aria-label="Delete row"
                    >
                      <Icon @name="trash" class="has-text-grey-light" />
                    </button>
                  {{/if}}
                </div>
              </div>
            {{/each}}
          </div>
        {{/if}}
      </div>
      <div class="field is-grouped is-grouped-split is-fullwidth box is-bottomless">
        <div class="field is-grouped">
          <div class="control">
            <button
              data-test-secret-save
              type="submit"
              disabled={{or @buttonDisabled this.validationErrorCount}}
              class="button is-primary"
            >
              Save
            </button>
          </div>
          <div class="control">
            <SecretLink @mode="show" @secret={{@model.id}} @queryParams={{hash version=@modelForData.version}} class="button">
              Cancel
            </SecretLink>
          </div>
        </div>
      </div>
    </form>
  {{/if}}
  */
  {
    "id": "QKEVRIqg",
    "block": "[[[41,[28,[37,1],[[30,1],\"create\"],null],[[[1,\"  \"],[11,\"form\"],[16,0,[52,[30,2],\"advanced-edit\",\"simple-edit\"]],[16,\"onsubmit\",[28,[37,2],[[30,0],\"createOrUpdateKey\",[30,1]],null]],[24,\"aria-label\",\"secret create form\"],[4,[38,3],[[30,0,[\"setup\"]],[30,3],[30,4],[30,1]],null],[12],[1,\"\\n    \"],[10,0],[14,0,\"field box is-fullwidth is-sideless is-marginless\"],[12],[1,\"\\n      \"],[8,[39,4],null,[[\"@mode\",\"@noun\"],[\"create\",\"secret\"]],null],[1,\"\\n      \"],[8,[39,5],null,[[\"@model\",\"@errorMessage\"],[[30,5],[30,0,[\"error\"]]]],null],[1,\"\\n      \"],[10,\"label\"],[14,0,\"is-label\"],[14,\"for\",\"kv-key\"],[12],[1,\"Path for this secret\"],[13],[1,\"\\n      \"],[10,2],[14,0,\"control is-expanded\"],[12],[1,\"\\n        \"],[8,[39,6],[[24,\"autocomplete\",\"off\"],[24,\"spellcheck\",\"false\"],[24,\"data-test-secret-path\",\"true\"],[24,1,\"kv-key\"],[16,0,[29,[\"input \",[52,[28,[37,7],[[30,0,[\"validationMessages\"]],\"path\"],null],\"has-error-border\"]]]],[4,[38,8],[\"keyup\",[28,[37,9],[[30,0,[\"waitForKeyUp\"]],\"path\"],[[\"value\"],[\"target.value\"]]]],null]],[[\"@value\"],[[28,[37,7],[[30,5],[30,5,[\"pathAttr\"]]],null]]],null],[1,\"\\n      \"],[13],[1,\"\\n\"],[41,[28,[37,7],[[30,0,[\"validationMessages\"]],\"path\"],null],[[[1,\"        \"],[8,[39,10],null,[[\"@type\",\"@message\",\"@paddingTop\",\"@isMarginless\"],[\"danger\",[28,[37,7],[[30,0,[\"validationMessages\"]],\"path\"],null],true,true]],null],[1,\"\\n\"]],[]],null],[41,[30,5,[\"isFolder\"]],[[[1,\"        \"],[10,2],[14,0,\"help has-text-danger\"],[12],[1,\"\\n          The secret path may not end in\\n          \"],[10,\"code\"],[12],[1,\"/\"],[13],[1,\"\\n        \"],[13],[1,\"\\n\"]],[]],null],[41,[30,0,[\"pathWhiteSpaceWarning\"]],[[[1,\"        \"],[10,0],[14,0,\"has-top-margin-m\"],[12],[1,\"\\n          \"],[8,[39,11],[[24,\"data-test-whitespace-warning\",\"\"]],[[\"@type\",\"@message\",\"@marginTop\"],[\"warning\",\"Your secret path contains whitespace. If this is desired, you'll need to encode it with %20 in API calls.\",true]],null],[1,\"\\n        \"],[13],[1,\"\\n\"]],[]],null],[1,\"    \"],[13],[1,\"\\n\"],[41,[30,2],[[[1,\"      \"],[10,0],[14,0,\"form-section\"],[12],[1,\"\\n        \"],[8,[39,12],null,[[\"@title\",\"@value\",\"@valueUpdated\",\"@onFocusOut\"],[[52,[30,6],\"Version Data\",\"Secret Data\"],[30,0,[\"codemirrorString\"]],[28,[37,2],[[30,0],\"codemirrorUpdated\"],null],[28,[37,2],[[30,0],\"formatJSON\"],null]]],null],[1,\"\\n      \"],[13],[1,\"\\n\"]],[]],[[[1,\"      \"],[10,0],[14,0,\"form-section\"],[12],[1,\"\\n        \"],[10,\"label\"],[14,0,\"title is-5\"],[12],[1,\"\\n          Secret data\\n        \"],[13],[1,\"\\n\"],[42,[28,[37,14],[[28,[37,14],[[30,3]],null]],null],null,[[[1,\"          \"],[10,0],[14,0,\"info-table-row\"],[12],[1,\"\\n            \"],[10,0],[14,0,\"column is-one-quarter info-table-row-edit\"],[12],[1,\"\\n              \"],[8,[39,6],[[16,\"data-test-secret-key\",true],[24,\"placeholder\",\"key\"],[24,0,\"input\"],[24,\"autocomplete\",\"off\"],[24,\"spellcheck\",\"false\"],[4,[38,8],[\"change\",[28,[37,2],[[30,0],\"handleChange\"],null]],null]],[[\"@value\"],[[30,7,[\"name\"]]]],null],[1,\"\\n            \"],[13],[1,\"\\n            \"],[10,0],[14,0,\"column info-table-row-edit\"],[12],[1,\"\\n              \"],[8,[39,15],[[24,\"data-test-secret-value\",\"true\"]],[[\"@name\",\"@onChange\",\"@value\"],[[30,7,[\"name\"]],[28,[37,16],[[30,0,[\"handleMaskedInputChange\"]],[30,7],[30,8]],null],[30,7,[\"value\"]]]],null],[1,\"\\n            \"],[13],[1,\"\\n            \"],[10,0],[14,0,\"column is-narrow info-table-row-edit\"],[12],[1,\"\\n\"],[41,[28,[37,1],[[30,3,[\"length\"]],[28,[37,17],[[30,8]],null]],null],[[[1,\"                \"],[11,\"button\"],[24,0,\"button is-outlined is-primary\"],[24,\"data-test-secret-add-row\",\"true\"],[24,4,\"button\"],[4,[38,2],[[30,0],\"addRow\"],null],[12],[1,\"\\n                  Add\\n                \"],[13],[1,\"\\n\"]],[]],[[[1,\"                \"],[11,\"button\"],[24,0,\"button has-text-grey is-expanded is-icon\"],[24,\"aria-label\",\"Delete row\"],[24,4,\"button\"],[4,[38,8],[\"click\",[28,[37,16],[[30,0,[\"deleteRow\"]],[30,7,[\"name\"]]],null]],null],[12],[1,\"\\n                  \"],[8,[39,18],[[24,0,\"has-text-grey-light\"]],[[\"@name\"],[\"trash\"]],null],[1,\"\\n                \"],[13],[1,\"\\n\"]],[]]],[1,\"            \"],[13],[1,\"\\n          \"],[13],[1,\"\\n\"],[41,[30,0,[\"validationMessages\",\"key\"]],[[[1,\"            \"],[8,[39,10],null,[[\"@type\",\"@message\",\"@paddingTop\",\"@isMarginless\"],[\"danger\",[30,0,[\"validationMessages\",\"key\"]],true,true]],null],[1,\"\\n\"]],[]],null]],[7,8]],null],[1,\"      \"],[13],[1,\"\\n\"]],[]]],[41,[28,[37,19],[[30,6],[30,9]],null],[[[1,\"      \"],[8,[39,20],[[24,0,\"is-block\"],[24,\"data-test-show-metadata-toggle\",\"\"]],[[\"@isOpen\",\"@openLabel\",\"@closedLabel\",\"@onClick\"],[[30,0,[\"showMetadata\"]],\"Hide secret metadata\",\"Show secret metadata\",[28,[37,16],[[28,[37,21],[[30,0,[\"showMetadata\"]]],null]],null]]],null],[1,\"\\n\"],[41,[30,0,[\"showMetadata\"]],[[[1,\"        \"],[8,[39,22],null,[[\"@model\",\"@mode\",\"@updateValidationErrorCount\"],[[30,4],\"create\",[28,[37,2],[[30,0],\"updateValidationErrorCount\"],null]]],null],[1,\"\\n\"]],[]],null]],[]],null],[1,\"    \"],[10,0],[14,0,\"field is-grouped box is-fullwidth is-bottomless\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n        \"],[10,\"button\"],[15,\"disabled\",[30,10]],[14,0,\"button is-primary\"],[15,\"data-test-secret-save\",true],[14,4,\"submit\"],[12],[1,\"\\n          Save\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n      \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n        \"],[8,[39,23],[[24,0,\"button\"]],[[\"@mode\",\"@secret\"],[\"list\",[30,4,[\"parentKey\"]]]],[[\"default\"],[[[[1,\"\\n          Cancel\\n        \"]],[]]]]],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]],null],[1,\"\\n\"],[41,[28,[37,1],[[30,1],\"edit\"],null],[[[1,\"  \"],[11,\"form\"],[16,\"onsubmit\",[28,[37,2],[[30,0],\"createOrUpdateKey\",\"edit\"],null]],[24,\"aria-label\",\"secret edit form\"],[4,[38,3],[[30,0,[\"setup\"]],[30,3],[30,4],[30,1]],null],[12],[1,\"\\n    \"],[10,0],[14,0,\"box is-sideless is-fullwidth is-marginless padding-top\"],[12],[1,\"\\n      \"],[8,[39,5],null,[[\"@model\",\"@errorMessage\"],[[30,5],[30,0,[\"error\"]]]],null],[1,\"\\n\"],[41,[28,[37,1],[[30,11],false],null],[[[1,\"        \"],[8,[39,11],[[24,\"data-test-warning-no-read-permissions\",\"\"]],[[\"@type\",\"@message\"],[\"warning\",\"You do not have read permissions. If a secret exists here creating a new secret will overwrite it.\"]],null],[1,\"\\n\"]],[]],null],[1,\"      \"],[8,[39,4],null,[[\"@mode\",\"@noun\"],[\"edit\",\"secret\"]],null],[1,\"\\n\"],[41,[30,0,[\"isCreateNewVersionFromOldVersion\"]],[[[1,\"        \"],[10,0],[14,0,\"form-section\"],[12],[1,\"\\n          \"],[8,[39,11],null,[[\"@type\",\"@class\",\"@message\"],[\"warning\",\"is-marginless\",[29,[\"You are creating a new version based on data from Version \",[30,4,[\"selectedVersion\",\"version\"]],\". The current version for \",[30,4,[\"id\"]],\" is Version \",[30,4,[\"currentVersion\"]],\".\"]]]],null],[1,\"\\n        \"],[13],[1,\"\\n\"]],[]],null],[41,[30,2],[[[1,\"        \"],[10,0],[14,0,\"form-section\"],[12],[1,\"\\n          \"],[8,[39,12],null,[[\"@title\",\"@value\",\"@valueUpdated\",\"@onFocusOut\"],[[52,[30,6],\"Version Data\",\"Secret Data\"],[30,0,[\"codemirrorString\"]],[28,[37,2],[[30,0],\"codemirrorUpdated\"],null],[28,[37,2],[[30,0],\"formatJSON\"],null]]],null],[1,\"\\n        \"],[13],[1,\"\\n\"]],[]],[[[1,\"        \"],[10,0],[14,0,\"form-section\"],[12],[1,\"\\n          \"],[10,\"label\"],[14,0,\"title is-5\"],[12],[1,\"\\n\"],[41,[30,6],[[[1,\"              Version data\\n\"]],[]],[[[1,\"              Secret data\\n\"]],[]]],[1,\"          \"],[13],[1,\"\\n\"],[42,[28,[37,14],[[28,[37,14],[[30,3]],null]],null],null,[[[1,\"            \"],[10,0],[14,0,\"columns is-variable has-no-shadow\"],[12],[1,\"\\n              \"],[10,0],[14,0,\"column is-one-quarter\"],[12],[1,\"\\n                \"],[8,[39,6],[[16,\"data-test-secret-key\",true],[24,\"placeholder\",\"key\"],[24,0,\"input\"],[24,\"autocomplete\",\"off\"],[24,\"spellcheck\",\"false\"],[4,[38,8],[\"change\",[28,[37,2],[[30,0],\"handleChange\"],null]],null]],[[\"@value\"],[[30,12,[\"name\"]]]],null],[1,\"\\n              \"],[13],[1,\"\\n              \"],[10,0],[14,0,\"column\"],[12],[1,\"\\n                \"],[8,[39,15],[[24,\"data-test-secret-value\",\"true\"]],[[\"@name\",\"@onChange\",\"@value\"],[[30,12,[\"name\"]],[28,[37,16],[[30,0,[\"handleMaskedInputChange\"]],[30,12],[30,13]],null],[30,12,[\"value\"]]]],null],[1,\"\\n              \"],[13],[1,\"\\n              \"],[10,0],[14,0,\"column is-narrow\"],[12],[1,\"\\n\"],[41,[28,[37,1],[[30,3,[\"length\"]],[28,[37,17],[[30,13]],null]],null],[[[1,\"                  \"],[11,\"button\"],[24,0,\"button is-outlined is-primary\"],[24,\"data-test-secret-add-row\",\"true\"],[24,4,\"button\"],[4,[38,2],[[30,0],\"addRow\"],null],[12],[1,\"\\n                    Add\\n                  \"],[13],[1,\"\\n\"]],[]],[[[1,\"                  \"],[11,\"button\"],[24,0,\"button has-text-grey is-expanded is-icon\"],[24,\"aria-label\",\"Delete row\"],[24,4,\"button\"],[4,[38,2],[[30,0],\"deleteRow\",[30,12,[\"name\"]]],null],[12],[1,\"\\n                    \"],[8,[39,18],[[24,0,\"has-text-grey-light\"]],[[\"@name\"],[\"trash\"]],null],[1,\"\\n                  \"],[13],[1,\"\\n\"]],[]]],[1,\"              \"],[13],[1,\"\\n            \"],[13],[1,\"\\n\"]],[12,13]],null],[1,\"        \"],[13],[1,\"\\n\"]],[]]],[1,\"    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"field is-grouped is-grouped-split is-fullwidth box is-bottomless\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"field is-grouped\"],[12],[1,\"\\n        \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n          \"],[10,\"button\"],[14,\"data-test-secret-save\",\"\"],[15,\"disabled\",[28,[37,24],[[30,10],[30,0,[\"validationErrorCount\"]]],null]],[14,0,\"button is-primary\"],[14,4,\"submit\"],[12],[1,\"\\n            Save\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n        \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n          \"],[8,[39,23],[[24,0,\"button\"]],[[\"@mode\",\"@secret\",\"@queryParams\"],[\"show\",[30,4,[\"id\"]],[28,[37,25],null,[[\"version\"],[[30,5,[\"version\"]]]]]]],[[\"default\"],[[[[1,\"\\n            Cancel\\n          \"]],[]]]]],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]],null]],[\"@mode\",\"@showAdvancedMode\",\"@secretData\",\"@model\",\"@modelForData\",\"@isV2\",\"secret\",\"index\",\"@canUpdateSecretMetadata\",\"@buttonDisabled\",\"@canReadSecretData\",\"secret\",\"index\"],false,[\"if\",\"eq\",\"action\",\"did-insert\",\"namespace-reminder\",\"message-error\",\"input\",\"get\",\"on\",\"perform\",\"alert-inline\",\"alert-banner\",\"json-editor\",\"each\",\"-track-array\",\"masked-input\",\"fn\",\"inc\",\"icon\",\"and\",\"toggle-button\",\"mut\",\"secret-edit-metadata\",\"secret-link\",\"or\",\"hash\"]]",
    "moduleName": "vault/templates/components/secret-create-or-update.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/secret-delete-menu", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{#if @isV2}}
    {{#if (and this.canUndeleteVersion @modelForData.deleted)}}
      <button type="button" class="toolbar-link" onclick={{action this.handleDelete "undelete"}} data-test-secret-undelete>
        Undelete
      </button>
    {{/if}}
    {{#if (and (not @modelForData.deleted) (not @modelForData.destroyed))}}
      {{#if (or this.canDestroyVersion this.canDestroyAllVersions)}}
        <button
          type="button"
          class="toolbar-link"
          {{on "click" (fn (mut this.showDeleteModal) true)}}
          data-test-delete-open-modal
        >
          {{if (and (not @modelForData.deleted) (not @modelForData.destroyed)) "Delete" "Destroy"}}
        </button>
        <div class="toolbar-separator"></div>
      {{else}}
        {{#if (or (and this.isLatestVersion this.canDeleteSecretData) this.canSoftDeleteSecretData)}}
          <ConfirmAction
            @buttonClasses="toolbar-link"
            @confirmTitle="Delete"
            @confirmMessage="Deleting this secret removes read access, but the underlying data will not be removed and can be undeleted later."
            @onConfirmAction={{action "handleDelete" (if this.canSoftDeleteSecretData "soft-delete" "delete-latest-version")}}
            data-test-secret-v2-delete="true"
          >
            Delete
          </ConfirmAction>
        {{/if}}
      {{/if}}
    {{/if}}
  
    <Modal
      @title="Delete Secret?"
      @onClose={{action (mut this.showDeleteModal) false}}
      @isActive={{this.showDeleteModal}}
      @type="warning"
      @showCloseButton={{true}}
    >
      <section class="modal-card-body">
        <p class="has-bottom-margin-s">
          There are three ways to delete or destroy the
          <strong>{{@model.id}}</strong>
          secret. Each is different, so be sure to read the below carefully.
        </p>
        <p class="has-bottom-margin-s"><strong>How would you like to proceed?</strong></p>
        {{#unless @modelForData.destroyed}}
          {{#unless @modelForData.deleted}}
            {{#if (or this.canSoftDeleteSecretData this.canDeleteSecretData)}}
              <div class="modal-radio-button" data-test-delete-modal="delete-version">
                <RadioButton
                  id="delete-version"
                  name="setup-deleteType"
                  class="radio"
                  @value={{if this.canSoftDeleteSecretData "soft-delete" "delete-latest-version"}}
                  @groupValue={{this.deleteType}}
                  @onChange={{fn (mut this.deleteType)}}
                />
                <div class="helper-text">
                  {{#if this.canSoftDeleteSecretData}}
                    <label for="delete-version" data-test-type-select="delete-version"><strong>Delete this version</strong></label>
                    <p>
                      This deletes Version
                      {{@modelForData.version}}
                      of the secret. It can be un-deleted later.
                    </p>
                  {{else}}
                    <label for="delete-version" data-test-type-select="delete-version"><strong>Delete latest version</strong></label>
                    <p>
                      Your policy does not allow deleting a specific version of this secret. This will delete the
                      <strong>latest version</strong>
                      of this secret. It can be un-deleted later.
                    </p>
                  {{/if}}
                </div>
              </div>
            {{/if}}
          {{/unless}}
          {{#if this.canDestroyVersion}}
            <div class="modal-radio-button" data-test-delete-modal="destroy-version">
              <RadioButton
                id="destroy-version"
                name="setup-deleteType"
                class="radio"
                @value="destroy"
                @groupValue={{this.deleteType}}
                @onChange={{fn (mut this.deleteType)}}
              />
              <div class="helper-text">
                <label for="destroy-version" data-test-type-select="destroy-version"><strong>Destroy this version</strong></label>
                <p>
                  Version
                  {{@modelForData.version}}
                  is permanently destroyed and cannot be read or recovered later.
                </p>
              </div>
            </div>
          {{/if}}
        {{/unless}}
        {{#if this.canDestroyAllVersions}}
          <div class="modal-radio-button" data-test-delete-modal="destroy-all-versions">
            <RadioButton
              id="destroy-all-versions"
              name="setup-deleteType"
              class="radio"
              @value="destroy-all-versions"
              @groupValue={{this.deleteType}}
              @onChange={{fn (mut this.deleteType)}}
            />
            <div class="helper-text">
              <label for="destroy-all-versions" data-test-replication-type-select="destroy-all-versions">
                <strong>Destroy all versions</strong>
              </label>
              <p>All secret versions and metadata are permanently destroyed and cannot be read or recovered later.</p>
            </div>
          </div>
        {{/if}}
      </section>
      <footer class="modal-card-foot modal-card-foot-outlined">
        <button
          type="button"
          class="button is-danger-outlined"
          {{on "click" (fn this.handleDelete this.deleteType (action (mut this.showDeleteModal) false))}}
          disabled={{if this.deleteType false true}}
          data-test-modal-delete
        >
          Delete
        </button>
        <button type="button" class="button is-secondary" {{on "click" (action (mut this.showDeleteModal) false)}}>
          Cancel
        </button>
      </footer>
    </Modal>
  {{else if this.canDeleteSecretData}}
    <ConfirmAction
      @buttonClasses="toolbar-link"
      @confirmTitle="Delete secret?"
      @confirmMessage="You will not be able to recover this secret data later."
      @onConfirmAction={{action "handleDelete" "v1"}}
      data-test-secret-v1-delete="true"
    >
      Delete
    </ConfirmAction>
    <div class="toolbar-separator"></div>
  {{/if}}
  */
  {
    "id": "tSIWq6OV",
    "block": "[[[41,[30,1],[[[41,[28,[37,1],[[30,0,[\"canUndeleteVersion\"]],[30,2,[\"deleted\"]]],null],[[[1,\"    \"],[10,\"button\"],[14,0,\"toolbar-link\"],[15,\"onclick\",[28,[37,2],[[30,0],[30,0,[\"handleDelete\"]],\"undelete\"],null]],[14,\"data-test-secret-undelete\",\"\"],[14,4,\"button\"],[12],[1,\"\\n      Undelete\\n    \"],[13],[1,\"\\n\"]],[]],null],[41,[28,[37,1],[[28,[37,3],[[30,2,[\"deleted\"]]],null],[28,[37,3],[[30,2,[\"destroyed\"]]],null]],null],[[[41,[28,[37,4],[[30,0,[\"canDestroyVersion\"]],[30,0,[\"canDestroyAllVersions\"]]],null],[[[1,\"      \"],[11,\"button\"],[24,0,\"toolbar-link\"],[24,\"data-test-delete-open-modal\",\"\"],[24,4,\"button\"],[4,[38,5],[\"click\",[28,[37,6],[[28,[37,7],[[30,0,[\"showDeleteModal\"]]],null],true],null]],null],[12],[1,\"\\n        \"],[1,[52,[28,[37,1],[[28,[37,3],[[30,2,[\"deleted\"]]],null],[28,[37,3],[[30,2,[\"destroyed\"]]],null]],null],\"Delete\",\"Destroy\"]],[1,\"\\n      \"],[13],[1,\"\\n      \"],[10,0],[14,0,\"toolbar-separator\"],[12],[13],[1,\"\\n\"]],[]],[[[41,[28,[37,4],[[28,[37,1],[[30,0,[\"isLatestVersion\"]],[30,0,[\"canDeleteSecretData\"]]],null],[30,0,[\"canSoftDeleteSecretData\"]]],null],[[[1,\"        \"],[8,[39,8],[[24,\"data-test-secret-v2-delete\",\"true\"]],[[\"@buttonClasses\",\"@confirmTitle\",\"@confirmMessage\",\"@onConfirmAction\"],[\"toolbar-link\",\"Delete\",\"Deleting this secret removes read access, but the underlying data will not be removed and can be undeleted later.\",[28,[37,2],[[30,0],\"handleDelete\",[52,[30,0,[\"canSoftDeleteSecretData\"]],\"soft-delete\",\"delete-latest-version\"]],null]]],[[\"default\"],[[[[1,\"\\n          Delete\\n        \"]],[]]]]],[1,\"\\n\"]],[]],null]],[]]]],[]],null],[1,\"\\n  \"],[8,[39,9],null,[[\"@title\",\"@onClose\",\"@isActive\",\"@type\",\"@showCloseButton\"],[\"Delete Secret?\",[28,[37,2],[[30,0],[28,[37,7],[[30,0,[\"showDeleteModal\"]]],null],false],null],[30,0,[\"showDeleteModal\"]],\"warning\",true]],[[\"default\"],[[[[1,\"\\n    \"],[10,\"section\"],[14,0,\"modal-card-body\"],[12],[1,\"\\n      \"],[10,2],[14,0,\"has-bottom-margin-s\"],[12],[1,\"\\n        There are three ways to delete or destroy the\\n        \"],[10,\"strong\"],[12],[1,[30,3,[\"id\"]]],[13],[1,\"\\n        secret. Each is different, so be sure to read the below carefully.\\n      \"],[13],[1,\"\\n      \"],[10,2],[14,0,\"has-bottom-margin-s\"],[12],[10,\"strong\"],[12],[1,\"How would you like to proceed?\"],[13],[13],[1,\"\\n\"],[41,[51,[30,2,[\"destroyed\"]]],[[[41,[51,[30,2,[\"deleted\"]]],[[[41,[28,[37,4],[[30,0,[\"canSoftDeleteSecretData\"]],[30,0,[\"canDeleteSecretData\"]]],null],[[[1,\"            \"],[10,0],[14,0,\"modal-radio-button\"],[14,\"data-test-delete-modal\",\"delete-version\"],[12],[1,\"\\n              \"],[8,[39,11],[[24,1,\"delete-version\"],[24,3,\"setup-deleteType\"],[24,0,\"radio\"]],[[\"@value\",\"@groupValue\",\"@onChange\"],[[52,[30,0,[\"canSoftDeleteSecretData\"]],\"soft-delete\",\"delete-latest-version\"],[30,0,[\"deleteType\"]],[28,[37,6],[[28,[37,7],[[30,0,[\"deleteType\"]]],null]],null]]],null],[1,\"\\n              \"],[10,0],[14,0,\"helper-text\"],[12],[1,\"\\n\"],[41,[30,0,[\"canSoftDeleteSecretData\"]],[[[1,\"                  \"],[10,\"label\"],[14,\"for\",\"delete-version\"],[14,\"data-test-type-select\",\"delete-version\"],[12],[10,\"strong\"],[12],[1,\"Delete this version\"],[13],[13],[1,\"\\n                  \"],[10,2],[12],[1,\"\\n                    This deletes Version\\n                    \"],[1,[30,2,[\"version\"]]],[1,\"\\n                    of the secret. It can be un-deleted later.\\n                  \"],[13],[1,\"\\n\"]],[]],[[[1,\"                  \"],[10,\"label\"],[14,\"for\",\"delete-version\"],[14,\"data-test-type-select\",\"delete-version\"],[12],[10,\"strong\"],[12],[1,\"Delete latest version\"],[13],[13],[1,\"\\n                  \"],[10,2],[12],[1,\"\\n                    Your policy does not allow deleting a specific version of this secret. This will delete the\\n                    \"],[10,\"strong\"],[12],[1,\"latest version\"],[13],[1,\"\\n                    of this secret. It can be un-deleted later.\\n                  \"],[13],[1,\"\\n\"]],[]]],[1,\"              \"],[13],[1,\"\\n            \"],[13],[1,\"\\n\"]],[]],null]],[]],null],[41,[30,0,[\"canDestroyVersion\"]],[[[1,\"          \"],[10,0],[14,0,\"modal-radio-button\"],[14,\"data-test-delete-modal\",\"destroy-version\"],[12],[1,\"\\n            \"],[8,[39,11],[[24,1,\"destroy-version\"],[24,3,\"setup-deleteType\"],[24,0,\"radio\"]],[[\"@value\",\"@groupValue\",\"@onChange\"],[\"destroy\",[30,0,[\"deleteType\"]],[28,[37,6],[[28,[37,7],[[30,0,[\"deleteType\"]]],null]],null]]],null],[1,\"\\n            \"],[10,0],[14,0,\"helper-text\"],[12],[1,\"\\n              \"],[10,\"label\"],[14,\"for\",\"destroy-version\"],[14,\"data-test-type-select\",\"destroy-version\"],[12],[10,\"strong\"],[12],[1,\"Destroy this version\"],[13],[13],[1,\"\\n              \"],[10,2],[12],[1,\"\\n                Version\\n                \"],[1,[30,2,[\"version\"]]],[1,\"\\n                is permanently destroyed and cannot be read or recovered later.\\n              \"],[13],[1,\"\\n            \"],[13],[1,\"\\n          \"],[13],[1,\"\\n\"]],[]],null]],[]],null],[41,[30,0,[\"canDestroyAllVersions\"]],[[[1,\"        \"],[10,0],[14,0,\"modal-radio-button\"],[14,\"data-test-delete-modal\",\"destroy-all-versions\"],[12],[1,\"\\n          \"],[8,[39,11],[[24,1,\"destroy-all-versions\"],[24,3,\"setup-deleteType\"],[24,0,\"radio\"]],[[\"@value\",\"@groupValue\",\"@onChange\"],[\"destroy-all-versions\",[30,0,[\"deleteType\"]],[28,[37,6],[[28,[37,7],[[30,0,[\"deleteType\"]]],null]],null]]],null],[1,\"\\n          \"],[10,0],[14,0,\"helper-text\"],[12],[1,\"\\n            \"],[10,\"label\"],[14,\"for\",\"destroy-all-versions\"],[14,\"data-test-replication-type-select\",\"destroy-all-versions\"],[12],[1,\"\\n              \"],[10,\"strong\"],[12],[1,\"Destroy all versions\"],[13],[1,\"\\n            \"],[13],[1,\"\\n            \"],[10,2],[12],[1,\"All secret versions and metadata are permanently destroyed and cannot be read or recovered later.\"],[13],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n\"]],[]],null],[1,\"    \"],[13],[1,\"\\n    \"],[10,\"footer\"],[14,0,\"modal-card-foot modal-card-foot-outlined\"],[12],[1,\"\\n      \"],[11,\"button\"],[24,0,\"button is-danger-outlined\"],[16,\"disabled\",[52,[30,0,[\"deleteType\"]],false,true]],[24,\"data-test-modal-delete\",\"\"],[24,4,\"button\"],[4,[38,5],[\"click\",[28,[37,6],[[30,0,[\"handleDelete\"]],[30,0,[\"deleteType\"]],[28,[37,2],[[30,0],[28,[37,7],[[30,0,[\"showDeleteModal\"]]],null],false],null]],null]],null],[12],[1,\"\\n        Delete\\n      \"],[13],[1,\"\\n      \"],[11,\"button\"],[24,0,\"button is-secondary\"],[24,4,\"button\"],[4,[38,5],[\"click\",[28,[37,2],[[30,0],[28,[37,7],[[30,0,[\"showDeleteModal\"]]],null],false],null]],null],[12],[1,\"\\n        Cancel\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]],[[[41,[30,0,[\"canDeleteSecretData\"]],[[[1,\"  \"],[8,[39,8],[[24,\"data-test-secret-v1-delete\",\"true\"]],[[\"@buttonClasses\",\"@confirmTitle\",\"@confirmMessage\",\"@onConfirmAction\"],[\"toolbar-link\",\"Delete secret?\",\"You will not be able to recover this secret data later.\",[28,[37,2],[[30,0],\"handleDelete\",\"v1\"],null]]],[[\"default\"],[[[[1,\"\\n    Delete\\n  \"]],[]]]]],[1,\"\\n  \"],[10,0],[14,0,\"toolbar-separator\"],[12],[13],[1,\"\\n\"]],[]],null]],[]]]],[\"@isV2\",\"@modelForData\",\"@model\"],false,[\"if\",\"and\",\"action\",\"not\",\"or\",\"on\",\"fn\",\"mut\",\"confirm-action\",\"modal\",\"unless\",\"radio-button\"]]",
    "moduleName": "vault/templates/components/secret-delete-menu.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/secret-edit-metadata", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <form onsubmit={{this.onSaveChanges}}>
    <div
      data-test-metadata-fields
      class={{if (eq @mode "create") "box has-container is-fullwidth" "form-section is-fullwidth"}}
    >
      <p class="field">
        The options below are all version-agnostic; they apply to all versions of this secret.
        {{if (eq @mode "create") "After the secret is created, this can be edited in the Metadata tab." ""}}
      </p>
      {{#each @model.fields as |attr|}}
        {{#if (eq attr.name "customMetadata")}}
          <MessageError @errorMessage={{this.error}} @model={{@model}} />
          <FormField
            data-test-field
            @attr={{attr}}
            @model={{@model}}
            @onKeyUp={{action "onKeyUp"}}
            @modelValidations={{this.modelValidations}}
            @mode={{@mode}}
          />
          <label class="title has-top-padding-m is-{{if (eq @mode 'create') '5' '4'}}">
            Additional options
          </label>
        {{/if}}
        {{#if (not-eq attr.name "customMetadata")}}
          <FormField
            data-test-field
            @attr={{attr}}
            @model={{@model}}
            @onKeyUp={{action "onKeyUp"}}
            @modelValidations={{this.modelValidations}}
          />
        {{/if}}
      {{/each}}
    </div>
    {{#if (not-eq @mode "create")}}
      <div class="field is-grouped is-grouped-split is-fullwidth box is-bottomless">
        <div class="field is-grouped">
          <div class="control">
            <button type="submit" disabled={{this.validationErrorCount}} class="button is-primary" data-test-save-metadata>
              Save
            </button>
          </div>
          <div class="control">
            <SecretLink @secret={{@model.id}} class="button" @mode="show">
              Cancel
            </SecretLink>
          </div>
        </div>
      </div>
    {{/if}}
  </form>
  */
  {
    "id": "oF3h10UE",
    "block": "[[[10,\"form\"],[15,\"onsubmit\",[30,0,[\"onSaveChanges\"]]],[12],[1,\"\\n  \"],[10,0],[14,\"data-test-metadata-fields\",\"\"],[15,0,[52,[28,[37,1],[[30,1],\"create\"],null],\"box has-container is-fullwidth\",\"form-section is-fullwidth\"]],[12],[1,\"\\n    \"],[10,2],[14,0,\"field\"],[12],[1,\"\\n      The options below are all version-agnostic; they apply to all versions of this secret.\\n      \"],[1,[52,[28,[37,1],[[30,1],\"create\"],null],\"After the secret is created, this can be edited in the Metadata tab.\",\"\"]],[1,\"\\n    \"],[13],[1,\"\\n\"],[42,[28,[37,3],[[28,[37,3],[[30,2,[\"fields\"]]],null]],null],null,[[[41,[28,[37,1],[[30,3,[\"name\"]],\"customMetadata\"],null],[[[1,\"        \"],[8,[39,4],null,[[\"@errorMessage\",\"@model\"],[[30,0,[\"error\"]],[30,2]]],null],[1,\"\\n        \"],[8,[39,5],[[24,\"data-test-field\",\"\"]],[[\"@attr\",\"@model\",\"@onKeyUp\",\"@modelValidations\",\"@mode\"],[[30,3],[30,2],[28,[37,6],[[30,0],\"onKeyUp\"],null],[30,0,[\"modelValidations\"]],[30,1]]],null],[1,\"\\n        \"],[10,\"label\"],[15,0,[29,[\"title has-top-padding-m is-\",[52,[28,[37,1],[[30,1],\"create\"],null],\"5\",\"4\"]]]],[12],[1,\"\\n          Additional options\\n        \"],[13],[1,\"\\n\"]],[]],null],[41,[28,[37,7],[[30,3,[\"name\"]],\"customMetadata\"],null],[[[1,\"        \"],[8,[39,5],[[24,\"data-test-field\",\"\"]],[[\"@attr\",\"@model\",\"@onKeyUp\",\"@modelValidations\"],[[30,3],[30,2],[28,[37,6],[[30,0],\"onKeyUp\"],null],[30,0,[\"modelValidations\"]]]],null],[1,\"\\n\"]],[]],null]],[3]],null],[1,\"  \"],[13],[1,\"\\n\"],[41,[28,[37,7],[[30,1],\"create\"],null],[[[1,\"    \"],[10,0],[14,0,\"field is-grouped is-grouped-split is-fullwidth box is-bottomless\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"field is-grouped\"],[12],[1,\"\\n        \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n          \"],[10,\"button\"],[15,\"disabled\",[30,0,[\"validationErrorCount\"]]],[14,0,\"button is-primary\"],[14,\"data-test-save-metadata\",\"\"],[14,4,\"submit\"],[12],[1,\"\\n            Save\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n        \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n          \"],[8,[39,8],[[24,0,\"button\"]],[[\"@secret\",\"@mode\"],[[30,2,[\"id\"]],\"show\"]],[[\"default\"],[[[[1,\"\\n            Cancel\\n          \"]],[]]]]],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n\"]],[]],null],[13]],[\"@mode\",\"@model\",\"attr\"],false,[\"if\",\"eq\",\"each\",\"-track-array\",\"message-error\",\"form-field\",\"action\",\"not-eq\",\"secret-link\"]]",
    "moduleName": "vault/templates/components/secret-edit-metadata.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/secret-edit-toolbar", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{! template-lint-configure simple-unless "warn" }}
  <Toolbar>
    {{#unless (and (eq @mode "show") @isWriteWithoutRead)}}
      <ToolbarFilters>
        <Toggle
          @name="json"
          @status="success"
          @size="small"
          @disabled={{and (eq @mode "show") @secretDataIsAdvanced}}
          @checked={{@showAdvancedMode}}
          @onChange={{action @editActions.toggleAdvanced}}
        >
          <span class="has-text-grey">JSON</span>
        </Toggle>
      </ToolbarFilters>
    {{/unless}}
    <ToolbarActions>
      {{#if (eq @mode "show")}}
        <SecretDeleteMenu
          @modelForData={{@modelForData}}
          @model={{@model}}
          @isV2={{@isV2}}
          @refresh={{action @editActions.refresh}}
          @canReadSecretMetadata={{@canReadSecretMetadata}}
        />
      {{/if}}
      {{#if (and (eq @mode "show") @canUpdateSecretData)}}
        {{#unless (and @isV2 (or @isWriteWithoutRead @modelForData.destroyed @modelForData.deleted))}}
          <BasicDropdown
            @class="popup-menu"
            @horizontalPosition="auto-right"
            @verticalPosition="below"
            @onClose={{action "clearWrappedData"}}
            as |D|
          >
            <D.Trigger
              data-test-popup-menu-trigger="true"
              class={{concat "toolbar-link" (if D.isOpen " is-active")}}
              @htmlTag="button"
            >
              Copy
              <Chevron @direction="down" @isButton={{true}} />
            </D.Trigger>
            <D.Content @defaultClass="popup-menu-content is-wide">
              <nav class="box menu">
                <ul class="menu-list">
                  <li class="action">
                    <CopyButton
                      @class="link link-plain has-text-weight-semibold is-ghost"
                      @clipboardText={{stringify @modelForData.secretData}}
                      @success={{action (set-flash-message "JSON Copied!")}}
                      data-test-copy-button
                    >
                      Copy JSON
                    </CopyButton>
                  </li>
                  <li class="action">
                    {{#if this.showWrapButton}}
                      <button
                        class="link link-plain has-text-weight-semibold is-ghost {{if this.isWrapping 'is-loading'}}"
                        type="button"
                        {{on "click" this.handleWrapClick}}
                        data-test-wrap-button
                        disabled={{this.isWrapping}}
                      >
                        Wrap secret
                      </button>
                    {{else}}
                      <MaskedInput
                        @class="has-padding"
                        @displayOnly={{true}}
                        @allowCopy={{true}}
                        @value={{this.wrappedData}}
                      />
                    {{/if}}
                  </li>
                </ul>
              </nav>
            </D.Content>
          </BasicDropdown>
        {{/unless}}
      {{/if}}
  
      {{#if (and (eq @mode "show") @isV2 (not @model.failedServerRead))}}
        <SecretVersionMenu @version={{@modelForData}} @onRefresh={{action @editActions.refresh}} @model={{@model}} />
      {{/if}}
  
      {{#if (and (eq @mode "show") @canUpdateSecretData)}}
        {{#let (concat "vault.cluster.secrets.backend." (if (eq @mode "show") "edit" "show")) as |targetRoute|}}
          {{#if @isV2}}
            <ToolbarLink
              {{! Always create new version from latest if no metadata read access }}
              @route={{targetRoute}}
              @model={{@model.id}}
              @query={{hash version=(if @model.canReadMetadata @modelForData.version "")}}
              @replace={{true}}
              @type="add"
              data-test-secret-edit="true"
            >
              Create new version
            </ToolbarLink>
          {{else}}
            <ToolbarLink @route={{targetRoute}} @model={{@model.id}} @replace={{true}} data-test-secret-edit="true">
              Edit secret
            </ToolbarLink>
          {{/if}}
        {{/let}}
      {{/if}}
    </ToolbarActions>
  </Toolbar>
  */
  {
    "id": "C6XrmRSe",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n\"],[41,[51,[28,[37,2],[[28,[37,3],[[30,1],\"show\"],null],[30,2]],null]],[[[1,\"    \"],[8,[39,4],null,null,[[\"default\"],[[[[1,\"\\n      \"],[8,[39,5],null,[[\"@name\",\"@status\",\"@size\",\"@disabled\",\"@checked\",\"@onChange\"],[\"json\",\"success\",\"small\",[28,[37,2],[[28,[37,3],[[30,1],\"show\"],null],[30,3]],null],[30,4],[28,[37,6],[[30,0],[30,5,[\"toggleAdvanced\"]]],null]]],[[\"default\"],[[[[1,\"\\n        \"],[10,1],[14,0,\"has-text-grey\"],[12],[1,\"JSON\"],[13],[1,\"\\n      \"]],[]]]]],[1,\"\\n    \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"  \"],[8,[39,7],null,null,[[\"default\"],[[[[1,\"\\n\"],[41,[28,[37,3],[[30,1],\"show\"],null],[[[1,\"      \"],[8,[39,9],null,[[\"@modelForData\",\"@model\",\"@isV2\",\"@refresh\",\"@canReadSecretMetadata\"],[[30,6],[30,7],[30,8],[28,[37,6],[[30,0],[30,5,[\"refresh\"]]],null],[30,9]]],null],[1,\"\\n\"]],[]],null],[41,[28,[37,2],[[28,[37,3],[[30,1],\"show\"],null],[30,10]],null],[[[41,[51,[28,[37,2],[[30,8],[28,[37,10],[[30,2],[30,6,[\"destroyed\"]],[30,6,[\"deleted\"]]],null]],null]],[[[1,\"        \"],[8,[39,11],null,[[\"@class\",\"@horizontalPosition\",\"@verticalPosition\",\"@onClose\"],[\"popup-menu\",\"auto-right\",\"below\",[28,[37,6],[[30,0],\"clearWrappedData\"],null]]],[[\"default\"],[[[[1,\"\\n          \"],[8,[30,11,[\"Trigger\"]],[[24,\"data-test-popup-menu-trigger\",\"true\"],[16,0,[28,[37,12],[\"toolbar-link\",[52,[30,11,[\"isOpen\"]],\" is-active\"]],null]]],[[\"@htmlTag\"],[\"button\"]],[[\"default\"],[[[[1,\"\\n            Copy\\n            \"],[8,[39,13],null,[[\"@direction\",\"@isButton\"],[\"down\",true]],null],[1,\"\\n          \"]],[]]]]],[1,\"\\n          \"],[8,[30,11,[\"Content\"]],null,[[\"@defaultClass\"],[\"popup-menu-content is-wide\"]],[[\"default\"],[[[[1,\"\\n            \"],[10,\"nav\"],[14,0,\"box menu\"],[12],[1,\"\\n              \"],[10,\"ul\"],[14,0,\"menu-list\"],[12],[1,\"\\n                \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                  \"],[8,[39,14],[[24,\"data-test-copy-button\",\"\"]],[[\"@class\",\"@clipboardText\",\"@success\"],[\"link link-plain has-text-weight-semibold is-ghost\",[28,[37,15],[[30,6,[\"secretData\"]]],null],[28,[37,6],[[30,0],[28,[37,16],[\"JSON Copied!\"],null]],null]]],[[\"default\"],[[[[1,\"\\n                    Copy JSON\\n                  \"]],[]]]]],[1,\"\\n                \"],[13],[1,\"\\n                \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n\"],[41,[30,0,[\"showWrapButton\"]],[[[1,\"                    \"],[11,\"button\"],[16,0,[29,[\"link link-plain has-text-weight-semibold is-ghost \",[52,[30,0,[\"isWrapping\"]],\"is-loading\"]]]],[24,\"data-test-wrap-button\",\"\"],[16,\"disabled\",[30,0,[\"isWrapping\"]]],[24,4,\"button\"],[4,[38,17],[\"click\",[30,0,[\"handleWrapClick\"]]],null],[12],[1,\"\\n                      Wrap secret\\n                    \"],[13],[1,\"\\n\"]],[]],[[[1,\"                    \"],[8,[39,18],null,[[\"@class\",\"@displayOnly\",\"@allowCopy\",\"@value\"],[\"has-padding\",true,true,[30,0,[\"wrappedData\"]]]],null],[1,\"\\n\"]],[]]],[1,\"                \"],[13],[1,\"\\n              \"],[13],[1,\"\\n            \"],[13],[1,\"\\n          \"]],[]]]]],[1,\"\\n        \"]],[11]]]]],[1,\"\\n\"]],[]],null]],[]],null],[1,\"\\n\"],[41,[28,[37,2],[[28,[37,3],[[30,1],\"show\"],null],[30,8],[28,[37,19],[[30,7,[\"failedServerRead\"]]],null]],null],[[[1,\"      \"],[8,[39,20],null,[[\"@version\",\"@onRefresh\",\"@model\"],[[30,6],[28,[37,6],[[30,0],[30,5,[\"refresh\"]]],null],[30,7]]],null],[1,\"\\n\"]],[]],null],[1,\"\\n\"],[41,[28,[37,2],[[28,[37,3],[[30,1],\"show\"],null],[30,10]],null],[[[44,[[28,[37,12],[\"vault.cluster.secrets.backend.\",[52,[28,[37,3],[[30,1],\"show\"],null],\"edit\",\"show\"]],null]],[[[41,[30,8],[[[1,\"          \"],[8,[39,22],[[24,\"data-test-secret-edit\",\"true\"]],[[\"@route\",\"@model\",\"@query\",\"@replace\",\"@type\"],[[30,12],[30,7,[\"id\"]],[28,[37,23],null,[[\"version\"],[[52,[30,7,[\"canReadMetadata\"]],[30,6,[\"version\"]],\"\"]]]],true,\"add\"]],[[\"default\"],[[[[1,\"\\n            Create new version\\n          \"]],[]]]]],[1,\"\\n\"]],[]],[[[1,\"          \"],[8,[39,22],[[24,\"data-test-secret-edit\",\"true\"]],[[\"@route\",\"@model\",\"@replace\"],[[30,12],[30,7,[\"id\"]],true]],[[\"default\"],[[[[1,\"\\n            Edit secret\\n          \"]],[]]]]],[1,\"\\n\"]],[]]]],[12]]]],[]],null],[1,\"  \"]],[]]]]],[1,\"\\n\"]],[]]]]]],[\"@mode\",\"@isWriteWithoutRead\",\"@secretDataIsAdvanced\",\"@showAdvancedMode\",\"@editActions\",\"@modelForData\",\"@model\",\"@isV2\",\"@canReadSecretMetadata\",\"@canUpdateSecretData\",\"D\",\"targetRoute\"],false,[\"toolbar\",\"unless\",\"and\",\"eq\",\"toolbar-filters\",\"toggle\",\"action\",\"toolbar-actions\",\"if\",\"secret-delete-menu\",\"or\",\"basic-dropdown\",\"concat\",\"chevron\",\"copy-button\",\"stringify\",\"set-flash-message\",\"on\",\"masked-input\",\"not\",\"secret-version-menu\",\"let\",\"toolbar-link\",\"hash\"]]",
    "moduleName": "vault/templates/components/secret-edit-toolbar.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/secret-edit", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <div {{did-insert this.createKvData @model}}>
    <PageHeader as |p|>
      <p.top>
        <KeyValueHeader
          @baseKey={{@baseKey}}
          @path="vault.cluster.secrets.backend.list"
          @mode={{@mode}}
          @root={{@root}}
          @showCurrent={{true}}
        />
      </p.top>
      <p.levelLeft>
        <h1 class="title is-3">
          {{#if (eq @mode "create")}}
            Create secret
          {{else if (and this.isV2 (eq @mode "edit"))}}
            Create new version
          {{else if (eq @mode "edit")}}
            Edit secret
          {{else}}
            {{@key.id}}
          {{/if}}
        </h1>
      </p.levelLeft>
    </PageHeader>
    {{! tabs for show only }}
    {{#if (eq @mode "show")}}
      <div class="tabs-container box is-bottomless is-marginless is-fullwidth is-paddingless">
        <nav class="tabs">
          <ul>
            <LinkTo @route="vault.cluster.secrets.backend.show" @model={{@key.id}} data-test-secret-tab>
              Secret
            </LinkTo>
            {{! must have read access to /metadata see tab or update to update metadata}}
            {{#if (or this.canReadSecretMetadata this.canUpdateSecretMetadata)}}
              <LinkTo @route="vault.cluster.secrets.backend.metadata" @model={{@key.id}} data-test-secret-metadata-tab>
                Metadata
              </LinkTo>
            {{/if}}
          </ul>
        </nav>
      </div>
    {{/if}}
  
    {{#if (and @model (not-eq this.secretData null))}}
      <SecretEditToolbar
        @mode={{@mode}}
        @model={{@model}}
        @isV2={{this.isV2}}
        @isWriteWithoutRead={{this.isWriteWithoutRead}}
        @secretDataIsAdvanced={{this.secretDataIsAdvanced}}
        @showAdvancedMode={{this.showAdvancedMode}}
        @modelForData={{this.modelForData}}
        @canUpdateSecretData={{this.canUpdateSecretData}}
        @canReadSecretMetadata={{this.canReadSecretMetadata}}
        @codemirrorString={{this.codemirrorString}}
        @editActions={{hash toggleAdvanced=(action "toggleAdvanced") refresh=(action "refresh")}}
      />
  
      {{#if (or (eq @mode "create") (eq @mode "edit"))}}
        <SecretCreateOrUpdate
          @mode={{@mode}}
          @model={{@model}}
          @showAdvancedMode={{this.showAdvancedMode}}
          @modelForData={{this.modelForData}}
          @error={{this.error}}
          @isV2={{this.isV2}}
          @secretData={{this.secretData}}
          @buttonDisabled={{this.buttonDisabled}}
          @canUpdateSecretMetadata={{this.canUpdateSecretMetadata}}
          @canReadSecretData={{this.canReadSecretData}}
          @canReadSecretMetadata={{this.canReadSecretMetadata}}
        />
      {{else if (eq @mode "show")}}
        <SecretFormShow
          @isV2={{this.isV2}}
          @modelForData={{this.modelForData}}
          @isWriteWithoutRead={{this.isWriteWithoutRead}}
          @showAdvancedMode={{this.showAdvancedMode}}
        />
      {{else}}
        <EmptyState @title="No secret view was selected" />
      {{/if}}
    {{/if}}
  </div>
  */
  {
    "id": "RS5Zdi0B",
    "block": "[[[11,0],[4,[38,0],[[30,0,[\"createKvData\"]],[30,1]],null],[12],[1,\"\\n  \"],[8,[39,1],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[30,2,[\"top\"]],null,null,[[\"default\"],[[[[1,\"\\n      \"],[8,[39,2],null,[[\"@baseKey\",\"@path\",\"@mode\",\"@root\",\"@showCurrent\"],[[30,3],\"vault.cluster.secrets.backend.list\",[30,4],[30,5],true]],null],[1,\"\\n    \"]],[]]]]],[1,\"\\n    \"],[8,[30,2,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n      \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n\"],[41,[28,[37,4],[[30,4],\"create\"],null],[[[1,\"          Create secret\\n\"]],[]],[[[41,[28,[37,5],[[30,0,[\"isV2\"]],[28,[37,4],[[30,4],\"edit\"],null]],null],[[[1,\"          Create new version\\n\"]],[]],[[[41,[28,[37,4],[[30,4],\"edit\"],null],[[[1,\"          Edit secret\\n\"]],[]],[[[1,\"          \"],[1,[30,6,[\"id\"]]],[1,\"\\n        \"]],[]]]],[]]]],[]]],[1,\"      \"],[13],[1,\"\\n    \"]],[]]]]],[1,\"\\n  \"]],[2]]]]],[1,\"\\n\"],[41,[28,[37,4],[[30,4],\"show\"],null],[[[1,\"    \"],[10,0],[14,0,\"tabs-container box is-bottomless is-marginless is-fullwidth is-paddingless\"],[12],[1,\"\\n      \"],[10,\"nav\"],[14,0,\"tabs\"],[12],[1,\"\\n        \"],[10,\"ul\"],[12],[1,\"\\n          \"],[8,[39,6],[[24,\"data-test-secret-tab\",\"\"]],[[\"@route\",\"@model\"],[\"vault.cluster.secrets.backend.show\",[30,6,[\"id\"]]]],[[\"default\"],[[[[1,\"\\n            Secret\\n          \"]],[]]]]],[1,\"\\n\"],[41,[28,[37,7],[[30,0,[\"canReadSecretMetadata\"]],[30,0,[\"canUpdateSecretMetadata\"]]],null],[[[1,\"            \"],[8,[39,6],[[24,\"data-test-secret-metadata-tab\",\"\"]],[[\"@route\",\"@model\"],[\"vault.cluster.secrets.backend.metadata\",[30,6,[\"id\"]]]],[[\"default\"],[[[[1,\"\\n              Metadata\\n            \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n\"]],[]],null],[1,\"\\n\"],[41,[28,[37,5],[[30,1],[28,[37,8],[[30,0,[\"secretData\"]],null],null]],null],[[[1,\"    \"],[8,[39,9],null,[[\"@mode\",\"@model\",\"@isV2\",\"@isWriteWithoutRead\",\"@secretDataIsAdvanced\",\"@showAdvancedMode\",\"@modelForData\",\"@canUpdateSecretData\",\"@canReadSecretMetadata\",\"@codemirrorString\",\"@editActions\"],[[30,4],[30,1],[30,0,[\"isV2\"]],[30,0,[\"isWriteWithoutRead\"]],[30,0,[\"secretDataIsAdvanced\"]],[30,0,[\"showAdvancedMode\"]],[30,0,[\"modelForData\"]],[30,0,[\"canUpdateSecretData\"]],[30,0,[\"canReadSecretMetadata\"]],[30,0,[\"codemirrorString\"]],[28,[37,10],null,[[\"toggleAdvanced\",\"refresh\"],[[28,[37,11],[[30,0],\"toggleAdvanced\"],null],[28,[37,11],[[30,0],\"refresh\"],null]]]]]],null],[1,\"\\n\\n\"],[41,[28,[37,7],[[28,[37,4],[[30,4],\"create\"],null],[28,[37,4],[[30,4],\"edit\"],null]],null],[[[1,\"      \"],[8,[39,12],null,[[\"@mode\",\"@model\",\"@showAdvancedMode\",\"@modelForData\",\"@error\",\"@isV2\",\"@secretData\",\"@buttonDisabled\",\"@canUpdateSecretMetadata\",\"@canReadSecretData\",\"@canReadSecretMetadata\"],[[30,4],[30,1],[30,0,[\"showAdvancedMode\"]],[30,0,[\"modelForData\"]],[30,0,[\"error\"]],[30,0,[\"isV2\"]],[30,0,[\"secretData\"]],[30,0,[\"buttonDisabled\"]],[30,0,[\"canUpdateSecretMetadata\"]],[30,0,[\"canReadSecretData\"]],[30,0,[\"canReadSecretMetadata\"]]]],null],[1,\"\\n\"]],[]],[[[41,[28,[37,4],[[30,4],\"show\"],null],[[[1,\"      \"],[8,[39,13],null,[[\"@isV2\",\"@modelForData\",\"@isWriteWithoutRead\",\"@showAdvancedMode\"],[[30,0,[\"isV2\"]],[30,0,[\"modelForData\"]],[30,0,[\"isWriteWithoutRead\"]],[30,0,[\"showAdvancedMode\"]]]],null],[1,\"\\n\"]],[]],[[[1,\"      \"],[8,[39,14],null,[[\"@title\"],[\"No secret view was selected\"]],null],[1,\"\\n    \"]],[]]]],[]]]],[]],null],[13]],[\"@model\",\"p\",\"@baseKey\",\"@mode\",\"@root\",\"@key\"],false,[\"did-insert\",\"page-header\",\"key-value-header\",\"if\",\"eq\",\"and\",\"link-to\",\"or\",\"not-eq\",\"secret-edit-toolbar\",\"hash\",\"action\",\"secret-create-or-update\",\"secret-form-show\",\"empty-state\"]]",
    "moduleName": "vault/templates/components/secret-edit.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/secret-form-show", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{#if (and @isV2 @modelForData.destroyed)}}
    <EmptyState
      @title="Version {{@modelForData.version}} of this secret has been permanently destroyed"
      @message="A version that has been permanently deleted cannot be restored. You can see other versions of this secret in the History menu."
    >
      <DocLink @path="/docs/secrets/kv/kv-v2">
        Learn more
      </DocLink>
    </EmptyState>
  {{else if (and @isV2 @modelForData.deleted)}}
    <EmptyState
      @title="Version {{@modelForData.version}} of this secret has been deleted"
      @message="A version that has been deleted but can be undeleted using the Version {{@modelForData.version}} menu above.
        You can also see other versions of this secret in the History menu."
    >
      <DocLink @path="/docs/secrets/kv/kv-v2">
        Learn more
      </DocLink>
    </EmptyState>
  {{else if @isWriteWithoutRead}}
    <EmptyState
      data-test-write-without-read-empty-message
      @title="You do not have permission to read this secret."
      @message={{if
        @isV2
        "Your policies permit you to write a new version of this secret, but do not allow you to read its current contents."
        "Your policies permit you to overwrite this secret, but do not allow you to read it."
      }}
    />
  {{else}}
    {{#if @showAdvancedMode}}
      <div class="has-top-margin-s">
        <JsonEditor
          @title={{if @isV2 "Version Data" "Secret Data"}}
          @value={{@modelForData.dataAsJSONString}}
          @readOnly={{true}}
        />
      </div>
    {{else}}
      <div class="info-table-row-header">
        <div class="info-table-row thead">
          <div class="th column is-one-quarter">
            Key
          </div>
          <div class="th column">
            Value
          </div>
          <div class="th column justify-right" data-test-created-time>
            {{#if @modelForData.createdTime}}
              <ToolTip @verticalPosition="above" @horizontalPosition="center" as |T|>
                <T.Trigger data-test-tooltip-trigger tabindex="-1">
                  Version created
                  {{date-format @modelForData.createdTime "MMM dd, yyyy hh:mm a"}}
                </T.Trigger>
                <T.Content @defaultClass="tool-tip smaller-font">
                  <div class="box" data-test-hover-copy-tooltip-text>
                    {{@modelForData.createdTime}}
                  </div>
                </T.Content>
              </ToolTip>
            {{/if}}
          </div>
        </div>
      </div>
      {{#if @modelForData.secretKeyAndValue}}
        {{#each @modelForData.secretKeyAndValue as |secret|}}
          <InfoTableRow @label={{secret.key}} @value={{secret.value}} @alwaysRender={{true}}>
            {{#if secret.value}}
              <MaskedInput
                @name={{secret.key}}
                @value={{secret.value}}
                @displayOnly={{true}}
                @allowCopy={{true}}
                @allowDownload={{@isV2}}
              />
            {{else}}
              <Icon @name="minus" />
            {{/if}}
          </InfoTableRow>
        {{/each}}
      {{else}}
        {{! In the case of no key or value <InfoTableRow> will still render }}
        <InfoTableRow @label="" @value="" @alwaysRender={{true}}>
          <Icon @name="minus" />
        </InfoTableRow>
      {{/if}}
    {{/if}}
  {{/if}}
  */
  {
    "id": "EYeGaNSy",
    "block": "[[[41,[28,[37,1],[[30,1],[30,2,[\"destroyed\"]]],null],[[[1,\"  \"],[8,[39,2],null,[[\"@title\",\"@message\"],[[29,[\"Version \",[30,2,[\"version\"]],\" of this secret has been permanently destroyed\"]],\"A version that has been permanently deleted cannot be restored. You can see other versions of this secret in the History menu.\"]],[[\"default\"],[[[[1,\"\\n    \"],[8,[39,3],null,[[\"@path\"],[\"/docs/secrets/kv/kv-v2\"]],[[\"default\"],[[[[1,\"\\n      Learn more\\n    \"]],[]]]]],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]],[[[41,[28,[37,1],[[30,1],[30,2,[\"deleted\"]]],null],[[[1,\"  \"],[8,[39,2],null,[[\"@title\",\"@message\"],[[29,[\"Version \",[30,2,[\"version\"]],\" of this secret has been deleted\"]],[29,[\"A version that has been deleted but can be undeleted using the Version \",[30,2,[\"version\"]],\" menu above.\\n      You can also see other versions of this secret in the History menu.\"]]]],[[\"default\"],[[[[1,\"\\n    \"],[8,[39,3],null,[[\"@path\"],[\"/docs/secrets/kv/kv-v2\"]],[[\"default\"],[[[[1,\"\\n      Learn more\\n    \"]],[]]]]],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]],[[[41,[30,3],[[[1,\"  \"],[8,[39,2],[[24,\"data-test-write-without-read-empty-message\",\"\"]],[[\"@title\",\"@message\"],[\"You do not have permission to read this secret.\",[52,[30,1],\"Your policies permit you to write a new version of this secret, but do not allow you to read its current contents.\",\"Your policies permit you to overwrite this secret, but do not allow you to read it.\"]]],null],[1,\"\\n\"]],[]],[[[41,[30,4],[[[1,\"    \"],[10,0],[14,0,\"has-top-margin-s\"],[12],[1,\"\\n      \"],[8,[39,4],null,[[\"@title\",\"@value\",\"@readOnly\"],[[52,[30,1],\"Version Data\",\"Secret Data\"],[30,2,[\"dataAsJSONString\"]],true]],null],[1,\"\\n    \"],[13],[1,\"\\n\"]],[]],[[[1,\"    \"],[10,0],[14,0,\"info-table-row-header\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"info-table-row thead\"],[12],[1,\"\\n        \"],[10,0],[14,0,\"th column is-one-quarter\"],[12],[1,\"\\n          Key\\n        \"],[13],[1,\"\\n        \"],[10,0],[14,0,\"th column\"],[12],[1,\"\\n          Value\\n        \"],[13],[1,\"\\n        \"],[10,0],[14,0,\"th column justify-right\"],[14,\"data-test-created-time\",\"\"],[12],[1,\"\\n\"],[41,[30,2,[\"createdTime\"]],[[[1,\"            \"],[8,[39,5],null,[[\"@verticalPosition\",\"@horizontalPosition\"],[\"above\",\"center\"]],[[\"default\"],[[[[1,\"\\n              \"],[8,[30,5,[\"Trigger\"]],[[24,\"data-test-tooltip-trigger\",\"\"],[24,\"tabindex\",\"-1\"]],null,[[\"default\"],[[[[1,\"\\n                Version created\\n                \"],[1,[28,[35,6],[[30,2,[\"createdTime\"]],\"MMM dd, yyyy hh:mm a\"],null]],[1,\"\\n              \"]],[]]]]],[1,\"\\n              \"],[8,[30,5,[\"Content\"]],null,[[\"@defaultClass\"],[\"tool-tip smaller-font\"]],[[\"default\"],[[[[1,\"\\n                \"],[10,0],[14,0,\"box\"],[14,\"data-test-hover-copy-tooltip-text\",\"\"],[12],[1,\"\\n                  \"],[1,[30,2,[\"createdTime\"]]],[1,\"\\n                \"],[13],[1,\"\\n              \"]],[]]]]],[1,\"\\n            \"]],[5]]]]],[1,\"\\n\"]],[]],null],[1,\"        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n\"],[41,[30,2,[\"secretKeyAndValue\"]],[[[42,[28,[37,8],[[28,[37,8],[[30,2,[\"secretKeyAndValue\"]]],null]],null],null,[[[1,\"        \"],[8,[39,9],null,[[\"@label\",\"@value\",\"@alwaysRender\"],[[30,6,[\"key\"]],[30,6,[\"value\"]],true]],[[\"default\"],[[[[1,\"\\n\"],[41,[30,6,[\"value\"]],[[[1,\"            \"],[8,[39,10],null,[[\"@name\",\"@value\",\"@displayOnly\",\"@allowCopy\",\"@allowDownload\"],[[30,6,[\"key\"]],[30,6,[\"value\"]],true,true,[30,1]]],null],[1,\"\\n\"]],[]],[[[1,\"            \"],[8,[39,11],null,[[\"@name\"],[\"minus\"]],null],[1,\"\\n\"]],[]]],[1,\"        \"]],[]]]]],[1,\"\\n\"]],[6]],null]],[]],[[[1,\"      \"],[8,[39,9],null,[[\"@label\",\"@value\",\"@alwaysRender\"],[\"\",\"\",true]],[[\"default\"],[[[[1,\"\\n        \"],[8,[39,11],null,[[\"@name\"],[\"minus\"]],null],[1,\"\\n      \"]],[]]]]],[1,\"\\n\"]],[]]]],[]]]],[]]]],[]]]],[]]]],[\"@isV2\",\"@modelForData\",\"@isWriteWithoutRead\",\"@showAdvancedMode\",\"T\",\"secret\"],false,[\"if\",\"and\",\"empty-state\",\"doc-link\",\"json-editor\",\"tool-tip\",\"date-format\",\"each\",\"-track-array\",\"info-table-row\",\"masked-input\",\"icon\"]]",
    "moduleName": "vault/templates/components/secret-form-show.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/secret-link", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <LinkTo @route={{this.link.route}} @models={{this.link.models}} @query={{this.query}} @disabled={{@disabled}} ...attributes>
    {{yield}}
  </LinkTo>
  */
  {
    "id": "moXSqkaY",
    "block": "[[[8,[39,0],[[17,1]],[[\"@route\",\"@models\",\"@query\",\"@disabled\"],[[30,0,[\"link\",\"route\"]],[30,0,[\"link\",\"models\"]],[30,0,[\"query\"]],[30,2]]],[[\"default\"],[[[[1,\"\\n  \"],[18,3,null],[1,\"\\n\"]],[]]]]]],[\"&attrs\",\"@disabled\",\"&default\"],false,[\"link-to\",\"yield\"]]",
    "moduleName": "vault/templates/components/secret-link.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/secret-list/aws-role-item", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <LinkedBlock
    @params={{array (concat "vault.cluster.secrets.backend." "credentials" (unless @item.id "-root")) @item.id}}
    class="list-item-row"
    data-test-secret-link={{@item.id}}
    @encode={{true}}
  >
    <div class="columns is-mobile">
      <div class="column is-10">
        <LinkTo
          @route={{concat "vault.cluster.secrets.backend." "credentials" (unless @item.id "-root")}}
          @model={{@item.id}}
          class="has-text-black has-text-weight-semibold"
        >
          <Icon @name="user" class="has-text-grey-light is-pulled-left" />
          <div class="role-item-details">
            <span class="is-underline">{{if (eq @item.id " ") "(self)" (or @item.keyWithoutParent @item.id)}}</span>
          </div>
        </LinkTo>
      </div>
      <div class="column has-text-right">
        <PopupMenu @name="role-aws-nav" @contentClass="is-wide">
          <Confirm as |c|>
            <nav class="menu">
              <ul class="menu-list">
                {{#if @item.generatePath.isPending}}
                  <li class="action">
                    <button disabled type="button" class="link button is-loading is-transparent">
                      loading
                    </button>
                  </li>
                {{else if @item.canGenerate}}
                  <li class="action">
                    <LinkTo
                      @route="vault.cluster.secrets.backend.credentials"
                      @model={{@item.id}}
                      data-test-role-aws-link="generate"
                    >
                      Generate credentials
                    </LinkTo>
                  </li>
                {{/if}}
                {{#if @item.updatePath.isPending}}
                  <li class="action">
                    <button disabled type="button" class="link button is-loading is-transparent">
                      loading
                    </button>
                  </li>
                  <li class="action">
                    <button disabled type="button" class="link button is-loading is-transparent">
                      loading
                    </button>
                  </li>
                {{else}}
                  {{#if @item.canRead}}
                    <li class="action">
                      <LinkTo @route="vault.cluster.secrets.backend.show" @model={{@item.id}} data-test-role-ssh-link="show">
                        Details
                      </LinkTo>
                    </li>
                  {{/if}}
                  {{#if @item.canEdit}}
                    <li class="action">
                      <LinkTo @route="vault.cluster.secrets.backend.edit" @model={{@item.id}} data-test-role-ssh-link="edit">
                        Edit
                      </LinkTo>
                    </li>
                  {{/if}}
                  {{#if @item.canDelete}}
                    <li class="action">
                      <c.Message @id={{@item.id}} @onConfirm={{@delete}} data-test-aws-role-delete={{@item.id}} />
                    </li>
                  {{/if}}
                {{/if}}
              </ul>
            </nav>
          </Confirm>
        </PopupMenu>
      </div>
    </div>
  </LinkedBlock>
  */
  {
    "id": "ZveJbLDS",
    "block": "[[[8,[39,0],[[24,0,\"list-item-row\"],[16,\"data-test-secret-link\",[30,1,[\"id\"]]]],[[\"@params\",\"@encode\"],[[28,[37,1],[[28,[37,2],[\"vault.cluster.secrets.backend.\",\"credentials\",[52,[51,[30,1,[\"id\"]]],\"-root\"]],null],[30,1,[\"id\"]]],null],true]],[[\"default\"],[[[[1,\"\\n  \"],[10,0],[14,0,\"columns is-mobile\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"column is-10\"],[12],[1,\"\\n      \"],[8,[39,4],[[24,0,\"has-text-black has-text-weight-semibold\"]],[[\"@route\",\"@model\"],[[28,[37,2],[\"vault.cluster.secrets.backend.\",\"credentials\",[52,[51,[30,1,[\"id\"]]],\"-root\"]],null],[30,1,[\"id\"]]]],[[\"default\"],[[[[1,\"\\n        \"],[8,[39,5],[[24,0,\"has-text-grey-light is-pulled-left\"]],[[\"@name\"],[\"user\"]],null],[1,\"\\n        \"],[10,0],[14,0,\"role-item-details\"],[12],[1,\"\\n          \"],[10,1],[14,0,\"is-underline\"],[12],[1,[52,[28,[37,7],[[30,1,[\"id\"]],\" \"],null],\"(self)\",[28,[37,8],[[30,1,[\"keyWithoutParent\"]],[30,1,[\"id\"]]],null]]],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"]],[]]]]],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"column has-text-right\"],[12],[1,\"\\n      \"],[8,[39,9],null,[[\"@name\",\"@contentClass\"],[\"role-aws-nav\",\"is-wide\"]],[[\"default\"],[[[[1,\"\\n        \"],[8,[39,10],null,null,[[\"default\"],[[[[1,\"\\n          \"],[10,\"nav\"],[14,0,\"menu\"],[12],[1,\"\\n            \"],[10,\"ul\"],[14,0,\"menu-list\"],[12],[1,\"\\n\"],[41,[30,1,[\"generatePath\",\"isPending\"]],[[[1,\"                \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                  \"],[10,\"button\"],[14,\"disabled\",\"\"],[14,0,\"link button is-loading is-transparent\"],[14,4,\"button\"],[12],[1,\"\\n                    loading\\n                  \"],[13],[1,\"\\n                \"],[13],[1,\"\\n\"]],[]],[[[41,[30,1,[\"canGenerate\"]],[[[1,\"                \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                  \"],[8,[39,4],[[24,\"data-test-role-aws-link\",\"generate\"]],[[\"@route\",\"@model\"],[\"vault.cluster.secrets.backend.credentials\",[30,1,[\"id\"]]]],[[\"default\"],[[[[1,\"\\n                    Generate credentials\\n                  \"]],[]]]]],[1,\"\\n                \"],[13],[1,\"\\n              \"]],[]],null]],[]]],[41,[30,1,[\"updatePath\",\"isPending\"]],[[[1,\"                \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                  \"],[10,\"button\"],[14,\"disabled\",\"\"],[14,0,\"link button is-loading is-transparent\"],[14,4,\"button\"],[12],[1,\"\\n                    loading\\n                  \"],[13],[1,\"\\n                \"],[13],[1,\"\\n                \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                  \"],[10,\"button\"],[14,\"disabled\",\"\"],[14,0,\"link button is-loading is-transparent\"],[14,4,\"button\"],[12],[1,\"\\n                    loading\\n                  \"],[13],[1,\"\\n                \"],[13],[1,\"\\n\"]],[]],[[[41,[30,1,[\"canRead\"]],[[[1,\"                  \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                    \"],[8,[39,4],[[24,\"data-test-role-ssh-link\",\"show\"]],[[\"@route\",\"@model\"],[\"vault.cluster.secrets.backend.show\",[30,1,[\"id\"]]]],[[\"default\"],[[[[1,\"\\n                      Details\\n                    \"]],[]]]]],[1,\"\\n                  \"],[13],[1,\"\\n\"]],[]],null],[41,[30,1,[\"canEdit\"]],[[[1,\"                  \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                    \"],[8,[39,4],[[24,\"data-test-role-ssh-link\",\"edit\"]],[[\"@route\",\"@model\"],[\"vault.cluster.secrets.backend.edit\",[30,1,[\"id\"]]]],[[\"default\"],[[[[1,\"\\n                      Edit\\n                    \"]],[]]]]],[1,\"\\n                  \"],[13],[1,\"\\n\"]],[]],null],[41,[30,1,[\"canDelete\"]],[[[1,\"                  \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                    \"],[8,[30,2,[\"Message\"]],[[16,\"data-test-aws-role-delete\",[30,1,[\"id\"]]]],[[\"@id\",\"@onConfirm\"],[[30,1,[\"id\"]],[30,3]]],null],[1,\"\\n                  \"],[13],[1,\"\\n\"]],[]],null]],[]]],[1,\"            \"],[13],[1,\"\\n          \"],[13],[1,\"\\n        \"]],[2]]]]],[1,\"\\n      \"]],[]]]]],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[\"@item\",\"c\",\"@delete\"],false,[\"linked-block\",\"array\",\"concat\",\"unless\",\"link-to\",\"icon\",\"if\",\"eq\",\"or\",\"popup-menu\",\"confirm\"]]",
    "moduleName": "vault/templates/components/secret-list/aws-role-item.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/secret-list/database-list-item", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <LinkedBlock
    @params={{array "vault.cluster.secrets.backend.show" (if this.keyTypeValue (concat "role/" @item.id) @item.id)}}
    class="list-item-row"
    data-test-secret-link={{@item.id}}
    @encode={{true}}
    @queryParams={{secret-query-params @backendType @item.type}}
  >
    <div class="columns is-mobile">
      <div class="column is-10">
        <LinkTo
          @route={{concat "vault.cluster.secrets.backend.show"}}
          @model={{if this.keyTypeValue (concat "role/" @item.id) @item.id}}
          @query={{secret-query-params @backendType @item.type}}
          class="has-text-black has-text-weight-semibold"
        >
          <Icon @name="user" class="has-text-grey-light is-pulled-left" />
          <div class="role-item-details">
            <span class="is-underline">{{if (eq @item.id " ") "(self)" (or @item.keyWithoutParent @item.id)}}</span>
            <span class="tag has-text-grey-dark">{{this.keyTypeValue}}</span>
          </div>
        </LinkTo>
      </div>
      <div class="column has-text-right">
        <PopupMenu name="secret-menu">
          <nav class="menu">
            <ul class="menu-list">
              {{#if @item.canEdit}}
                <li class="action">
                  <SecretLink @mode="show" @secret={{@item.id}} class="has-text-black has-text-weight-semibold">
                    Edit connection
                  </SecretLink>
                </li>
              {{/if}}
              {{#if @item.canEditRole}}
                <li class="action">
                  <SecretLink @mode="edit" @secret={{concat "role/" @item.id}} class="has-text-black has-text-weight-semibold">
                    Edit Role
                  </SecretLink>
                </li>
              {{/if}}
              {{#if @item.canReset}}
                <li class="action">
                  <button type="button" class="link" {{on "click" (fn this.resetConnection @item.id)}}>
                    Reset connection
                  </button>
                </li>
              {{/if}}
              {{#if (and (eq @item.type "dynamic") @item.canGenerateCredentials)}}
                <li class="action">
                  <LinkTo
                    @route="vault.cluster.secrets.backend.credentials"
                    @model={{@item.id}}
                    @query={{hash roleType=this.keyTypeValue}}
                  >
                    Generate credentials
                  </LinkTo>
                </li>
              {{else if (and (eq @item.type "static") @item.canGetCredentials)}}
                <li class="action">
                  <LinkTo
                    @route="vault.cluster.secrets.backend.credentials"
                    @model={{@item.id}}
                    @query={{hash roleType=this.keyTypeValue}}
                  >
                    Get credentials
                  </LinkTo>
                </li>
              {{/if}}
              {{#if (and @item.canRotateRoleCredentials (eq this.keyTypeValue "static"))}}
                <li class="action">
                  <button type="button" class="link" {{on "click" (fn this.rotateRoleCred @item.id)}}>
                    Rotate credentials
                  </button>
                </li>
              {{/if}}
              {{#if @item.canRotateRoot}}
                <li class="action">
                  <button type="button" class="link" {{on "click" (fn this.rotateRootCred @item.id)}}>
                    Rotate root credentials
                  </button>
                </li>
              {{/if}}
            </ul>
          </nav>
        </PopupMenu>
      </div>
    </div>
  </LinkedBlock>
  */
  {
    "id": "t8Xjieip",
    "block": "[[[8,[39,0],[[24,0,\"list-item-row\"],[16,\"data-test-secret-link\",[30,1,[\"id\"]]]],[[\"@params\",\"@encode\",\"@queryParams\"],[[28,[37,1],[\"vault.cluster.secrets.backend.show\",[52,[30,0,[\"keyTypeValue\"]],[28,[37,3],[\"role/\",[30,1,[\"id\"]]],null],[30,1,[\"id\"]]]],null],true,[28,[37,4],[[30,2],[30,1,[\"type\"]]],null]]],[[\"default\"],[[[[1,\"\\n  \"],[10,0],[14,0,\"columns is-mobile\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"column is-10\"],[12],[1,\"\\n      \"],[8,[39,5],[[24,0,\"has-text-black has-text-weight-semibold\"]],[[\"@route\",\"@model\",\"@query\"],[[28,[37,3],[\"vault.cluster.secrets.backend.show\"],null],[52,[30,0,[\"keyTypeValue\"]],[28,[37,3],[\"role/\",[30,1,[\"id\"]]],null],[30,1,[\"id\"]]],[28,[37,4],[[30,2],[30,1,[\"type\"]]],null]]],[[\"default\"],[[[[1,\"\\n        \"],[8,[39,6],[[24,0,\"has-text-grey-light is-pulled-left\"]],[[\"@name\"],[\"user\"]],null],[1,\"\\n        \"],[10,0],[14,0,\"role-item-details\"],[12],[1,\"\\n          \"],[10,1],[14,0,\"is-underline\"],[12],[1,[52,[28,[37,7],[[30,1,[\"id\"]],\" \"],null],\"(self)\",[28,[37,8],[[30,1,[\"keyWithoutParent\"]],[30,1,[\"id\"]]],null]]],[13],[1,\"\\n          \"],[10,1],[14,0,\"tag has-text-grey-dark\"],[12],[1,[30,0,[\"keyTypeValue\"]]],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"]],[]]]]],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"column has-text-right\"],[12],[1,\"\\n      \"],[8,[39,9],[[24,3,\"secret-menu\"]],null,[[\"default\"],[[[[1,\"\\n        \"],[10,\"nav\"],[14,0,\"menu\"],[12],[1,\"\\n          \"],[10,\"ul\"],[14,0,\"menu-list\"],[12],[1,\"\\n\"],[41,[30,1,[\"canEdit\"]],[[[1,\"              \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                \"],[8,[39,10],[[24,0,\"has-text-black has-text-weight-semibold\"]],[[\"@mode\",\"@secret\"],[\"show\",[30,1,[\"id\"]]]],[[\"default\"],[[[[1,\"\\n                  Edit connection\\n                \"]],[]]]]],[1,\"\\n              \"],[13],[1,\"\\n\"]],[]],null],[41,[30,1,[\"canEditRole\"]],[[[1,\"              \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                \"],[8,[39,10],[[24,0,\"has-text-black has-text-weight-semibold\"]],[[\"@mode\",\"@secret\"],[\"edit\",[28,[37,3],[\"role/\",[30,1,[\"id\"]]],null]]],[[\"default\"],[[[[1,\"\\n                  Edit Role\\n                \"]],[]]]]],[1,\"\\n              \"],[13],[1,\"\\n\"]],[]],null],[41,[30,1,[\"canReset\"]],[[[1,\"              \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                \"],[11,\"button\"],[24,0,\"link\"],[24,4,\"button\"],[4,[38,11],[\"click\",[28,[37,12],[[30,0,[\"resetConnection\"]],[30,1,[\"id\"]]],null]],null],[12],[1,\"\\n                  Reset connection\\n                \"],[13],[1,\"\\n              \"],[13],[1,\"\\n\"]],[]],null],[41,[28,[37,13],[[28,[37,7],[[30,1,[\"type\"]],\"dynamic\"],null],[30,1,[\"canGenerateCredentials\"]]],null],[[[1,\"              \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                \"],[8,[39,5],null,[[\"@route\",\"@model\",\"@query\"],[\"vault.cluster.secrets.backend.credentials\",[30,1,[\"id\"]],[28,[37,14],null,[[\"roleType\"],[[30,0,[\"keyTypeValue\"]]]]]]],[[\"default\"],[[[[1,\"\\n                  Generate credentials\\n                \"]],[]]]]],[1,\"\\n              \"],[13],[1,\"\\n\"]],[]],[[[41,[28,[37,13],[[28,[37,7],[[30,1,[\"type\"]],\"static\"],null],[30,1,[\"canGetCredentials\"]]],null],[[[1,\"              \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                \"],[8,[39,5],null,[[\"@route\",\"@model\",\"@query\"],[\"vault.cluster.secrets.backend.credentials\",[30,1,[\"id\"]],[28,[37,14],null,[[\"roleType\"],[[30,0,[\"keyTypeValue\"]]]]]]],[[\"default\"],[[[[1,\"\\n                  Get credentials\\n                \"]],[]]]]],[1,\"\\n              \"],[13],[1,\"\\n            \"]],[]],null]],[]]],[41,[28,[37,13],[[30,1,[\"canRotateRoleCredentials\"]],[28,[37,7],[[30,0,[\"keyTypeValue\"]],\"static\"],null]],null],[[[1,\"              \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                \"],[11,\"button\"],[24,0,\"link\"],[24,4,\"button\"],[4,[38,11],[\"click\",[28,[37,12],[[30,0,[\"rotateRoleCred\"]],[30,1,[\"id\"]]],null]],null],[12],[1,\"\\n                  Rotate credentials\\n                \"],[13],[1,\"\\n              \"],[13],[1,\"\\n\"]],[]],null],[41,[30,1,[\"canRotateRoot\"]],[[[1,\"              \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                \"],[11,\"button\"],[24,0,\"link\"],[24,4,\"button\"],[4,[38,11],[\"click\",[28,[37,12],[[30,0,[\"rotateRootCred\"]],[30,1,[\"id\"]]],null]],null],[12],[1,\"\\n                  Rotate root credentials\\n                \"],[13],[1,\"\\n              \"],[13],[1,\"\\n\"]],[]],null],[1,\"          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"]],[]]]]],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[\"@item\",\"@backendType\"],false,[\"linked-block\",\"array\",\"if\",\"concat\",\"secret-query-params\",\"link-to\",\"icon\",\"eq\",\"or\",\"popup-menu\",\"secret-link\",\"on\",\"fn\",\"and\",\"hash\"]]",
    "moduleName": "vault/templates/components/secret-list/database-list-item.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/secret-list/item", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <LinkedBlock
    @params={{array
      (concat "vault.cluster.secrets.backend." (if @item.isFolder "list" "show") (unless @item.id "-root"))
      @item.id
    }}
    class="list-item-row"
    data-test-secret-link={{@item.id}}
    @encode={{true}}
    @queryParams={{secret-query-params @backendModel.type @item.type}}
  >
    <div class="columns is-mobile">
      <div class="column is-10">
        <SecretLink
          @mode={{if @item.isFolder "list" "show"}}
          @secret={{@item.id}}
          @queryParams={{secret-query-params @backendModel.type @item.type asQueryParams=true}}
          class="has-text-black has-text-weight-semibold"
        >
          {{#if (eq @backendModel.type "transit")}}
            <Icon @name="key" class="has-text-grey-light" />
          {{else}}
            <Icon @name={{if @item.isFolder "folder" (or @item.icon "file")}} class="has-text-grey-light" />
          {{/if}}
          {{if (eq @item.id " ") "(self)" (or @item.keyWithoutParent @item.id)}}
        </SecretLink>
      </div>
      <div class="column has-text-right">
        <PopupMenu name="secret-menu">
          <Confirm as |c|>
            <nav class="menu">
              <ul class="menu-list">
                {{#if @item.isFolder}}
                  <SecretLink @mode="list" @secret={{@item.id}} class="has-text-black has-text-weight-semibold">
                    Contents
                  </SecretLink>
                {{else}}
                  {{#if (or @item.versionPath.isLoading @item.secretPath.isLoading)}}
                    <li class="action">
                      <button disabled type="button" class="link button is-loading is-transparent">
                        loading
                      </button>
                    </li>
                  {{else}}
                    {{#if (or @item.canReadSecretData @item.canRead)}}
                      <li class="action">
                        <SecretLink
                          @mode="show"
                          @secret={{@item.id}}
                          @queryParams={{secret-query-params @backendModel.type @item.type asQueryParams=true}}
                          class="has-text-black has-text-weight-semibold"
                        >
                          Details
                        </SecretLink>
                      </li>
                      {{#if @backendModel.isV2KV}}
                        <li class="action">
                          <SecretLink @mode="versions" @secret={{@item.id}} class="has-text-black has-text-weight-semibold">
                            View version history
                          </SecretLink>
                        </li>
                      {{/if}}
                    {{/if}}
                    {{#if (or @item.canEditSecretData @item.canEdit)}}
                      <li class="action">
                        <SecretLink
                          @mode="edit"
                          @secret={{@item.id}}
                          @queryParams={{secret-query-params @backendModel.type @item.type asQueryParams=true}}
                          class="has-text-black has-text-weight-semibold"
                        >
                          {{if @backendModel.isV2KV "Create new version" "Edit"}}
                        </SecretLink>
                      </li>
                    {{/if}}
                    {{#if (or @item.canDeleteSecretData @item.canDelete)}}
                      <li class="action">
                        <c.Message
                          @id={{@item.id}}
                          @triggerText={{if @backendModel.isV2KV "Permanently delete" "Delete"}}
                          @message="This will permanently delete this secret and all its versions."
                          @onConfirm={{@delete}}
                        />
                      </li>
                    {{/if}}
                  {{/if}}
                {{/if}}
              </ul>
            </nav>
          </Confirm>
        </PopupMenu>
      </div>
    </div>
  </LinkedBlock>
  */
  {
    "id": "MZZoQeUj",
    "block": "[[[8,[39,0],[[24,0,\"list-item-row\"],[16,\"data-test-secret-link\",[30,1,[\"id\"]]]],[[\"@params\",\"@encode\",\"@queryParams\"],[[28,[37,1],[[28,[37,2],[\"vault.cluster.secrets.backend.\",[52,[30,1,[\"isFolder\"]],\"list\",\"show\"],[52,[51,[30,1,[\"id\"]]],\"-root\"]],null],[30,1,[\"id\"]]],null],true,[28,[37,5],[[30,2,[\"type\"]],[30,1,[\"type\"]]],null]]],[[\"default\"],[[[[1,\"\\n  \"],[10,0],[14,0,\"columns is-mobile\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"column is-10\"],[12],[1,\"\\n      \"],[8,[39,6],[[24,0,\"has-text-black has-text-weight-semibold\"]],[[\"@mode\",\"@secret\",\"@queryParams\"],[[52,[30,1,[\"isFolder\"]],\"list\",\"show\"],[30,1,[\"id\"]],[28,[37,5],[[30,2,[\"type\"]],[30,1,[\"type\"]]],[[\"asQueryParams\"],[true]]]]],[[\"default\"],[[[[1,\"\\n\"],[41,[28,[37,7],[[30,2,[\"type\"]],\"transit\"],null],[[[1,\"          \"],[8,[39,8],[[24,0,\"has-text-grey-light\"]],[[\"@name\"],[\"key\"]],null],[1,\"\\n\"]],[]],[[[1,\"          \"],[8,[39,8],[[24,0,\"has-text-grey-light\"]],[[\"@name\"],[[52,[30,1,[\"isFolder\"]],\"folder\",[28,[37,9],[[30,1,[\"icon\"]],\"file\"],null]]]],null],[1,\"\\n\"]],[]]],[1,\"        \"],[1,[52,[28,[37,7],[[30,1,[\"id\"]],\" \"],null],\"(self)\",[28,[37,9],[[30,1,[\"keyWithoutParent\"]],[30,1,[\"id\"]]],null]]],[1,\"\\n      \"]],[]]]]],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"column has-text-right\"],[12],[1,\"\\n      \"],[8,[39,10],[[24,3,\"secret-menu\"]],null,[[\"default\"],[[[[1,\"\\n        \"],[8,[39,11],null,null,[[\"default\"],[[[[1,\"\\n          \"],[10,\"nav\"],[14,0,\"menu\"],[12],[1,\"\\n            \"],[10,\"ul\"],[14,0,\"menu-list\"],[12],[1,\"\\n\"],[41,[30,1,[\"isFolder\"]],[[[1,\"                \"],[8,[39,6],[[24,0,\"has-text-black has-text-weight-semibold\"]],[[\"@mode\",\"@secret\"],[\"list\",[30,1,[\"id\"]]]],[[\"default\"],[[[[1,\"\\n                  Contents\\n                \"]],[]]]]],[1,\"\\n\"]],[]],[[[41,[28,[37,9],[[30,1,[\"versionPath\",\"isLoading\"]],[30,1,[\"secretPath\",\"isLoading\"]]],null],[[[1,\"                  \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                    \"],[10,\"button\"],[14,\"disabled\",\"\"],[14,0,\"link button is-loading is-transparent\"],[14,4,\"button\"],[12],[1,\"\\n                      loading\\n                    \"],[13],[1,\"\\n                  \"],[13],[1,\"\\n\"]],[]],[[[41,[28,[37,9],[[30,1,[\"canReadSecretData\"]],[30,1,[\"canRead\"]]],null],[[[1,\"                    \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                      \"],[8,[39,6],[[24,0,\"has-text-black has-text-weight-semibold\"]],[[\"@mode\",\"@secret\",\"@queryParams\"],[\"show\",[30,1,[\"id\"]],[28,[37,5],[[30,2,[\"type\"]],[30,1,[\"type\"]]],[[\"asQueryParams\"],[true]]]]],[[\"default\"],[[[[1,\"\\n                        Details\\n                      \"]],[]]]]],[1,\"\\n                    \"],[13],[1,\"\\n\"],[41,[30,2,[\"isV2KV\"]],[[[1,\"                      \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                        \"],[8,[39,6],[[24,0,\"has-text-black has-text-weight-semibold\"]],[[\"@mode\",\"@secret\"],[\"versions\",[30,1,[\"id\"]]]],[[\"default\"],[[[[1,\"\\n                          View version history\\n                        \"]],[]]]]],[1,\"\\n                      \"],[13],[1,\"\\n\"]],[]],null]],[]],null],[41,[28,[37,9],[[30,1,[\"canEditSecretData\"]],[30,1,[\"canEdit\"]]],null],[[[1,\"                    \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                      \"],[8,[39,6],[[24,0,\"has-text-black has-text-weight-semibold\"]],[[\"@mode\",\"@secret\",\"@queryParams\"],[\"edit\",[30,1,[\"id\"]],[28,[37,5],[[30,2,[\"type\"]],[30,1,[\"type\"]]],[[\"asQueryParams\"],[true]]]]],[[\"default\"],[[[[1,\"\\n                        \"],[1,[52,[30,2,[\"isV2KV\"]],\"Create new version\",\"Edit\"]],[1,\"\\n                      \"]],[]]]]],[1,\"\\n                    \"],[13],[1,\"\\n\"]],[]],null],[41,[28,[37,9],[[30,1,[\"canDeleteSecretData\"]],[30,1,[\"canDelete\"]]],null],[[[1,\"                    \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                      \"],[8,[30,3,[\"Message\"]],null,[[\"@id\",\"@triggerText\",\"@message\",\"@onConfirm\"],[[30,1,[\"id\"]],[52,[30,2,[\"isV2KV\"]],\"Permanently delete\",\"Delete\"],\"This will permanently delete this secret and all its versions.\",[30,4]]],null],[1,\"\\n                    \"],[13],[1,\"\\n\"]],[]],null]],[]]]],[]]],[1,\"            \"],[13],[1,\"\\n          \"],[13],[1,\"\\n        \"]],[3]]]]],[1,\"\\n      \"]],[]]]]],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[\"@item\",\"@backendModel\",\"c\",\"@delete\"],false,[\"linked-block\",\"array\",\"concat\",\"if\",\"unless\",\"secret-query-params\",\"secret-link\",\"eq\",\"icon\",\"or\",\"popup-menu\",\"confirm\"]]",
    "moduleName": "vault/templates/components/secret-list/item.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/secret-list/ssh-role-item", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <LinkedBlock
    @params={{array
      (concat "vault.cluster.secrets.backend." (if (eq @item.keyType "ca") "sign" "credentials") (unless @item.id "-root"))
      @item.id
    }}
    class="list-item-row"
    data-test-secret-link={{@item.id}}
    @encode={{true}}
  >
    <div class="columns is-mobile">
      <div class="column is-10">
        <LinkTo
          @route={{concat
            "vault.cluster.secrets.backend."
            (if (eq @item.keyType "ca") "sign" "credentials")
            (unless @item.id "-root")
          }}
          @model={{@item.id}}
          class="has-text-black has-text-weight-semibold"
        >
          <Icon @name="user" class="has-text-grey-light is-pulled-left" />
          <div class="role-item-details">
            <span class="is-underline">{{if (eq @item.id " ") "(self)" (or @item.keyWithoutParent @item.id)}}</span>
            <br />
            <span class="tag has-text-grey-dark">{{@item.keyType}}</span>
            {{#if @item.zeroAddress}}
              <span class="has-text-grey is-size-7">Zero-Address</span>
            {{/if}}
          </div>
        </LinkTo>
      </div>
      <div class="column has-text-right">
        {{#if (eq @backendType "ssh")}}
          <PopupMenu @name="role-ssh-nav">
            <Confirm as |c|>
              <nav class="menu">
                <ul class="menu-list">
                  {{#if (eq @item.keyType "otp")}}
                    {{#if @item.generatePath.isPending}}
                      <li class="action">
                        <button disabled type="button" class="link button is-loading is-transparent">
                          loading
                        </button>
                      </li>
                    {{else if @item.canGenerate}}
                      <li class="action">
                        <LinkTo
                          @route="vault.cluster.secrets.backend.credentials"
                          @model={{@item.id}}
                          data-test-role-ssh-link="generate"
                        >
                          Generate Credentials
                        </LinkTo>
                      </li>
                    {{/if}}
                  {{else if (eq @item.keyType "ca")}}
                    {{#if @item.signPath.isPending}}
                      <li class="action">
                        <button disabled type="button" class="link button is-loading is-transparent">
                          loading
                        </button>
                      </li>
                    {{else if @item.canGenerate}}
                      <li class="action">
                        <LinkTo
                          @route="vault.cluster.secrets.backend.sign"
                          @model={{@item.id}}
                          data-test-role-ssh-link="generate"
                        >
                          Sign Keys
                        </LinkTo>
                      </li>
                    {{/if}}
                  {{/if}}
                  {{#if @item.canEditZeroAddress}}
                    {{#if @item.zeroAddress}}
                      <li class="action">
                        <button
                          type="button"
                          disabled={{get this (concat "loading-" @item.id)}}
                          class="link button is-transparent {{if (get this (concat 'loading-' @item.id)) 'is-loading'}} "
                          {{on "click" @toggleZeroAddress}}
                        >
                          Disable Zero Address
                        </button>
                      </li>
                    {{else}}
                      <li class="action">
                        <button
                          type="button"
                          disabled={{get this (concat "loading-" @item.id)}}
                          class="link button is-transparent {{if (get this (concat 'loading-' @item.id)) 'is-loading'}}"
                          {{on "click" @toggleZeroAddress}}
                        >
                          Enable Zero Address
                        </button>
                      </li>
                    {{/if}}
                  {{/if}}
                  {{#if @item.updatePath.isPending}}
                    <li class="action">
                      <button disabled type="button" class="link button is-loading is-transparent">
                        loading
                      </button>
                    </li>
                    <li class="action">
                      <button disabled type="button" class="link button is-loading is-transparent">
                        loading
                      </button>
                    </li>
                  {{else}}
                    {{#if @item.canRead}}
                      <li class="action">
                        <LinkTo @route="vault.cluster.secrets.backend.show" @model={{@item.id}} data-test-role-ssh-link="show">
                          Details
                        </LinkTo>
                      </li>
                    {{/if}}
                    {{#if @item.canEdit}}
                      <li class="action">
                        <LinkTo @route="vault.cluster.secrets.backend.edit" @model={{@item.id}} data-test-role-ssh-link="edit">
                          Edit
                        </LinkTo>
                      </li>
                    {{/if}}
                    {{#if @item.canDelete}}
                      <li class="action">
                        <c.Message @id={{@item.id}} @onConfirm={{@delete}} data-test-ssh-role-delete />
                      </li>
                    {{/if}}
                  {{/if}}
                </ul>
              </nav>
            </Confirm>
          </PopupMenu>
        {{/if}}
      </div>
    </div>
  </LinkedBlock>
  */
  {
    "id": "1LurkO25",
    "block": "[[[8,[39,0],[[24,0,\"list-item-row\"],[16,\"data-test-secret-link\",[30,1,[\"id\"]]]],[[\"@params\",\"@encode\"],[[28,[37,1],[[28,[37,2],[\"vault.cluster.secrets.backend.\",[52,[28,[37,4],[[30,1,[\"keyType\"]],\"ca\"],null],\"sign\",\"credentials\"],[52,[51,[30,1,[\"id\"]]],\"-root\"]],null],[30,1,[\"id\"]]],null],true]],[[\"default\"],[[[[1,\"\\n  \"],[10,0],[14,0,\"columns is-mobile\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"column is-10\"],[12],[1,\"\\n      \"],[8,[39,6],[[24,0,\"has-text-black has-text-weight-semibold\"]],[[\"@route\",\"@model\"],[[28,[37,2],[\"vault.cluster.secrets.backend.\",[52,[28,[37,4],[[30,1,[\"keyType\"]],\"ca\"],null],\"sign\",\"credentials\"],[52,[51,[30,1,[\"id\"]]],\"-root\"]],null],[30,1,[\"id\"]]]],[[\"default\"],[[[[1,\"\\n        \"],[8,[39,7],[[24,0,\"has-text-grey-light is-pulled-left\"]],[[\"@name\"],[\"user\"]],null],[1,\"\\n        \"],[10,0],[14,0,\"role-item-details\"],[12],[1,\"\\n          \"],[10,1],[14,0,\"is-underline\"],[12],[1,[52,[28,[37,4],[[30,1,[\"id\"]],\" \"],null],\"(self)\",[28,[37,8],[[30,1,[\"keyWithoutParent\"]],[30,1,[\"id\"]]],null]]],[13],[1,\"\\n          \"],[10,\"br\"],[12],[13],[1,\"\\n          \"],[10,1],[14,0,\"tag has-text-grey-dark\"],[12],[1,[30,1,[\"keyType\"]]],[13],[1,\"\\n\"],[41,[30,1,[\"zeroAddress\"]],[[[1,\"            \"],[10,1],[14,0,\"has-text-grey is-size-7\"],[12],[1,\"Zero-Address\"],[13],[1,\"\\n\"]],[]],null],[1,\"        \"],[13],[1,\"\\n      \"]],[]]]]],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"column has-text-right\"],[12],[1,\"\\n\"],[41,[28,[37,4],[[30,2],\"ssh\"],null],[[[1,\"        \"],[8,[39,9],null,[[\"@name\"],[\"role-ssh-nav\"]],[[\"default\"],[[[[1,\"\\n          \"],[8,[39,10],null,null,[[\"default\"],[[[[1,\"\\n            \"],[10,\"nav\"],[14,0,\"menu\"],[12],[1,\"\\n              \"],[10,\"ul\"],[14,0,\"menu-list\"],[12],[1,\"\\n\"],[41,[28,[37,4],[[30,1,[\"keyType\"]],\"otp\"],null],[[[41,[30,1,[\"generatePath\",\"isPending\"]],[[[1,\"                    \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                      \"],[10,\"button\"],[14,\"disabled\",\"\"],[14,0,\"link button is-loading is-transparent\"],[14,4,\"button\"],[12],[1,\"\\n                        loading\\n                      \"],[13],[1,\"\\n                    \"],[13],[1,\"\\n\"]],[]],[[[41,[30,1,[\"canGenerate\"]],[[[1,\"                    \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                      \"],[8,[39,6],[[24,\"data-test-role-ssh-link\",\"generate\"]],[[\"@route\",\"@model\"],[\"vault.cluster.secrets.backend.credentials\",[30,1,[\"id\"]]]],[[\"default\"],[[[[1,\"\\n                        Generate Credentials\\n                      \"]],[]]]]],[1,\"\\n                    \"],[13],[1,\"\\n                  \"]],[]],null]],[]]]],[]],[[[41,[28,[37,4],[[30,1,[\"keyType\"]],\"ca\"],null],[[[41,[30,1,[\"signPath\",\"isPending\"]],[[[1,\"                    \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                      \"],[10,\"button\"],[14,\"disabled\",\"\"],[14,0,\"link button is-loading is-transparent\"],[14,4,\"button\"],[12],[1,\"\\n                        loading\\n                      \"],[13],[1,\"\\n                    \"],[13],[1,\"\\n\"]],[]],[[[41,[30,1,[\"canGenerate\"]],[[[1,\"                    \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                      \"],[8,[39,6],[[24,\"data-test-role-ssh-link\",\"generate\"]],[[\"@route\",\"@model\"],[\"vault.cluster.secrets.backend.sign\",[30,1,[\"id\"]]]],[[\"default\"],[[[[1,\"\\n                        Sign Keys\\n                      \"]],[]]]]],[1,\"\\n                    \"],[13],[1,\"\\n                  \"]],[]],null]],[]]],[1,\"                \"]],[]],null]],[]]],[41,[30,1,[\"canEditZeroAddress\"]],[[[41,[30,1,[\"zeroAddress\"]],[[[1,\"                    \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                      \"],[11,\"button\"],[16,\"disabled\",[28,[37,11],[[30,0],[28,[37,2],[\"loading-\",[30,1,[\"id\"]]],null]],null]],[16,0,[29,[\"link button is-transparent \",[52,[28,[37,11],[[30,0],[28,[37,2],[\"loading-\",[30,1,[\"id\"]]],null]],null],\"is-loading\"],\" \"]]],[24,4,\"button\"],[4,[38,12],[\"click\",[30,4]],null],[12],[1,\"\\n                        Disable Zero Address\\n                      \"],[13],[1,\"\\n                    \"],[13],[1,\"\\n\"]],[]],[[[1,\"                    \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                      \"],[11,\"button\"],[16,\"disabled\",[28,[37,11],[[30,0],[28,[37,2],[\"loading-\",[30,1,[\"id\"]]],null]],null]],[16,0,[29,[\"link button is-transparent \",[52,[28,[37,11],[[30,0],[28,[37,2],[\"loading-\",[30,1,[\"id\"]]],null]],null],\"is-loading\"]]]],[24,4,\"button\"],[4,[38,12],[\"click\",[30,4]],null],[12],[1,\"\\n                        Enable Zero Address\\n                      \"],[13],[1,\"\\n                    \"],[13],[1,\"\\n\"]],[]]]],[]],null],[41,[30,1,[\"updatePath\",\"isPending\"]],[[[1,\"                  \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                    \"],[10,\"button\"],[14,\"disabled\",\"\"],[14,0,\"link button is-loading is-transparent\"],[14,4,\"button\"],[12],[1,\"\\n                      loading\\n                    \"],[13],[1,\"\\n                  \"],[13],[1,\"\\n                  \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                    \"],[10,\"button\"],[14,\"disabled\",\"\"],[14,0,\"link button is-loading is-transparent\"],[14,4,\"button\"],[12],[1,\"\\n                      loading\\n                    \"],[13],[1,\"\\n                  \"],[13],[1,\"\\n\"]],[]],[[[41,[30,1,[\"canRead\"]],[[[1,\"                    \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                      \"],[8,[39,6],[[24,\"data-test-role-ssh-link\",\"show\"]],[[\"@route\",\"@model\"],[\"vault.cluster.secrets.backend.show\",[30,1,[\"id\"]]]],[[\"default\"],[[[[1,\"\\n                        Details\\n                      \"]],[]]]]],[1,\"\\n                    \"],[13],[1,\"\\n\"]],[]],null],[41,[30,1,[\"canEdit\"]],[[[1,\"                    \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                      \"],[8,[39,6],[[24,\"data-test-role-ssh-link\",\"edit\"]],[[\"@route\",\"@model\"],[\"vault.cluster.secrets.backend.edit\",[30,1,[\"id\"]]]],[[\"default\"],[[[[1,\"\\n                        Edit\\n                      \"]],[]]]]],[1,\"\\n                    \"],[13],[1,\"\\n\"]],[]],null],[41,[30,1,[\"canDelete\"]],[[[1,\"                    \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                      \"],[8,[30,3,[\"Message\"]],[[24,\"data-test-ssh-role-delete\",\"\"]],[[\"@id\",\"@onConfirm\"],[[30,1,[\"id\"]],[30,5]]],null],[1,\"\\n                    \"],[13],[1,\"\\n\"]],[]],null]],[]]],[1,\"              \"],[13],[1,\"\\n            \"],[13],[1,\"\\n          \"]],[3]]]]],[1,\"\\n        \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[\"@item\",\"@backendType\",\"c\",\"@toggleZeroAddress\",\"@delete\"],false,[\"linked-block\",\"array\",\"concat\",\"if\",\"eq\",\"unless\",\"link-to\",\"icon\",\"or\",\"popup-menu\",\"confirm\",\"get\",\"on\"]]",
    "moduleName": "vault/templates/components/secret-list/ssh-role-item.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/secret-version-menu", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <BasicDropdown @class="popup-menu" @horizontalPosition="auto-right" @verticalPosition="below" as |D|>
    <D.Trigger
      data-test-popup-menu-trigger="version"
      class={{concat "toolbar-link" (if D.isOpen " is-active")}}
      @htmlTag="button"
    >
      Version
      {{@version.version}}
      <Chevron @direction="down" @isButton={{true}} />
    </D.Trigger>
    <D.Content @defaultClass="popup-menu-content">
      <nav class="box menu">
        <ul class="menu-list">
          {{#if (has-block)}}
            {{yield}}
          {{/if}}
          {{#each (reverse @model.versions) as |secretVersion|}}
            <li class="action">
              <LinkTo
                class="link"
                @query={{hash version=secretVersion.version}}
                {{on "click" (fn this.closeDropdown D)}}
                data-test-version-dropdown-link={{secretVersion.version}}
              >
                Version
                {{secretVersion.version}}
                {{#if
                  (and
                    (eq secretVersion.version @model.currentVersion) (not secretVersion.destroyed) (not secretVersion.deleted)
                  )
                }}
                  <Icon @name="check-circle" class="has-text-success is-pulled-right" />
                {{else if secretVersion.destroyed}}
                  <Icon @name="x-square-fill" class="has-text-danger is-pulled-right" />
                {{else if secretVersion.deleted}}
                  <Icon @name="x-square-fill" class="has-text-grey is-pulled-right" />
                {{/if}}
              </LinkTo>
            </li>
          {{/each}}
          <li class="action">
            <SecretLink
              data-test-version-history={{true}}
              @mode="versions"
              @secret={{@model.id}}
              class="has-text-black has-text-weight-semibold has-bottom-shadow"
            >
              View version history
            </SecretLink>
          </li>
          {{#if (gt @model.versions.length 1)}}
            <li class="action">
              <li>
                <LinkTo class="link" @route="vault.cluster.secrets.backend.diff" @model={{@model.id}} data-test-view-diff>
                  View diff
                </LinkTo>
              </li>
            </li>
          {{/if}}
        </ul>
      </nav>
    </D.Content>
  </BasicDropdown>
  */
  {
    "id": "cogzZb1n",
    "block": "[[[8,[39,0],null,[[\"@class\",\"@horizontalPosition\",\"@verticalPosition\"],[\"popup-menu\",\"auto-right\",\"below\"]],[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"Trigger\"]],[[24,\"data-test-popup-menu-trigger\",\"version\"],[16,0,[28,[37,1],[\"toolbar-link\",[52,[30,1,[\"isOpen\"]],\" is-active\"]],null]]],[[\"@htmlTag\"],[\"button\"]],[[\"default\"],[[[[1,\"\\n    Version\\n    \"],[1,[30,2,[\"version\"]]],[1,\"\\n    \"],[8,[39,3],null,[[\"@direction\",\"@isButton\"],[\"down\",true]],null],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[30,1,[\"Content\"]],null,[[\"@defaultClass\"],[\"popup-menu-content\"]],[[\"default\"],[[[[1,\"\\n    \"],[10,\"nav\"],[14,0,\"box menu\"],[12],[1,\"\\n      \"],[10,\"ul\"],[14,0,\"menu-list\"],[12],[1,\"\\n\"],[41,[48,[30,5]],[[[1,\"          \"],[18,5,null],[1,\"\\n\"]],[]],null],[42,[28,[37,7],[[28,[37,7],[[28,[37,8],[[30,3,[\"versions\"]]],null]],null]],null],null,[[[1,\"          \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n            \"],[8,[39,9],[[24,0,\"link\"],[16,\"data-test-version-dropdown-link\",[30,4,[\"version\"]]],[4,[38,11],[\"click\",[28,[37,12],[[30,0,[\"closeDropdown\"]],[30,1]],null]],null]],[[\"@query\"],[[28,[37,10],null,[[\"version\"],[[30,4,[\"version\"]]]]]]],[[\"default\"],[[[[1,\"\\n              Version\\n              \"],[1,[30,4,[\"version\"]]],[1,\"\\n\"],[41,[28,[37,13],[[28,[37,14],[[30,4,[\"version\"]],[30,3,[\"currentVersion\"]]],null],[28,[37,15],[[30,4,[\"destroyed\"]]],null],[28,[37,15],[[30,4,[\"deleted\"]]],null]],null],[[[1,\"                \"],[8,[39,16],[[24,0,\"has-text-success is-pulled-right\"]],[[\"@name\"],[\"check-circle\"]],null],[1,\"\\n\"]],[]],[[[41,[30,4,[\"destroyed\"]],[[[1,\"                \"],[8,[39,16],[[24,0,\"has-text-danger is-pulled-right\"]],[[\"@name\"],[\"x-square-fill\"]],null],[1,\"\\n\"]],[]],[[[41,[30,4,[\"deleted\"]],[[[1,\"                \"],[8,[39,16],[[24,0,\"has-text-grey is-pulled-right\"]],[[\"@name\"],[\"x-square-fill\"]],null],[1,\"\\n              \"]],[]],null]],[]]]],[]]],[1,\"            \"]],[]]]]],[1,\"\\n          \"],[13],[1,\"\\n\"]],[4]],null],[1,\"        \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n          \"],[8,[39,17],[[16,\"data-test-version-history\",true],[24,0,\"has-text-black has-text-weight-semibold has-bottom-shadow\"]],[[\"@mode\",\"@secret\"],[\"versions\",[30,3,[\"id\"]]]],[[\"default\"],[[[[1,\"\\n            View version history\\n          \"]],[]]]]],[1,\"\\n        \"],[13],[1,\"\\n\"],[41,[28,[37,18],[[30,3,[\"versions\",\"length\"]],1],null],[[[1,\"          \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n            \"],[10,\"li\"],[12],[1,\"\\n              \"],[8,[39,9],[[24,0,\"link\"],[24,\"data-test-view-diff\",\"\"]],[[\"@route\",\"@model\"],[\"vault.cluster.secrets.backend.diff\",[30,3,[\"id\"]]]],[[\"default\"],[[[[1,\"\\n                View diff\\n              \"]],[]]]]],[1,\"\\n            \"],[13],[1,\"\\n          \"],[13],[1,\"\\n\"]],[]],null],[1,\"      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]]],[\"D\",\"@version\",\"@model\",\"secretVersion\",\"&default\"],false,[\"basic-dropdown\",\"concat\",\"if\",\"chevron\",\"has-block\",\"yield\",\"each\",\"-track-array\",\"reverse\",\"link-to\",\"hash\",\"on\",\"fn\",\"and\",\"eq\",\"not\",\"icon\",\"secret-link\",\"gt\"]]",
    "moduleName": "vault/templates/components/secret-version-menu.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/section-tabs", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{#let (tabs-for-auth-section this.model this.tabType this.paths) as |tabs|}}
    {{#if tabs.length}}
      <div class="tabs-container box is-sideless is-fullwidth is-paddingless is-marginless">
        <nav class="tabs">
          <ul>
            {{#each tabs as |tab|}}
              <li>
                <LinkTo @route={{get tab.routeParams 0}} @model={{get tab.routeParams 1}} data-test-auth-section-tab={{true}}>
                  {{tab.label}}
                </LinkTo>
              </li>
            {{/each}}
          </ul>
        </nav>
      </div>
    {{/if}}
  {{/let}}
  */
  {
    "id": "+UbU8PEu",
    "block": "[[[44,[[28,[37,1],[[30,0,[\"model\"]],[30,0,[\"tabType\"]],[30,0,[\"paths\"]]],null]],[[[41,[30,1,[\"length\"]],[[[1,\"    \"],[10,0],[14,0,\"tabs-container box is-sideless is-fullwidth is-paddingless is-marginless\"],[12],[1,\"\\n      \"],[10,\"nav\"],[14,0,\"tabs\"],[12],[1,\"\\n        \"],[10,\"ul\"],[12],[1,\"\\n\"],[42,[28,[37,4],[[28,[37,4],[[30,1]],null]],null],null,[[[1,\"            \"],[10,\"li\"],[12],[1,\"\\n              \"],[8,[39,5],[[16,\"data-test-auth-section-tab\",true]],[[\"@route\",\"@model\"],[[28,[37,6],[[30,2,[\"routeParams\"]],0],null],[28,[37,6],[[30,2,[\"routeParams\"]],1],null]]],[[\"default\"],[[[[1,\"\\n                \"],[1,[30,2,[\"label\"]]],[1,\"\\n              \"]],[]]]]],[1,\"\\n            \"],[13],[1,\"\\n\"]],[2]],null],[1,\"        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n\"]],[]],null]],[1]]]],[\"tabs\",\"tab\"],false,[\"let\",\"tabs-for-auth-section\",\"if\",\"each\",\"-track-array\",\"link-to\",\"get\"]]",
    "moduleName": "vault/templates/components/section-tabs.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/selectable-card", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{! conditional to check if SelectableCard is apart of a CSS Grid, if yes return grid item class }}
  {{#if this.gridContainer}}
    <div class="selectable-card is-rounded is-grid-container">
      <div class="selectable-card-title">
        <h2 class="title-number">{{format-number this.total}}</h2>
        <h3 class="title is-5" data-test-selectable-card-title={{@cardTitle}}>{{@cardTitle}}</h3>
        <p class="has-text-grey is-size-8">{{@subText}}</p>
      </div>
      {{yield}}
    </div>
  {{else}}
    <div class="selectable-card is-rounded no-flex">
      <div class="is-flex-between is-fullwidth card-details" data-test-selectable-card={{@cardTitle}}>
        <h3 class="title is-5">{{@cardTitle}}</h3>
        <LinkTo
          @route={{@actionTo}}
          class="has-icon-right is-ghost is-no-underline has-text-weight-semibold"
          @query={{hash itemType=@queryParam}}
          data-test-action-text={{@actionText}}
        >
          {{@actionText}}
          {{#if @actionText}}
            <Icon @name="chevron-right" />
          {{/if}}
        </LinkTo>
      </div>
      <p class="has-text-grey is-size-8">{{@subText}}</p>
      <h2 class="title-number">{{format-number this.total}}</h2>
      {{yield}}
    </div>
  {{/if}}
  */
  {
    "id": "mixVgw+l",
    "block": "[[[41,[30,0,[\"gridContainer\"]],[[[1,\"  \"],[10,0],[14,0,\"selectable-card is-rounded is-grid-container\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"selectable-card-title\"],[12],[1,\"\\n      \"],[10,\"h2\"],[14,0,\"title-number\"],[12],[1,[28,[35,1],[[30,0,[\"total\"]]],null]],[13],[1,\"\\n      \"],[10,\"h3\"],[14,0,\"title is-5\"],[15,\"data-test-selectable-card-title\",[30,1]],[12],[1,[30,1]],[13],[1,\"\\n      \"],[10,2],[14,0,\"has-text-grey is-size-8\"],[12],[1,[30,2]],[13],[1,\"\\n    \"],[13],[1,\"\\n    \"],[18,6,null],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]],[[[1,\"  \"],[10,0],[14,0,\"selectable-card is-rounded no-flex\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"is-flex-between is-fullwidth card-details\"],[15,\"data-test-selectable-card\",[30,1]],[12],[1,\"\\n      \"],[10,\"h3\"],[14,0,\"title is-5\"],[12],[1,[30,1]],[13],[1,\"\\n      \"],[8,[39,3],[[24,0,\"has-icon-right is-ghost is-no-underline has-text-weight-semibold\"],[16,\"data-test-action-text\",[30,3]]],[[\"@route\",\"@query\"],[[30,4],[28,[37,4],null,[[\"itemType\"],[[30,5]]]]]],[[\"default\"],[[[[1,\"\\n        \"],[1,[30,3]],[1,\"\\n\"],[41,[30,3],[[[1,\"          \"],[8,[39,5],null,[[\"@name\"],[\"chevron-right\"]],null],[1,\"\\n\"]],[]],null],[1,\"      \"]],[]]]]],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,2],[14,0,\"has-text-grey is-size-8\"],[12],[1,[30,2]],[13],[1,\"\\n    \"],[10,\"h2\"],[14,0,\"title-number\"],[12],[1,[28,[35,1],[[30,0,[\"total\"]]],null]],[13],[1,\"\\n    \"],[18,6,null],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]]]],[\"@cardTitle\",\"@subText\",\"@actionText\",\"@actionTo\",\"@queryParam\",\"&default\"],false,[\"if\",\"format-number\",\"yield\",\"link-to\",\"hash\",\"icon\"]]",
    "moduleName": "vault/templates/components/selectable-card.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/shamir-progress", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <div class="level">
    <div class="level-left">
      <span class="has-text-grey is-size-8 shamir-progress-progress">
        {{this.progress}}/{{this.threshold}}
        keys provided
      </span>
    </div>
    <div class="level-right is-marginless">
      <RadialProgress @progressDecimal={{this.progressDecimal}} />
    </div>
  </div>
  */
  {
    "id": "8qbvBdxz",
    "block": "[[[10,0],[14,0,\"level\"],[12],[1,\"\\n  \"],[10,0],[14,0,\"level-left\"],[12],[1,\"\\n    \"],[10,1],[14,0,\"has-text-grey is-size-8 shamir-progress-progress\"],[12],[1,\"\\n      \"],[1,[30,0,[\"progress\"]]],[1,\"/\"],[1,[30,0,[\"threshold\"]]],[1,\"\\n      keys provided\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n  \"],[10,0],[14,0,\"level-right is-marginless\"],[12],[1,\"\\n    \"],[8,[39,0],null,[[\"@progressDecimal\"],[[30,0,[\"progressDecimal\"]]]],null],[1,\"\\n  \"],[13],[1,\"\\n\"],[13]],[],false,[\"radial-progress\"]]",
    "moduleName": "vault/templates/components/shamir-progress.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/splash-page", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{! bypass container styling }}
  {{#if @hasAltContent}}
    {{yield (hash altContent=(component "splash-page/splash-content"))}}
  {{else}}
    <div class="splash-page-container section is-flex-v-centered-tablet is-flex-1 is-fullwidth">
      <div class="columns is-centered is-gapless is-fullwidth">
        <div class="column is-4-desktop is-6-tablet">
          <div class="splash-page-header">
            {{yield (hash header=(component "splash-page/splash-header"))}}
          </div>
          <div class="splash-page-sub-header">
            {{yield (hash sub-header=(component "splash-page/splash-header"))}}
          </div>
          <div class="login-form box is-paddingless is-relative">
            {{yield (hash content=(component "splash-page/splash-content"))}}
          </div>
          {{yield (hash footer=(component "splash-page/splash-content"))}}
        </div>
      </div>
    </div>
  {{/if}}
  */
  {
    "id": "HG1SmOFk",
    "block": "[[[41,[30,1],[[[1,\"  \"],[18,2,[[28,[37,2],null,[[\"altContent\"],[[50,\"splash-page/splash-content\",0,null,null]]]]]],[1,\"\\n\"]],[]],[[[1,\"  \"],[10,0],[14,0,\"splash-page-container section is-flex-v-centered-tablet is-flex-1 is-fullwidth\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"columns is-centered is-gapless is-fullwidth\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"column is-4-desktop is-6-tablet\"],[12],[1,\"\\n        \"],[10,0],[14,0,\"splash-page-header\"],[12],[1,\"\\n          \"],[18,2,[[28,[37,2],null,[[\"header\"],[[50,\"splash-page/splash-header\",0,null,null]]]]]],[1,\"\\n        \"],[13],[1,\"\\n        \"],[10,0],[14,0,\"splash-page-sub-header\"],[12],[1,\"\\n          \"],[18,2,[[28,[37,2],null,[[\"sub-header\"],[[50,\"splash-page/splash-header\",0,null,null]]]]]],[1,\"\\n        \"],[13],[1,\"\\n        \"],[10,0],[14,0,\"login-form box is-paddingless is-relative\"],[12],[1,\"\\n          \"],[18,2,[[28,[37,2],null,[[\"content\"],[[50,\"splash-page/splash-content\",0,null,null]]]]]],[1,\"\\n        \"],[13],[1,\"\\n        \"],[18,2,[[28,[37,2],null,[[\"footer\"],[[50,\"splash-page/splash-content\",0,null,null]]]]]],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]]]],[\"@hasAltContent\",\"&default\"],false,[\"if\",\"yield\",\"hash\",\"component\"]]",
    "moduleName": "vault/templates/components/splash-page.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/token-expire-warning", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{#if (and this.showWarning (is-after (now interval=1000) @expirationDate))}}
    <div class="token-expire-warning">
      <AlertBanner
        @type="danger"
        @message="Your auth token expired on
          {{date-format @expirationDate 'MMMM do yyyy, h:mm:ss a'}}
           . You will need to re-authenticate."
      >
        <LinkTo @route="vault.cluster.logout" class="button link">
          Reauthenticate
        </LinkTo>
      </AlertBanner>
    </div>
  {{else}}
    {{yield}}
  {{/if}}
  */
  {
    "id": "cYn/PpA3",
    "block": "[[[41,[28,[37,1],[[30,0,[\"showWarning\"]],[28,[37,2],[[28,[37,3],null,[[\"interval\"],[1000]]],[30,1]],null]],null],[[[1,\"  \"],[10,0],[14,0,\"token-expire-warning\"],[12],[1,\"\\n    \"],[8,[39,4],null,[[\"@type\",\"@message\"],[\"danger\",[29,[\"Your auth token expired on\\n        \",[28,[37,5],[[30,1],\"MMMM do yyyy, h:mm:ss a\"],null],\"\\n         . You will need to re-authenticate.\"]]]],[[\"default\"],[[[[1,\"\\n      \"],[8,[39,6],[[24,0,\"button link\"]],[[\"@route\"],[\"vault.cluster.logout\"]],[[\"default\"],[[[[1,\"\\n        Reauthenticate\\n      \"]],[]]]]],[1,\"\\n    \"]],[]]]]],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]],[[[1,\"  \"],[18,2,null],[1,\"\\n\"]],[]]]],[\"@expirationDate\",\"&default\"],false,[\"if\",\"and\",\"is-after\",\"now\",\"alert-banner\",\"date-format\",\"link-to\",\"yield\"]]",
    "moduleName": "vault/templates/components/token-expire-warning.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/tool-actions-form", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <form onsubmit={{action "doSubmit"}}>
    {{#if (eq this.selectedAction "hash")}}
      {{! template-lint-disable no-passed-in-event-handlers }}
      <ToolHash
        @onClear={{action "onClear"}}
        @sum={{this.sum}}
        @algorithm={{this.algorithm}}
        @errors={{this.errors}}
        @format={{this.format}}
        @input={{this.input}}
      />
      {{! template-lint-enable no-passed-in-event-handlers }}
    {{else if (eq this.selectedAction "random")}}
      <ToolRandom
        @onClear={{action "onClear"}}
        @random_bytes={{this.random_bytes}}
        @errors={{this.errors}}
        @format={{this.format}}
        @bytes={{this.bytes}}
      />
    {{else if (eq this.selectedAction "rewrap")}}
      <ToolRewrap
        @onClear={{action "onClear"}}
        @rewrap_token={{this.rewrap_token}}
        @selectedAction={{this.selectedAction}}
        @errors={{this.errors}}
        @token={{this.token}}
        @bytes={{this.bytes}}
      />
    {{else if (eq this.selectedAction "unwrap")}}
      <ToolUnwrap
        @onClear={{action "onClear"}}
        @unwrap_data={{this.unwrap_data}}
        @unwrapActiveTab={{this.unwrapActiveTab}}
        @details={{this.details}}
        @errors={{this.errors}}
        @token={{this.token}}
      />
    {{else if (eq this.selectedAction "lookup")}}
      <ToolLookup
        @creation_time={{this.creation_time}}
        @creation_ttl={{this.creation_ttl}}
        @creation_path={{this.creation_path}}
        @expirationDate={{this.expirationDate}}
        @selectedAction={{this.selectedAction}}
        @token={{this.token}}
        @onClear={{action "onClear"}}
        @errors={{this.errors}}
      />
    {{else if (eq this.selectedAction "wrap")}}
      <ToolWrap
        @token={{this.token}}
        @selectedAction={{this.selectedAction}}
        @onClear={{action "onClear"}}
        @codemirrorUpdated={{action "codemirrorUpdated"}}
        @updateTtl={{action "updateTtl"}}
        @buttonDisabled={{this.buttonDisabled}}
        @errors={{this.errors}}
      />
    {{else}}
      <EmptyState @title="Tool not available" />
    {{/if}}
  </form>
  */
  {
    "id": "EoGP8DeJ",
    "block": "[[[10,\"form\"],[15,\"onsubmit\",[28,[37,0],[[30,0],\"doSubmit\"],null]],[12],[1,\"\\n\"],[41,[28,[37,2],[[30,0,[\"selectedAction\"]],\"hash\"],null],[[[1,\"    \"],[8,[39,3],null,[[\"@onClear\",\"@sum\",\"@algorithm\",\"@errors\",\"@format\",\"@input\"],[[28,[37,0],[[30,0],\"onClear\"],null],[30,0,[\"sum\"]],[30,0,[\"algorithm\"]],[30,0,[\"errors\"]],[30,0,[\"format\"]],[30,0,[\"input\"]]]],null],[1,\"\\n\"]],[]],[[[41,[28,[37,2],[[30,0,[\"selectedAction\"]],\"random\"],null],[[[1,\"    \"],[8,[39,4],null,[[\"@onClear\",\"@random_bytes\",\"@errors\",\"@format\",\"@bytes\"],[[28,[37,0],[[30,0],\"onClear\"],null],[30,0,[\"random_bytes\"]],[30,0,[\"errors\"]],[30,0,[\"format\"]],[30,0,[\"bytes\"]]]],null],[1,\"\\n\"]],[]],[[[41,[28,[37,2],[[30,0,[\"selectedAction\"]],\"rewrap\"],null],[[[1,\"    \"],[8,[39,5],null,[[\"@onClear\",\"@rewrap_token\",\"@selectedAction\",\"@errors\",\"@token\",\"@bytes\"],[[28,[37,0],[[30,0],\"onClear\"],null],[30,0,[\"rewrap_token\"]],[30,0,[\"selectedAction\"]],[30,0,[\"errors\"]],[30,0,[\"token\"]],[30,0,[\"bytes\"]]]],null],[1,\"\\n\"]],[]],[[[41,[28,[37,2],[[30,0,[\"selectedAction\"]],\"unwrap\"],null],[[[1,\"    \"],[8,[39,6],null,[[\"@onClear\",\"@unwrap_data\",\"@unwrapActiveTab\",\"@details\",\"@errors\",\"@token\"],[[28,[37,0],[[30,0],\"onClear\"],null],[30,0,[\"unwrap_data\"]],[30,0,[\"unwrapActiveTab\"]],[30,0,[\"details\"]],[30,0,[\"errors\"]],[30,0,[\"token\"]]]],null],[1,\"\\n\"]],[]],[[[41,[28,[37,2],[[30,0,[\"selectedAction\"]],\"lookup\"],null],[[[1,\"    \"],[8,[39,7],null,[[\"@creation_time\",\"@creation_ttl\",\"@creation_path\",\"@expirationDate\",\"@selectedAction\",\"@token\",\"@onClear\",\"@errors\"],[[30,0,[\"creation_time\"]],[30,0,[\"creation_ttl\"]],[30,0,[\"creation_path\"]],[30,0,[\"expirationDate\"]],[30,0,[\"selectedAction\"]],[30,0,[\"token\"]],[28,[37,0],[[30,0],\"onClear\"],null],[30,0,[\"errors\"]]]],null],[1,\"\\n\"]],[]],[[[41,[28,[37,2],[[30,0,[\"selectedAction\"]],\"wrap\"],null],[[[1,\"    \"],[8,[39,8],null,[[\"@token\",\"@selectedAction\",\"@onClear\",\"@codemirrorUpdated\",\"@updateTtl\",\"@buttonDisabled\",\"@errors\"],[[30,0,[\"token\"]],[30,0,[\"selectedAction\"]],[28,[37,0],[[30,0],\"onClear\"],null],[28,[37,0],[[30,0],\"codemirrorUpdated\"],null],[28,[37,0],[[30,0],\"updateTtl\"],null],[30,0,[\"buttonDisabled\"]],[30,0,[\"errors\"]]]],null],[1,\"\\n\"]],[]],[[[1,\"    \"],[8,[39,9],null,[[\"@title\"],[\"Tool not available\"]],null],[1,\"\\n  \"]],[]]]],[]]]],[]]]],[]]]],[]]]],[]]],[13]],[],false,[\"action\",\"if\",\"eq\",\"tool-hash\",\"tool-random\",\"tool-rewrap\",\"tool-unwrap\",\"tool-lookup\",\"tool-wrap\",\"empty-state\"]]",
    "moduleName": "vault/templates/components/tool-actions-form.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/tool-hash", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.levelLeft>
      <h1 class="title is-3">
        Hash data
      </h1>
    </p.levelLeft>
  </PageHeader>
  
  {{#if @sum}}
    <div class="box is-sideless is-fullwidth is-marginless">
      <div class="field">
        <label for="sum" class="is-input">Sum</label>
        <div class="control">
          <textarea readonly class="textarea" id="sum" data-test-tools-input="sum">{{@sum}}</textarea>
        </div>
      </div>
    </div>
    <div class="field is-grouped box is-fullwidth is-bottomless">
      <div class="control">
        <CopyButton
          @clipboardText={{@sum}}
          @class="button is-primary"
          @buttonType="button"
          @success={{action (set-flash-message "Hashed data copied!")}}
        >
          Copy
        </CopyButton>
      </div>
      <div class="control">
        <button {{on "click" this.onClear}} type="button" class="button" data-test-tools-back={{true}}>
          Back
        </button>
      </div>
    </div>
  {{else}}
    <div class="box is-sideless is-fullwidth is-marginless">
      <MessageError @errors={{@errors}} />
      <div class="field">
        <label for="input" class="is-label">
          Input
        </label>
        <div class="control">
          <Textarea id="input-hash" name="input" @value={{@input}} class="textarea" data-test-tools-input="hash-input" />
          <B64Toggle @value={{@input}} @isInput={{false}} @data-test-transit-b64-toggle="input" />
        </div>
      </div>
      <div class="field is-horizontal">
        <div class="field-body">
          <div class="field">
            <label for="algorithm" class="is-label">Algorithm</label>
            <div class="control is-expanded">
              <div class="select is-fullwidth">
                <select name="algorithm" id="algorithm" onchange={{action (mut @algorithm) value="target.value"}}>
                  {{#each (sha2-digest-sizes) as |algo|}}
                    <option selected={{if @algorithm (eq @algorithm algo)}} value={{algo}}>
                      {{algo}}
                    </option>
                  {{/each}}
                </select>
              </div>
            </div>
          </div>
          <div class="field">
            <label for="format" class="is-label"> Output format </label>
            <div class="control is-expanded">
              <div class="select is-fullwidth">
                <select name="format" id="format" onchange={{action (mut @format) value="target.value"}}>
                  {{#each (array "base64" "hex") as |formatOption|}}
                    <option selected={{if @format (eq @format formatOption)}} value={{formatOption}}>
                      {{formatOption}}
                    </option>
                  {{/each}}
                </select>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="field is-grouped box is-fullwidth is-bottomless">
      <div class="control">
        <button type="submit" class="button is-primary" data-test-tools-submit="true">
          Hash
        </button>
      </div>
    </div>
  {{/if}}
  */
  {
    "id": "V8tt5wat",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n      Hash data\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\\n\"],[41,[30,2],[[[1,\"  \"],[10,0],[14,0,\"box is-sideless is-fullwidth is-marginless\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n      \"],[10,\"label\"],[14,\"for\",\"sum\"],[14,0,\"is-input\"],[12],[1,\"Sum\"],[13],[1,\"\\n      \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n        \"],[10,\"textarea\"],[14,\"readonly\",\"\"],[14,0,\"textarea\"],[14,1,\"sum\"],[14,\"data-test-tools-input\",\"sum\"],[12],[1,[30,2]],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n  \"],[10,0],[14,0,\"field is-grouped box is-fullwidth is-bottomless\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n      \"],[8,[39,2],null,[[\"@clipboardText\",\"@class\",\"@buttonType\",\"@success\"],[[30,2],\"button is-primary\",\"button\",[28,[37,3],[[30,0],[28,[37,4],[\"Hashed data copied!\"],null]],null]]],[[\"default\"],[[[[1,\"\\n        Copy\\n      \"]],[]]]]],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n      \"],[11,\"button\"],[24,0,\"button\"],[16,\"data-test-tools-back\",true],[24,4,\"button\"],[4,[38,5],[\"click\",[30,0,[\"onClear\"]]],null],[12],[1,\"\\n        Back\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]],[[[1,\"  \"],[10,0],[14,0,\"box is-sideless is-fullwidth is-marginless\"],[12],[1,\"\\n    \"],[8,[39,6],null,[[\"@errors\"],[[30,3]]],null],[1,\"\\n    \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n      \"],[10,\"label\"],[14,\"for\",\"input\"],[14,0,\"is-label\"],[12],[1,\"\\n        Input\\n      \"],[13],[1,\"\\n      \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n        \"],[8,[39,7],[[24,1,\"input-hash\"],[24,3,\"input\"],[24,0,\"textarea\"],[24,\"data-test-tools-input\",\"hash-input\"]],[[\"@value\"],[[30,4]]],null],[1,\"        \"],[8,[39,8],null,[[\"@value\",\"@isInput\",\"@data-test-transit-b64-toggle\"],[[30,4],false,\"input\"]],null],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"field is-horizontal\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"field-body\"],[12],[1,\"\\n        \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n          \"],[10,\"label\"],[14,\"for\",\"algorithm\"],[14,0,\"is-label\"],[12],[1,\"Algorithm\"],[13],[1,\"\\n          \"],[10,0],[14,0,\"control is-expanded\"],[12],[1,\"\\n            \"],[10,0],[14,0,\"select is-fullwidth\"],[12],[1,\"\\n              \"],[10,\"select\"],[14,3,\"algorithm\"],[14,1,\"algorithm\"],[15,\"onchange\",[28,[37,3],[[30,0],[28,[37,9],[[30,5]],null]],[[\"value\"],[\"target.value\"]]]],[12],[1,\"\\n\"],[42,[28,[37,11],[[28,[37,11],[[28,[37,12],null,null]],null]],null],null,[[[1,\"                  \"],[10,\"option\"],[15,\"selected\",[52,[30,5],[28,[37,13],[[30,5],[30,6]],null]]],[15,2,[30,6]],[12],[1,\"\\n                    \"],[1,[30,6]],[1,\"\\n                  \"],[13],[1,\"\\n\"]],[6]],null],[1,\"              \"],[13],[1,\"\\n            \"],[13],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n        \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n          \"],[10,\"label\"],[14,\"for\",\"format\"],[14,0,\"is-label\"],[12],[1,\" Output format \"],[13],[1,\"\\n          \"],[10,0],[14,0,\"control is-expanded\"],[12],[1,\"\\n            \"],[10,0],[14,0,\"select is-fullwidth\"],[12],[1,\"\\n              \"],[10,\"select\"],[14,3,\"format\"],[14,1,\"format\"],[15,\"onchange\",[28,[37,3],[[30,0],[28,[37,9],[[30,7]],null]],[[\"value\"],[\"target.value\"]]]],[12],[1,\"\\n\"],[42,[28,[37,11],[[28,[37,11],[[28,[37,14],[\"base64\",\"hex\"],null]],null]],null],null,[[[1,\"                  \"],[10,\"option\"],[15,\"selected\",[52,[30,7],[28,[37,13],[[30,7],[30,8]],null]]],[15,2,[30,8]],[12],[1,\"\\n                    \"],[1,[30,8]],[1,\"\\n                  \"],[13],[1,\"\\n\"]],[8]],null],[1,\"              \"],[13],[1,\"\\n            \"],[13],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n  \"],[10,0],[14,0,\"field is-grouped box is-fullwidth is-bottomless\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n      \"],[10,\"button\"],[14,0,\"button is-primary\"],[14,\"data-test-tools-submit\",\"true\"],[14,4,\"submit\"],[12],[1,\"\\n        Hash\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]]]],[\"p\",\"@sum\",\"@errors\",\"@input\",\"@algorithm\",\"algo\",\"@format\",\"formatOption\"],false,[\"page-header\",\"if\",\"copy-button\",\"action\",\"set-flash-message\",\"on\",\"message-error\",\"textarea\",\"b64-toggle\",\"mut\",\"each\",\"-track-array\",\"sha2-digest-sizes\",\"eq\",\"array\"]]",
    "moduleName": "vault/templates/components/tool-hash.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/tool-lookup", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.levelLeft>
      <h1 class="title is-3">
        Lookup token
      </h1>
    </p.levelLeft>
  </PageHeader>
  
  {{#if (or @creation_time @creation_ttl)}}
    <div class="box is-fullwidth is-sideless is-paddingless is-marginless">
      <InfoTableRow @label="Creation path" @value={{@creation_path}} data-test-tools="token-lookup-row" />
      <InfoTableRow @label="Creation time" @value={{@creation_time}} data-test-tools="token-lookup-row" />
      <InfoTableRow @label="Creation TTL" @value={{@creation_ttl}} data-test-tools="token-lookup-row" />
      {{#if @expirationDate}}
        <InfoTableRow @label="Expiration date" @value={{@expirationDate}} data-test-tools="token-lookup-row" />
        <InfoTableRow @label="Expires in" @value={{date-from-now @expirationDate}} data-test-tools="token-lookup-row" />
      {{/if}}
    </div>
    <div class="field is-grouped box is-fullwidth is-bottomless">
      <div class="control">
        <button {{on "click" this.onClear}} type="button" class="button">
          Back
        </button>
      </div>
    </div>
  {{else}}
    <div class="box is-sideless is-fullwidth is-marginless">
      <NamespaceReminder @mode="perform" @noun={{@selectedAction}} />
      <MessageError @errors={{@errors}} />
      <div class="field">
        <label for="token" class="is-label">Wrapped token</label>
        <div class="has-text-grey is-size-8 has-bottom-margin-xs">
          Enter your wrapped token here to display its information.
        </div>
        <div class="control">
          <Input @value={{@token}} class="input" id="token" name="token" data-test-tools-input="wrapping-token" />
        </div>
      </div>
    </div>
    <div class="field is-grouped box is-fullwidth is-bottomless">
      <div class="control">
        <button type="submit" data-test-tools-submit="true" class="button is-primary">
          Lookup token
        </button>
      </div>
    </div>
  {{/if}}
  */
  {
    "id": "d0+6asOa",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n      Lookup token\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\\n\"],[41,[28,[37,2],[[30,2],[30,3]],null],[[[1,\"  \"],[10,0],[14,0,\"box is-fullwidth is-sideless is-paddingless is-marginless\"],[12],[1,\"\\n    \"],[8,[39,3],[[24,\"data-test-tools\",\"token-lookup-row\"]],[[\"@label\",\"@value\"],[\"Creation path\",[30,4]]],null],[1,\"\\n    \"],[8,[39,3],[[24,\"data-test-tools\",\"token-lookup-row\"]],[[\"@label\",\"@value\"],[\"Creation time\",[30,2]]],null],[1,\"\\n    \"],[8,[39,3],[[24,\"data-test-tools\",\"token-lookup-row\"]],[[\"@label\",\"@value\"],[\"Creation TTL\",[30,3]]],null],[1,\"\\n\"],[41,[30,5],[[[1,\"      \"],[8,[39,3],[[24,\"data-test-tools\",\"token-lookup-row\"]],[[\"@label\",\"@value\"],[\"Expiration date\",[30,5]]],null],[1,\"\\n      \"],[8,[39,3],[[24,\"data-test-tools\",\"token-lookup-row\"]],[[\"@label\",\"@value\"],[\"Expires in\",[28,[37,4],[[30,5]],null]]],null],[1,\"\\n\"]],[]],null],[1,\"  \"],[13],[1,\"\\n  \"],[10,0],[14,0,\"field is-grouped box is-fullwidth is-bottomless\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n      \"],[11,\"button\"],[24,0,\"button\"],[24,4,\"button\"],[4,[38,5],[\"click\",[30,0,[\"onClear\"]]],null],[12],[1,\"\\n        Back\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]],[[[1,\"  \"],[10,0],[14,0,\"box is-sideless is-fullwidth is-marginless\"],[12],[1,\"\\n    \"],[8,[39,6],null,[[\"@mode\",\"@noun\"],[\"perform\",[30,6]]],null],[1,\"\\n    \"],[8,[39,7],null,[[\"@errors\"],[[30,7]]],null],[1,\"\\n    \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n      \"],[10,\"label\"],[14,\"for\",\"token\"],[14,0,\"is-label\"],[12],[1,\"Wrapped token\"],[13],[1,\"\\n      \"],[10,0],[14,0,\"has-text-grey is-size-8 has-bottom-margin-xs\"],[12],[1,\"\\n        Enter your wrapped token here to display its information.\\n      \"],[13],[1,\"\\n      \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n        \"],[8,[39,8],[[24,0,\"input\"],[24,1,\"token\"],[24,3,\"token\"],[24,\"data-test-tools-input\",\"wrapping-token\"]],[[\"@value\"],[[30,8]]],null],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n  \"],[10,0],[14,0,\"field is-grouped box is-fullwidth is-bottomless\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n      \"],[10,\"button\"],[14,\"data-test-tools-submit\",\"true\"],[14,0,\"button is-primary\"],[14,4,\"submit\"],[12],[1,\"\\n        Lookup token\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]]]],[\"p\",\"@creation_time\",\"@creation_ttl\",\"@creation_path\",\"@expirationDate\",\"@selectedAction\",\"@errors\",\"@token\"],false,[\"page-header\",\"if\",\"or\",\"info-table-row\",\"date-from-now\",\"on\",\"namespace-reminder\",\"message-error\",\"input\"]]",
    "moduleName": "vault/templates/components/tool-lookup.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/tool-random", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.levelLeft>
      <h1 class="title is-3">
        Random bytes
      </h1>
    </p.levelLeft>
  </PageHeader>
  
  {{#if @random_bytes}}
    <div class="box is-sideless is-fullwidth is-marginless">
      <label for="rand" class="is-label">Random bytes</label>
      <textarea readonly class="textarea" id="rand" data-test-tools-input="random-bytes">{{@random_bytes}}</textarea>
    </div>
    <div class="field is-grouped box is-fullwidth is-bottomless">
      <div class="control">
        <CopyButton
          @clipboardText={{@random_bytes}}
          @class="button is-primary"
          @buttonType="button"
          @success={{action (set-flash-message "Random bytes copied!")}}
        >
          Copy
        </CopyButton>
      </div>
      <div class="control">
        <button {{on "click" this.onClear}} type="button" class="button">
          Back
        </button>
      </div>
    </div>
  {{else}}
    <div class="box is-sideless is-fullwidth is-marginless">
      <MessageError @errors={{@errors}} />
      <div class="field is-horizontal">
        <div class="field-body">
          <div class="field">
            <label for="bytes" class="is-label">
              Number of bytes
            </label>
            <div class="control">
              <Input id="bytes" class="input" @value={{@bytes}} data-test-tools-input="bytes" />
            </div>
          </div>
          <div class="field">
            <label for="format" class="is-label">
              Output format
            </label>
            <div class="control is-expanded">
              <div class="select is-fullwidth">
                <select name="format" id="format" onchange={{action (mut @format) value="target.value"}}>
                  {{#each (array "base64" "hex") as |formatOption|}}
                    <option selected={{if @format (eq @format formatOption)}} value={{formatOption}}>
                      {{formatOption}}
                    </option>
                  {{/each}}
                </select>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="field is-grouped box is-fullwidth is-bottomless">
      <div class="control">
        <button type="submit" class="button is-primary" data-test-tools-submit="true">
          Generate
        </button>
      </div>
    </div>
  {{/if}}
  */
  {
    "id": "1MBUhClA",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n      Random bytes\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\\n\"],[41,[30,2],[[[1,\"  \"],[10,0],[14,0,\"box is-sideless is-fullwidth is-marginless\"],[12],[1,\"\\n    \"],[10,\"label\"],[14,\"for\",\"rand\"],[14,0,\"is-label\"],[12],[1,\"Random bytes\"],[13],[1,\"\\n    \"],[10,\"textarea\"],[14,\"readonly\",\"\"],[14,0,\"textarea\"],[14,1,\"rand\"],[14,\"data-test-tools-input\",\"random-bytes\"],[12],[1,[30,2]],[13],[1,\"\\n  \"],[13],[1,\"\\n  \"],[10,0],[14,0,\"field is-grouped box is-fullwidth is-bottomless\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n      \"],[8,[39,2],null,[[\"@clipboardText\",\"@class\",\"@buttonType\",\"@success\"],[[30,2],\"button is-primary\",\"button\",[28,[37,3],[[30,0],[28,[37,4],[\"Random bytes copied!\"],null]],null]]],[[\"default\"],[[[[1,\"\\n        Copy\\n      \"]],[]]]]],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n      \"],[11,\"button\"],[24,0,\"button\"],[24,4,\"button\"],[4,[38,5],[\"click\",[30,0,[\"onClear\"]]],null],[12],[1,\"\\n        Back\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]],[[[1,\"  \"],[10,0],[14,0,\"box is-sideless is-fullwidth is-marginless\"],[12],[1,\"\\n    \"],[8,[39,6],null,[[\"@errors\"],[[30,3]]],null],[1,\"\\n    \"],[10,0],[14,0,\"field is-horizontal\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"field-body\"],[12],[1,\"\\n        \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n          \"],[10,\"label\"],[14,\"for\",\"bytes\"],[14,0,\"is-label\"],[12],[1,\"\\n            Number of bytes\\n          \"],[13],[1,\"\\n          \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n            \"],[8,[39,7],[[24,1,\"bytes\"],[24,0,\"input\"],[24,\"data-test-tools-input\",\"bytes\"]],[[\"@value\"],[[30,4]]],null],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n        \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n          \"],[10,\"label\"],[14,\"for\",\"format\"],[14,0,\"is-label\"],[12],[1,\"\\n            Output format\\n          \"],[13],[1,\"\\n          \"],[10,0],[14,0,\"control is-expanded\"],[12],[1,\"\\n            \"],[10,0],[14,0,\"select is-fullwidth\"],[12],[1,\"\\n              \"],[10,\"select\"],[14,3,\"format\"],[14,1,\"format\"],[15,\"onchange\",[28,[37,3],[[30,0],[28,[37,8],[[30,5]],null]],[[\"value\"],[\"target.value\"]]]],[12],[1,\"\\n\"],[42,[28,[37,10],[[28,[37,10],[[28,[37,11],[\"base64\",\"hex\"],null]],null]],null],null,[[[1,\"                  \"],[10,\"option\"],[15,\"selected\",[52,[30,5],[28,[37,12],[[30,5],[30,6]],null]]],[15,2,[30,6]],[12],[1,\"\\n                    \"],[1,[30,6]],[1,\"\\n                  \"],[13],[1,\"\\n\"]],[6]],null],[1,\"              \"],[13],[1,\"\\n            \"],[13],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n  \"],[10,0],[14,0,\"field is-grouped box is-fullwidth is-bottomless\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n      \"],[10,\"button\"],[14,0,\"button is-primary\"],[14,\"data-test-tools-submit\",\"true\"],[14,4,\"submit\"],[12],[1,\"\\n        Generate\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]]]],[\"p\",\"@random_bytes\",\"@errors\",\"@bytes\",\"@format\",\"formatOption\"],false,[\"page-header\",\"if\",\"copy-button\",\"action\",\"set-flash-message\",\"on\",\"message-error\",\"input\",\"mut\",\"each\",\"-track-array\",\"array\",\"eq\"]]",
    "moduleName": "vault/templates/components/tool-random.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/tool-rewrap", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.levelLeft>
      <h1 class="title is-3">
        Rewrap token
      </h1>
    </p.levelLeft>
  </PageHeader>
  
  {{#if @rewrap_token}}
    <div class="box is-sideless is-fullwidth is-marginless">
      <div class="field">
        <label for="wrap-info" class="is-label">Rewrapped token</label>
        <div class="control">
          <Textarea
            @value={{@rewrap_token}}
            readonly={{true}}
            class="textarea"
            id="wrap-info"
            name="wrap-info"
            data-test-tools-input="rewrapped-token"
          />
        </div>
      </div>
    </div>
    <div class="field is-grouped box is-fullwidth is-bottomless">
      <div class="control">
        <CopyButton
          @clipboardText={{@rewrap_token}}
          @class="button is-primary"
          @buttonType="button"
          @success={{action (set-flash-message "Token copied!")}}
        >
          Copy
        </CopyButton>
      </div>
      <div class="control">
        <button {{on "click" this.onClear}} type="button" class="button">
          Back
        </button>
      </div>
    </div>
  {{else}}
    <div class="box is-sideless is-fullwidth is-marginless">
      <NamespaceReminder @mode="perform" @noun={{@selectedAction}} />
      <MessageError @errors={{@errors}} />
      <div class="field">
        <label for="token" class="is-label">Wrapped token</label>
        <div class="has-text-grey is-size-8 has-bottom-margin-xs">
          Enter your wrapped token here to rewrap it and refresh its TTL.
        </div>
        <div class="control">
          <Input @value={{@token}} class="input" id="token" name="token" data-test-tools-input="wrapping-token" />
        </div>
      </div>
    </div>
    <div class="field is-grouped box is-fullwidth is-bottomless">
      <div class="control">
        <button type="submit" data-test-tools-submit="true" class="button is-primary">
          Rewrap token
        </button>
      </div>
    </div>
  {{/if}}
  */
  {
    "id": "961T8Byh",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n      Rewrap token\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\\n\"],[41,[30,2],[[[1,\"  \"],[10,0],[14,0,\"box is-sideless is-fullwidth is-marginless\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n      \"],[10,\"label\"],[14,\"for\",\"wrap-info\"],[14,0,\"is-label\"],[12],[1,\"Rewrapped token\"],[13],[1,\"\\n      \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n        \"],[8,[39,2],[[16,\"readonly\",true],[24,0,\"textarea\"],[24,1,\"wrap-info\"],[24,3,\"wrap-info\"],[24,\"data-test-tools-input\",\"rewrapped-token\"]],[[\"@value\"],[[30,2]]],null],[1,\"      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n  \"],[10,0],[14,0,\"field is-grouped box is-fullwidth is-bottomless\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n      \"],[8,[39,3],null,[[\"@clipboardText\",\"@class\",\"@buttonType\",\"@success\"],[[30,2],\"button is-primary\",\"button\",[28,[37,4],[[30,0],[28,[37,5],[\"Token copied!\"],null]],null]]],[[\"default\"],[[[[1,\"\\n        Copy\\n      \"]],[]]]]],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n      \"],[11,\"button\"],[24,0,\"button\"],[24,4,\"button\"],[4,[38,6],[\"click\",[30,0,[\"onClear\"]]],null],[12],[1,\"\\n        Back\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]],[[[1,\"  \"],[10,0],[14,0,\"box is-sideless is-fullwidth is-marginless\"],[12],[1,\"\\n    \"],[8,[39,7],null,[[\"@mode\",\"@noun\"],[\"perform\",[30,3]]],null],[1,\"\\n    \"],[8,[39,8],null,[[\"@errors\"],[[30,4]]],null],[1,\"\\n    \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n      \"],[10,\"label\"],[14,\"for\",\"token\"],[14,0,\"is-label\"],[12],[1,\"Wrapped token\"],[13],[1,\"\\n      \"],[10,0],[14,0,\"has-text-grey is-size-8 has-bottom-margin-xs\"],[12],[1,\"\\n        Enter your wrapped token here to rewrap it and refresh its TTL.\\n      \"],[13],[1,\"\\n      \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n        \"],[8,[39,9],[[24,0,\"input\"],[24,1,\"token\"],[24,3,\"token\"],[24,\"data-test-tools-input\",\"wrapping-token\"]],[[\"@value\"],[[30,5]]],null],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n  \"],[10,0],[14,0,\"field is-grouped box is-fullwidth is-bottomless\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n      \"],[10,\"button\"],[14,\"data-test-tools-submit\",\"true\"],[14,0,\"button is-primary\"],[14,4,\"submit\"],[12],[1,\"\\n        Rewrap token\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]]]],[\"p\",\"@rewrap_token\",\"@selectedAction\",\"@errors\",\"@token\"],false,[\"page-header\",\"if\",\"textarea\",\"copy-button\",\"action\",\"set-flash-message\",\"on\",\"namespace-reminder\",\"message-error\",\"input\"]]",
    "moduleName": "vault/templates/components/tool-rewrap.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/tool-unwrap", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.levelLeft>
      <h1 class="title is-3">
        Unwrap data
      </h1>
    </p.levelLeft>
  </PageHeader>
  
  {{#if @unwrap_data}}
    <div class="box is-sideless is-fullwidth is-marginless">
      <nav class="tabs has-bottom-margin-l">
        <ul>
          {{! template-lint-configure no-nested-interactive "warn" }}
          <li
            aria-selected={{if (eq @unwrapActiveTab "data") "true" "false"}}
            class={{if (eq @unwrapActiveTab "data") "is-active"}}
          >
            <button
              type="button"
              class="link link-plain tab has-text-weight-semibold"
              {{action (mut @unwrapActiveTab) "data"}}
              data-test-button-data
            >
              Data
            </button>
          </li>
          <li
            aria-selected={{if (eq @unwrapActiveTab "data") "true" "false"}}
            class={{if (eq @unwrapActiveTab "details") "is-active"}}
          >
            <button
              type="button"
              class="link link-plain tab has-text-weight-semibold"
              {{action (mut @unwrapActiveTab) "details"}}
              data-test-button-details
            >
              Wrap Details
            </button>
          </li>
          {{! template-lint-configure no-nested-interactive "on" }}
        </ul>
      </nav>
      {{#if (eq @unwrapActiveTab "data")}}
        <div class="field">
          <div class="control">
            <JsonEditor @title="Unwrapped Data" @value={{stringify @unwrap_data}} @readOnly={{true}} />
          </div>
        </div>
      {{else}}
        <div class="field box is-fullwidth is-shadowless is-paddingless is-marginless">
          {{#each-in @details as |key detail|}}
            <InfoTableRow @label={{key}} @value={{key}}>
              {{#if (or (eq detail "No") (eq detail "None"))}}
                <Icon @name="x-circle" class="has-text-grey" />
                {{detail}}
              {{else}}
                {{#if (eq detail "Yes")}}
                  <Icon @name="check-circle" class="has-text-success" />
                {{/if}}
                {{detail}}
              {{/if}}
            </InfoTableRow>
          {{/each-in}}
        </div>
      {{/if}}
    </div>
    <div class="field is-grouped box is-fullwidth is-bottomless">
      <div class="control">
        <CopyButton
          @clipboardText={{stringify @unwrap_data}}
          @class="button is-primary"
          @buttonType="button"
          @success={{action (set-flash-message "Data copied!")}}
        >
          Copy
        </CopyButton>
      </div>
      <div class="control">
        <button {{on "click" this.onClear}} type="button" class="button">
          Back
        </button>
      </div>
    </div>
  {{else}}
    <div class="box is-sideless is-fullwidth is-marginless">
      <NamespaceReminder @mode="perform" @noun={{@selectedAction}} />
      <MessageError @errors={{@errors}} />
      <div class="field">
        <label for="token" class="is-label">Wrapped token</label>
        <div class="has-text-grey is-size-8 has-bottom-margin-xs">
          Enter your wrapped token here to unwrap it and return its original value.
        </div>
        <div class="control">
          <Input
            @value={{@token}}
            class="input"
            id="token"
            name="token"
            autocomplete="off"
            spellcheck="false"
            data-test-tools-input="wrapping-token"
          />
        </div>
      </div>
    </div>
    <div class="field is-grouped box is-fullwidth is-bottomless">
      <div class="control">
        <button type="submit" data-test-tools-submit="true" class="button is-primary">
          Unwrap data
        </button>
      </div>
    </div>
  {{/if}}
  */
  {
    "id": "k1hhGEHP",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n      Unwrap data\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\\n\"],[41,[30,2],[[[1,\"  \"],[10,0],[14,0,\"box is-sideless is-fullwidth is-marginless\"],[12],[1,\"\\n    \"],[10,\"nav\"],[14,0,\"tabs has-bottom-margin-l\"],[12],[1,\"\\n      \"],[10,\"ul\"],[12],[1,\"\\n\"],[1,\"        \"],[10,\"li\"],[15,\"aria-selected\",[52,[28,[37,2],[[30,3],\"data\"],null],\"true\",\"false\"]],[15,0,[52,[28,[37,2],[[30,3],\"data\"],null],\"is-active\"]],[12],[1,\"\\n          \"],[11,\"button\"],[24,0,\"link link-plain tab has-text-weight-semibold\"],[24,\"data-test-button-data\",\"\"],[24,4,\"button\"],[4,[38,3],[[30,0],[28,[37,4],[[30,3]],null],\"data\"],null],[12],[1,\"\\n            Data\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n        \"],[10,\"li\"],[15,\"aria-selected\",[52,[28,[37,2],[[30,3],\"data\"],null],\"true\",\"false\"]],[15,0,[52,[28,[37,2],[[30,3],\"details\"],null],\"is-active\"]],[12],[1,\"\\n          \"],[11,\"button\"],[24,0,\"link link-plain tab has-text-weight-semibold\"],[24,\"data-test-button-details\",\"\"],[24,4,\"button\"],[4,[38,3],[[30,0],[28,[37,4],[[30,3]],null],\"details\"],null],[12],[1,\"\\n            Wrap Details\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n\"],[1,\"      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n\"],[41,[28,[37,2],[[30,3],\"data\"],null],[[[1,\"      \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n        \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n          \"],[8,[39,5],null,[[\"@title\",\"@value\",\"@readOnly\"],[\"Unwrapped Data\",[28,[37,6],[[30,2]],null],true]],null],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n\"]],[]],[[[1,\"      \"],[10,0],[14,0,\"field box is-fullwidth is-shadowless is-paddingless is-marginless\"],[12],[1,\"\\n\"],[42,[28,[37,8],[[30,4]],null],null,[[[1,\"          \"],[8,[39,9],null,[[\"@label\",\"@value\"],[[30,6],[30,6]]],[[\"default\"],[[[[1,\"\\n\"],[41,[28,[37,10],[[28,[37,2],[[30,5],\"No\"],null],[28,[37,2],[[30,5],\"None\"],null]],null],[[[1,\"              \"],[8,[39,11],[[24,0,\"has-text-grey\"]],[[\"@name\"],[\"x-circle\"]],null],[1,\"\\n              \"],[1,[30,5]],[1,\"\\n\"]],[]],[[[41,[28,[37,2],[[30,5],\"Yes\"],null],[[[1,\"                \"],[8,[39,11],[[24,0,\"has-text-success\"]],[[\"@name\"],[\"check-circle\"]],null],[1,\"\\n\"]],[]],null],[1,\"              \"],[1,[30,5]],[1,\"\\n\"]],[]]],[1,\"          \"]],[]]]]],[1,\"\\n\"]],[5,6]],null],[1,\"      \"],[13],[1,\"\\n\"]],[]]],[1,\"  \"],[13],[1,\"\\n  \"],[10,0],[14,0,\"field is-grouped box is-fullwidth is-bottomless\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n      \"],[8,[39,12],null,[[\"@clipboardText\",\"@class\",\"@buttonType\",\"@success\"],[[28,[37,6],[[30,2]],null],\"button is-primary\",\"button\",[28,[37,3],[[30,0],[28,[37,13],[\"Data copied!\"],null]],null]]],[[\"default\"],[[[[1,\"\\n        Copy\\n      \"]],[]]]]],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n      \"],[11,\"button\"],[24,0,\"button\"],[24,4,\"button\"],[4,[38,14],[\"click\",[30,0,[\"onClear\"]]],null],[12],[1,\"\\n        Back\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]],[[[1,\"  \"],[10,0],[14,0,\"box is-sideless is-fullwidth is-marginless\"],[12],[1,\"\\n    \"],[8,[39,15],null,[[\"@mode\",\"@noun\"],[\"perform\",[30,7]]],null],[1,\"\\n    \"],[8,[39,16],null,[[\"@errors\"],[[30,8]]],null],[1,\"\\n    \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n      \"],[10,\"label\"],[14,\"for\",\"token\"],[14,0,\"is-label\"],[12],[1,\"Wrapped token\"],[13],[1,\"\\n      \"],[10,0],[14,0,\"has-text-grey is-size-8 has-bottom-margin-xs\"],[12],[1,\"\\n        Enter your wrapped token here to unwrap it and return its original value.\\n      \"],[13],[1,\"\\n      \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n        \"],[8,[39,17],[[24,0,\"input\"],[24,1,\"token\"],[24,3,\"token\"],[24,\"autocomplete\",\"off\"],[24,\"spellcheck\",\"false\"],[24,\"data-test-tools-input\",\"wrapping-token\"]],[[\"@value\"],[[30,9]]],null],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n  \"],[10,0],[14,0,\"field is-grouped box is-fullwidth is-bottomless\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n      \"],[10,\"button\"],[14,\"data-test-tools-submit\",\"true\"],[14,0,\"button is-primary\"],[14,4,\"submit\"],[12],[1,\"\\n        Unwrap data\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]]]],[\"p\",\"@unwrap_data\",\"@unwrapActiveTab\",\"@details\",\"detail\",\"key\",\"@selectedAction\",\"@errors\",\"@token\"],false,[\"page-header\",\"if\",\"eq\",\"action\",\"mut\",\"json-editor\",\"stringify\",\"each\",\"-each-in\",\"info-table-row\",\"or\",\"icon\",\"copy-button\",\"set-flash-message\",\"on\",\"namespace-reminder\",\"message-error\",\"input\"]]",
    "moduleName": "vault/templates/components/tool-unwrap.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/tool-wrap", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.levelLeft>
      <h1 class="title is-3">
        Wrap data
      </h1>
    </p.levelLeft>
  </PageHeader>
  
  {{#if @token}}
    <div class="box is-sideless is-fullwidth is-marginless">
      <div class="field">
        <label for="wrap-info" class="is-label">Wrapped token</label>
        <div class="control">
          <Textarea
            @value={{@token}}
            readonly={{true}}
            class="textarea"
            id="wrap-info"
            name="wrap-info"
            data-test-tools-input="wrapping-token"
          />
        </div>
      </div>
    </div>
    <div class="field is-grouped box is-fullwidth is-bottomless">
      <div class="control">
        <CopyButton
          @clipboardText={{@token}}
          @class="button is-primary"
          @buttonType="button"
          @success={{action (set-flash-message "Token copied!")}}
        >
          Copy
        </CopyButton>
      </div>
      <div class="control">
        <button {{on "click" this.onClear}} type="button" class="button">
          Back
        </button>
      </div>
    </div>
  {{else}}
    <div class="box is-sideless is-fullwidth is-marginless">
      <NamespaceReminder @mode="perform" @noun={{@selectedAction}} />
      <MessageError @errors={{@errors}} />
      <div class="field">
        <div class="control">
          <JsonEditor
            @title="Data to wrap"
            @subTitle="json-formatted"
            @value={{this.data}}
            @valueUpdated={{action this.codemirrorUpdated}}
          />
        </div>
      </div>
      <TtlPicker
        @label="Wrap TTL"
        @initialValue="30m"
        @onChange={{action "updateTtl"}}
        @helperTextDisabled="OpenBao will use the default (30m)"
        @helperTextEnabled="Wrap will expire after"
        @changeOnInit={{true}}
      />
    </div>
    <div class="field is-grouped box is-fullwidth is-bottomless">
      <div class="control">
        <button type="submit" class="button is-primary" data-test-tools-submit="true" disabled={{@buttonDisabled}}>
          Wrap data
        </button>
      </div>
    </div>
  {{/if}}
  */
  {
    "id": "9jwc+I7B",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n      Wrap data\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\\n\"],[41,[30,2],[[[1,\"  \"],[10,0],[14,0,\"box is-sideless is-fullwidth is-marginless\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n      \"],[10,\"label\"],[14,\"for\",\"wrap-info\"],[14,0,\"is-label\"],[12],[1,\"Wrapped token\"],[13],[1,\"\\n      \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n        \"],[8,[39,2],[[16,\"readonly\",true],[24,0,\"textarea\"],[24,1,\"wrap-info\"],[24,3,\"wrap-info\"],[24,\"data-test-tools-input\",\"wrapping-token\"]],[[\"@value\"],[[30,2]]],null],[1,\"      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n  \"],[10,0],[14,0,\"field is-grouped box is-fullwidth is-bottomless\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n      \"],[8,[39,3],null,[[\"@clipboardText\",\"@class\",\"@buttonType\",\"@success\"],[[30,2],\"button is-primary\",\"button\",[28,[37,4],[[30,0],[28,[37,5],[\"Token copied!\"],null]],null]]],[[\"default\"],[[[[1,\"\\n        Copy\\n      \"]],[]]]]],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n      \"],[11,\"button\"],[24,0,\"button\"],[24,4,\"button\"],[4,[38,6],[\"click\",[30,0,[\"onClear\"]]],null],[12],[1,\"\\n        Back\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]],[[[1,\"  \"],[10,0],[14,0,\"box is-sideless is-fullwidth is-marginless\"],[12],[1,\"\\n    \"],[8,[39,7],null,[[\"@mode\",\"@noun\"],[\"perform\",[30,3]]],null],[1,\"\\n    \"],[8,[39,8],null,[[\"@errors\"],[[30,4]]],null],[1,\"\\n    \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n        \"],[8,[39,9],null,[[\"@title\",\"@subTitle\",\"@value\",\"@valueUpdated\"],[\"Data to wrap\",\"json-formatted\",[30,0,[\"data\"]],[28,[37,4],[[30,0],[30,0,[\"codemirrorUpdated\"]]],null]]],null],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n    \"],[8,[39,10],null,[[\"@label\",\"@initialValue\",\"@onChange\",\"@helperTextDisabled\",\"@helperTextEnabled\",\"@changeOnInit\"],[\"Wrap TTL\",\"30m\",[28,[37,4],[[30,0],\"updateTtl\"],null],\"OpenBao will use the default (30m)\",\"Wrap will expire after\",true]],null],[1,\"\\n  \"],[13],[1,\"\\n  \"],[10,0],[14,0,\"field is-grouped box is-fullwidth is-bottomless\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n      \"],[10,\"button\"],[14,0,\"button is-primary\"],[14,\"data-test-tools-submit\",\"true\"],[15,\"disabled\",[30,5]],[14,4,\"submit\"],[12],[1,\"\\n        Wrap data\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]]]],[\"p\",\"@token\",\"@selectedAction\",\"@errors\",\"@buttonDisabled\"],false,[\"page-header\",\"if\",\"textarea\",\"copy-button\",\"action\",\"set-flash-message\",\"on\",\"namespace-reminder\",\"message-error\",\"json-editor\",\"ttl-picker\"]]",
    "moduleName": "vault/templates/components/tool-wrap.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/toolbar-secret-link", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <SecretLink
    @mode={{@mode}}
    @secret={{@secret}}
    @replace={{@replace}}
    @queryParams={{@queryParams}}
    @disabled={{@disabled}}
    class="toolbar-link"
    ...attributes
  >
    {{yield}}
    <Icon @name={{this.glyph}} />
  </SecretLink>
  */
  {
    "id": "JFZnsY/f",
    "block": "[[[8,[39,0],[[24,0,\"toolbar-link\"],[17,1]],[[\"@mode\",\"@secret\",\"@replace\",\"@queryParams\",\"@disabled\"],[[30,2],[30,3],[30,4],[30,5],[30,6]]],[[\"default\"],[[[[1,\"\\n  \"],[18,7,null],[1,\"\\n  \"],[8,[39,2],null,[[\"@name\"],[[30,0,[\"glyph\"]]]],null],[1,\"\\n\"]],[]]]]]],[\"&attrs\",\"@mode\",\"@secret\",\"@replace\",\"@queryParams\",\"@disabled\",\"&default\"],false,[\"secret-link\",\"yield\",\"icon\"]]",
    "moduleName": "vault/templates/components/toolbar-secret-link.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/transit-edit", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.top>
      <KeyValueHeader
        @baseKey={{this.key}}
        @path="vault.cluster.secrets.backend.list"
        @mode={{this.mode}}
        @root={{this.root}}
        @showCurrent={{true}}
      />
    </p.top>
    <p.levelLeft>
      <h1 class="title is-3">
        {{#if (eq this.mode "create")}}
          Create encryption key
        {{else if (eq this.mode "edit")}}
          Edit encryption key
        {{else}}
          Encryption key
          <code>{{this.key.id}}</code>
        {{/if}}
      </h1>
    </p.levelLeft>
  </PageHeader>
  {{#if (eq this.mode "create")}}
    <TransitFormCreate
      @createOrUpdateKey={{action "createOrUpdateKey" this.mode}}
      @setValueOnKey={{action "setValueOnKey" "exportable"}}
      @autoRotateInvalid={{this.autoRotateInvalid}}
      @handleAutoRotateChange={{action "handleAutoRotateChange"}}
      @derivedChange={{action "derivedChange" value="target.checked"}}
      @convergentEncryptionChange={{action "convergentEncryptionChange" value="target.checked"}}
      @key={{this.key}}
      @requestInFlight={{this.requestInFlight}}
    />
  {{else if (eq this.mode "edit")}}
    <TransitFormEdit
      @createOrUpdateKey={{action "createOrUpdateKey" this.mode}}
      @setValueOnKey={{action "setValueOnKey" "deletionAllowed"}}
      @autoRotateInvalid={{this.autoRotateInvalid}}
      @handleAutoRotateChange={{action "handleAutoRotateChange"}}
      @deleteKey={{action "deleteKey"}}
      @key={{this.key}}
      @requestInFlight={{this.requestInFlight}}
      @capabilities={{this.capabilities}}
    />
  {{else if (eq this.mode "show")}}
    <TransitFormShow
      @refresh={{action "refresh"}}
      @tab={{this.tab}}
      @key={{this.key}}
      @capabilities={{this.capabilities}}
      @mode={{this.mode}}
      @model={{this.model}}
      @backend={{this.backend}}
    />
  {{else}}
    <EmptyState @title="No Transit mode selected" />
  {{/if}}
  */
  {
    "id": "VgkIZ4zA",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"top\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,1],null,[[\"@baseKey\",\"@path\",\"@mode\",\"@root\",\"@showCurrent\"],[[30,0,[\"key\"]],\"vault.cluster.secrets.backend.list\",[30,0,[\"mode\"]],[30,0,[\"root\"]],true]],null],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n\"],[41,[28,[37,3],[[30,0,[\"mode\"]],\"create\"],null],[[[1,\"        Create encryption key\\n\"]],[]],[[[41,[28,[37,3],[[30,0,[\"mode\"]],\"edit\"],null],[[[1,\"        Edit encryption key\\n\"]],[]],[[[1,\"        Encryption key\\n        \"],[10,\"code\"],[12],[1,[30,0,[\"key\",\"id\"]]],[13],[1,\"\\n      \"]],[]]]],[]]],[1,\"    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\"],[41,[28,[37,3],[[30,0,[\"mode\"]],\"create\"],null],[[[1,\"  \"],[8,[39,4],null,[[\"@createOrUpdateKey\",\"@setValueOnKey\",\"@autoRotateInvalid\",\"@handleAutoRotateChange\",\"@derivedChange\",\"@convergentEncryptionChange\",\"@key\",\"@requestInFlight\"],[[28,[37,5],[[30,0],\"createOrUpdateKey\",[30,0,[\"mode\"]]],null],[28,[37,5],[[30,0],\"setValueOnKey\",\"exportable\"],null],[30,0,[\"autoRotateInvalid\"]],[28,[37,5],[[30,0],\"handleAutoRotateChange\"],null],[28,[37,5],[[30,0],\"derivedChange\"],[[\"value\"],[\"target.checked\"]]],[28,[37,5],[[30,0],\"convergentEncryptionChange\"],[[\"value\"],[\"target.checked\"]]],[30,0,[\"key\"]],[30,0,[\"requestInFlight\"]]]],null],[1,\"\\n\"]],[]],[[[41,[28,[37,3],[[30,0,[\"mode\"]],\"edit\"],null],[[[1,\"  \"],[8,[39,6],null,[[\"@createOrUpdateKey\",\"@setValueOnKey\",\"@autoRotateInvalid\",\"@handleAutoRotateChange\",\"@deleteKey\",\"@key\",\"@requestInFlight\",\"@capabilities\"],[[28,[37,5],[[30,0],\"createOrUpdateKey\",[30,0,[\"mode\"]]],null],[28,[37,5],[[30,0],\"setValueOnKey\",\"deletionAllowed\"],null],[30,0,[\"autoRotateInvalid\"]],[28,[37,5],[[30,0],\"handleAutoRotateChange\"],null],[28,[37,5],[[30,0],\"deleteKey\"],null],[30,0,[\"key\"]],[30,0,[\"requestInFlight\"]],[30,0,[\"capabilities\"]]]],null],[1,\"\\n\"]],[]],[[[41,[28,[37,3],[[30,0,[\"mode\"]],\"show\"],null],[[[1,\"  \"],[8,[39,7],null,[[\"@refresh\",\"@tab\",\"@key\",\"@capabilities\",\"@mode\",\"@model\",\"@backend\"],[[28,[37,5],[[30,0],\"refresh\"],null],[30,0,[\"tab\"]],[30,0,[\"key\"]],[30,0,[\"capabilities\"]],[30,0,[\"mode\"]],[30,0,[\"model\"]],[30,0,[\"backend\"]]]],null],[1,\"\\n\"]],[]],[[[1,\"  \"],[8,[39,8],null,[[\"@title\"],[\"No Transit mode selected\"]],null],[1,\"\\n\"]],[]]]],[]]]],[]]]],[\"p\"],false,[\"page-header\",\"key-value-header\",\"if\",\"eq\",\"transit-form-create\",\"action\",\"transit-form-edit\",\"transit-form-show\",\"empty-state\"]]",
    "moduleName": "vault/templates/components/transit-edit.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/transit-form-create", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <form data-test-transit-create-form onsubmit={{@createOrUpdateKey}}>
    <div class="box is-sideless is-fullwidth is-marginless">
      <MessageError @model={{@key}} />
      <NamespaceReminder @mode="create" @noun="transit key" />
      <div class="field">
        <label for="key-name" class="is-label">Name</label>
        <Input id="key-name" @value={{@key.name}} class="input" data-test-transit-key-name={{true}} />
      </div>
      <div class="field">
        <TtlPicker
          @initialValue="30d"
          @initialEnabled={{false}}
          @label="Auto-rotation period"
          @helperTextDisabled="Key will never be automatically rotated"
          @helperTextEnabled="Key will be automatically rotated every"
          @onChange={{@handleAutoRotateChange}}
          @errorMessage={{if @autoRotateInvalid "Duration must be longer than 1 hour"}}
        />
      </div>
      <div class="field">
        <label for="key-type" class="is-label">Type</label>
        <div class="control is-expanded">
          <div class="select is-fullwidth">
            <select
              name="key-type"
              id="key-type"
              onchange={{action (mut @key.type) value="target.value"}}
              data-test-transit-key-type={{true}}
            >
              <option selected={{eq @key.type "aes128-gcm96"}} value="aes128-gcm96">
                aes128-gcm96
              </option>
              <option selected={{eq @key.type "aes256-gcm96"}} value="aes256-gcm96">
                aes256-gcm96
              </option>
              <option selected={{eq @key.type "chacha20-poly1305"}} value="chacha20-poly1305">
                chacha20-poly1305
              </option>
              <option selected={{eq @key.type "ecdsa-p256"}} value="ecdsa-p256">
                ecdsa-p256
              </option>
              <option selected={{eq @key.type "ecdsa-p384"}} value="ecdsa-p384">
                ecdsa-p384
              </option>
              <option selected={{eq @key.type "ecdsa-p521"}} value="ecdsa-p521">
                ecdsa-p521
              </option>
              <option selected={{eq @key.type "ed25519"}} value="ed25519">
                ed25519
              </option>
              <option selected={{eq @key.type "rsa-2048"}} value="rsa-2048">
                rsa-2048
              </option>
              <option selected={{eq @key.type "rsa-3072"}} value="rsa-3072">
                rsa-3072
              </option>
              <option selected={{eq @key.type "rsa-4096"}} value="rsa-4096">
                rsa-4096
              </option>
            </select>
          </div>
        </div>
      </div>
      <div class="field">
        <div class="b-checkbox">
          <input
            type="checkbox"
            id="key-exportable"
            class="styled"
            checked={{@key.exportable}}
            onchange={{@setValueOnKey}}
            data-test-transit-key-exportable={{true}}
          />
          <label for="key-exportable" class="is-label">
            Exportable
          </label>
        </div>
      </div>
      {{#if
        (or
          (eq @key.type "aes128-gcm96")
          (eq @key.type "aes256-gcm96")
          (eq @key.type "chacha20-poly1305")
          (eq @key.type "ed25519")
        )
      }}
        <div class="field">
          <div class="b-checkbox">
            <input
              type="checkbox"
              id="key-derived"
              class="styled"
              checked={{@key.derived}}
              onchange={{@derivedChange}}
              data-test-transit-key-derived={{true}}
            />
            <label for="key-derived" class="is-label">
              Derived
            </label>
          </div>
        </div>
      {{/if}}
      {{#if (or (eq @key.type "aes128-gcm96") (eq @key.type "aes256-gcm96") (eq @key.type "chacha20-poly1305"))}}
        <div class="field">
          <div class="b-checkbox">
            <input
              type="checkbox"
              data-test-transit-key-convergent-encryption
              id="key-convergent"
              class="styled"
              checked={{@key.convergentEncryption}}
              onchange={{@convergentEncryptionChange}}
            />
            <label for="key-convergent" class="is-label">
              Enable convergent encryption
            </label>
          </div>
        </div>
      {{/if}}
    </div>
    <div class="field is-grouped box is-fullwidth is-bottomless">
      <div class="control">
        <button
          data-test-transit-key-create
          type="submit"
          disabled={{@requestInFlight}}
          class="button is-primary {{if @requestInFlight 'is-loading'}}"
        >
          Create encryption key
        </button>
      </div>
      <div class="control">
        <SecretLink @mode="list" class="button">
          Cancel
        </SecretLink>
      </div>
    </div>
  </form>
  */
  {
    "id": "Uq6KtV66",
    "block": "[[[10,\"form\"],[14,\"data-test-transit-create-form\",\"\"],[15,\"onsubmit\",[30,1]],[12],[1,\"\\n  \"],[10,0],[14,0,\"box is-sideless is-fullwidth is-marginless\"],[12],[1,\"\\n    \"],[8,[39,0],null,[[\"@model\"],[[30,2]]],null],[1,\"\\n    \"],[8,[39,1],null,[[\"@mode\",\"@noun\"],[\"create\",\"transit key\"]],null],[1,\"\\n    \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n      \"],[10,\"label\"],[14,\"for\",\"key-name\"],[14,0,\"is-label\"],[12],[1,\"Name\"],[13],[1,\"\\n      \"],[8,[39,2],[[24,1,\"key-name\"],[24,0,\"input\"],[16,\"data-test-transit-key-name\",true]],[[\"@value\"],[[30,2,[\"name\"]]]],null],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n      \"],[8,[39,3],null,[[\"@initialValue\",\"@initialEnabled\",\"@label\",\"@helperTextDisabled\",\"@helperTextEnabled\",\"@onChange\",\"@errorMessage\"],[\"30d\",false,\"Auto-rotation period\",\"Key will never be automatically rotated\",\"Key will be automatically rotated every\",[30,3],[52,[30,4],\"Duration must be longer than 1 hour\"]]],null],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n      \"],[10,\"label\"],[14,\"for\",\"key-type\"],[14,0,\"is-label\"],[12],[1,\"Type\"],[13],[1,\"\\n      \"],[10,0],[14,0,\"control is-expanded\"],[12],[1,\"\\n        \"],[10,0],[14,0,\"select is-fullwidth\"],[12],[1,\"\\n          \"],[10,\"select\"],[14,3,\"key-type\"],[14,1,\"key-type\"],[15,\"onchange\",[28,[37,5],[[30,0],[28,[37,6],[[30,2,[\"type\"]]],null]],[[\"value\"],[\"target.value\"]]]],[15,\"data-test-transit-key-type\",true],[12],[1,\"\\n            \"],[10,\"option\"],[15,\"selected\",[28,[37,7],[[30,2,[\"type\"]],\"aes128-gcm96\"],null]],[14,2,\"aes128-gcm96\"],[12],[1,\"\\n              aes128-gcm96\\n            \"],[13],[1,\"\\n            \"],[10,\"option\"],[15,\"selected\",[28,[37,7],[[30,2,[\"type\"]],\"aes256-gcm96\"],null]],[14,2,\"aes256-gcm96\"],[12],[1,\"\\n              aes256-gcm96\\n            \"],[13],[1,\"\\n            \"],[10,\"option\"],[15,\"selected\",[28,[37,7],[[30,2,[\"type\"]],\"chacha20-poly1305\"],null]],[14,2,\"chacha20-poly1305\"],[12],[1,\"\\n              chacha20-poly1305\\n            \"],[13],[1,\"\\n            \"],[10,\"option\"],[15,\"selected\",[28,[37,7],[[30,2,[\"type\"]],\"ecdsa-p256\"],null]],[14,2,\"ecdsa-p256\"],[12],[1,\"\\n              ecdsa-p256\\n            \"],[13],[1,\"\\n            \"],[10,\"option\"],[15,\"selected\",[28,[37,7],[[30,2,[\"type\"]],\"ecdsa-p384\"],null]],[14,2,\"ecdsa-p384\"],[12],[1,\"\\n              ecdsa-p384\\n            \"],[13],[1,\"\\n            \"],[10,\"option\"],[15,\"selected\",[28,[37,7],[[30,2,[\"type\"]],\"ecdsa-p521\"],null]],[14,2,\"ecdsa-p521\"],[12],[1,\"\\n              ecdsa-p521\\n            \"],[13],[1,\"\\n            \"],[10,\"option\"],[15,\"selected\",[28,[37,7],[[30,2,[\"type\"]],\"ed25519\"],null]],[14,2,\"ed25519\"],[12],[1,\"\\n              ed25519\\n            \"],[13],[1,\"\\n            \"],[10,\"option\"],[15,\"selected\",[28,[37,7],[[30,2,[\"type\"]],\"rsa-2048\"],null]],[14,2,\"rsa-2048\"],[12],[1,\"\\n              rsa-2048\\n            \"],[13],[1,\"\\n            \"],[10,\"option\"],[15,\"selected\",[28,[37,7],[[30,2,[\"type\"]],\"rsa-3072\"],null]],[14,2,\"rsa-3072\"],[12],[1,\"\\n              rsa-3072\\n            \"],[13],[1,\"\\n            \"],[10,\"option\"],[15,\"selected\",[28,[37,7],[[30,2,[\"type\"]],\"rsa-4096\"],null]],[14,2,\"rsa-4096\"],[12],[1,\"\\n              rsa-4096\\n            \"],[13],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"b-checkbox\"],[12],[1,\"\\n        \"],[10,\"input\"],[14,1,\"key-exportable\"],[14,0,\"styled\"],[15,\"checked\",[30,2,[\"exportable\"]]],[15,\"onchange\",[30,5]],[15,\"data-test-transit-key-exportable\",true],[14,4,\"checkbox\"],[12],[13],[1,\"\\n        \"],[10,\"label\"],[14,\"for\",\"key-exportable\"],[14,0,\"is-label\"],[12],[1,\"\\n          Exportable\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n\"],[41,[28,[37,8],[[28,[37,7],[[30,2,[\"type\"]],\"aes128-gcm96\"],null],[28,[37,7],[[30,2,[\"type\"]],\"aes256-gcm96\"],null],[28,[37,7],[[30,2,[\"type\"]],\"chacha20-poly1305\"],null],[28,[37,7],[[30,2,[\"type\"]],\"ed25519\"],null]],null],[[[1,\"      \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n        \"],[10,0],[14,0,\"b-checkbox\"],[12],[1,\"\\n          \"],[10,\"input\"],[14,1,\"key-derived\"],[14,0,\"styled\"],[15,\"checked\",[30,2,[\"derived\"]]],[15,\"onchange\",[30,6]],[15,\"data-test-transit-key-derived\",true],[14,4,\"checkbox\"],[12],[13],[1,\"\\n          \"],[10,\"label\"],[14,\"for\",\"key-derived\"],[14,0,\"is-label\"],[12],[1,\"\\n            Derived\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n\"]],[]],null],[41,[28,[37,8],[[28,[37,7],[[30,2,[\"type\"]],\"aes128-gcm96\"],null],[28,[37,7],[[30,2,[\"type\"]],\"aes256-gcm96\"],null],[28,[37,7],[[30,2,[\"type\"]],\"chacha20-poly1305\"],null]],null],[[[1,\"      \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n        \"],[10,0],[14,0,\"b-checkbox\"],[12],[1,\"\\n          \"],[10,\"input\"],[14,\"data-test-transit-key-convergent-encryption\",\"\"],[14,1,\"key-convergent\"],[14,0,\"styled\"],[15,\"checked\",[30,2,[\"convergentEncryption\"]]],[15,\"onchange\",[30,7]],[14,4,\"checkbox\"],[12],[13],[1,\"\\n          \"],[10,\"label\"],[14,\"for\",\"key-convergent\"],[14,0,\"is-label\"],[12],[1,\"\\n            Enable convergent encryption\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n\"]],[]],null],[1,\"  \"],[13],[1,\"\\n  \"],[10,0],[14,0,\"field is-grouped box is-fullwidth is-bottomless\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n      \"],[10,\"button\"],[14,\"data-test-transit-key-create\",\"\"],[15,\"disabled\",[30,8]],[15,0,[29,[\"button is-primary \",[52,[30,8],\"is-loading\"]]]],[14,4,\"submit\"],[12],[1,\"\\n        Create encryption key\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n      \"],[8,[39,9],[[24,0,\"button\"]],[[\"@mode\"],[\"list\"]],[[\"default\"],[[[[1,\"\\n        Cancel\\n      \"]],[]]]]],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"],[13]],[\"@createOrUpdateKey\",\"@key\",\"@handleAutoRotateChange\",\"@autoRotateInvalid\",\"@setValueOnKey\",\"@derivedChange\",\"@convergentEncryptionChange\",\"@requestInFlight\"],false,[\"message-error\",\"namespace-reminder\",\"input\",\"ttl-picker\",\"if\",\"action\",\"mut\",\"eq\",\"or\",\"secret-link\"]]",
    "moduleName": "vault/templates/components/transit-form-create.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/transit-form-edit", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <form data-test-transit-edit-form onsubmit={{@createOrUpdateKey}}>
    <div class="box is-sideless is-fullwidth is-marginless">
      <MessageError @model={{@key}} />
      <NamespaceReminder @mode="edit" @noun="transit key" />
      <div class="field">
        <div class="b-checkbox">
          <input
            id="key-allows-delete"
            type="checkbox"
            checked={{@key.deletionAllowed}}
            class="styled"
            onchange={{@setValueOnKey}}
          />
          <label for="key-allows-delete" class="is-label">
            Allow deletion
          </label>
        </div>
      </div>
      <div class="field">
        <TtlPicker
          @initialValue={{or @key.autoRotatePeriod "30d"}}
          @initialEnabled={{not (eq @key.autoRotatePeriod 0)}}
          @label="Auto-rotation period"
          @helperTextDisabled="Key will never be automatically rotated"
          @helperTextEnabled="Key will be automatically rotated every"
          @onChange={{@handleAutoRotateChange}}
          @errorMessage={{if @autoRotateInvalid "Duration must be longer than 1 hour"}}
        />
      </div>
      <div class="field">
        <label for="key-min-decrypt-version" class="is-label">Minimum decryption version</label>
        <div class="control is-expanded">
          <div class="select is-fullwidth">
            <select
              name="key-min-decrypt-version"
              id="key-min-decrypt-version"
              onchange={{action (mut @key.minDecryptionVersion) value="target.value"}}
            >
              {{#each @key.keyVersions as |version|}}
                <option selected={{eq @key.minDecryptionVersion version}} value={{version}}>
                  <code>{{version}}</code>
                </option>
              {{/each}}
            </select>
          </div>
        </div>
        <p class="help">
          The minimum decryption version required to reverse transformations performed with the encryption key. Results from
          lower key versions may be rewrapped with the new key version using the
          <code>rewrap</code>
          action.
        </p>
      </div>
      <div class="field">
        <label for="key-min-encrypt-version" class="is-label">Minimum encryption version</label>
        <div class="control is-expanded">
          <div class="select is-fullwidth">
            <select
              name="key-min-encrypt-version"
              id="key-min-encrypt-version"
              onchange={{action (mut @key.minEncryptionVersion) value="target.value"}}
            >
              <option selected={{eq @key.minEncryptionVersion 0}} value={{0}}>
                <code>Latest</code>
                (currently
                {{@key.latestVersion}})
              </option>
              {{#each @key.encryptionKeyVersions as |version|}}
                <option selected={{eq @key.minEncryptionVersion version}} value={{version}}>
                  <code>{{version}}</code>
                </option>
              {{/each}}
            </select>
          </div>
        </div>
        <p class="help">
          The minimum version of the key that can be used to encrypt plaintext, sign payloads, or generate HMACs. You will be
          able to specify which version of the key to use for each of these actions. The value specified here must be greater
          than or equal to that specified in the
          <b>Minimum Decryption Version</b>
          selection above.
        </p>
      </div>
    </div>
    <div class="field is-grouped is-grouped-split box is-fullwidth is-bottomless">
      <div class="field is-grouped">
        {{#if @capabilities.canUpdate}}
          <div class="control">
            <button type="submit" disabled={{@requestInFlight}} class="button is-primary {{if @requestInFlight 'is-loading'}}">
              Update transit key
            </button>
          </div>
        {{/if}}
        <div class="control">
          <SecretLink @mode="show" @secret={{@key.id}} class="button">
            Cancel
          </SecretLink>
        </div>
      </div>
      {{#if (and @key.canDelete @capabilities.canDelete)}}
        <ConfirmAction @buttonClasses="button" @onConfirmAction={{@deleteKey}}>
          Delete transit key
        </ConfirmAction>
      {{/if}}
    </div>
  </form>
  */
  {
    "id": "WIFzLOX7",
    "block": "[[[10,\"form\"],[14,\"data-test-transit-edit-form\",\"\"],[15,\"onsubmit\",[30,1]],[12],[1,\"\\n  \"],[10,0],[14,0,\"box is-sideless is-fullwidth is-marginless\"],[12],[1,\"\\n    \"],[8,[39,0],null,[[\"@model\"],[[30,2]]],null],[1,\"\\n    \"],[8,[39,1],null,[[\"@mode\",\"@noun\"],[\"edit\",\"transit key\"]],null],[1,\"\\n    \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"b-checkbox\"],[12],[1,\"\\n        \"],[10,\"input\"],[14,1,\"key-allows-delete\"],[15,\"checked\",[30,2,[\"deletionAllowed\"]]],[14,0,\"styled\"],[15,\"onchange\",[30,3]],[14,4,\"checkbox\"],[12],[13],[1,\"\\n        \"],[10,\"label\"],[14,\"for\",\"key-allows-delete\"],[14,0,\"is-label\"],[12],[1,\"\\n          Allow deletion\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n      \"],[8,[39,2],null,[[\"@initialValue\",\"@initialEnabled\",\"@label\",\"@helperTextDisabled\",\"@helperTextEnabled\",\"@onChange\",\"@errorMessage\"],[[28,[37,3],[[30,2,[\"autoRotatePeriod\"]],\"30d\"],null],[28,[37,4],[[28,[37,5],[[30,2,[\"autoRotatePeriod\"]],0],null]],null],\"Auto-rotation period\",\"Key will never be automatically rotated\",\"Key will be automatically rotated every\",[30,4],[52,[30,5],\"Duration must be longer than 1 hour\"]]],null],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n      \"],[10,\"label\"],[14,\"for\",\"key-min-decrypt-version\"],[14,0,\"is-label\"],[12],[1,\"Minimum decryption version\"],[13],[1,\"\\n      \"],[10,0],[14,0,\"control is-expanded\"],[12],[1,\"\\n        \"],[10,0],[14,0,\"select is-fullwidth\"],[12],[1,\"\\n          \"],[10,\"select\"],[14,3,\"key-min-decrypt-version\"],[14,1,\"key-min-decrypt-version\"],[15,\"onchange\",[28,[37,7],[[30,0],[28,[37,8],[[30,2,[\"minDecryptionVersion\"]]],null]],[[\"value\"],[\"target.value\"]]]],[12],[1,\"\\n\"],[42,[28,[37,10],[[28,[37,10],[[30,2,[\"keyVersions\"]]],null]],null],null,[[[1,\"              \"],[10,\"option\"],[15,\"selected\",[28,[37,5],[[30,2,[\"minDecryptionVersion\"]],[30,6]],null]],[15,2,[30,6]],[12],[1,\"\\n                \"],[10,\"code\"],[12],[1,[30,6]],[13],[1,\"\\n              \"],[13],[1,\"\\n\"]],[6]],null],[1,\"          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n      \"],[10,2],[14,0,\"help\"],[12],[1,\"\\n        The minimum decryption version required to reverse transformations performed with the encryption key. Results from\\n        lower key versions may be rewrapped with the new key version using the\\n        \"],[10,\"code\"],[12],[1,\"rewrap\"],[13],[1,\"\\n        action.\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n      \"],[10,\"label\"],[14,\"for\",\"key-min-encrypt-version\"],[14,0,\"is-label\"],[12],[1,\"Minimum encryption version\"],[13],[1,\"\\n      \"],[10,0],[14,0,\"control is-expanded\"],[12],[1,\"\\n        \"],[10,0],[14,0,\"select is-fullwidth\"],[12],[1,\"\\n          \"],[10,\"select\"],[14,3,\"key-min-encrypt-version\"],[14,1,\"key-min-encrypt-version\"],[15,\"onchange\",[28,[37,7],[[30,0],[28,[37,8],[[30,2,[\"minEncryptionVersion\"]]],null]],[[\"value\"],[\"target.value\"]]]],[12],[1,\"\\n            \"],[10,\"option\"],[15,\"selected\",[28,[37,5],[[30,2,[\"minEncryptionVersion\"]],0],null]],[15,2,0],[12],[1,\"\\n              \"],[10,\"code\"],[12],[1,\"Latest\"],[13],[1,\"\\n              (currently\\n              \"],[1,[30,2,[\"latestVersion\"]]],[1,\")\\n            \"],[13],[1,\"\\n\"],[42,[28,[37,10],[[28,[37,10],[[30,2,[\"encryptionKeyVersions\"]]],null]],null],null,[[[1,\"              \"],[10,\"option\"],[15,\"selected\",[28,[37,5],[[30,2,[\"minEncryptionVersion\"]],[30,7]],null]],[15,2,[30,7]],[12],[1,\"\\n                \"],[10,\"code\"],[12],[1,[30,7]],[13],[1,\"\\n              \"],[13],[1,\"\\n\"]],[7]],null],[1,\"          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n      \"],[10,2],[14,0,\"help\"],[12],[1,\"\\n        The minimum version of the key that can be used to encrypt plaintext, sign payloads, or generate HMACs. You will be\\n        able to specify which version of the key to use for each of these actions. The value specified here must be greater\\n        than or equal to that specified in the\\n        \"],[10,\"b\"],[12],[1,\"Minimum Decryption Version\"],[13],[1,\"\\n        selection above.\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n  \"],[10,0],[14,0,\"field is-grouped is-grouped-split box is-fullwidth is-bottomless\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"field is-grouped\"],[12],[1,\"\\n\"],[41,[30,8,[\"canUpdate\"]],[[[1,\"        \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n          \"],[10,\"button\"],[15,\"disabled\",[30,9]],[15,0,[29,[\"button is-primary \",[52,[30,9],\"is-loading\"]]]],[14,4,\"submit\"],[12],[1,\"\\n            Update transit key\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n\"]],[]],null],[1,\"      \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n        \"],[8,[39,11],[[24,0,\"button\"]],[[\"@mode\",\"@secret\"],[\"show\",[30,2,[\"id\"]]]],[[\"default\"],[[[[1,\"\\n          Cancel\\n        \"]],[]]]]],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n\"],[41,[28,[37,12],[[30,2,[\"canDelete\"]],[30,8,[\"canDelete\"]]],null],[[[1,\"      \"],[8,[39,13],null,[[\"@buttonClasses\",\"@onConfirmAction\"],[\"button\",[30,10]]],[[\"default\"],[[[[1,\"\\n        Delete transit key\\n      \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"  \"],[13],[1,\"\\n\"],[13]],[\"@createOrUpdateKey\",\"@key\",\"@setValueOnKey\",\"@handleAutoRotateChange\",\"@autoRotateInvalid\",\"version\",\"version\",\"@capabilities\",\"@requestInFlight\",\"@deleteKey\"],false,[\"message-error\",\"namespace-reminder\",\"ttl-picker\",\"or\",\"not\",\"eq\",\"if\",\"action\",\"mut\",\"each\",\"-track-array\",\"secret-link\",\"and\",\"confirm-action\"]]",
    "moduleName": "vault/templates/components/transit-form-edit.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/transit-form-show", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <div class="tabs-container box is-sideless is-fullwidth is-paddingless is-marginless">
    <nav class="tabs" aria-label="tabs">
      <ul>
        <li class={{if (eq @tab "actions") "is-active"}}>
          <SecretLink
            @secret={{@key.id}}
            @mode="show"
            @replace={{true}}
            @queryParams={{hash tab="actions"}}
            data-test-transit-key-actions-link={{true}}
          >
            Key Actions
          </SecretLink>
        </li>
  
        <li class={{if (eq @tab "details") "is-active"}}>
          <SecretLink
            @secret={{@key.id}}
            @mode="show"
            @replace={{true}}
            @queryParams={{hash tab="details"}}
            data-test-transit-link="details"
          >
            Details
          </SecretLink>
        </li>
  
        <li class={{if (eq @tab "versions") "is-active"}}>
          <SecretLink
            @secret={{@key.id}}
            @mode="show"
            @replace={{true}}
            @queryParams={{hash tab="versions"}}
            data-test-transit-link="versions"
          >
            Versions
          </SecretLink>
        </li>
      </ul>
    </nav>
  </div>
  {{#if (not-eq @tab "actions")}}
    <Toolbar>
      <ToolbarActions>
        {{#if (eq @tab "versions")}}
          <TransitKeyActions @key={{@key}} @selectedAction="rotate" @capabilities={{@capabilities}} @onRefresh={{@refresh}} />
        {{/if}}
        {{#if (eq @mode "show")}}
          {{#if (or @capabilities.canUpdate @capabilities.canDelete)}}
            <ToolbarSecretLink @secret={{@key.id}} @mode="edit" replace={{true}}>
              Edit encryption key
            </ToolbarSecretLink>
          {{/if}}
        {{/if}}
      </ToolbarActions>
    </Toolbar>
  {{/if}}
  
  {{#if (eq @tab "actions")}}
    <div class="transit-card-container">
      {{#each @model.supportedActions as |supportedAction|}}
        <LinkedBlock
          @params={{array "vault.cluster.secrets.backend.actions" @model.id}}
          @queryParams={{hash action=supportedAction.name}}
          class="transit-card"
          data-test-transit-card={{supportedAction.name}}
        >
          <div class="transit-icon">
            <Icon
              @name={{supportedAction.glyph}}
              class="has-text-grey auto-width"
              aria-label={{concat @backend.path " options"}}
            />
          </div>
          <div class="transit-description">
            <h2 class="title is-6" data-test-transit-action-title={{supportedAction.name}}>
              {{#if (eq supportedAction.name "export")}}
                Export Key
              {{else if (eq supportedAction.name "hmac")}}
                HMAC
              {{else}}
                {{humanize supportedAction.name}}
              {{/if}}
            </h2>
            <p class="transit-action-description">{{supportedAction.description}}</p>
          </div>
        </LinkedBlock>
      {{/each}}
    </div>
  {{else if (eq @tab "versions")}}
    {{#if (or (eq @key.type "aes256-gcm96") (eq @key.type "chacha20-poly1305") (eq @key.type "aes128-gcm96"))}}
      {{#each-in @key.keys as |version creationTimestamp|}}
        <div class="linked-block list-item-row no-destination" data-test-transit-key-version-row={{version}}>
          <div class="columns is-mobile">
            <div class="column is-3">
              <div class="level level-left">
                <Icon @name="history" class="has-text-grey-light is-padded" />
                <strong class="has-padding is-size-5">Version {{version}}</strong>
              </div>
            </div>
            <div class="column is-4">
              <div class="td is-borderless">
                <small class="help has-text-grey">
                  {{date-from-now creationTimestamp addSuffix=true}}
                </small>
              </div>
            </div>
            <div class="column is-5">
              <div class="td is-borderless">
                {{#if (coerce-eq @key.minDecryptionVersion version)}}
                  <p class="help level level-left">
                    <Icon @name="check-circle-fill" class="has-text-success" />
                    Current minimum decryption version
                  </p>
                {{/if}}
              </div>
            </div>
          </div>
        </div>
      {{/each-in}}
    {{else}}
      {{#each-in @key.keys as |version meta|}}
        <div class="linked-block list-item-row" data-test-transit-key-version-row={{version}}>
          <div class="columns is-mobile">
            <div class="column is-3">
              <div class="level level-left">
                <Icon @name="history" class="has-text-grey-light is-padded" />
                <strong class="has-padding is-size-5">Version {{version}}</strong>
              </div>
            </div>
            <div class="column is-4">
              <div class="td is-borderless">
                <small class="help has-text-grey">
                  {{date-from-now meta.creation_time addSuffix=true}}
                </small>
              </div>
            </div>
            <div class="column is-4">
              <div class="td is-borderless">
                {{#if (coerce-eq @key.minDecryptionVersion version)}}
                  <p class="help level level-left">
                    <Icon @name="check-circle-fill" class="has-text-success" />
                    Current minimum decryption version
                  </p>
                {{/if}}
              </div>
            </div>
            <div class="column is-1 is-flex-end">
              <PopupMenu name="secret-menu">
                <nav class="menu" aria-label="copy public key">
                  <ul class="menu-list">
                    <li class="action">
                      <CopyButton
                        @clipboardText={{meta.public_key}}
                        @class="link button is-transparent"
                        @buttonType="button"
                        @success={{action (set-flash-message "Public key copied!")}}
                      >
                        Copy Public Key
                      </CopyButton>
                    </li>
                  </ul>
                </nav>
              </PopupMenu>
            </div>
          </div>
        </div>
      {{/each-in}}
    {{/if}}
  {{else}}
    <InfoTableRow @label="Type" @value={{@key.type}} />
    <InfoTableRow
      @label="Auto-rotation period"
      @value={{or (format-duration @key.autoRotatePeriod) "Key will not be automatically rotated"}}
    />
    <InfoTableRow @label="Deletion allowed" @value={{stringify @key.deletionAllowed}} />
  
    {{#if @key.derived}}
      <InfoTableRow @label="Derived" @value={{@key.derived}} />
      <InfoTableRow @label="Convergent encryption" @value={{@key.convergentEncryption}} />
    {{/if}}
  {{/if}}
  */
  {
    "id": "aPugT79B",
    "block": "[[[10,0],[14,0,\"tabs-container box is-sideless is-fullwidth is-paddingless is-marginless\"],[12],[1,\"\\n  \"],[10,\"nav\"],[14,0,\"tabs\"],[14,\"aria-label\",\"tabs\"],[12],[1,\"\\n    \"],[10,\"ul\"],[12],[1,\"\\n      \"],[10,\"li\"],[15,0,[52,[28,[37,1],[[30,1],\"actions\"],null],\"is-active\"]],[12],[1,\"\\n        \"],[8,[39,2],[[16,\"data-test-transit-key-actions-link\",true]],[[\"@secret\",\"@mode\",\"@replace\",\"@queryParams\"],[[30,2,[\"id\"]],\"show\",true,[28,[37,3],null,[[\"tab\"],[\"actions\"]]]]],[[\"default\"],[[[[1,\"\\n          Key Actions\\n        \"]],[]]]]],[1,\"\\n      \"],[13],[1,\"\\n\\n      \"],[10,\"li\"],[15,0,[52,[28,[37,1],[[30,1],\"details\"],null],\"is-active\"]],[12],[1,\"\\n        \"],[8,[39,2],[[24,\"data-test-transit-link\",\"details\"]],[[\"@secret\",\"@mode\",\"@replace\",\"@queryParams\"],[[30,2,[\"id\"]],\"show\",true,[28,[37,3],null,[[\"tab\"],[\"details\"]]]]],[[\"default\"],[[[[1,\"\\n          Details\\n        \"]],[]]]]],[1,\"\\n      \"],[13],[1,\"\\n\\n      \"],[10,\"li\"],[15,0,[52,[28,[37,1],[[30,1],\"versions\"],null],\"is-active\"]],[12],[1,\"\\n        \"],[8,[39,2],[[24,\"data-test-transit-link\",\"versions\"]],[[\"@secret\",\"@mode\",\"@replace\",\"@queryParams\"],[[30,2,[\"id\"]],\"show\",true,[28,[37,3],null,[[\"tab\"],[\"versions\"]]]]],[[\"default\"],[[[[1,\"\\n          Versions\\n        \"]],[]]]]],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"],[13],[1,\"\\n\"],[41,[28,[37,4],[[30,1],\"actions\"],null],[[[1,\"  \"],[8,[39,5],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,6],null,null,[[\"default\"],[[[[1,\"\\n\"],[41,[28,[37,1],[[30,1],\"versions\"],null],[[[1,\"        \"],[8,[39,7],null,[[\"@key\",\"@selectedAction\",\"@capabilities\",\"@onRefresh\"],[[30,2],\"rotate\",[30,3],[30,4]]],null],[1,\"\\n\"]],[]],null],[41,[28,[37,1],[[30,5],\"show\"],null],[[[41,[28,[37,8],[[30,3,[\"canUpdate\"]],[30,3,[\"canDelete\"]]],null],[[[1,\"          \"],[8,[39,9],[[16,\"replace\",true]],[[\"@secret\",\"@mode\"],[[30,2,[\"id\"]],\"edit\"]],[[\"default\"],[[[[1,\"\\n            Edit encryption key\\n          \"]],[]]]]],[1,\"\\n\"]],[]],null]],[]],null],[1,\"    \"]],[]]]]],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"\\n\"],[41,[28,[37,1],[[30,1],\"actions\"],null],[[[1,\"  \"],[10,0],[14,0,\"transit-card-container\"],[12],[1,\"\\n\"],[42,[28,[37,11],[[28,[37,11],[[30,6,[\"supportedActions\"]]],null]],null],null,[[[1,\"      \"],[8,[39,12],[[24,0,\"transit-card\"],[16,\"data-test-transit-card\",[30,7,[\"name\"]]]],[[\"@params\",\"@queryParams\"],[[28,[37,13],[\"vault.cluster.secrets.backend.actions\",[30,6,[\"id\"]]],null],[28,[37,3],null,[[\"action\"],[[30,7,[\"name\"]]]]]]],[[\"default\"],[[[[1,\"\\n        \"],[10,0],[14,0,\"transit-icon\"],[12],[1,\"\\n          \"],[8,[39,14],[[24,0,\"has-text-grey auto-width\"],[16,\"aria-label\",[28,[37,15],[[30,8,[\"path\"]],\" options\"],null]]],[[\"@name\"],[[30,7,[\"glyph\"]]]],null],[1,\"\\n        \"],[13],[1,\"\\n        \"],[10,0],[14,0,\"transit-description\"],[12],[1,\"\\n          \"],[10,\"h2\"],[14,0,\"title is-6\"],[15,\"data-test-transit-action-title\",[30,7,[\"name\"]]],[12],[1,\"\\n\"],[41,[28,[37,1],[[30,7,[\"name\"]],\"export\"],null],[[[1,\"              Export Key\\n\"]],[]],[[[41,[28,[37,1],[[30,7,[\"name\"]],\"hmac\"],null],[[[1,\"              HMAC\\n\"]],[]],[[[1,\"              \"],[1,[28,[35,16],[[30,7,[\"name\"]]],null]],[1,\"\\n            \"]],[]]]],[]]],[1,\"          \"],[13],[1,\"\\n          \"],[10,2],[14,0,\"transit-action-description\"],[12],[1,[30,7,[\"description\"]]],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"]],[]]]]],[1,\"\\n\"]],[7]],null],[1,\"  \"],[13],[1,\"\\n\"]],[]],[[[41,[28,[37,1],[[30,1],\"versions\"],null],[[[41,[28,[37,8],[[28,[37,1],[[30,2,[\"type\"]],\"aes256-gcm96\"],null],[28,[37,1],[[30,2,[\"type\"]],\"chacha20-poly1305\"],null],[28,[37,1],[[30,2,[\"type\"]],\"aes128-gcm96\"],null]],null],[[[42,[28,[37,17],[[30,2,[\"keys\"]]],null],null,[[[1,\"      \"],[10,0],[14,0,\"linked-block list-item-row no-destination\"],[15,\"data-test-transit-key-version-row\",[30,10]],[12],[1,\"\\n        \"],[10,0],[14,0,\"columns is-mobile\"],[12],[1,\"\\n          \"],[10,0],[14,0,\"column is-3\"],[12],[1,\"\\n            \"],[10,0],[14,0,\"level level-left\"],[12],[1,\"\\n              \"],[8,[39,14],[[24,0,\"has-text-grey-light is-padded\"]],[[\"@name\"],[\"history\"]],null],[1,\"\\n              \"],[10,\"strong\"],[14,0,\"has-padding is-size-5\"],[12],[1,\"Version \"],[1,[30,10]],[13],[1,\"\\n            \"],[13],[1,\"\\n          \"],[13],[1,\"\\n          \"],[10,0],[14,0,\"column is-4\"],[12],[1,\"\\n            \"],[10,0],[14,0,\"td is-borderless\"],[12],[1,\"\\n              \"],[10,\"small\"],[14,0,\"help has-text-grey\"],[12],[1,\"\\n                \"],[1,[28,[35,18],[[30,9]],[[\"addSuffix\"],[true]]]],[1,\"\\n              \"],[13],[1,\"\\n            \"],[13],[1,\"\\n          \"],[13],[1,\"\\n          \"],[10,0],[14,0,\"column is-5\"],[12],[1,\"\\n            \"],[10,0],[14,0,\"td is-borderless\"],[12],[1,\"\\n\"],[41,[28,[37,19],[[30,2,[\"minDecryptionVersion\"]],[30,10]],null],[[[1,\"                \"],[10,2],[14,0,\"help level level-left\"],[12],[1,\"\\n                  \"],[8,[39,14],[[24,0,\"has-text-success\"]],[[\"@name\"],[\"check-circle-fill\"]],null],[1,\"\\n                  Current minimum decryption version\\n                \"],[13],[1,\"\\n\"]],[]],null],[1,\"            \"],[13],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n\"]],[9,10]],null]],[]],[[[42,[28,[37,17],[[30,2,[\"keys\"]]],null],null,[[[1,\"      \"],[10,0],[14,0,\"linked-block list-item-row\"],[15,\"data-test-transit-key-version-row\",[30,12]],[12],[1,\"\\n        \"],[10,0],[14,0,\"columns is-mobile\"],[12],[1,\"\\n          \"],[10,0],[14,0,\"column is-3\"],[12],[1,\"\\n            \"],[10,0],[14,0,\"level level-left\"],[12],[1,\"\\n              \"],[8,[39,14],[[24,0,\"has-text-grey-light is-padded\"]],[[\"@name\"],[\"history\"]],null],[1,\"\\n              \"],[10,\"strong\"],[14,0,\"has-padding is-size-5\"],[12],[1,\"Version \"],[1,[30,12]],[13],[1,\"\\n            \"],[13],[1,\"\\n          \"],[13],[1,\"\\n          \"],[10,0],[14,0,\"column is-4\"],[12],[1,\"\\n            \"],[10,0],[14,0,\"td is-borderless\"],[12],[1,\"\\n              \"],[10,\"small\"],[14,0,\"help has-text-grey\"],[12],[1,\"\\n                \"],[1,[28,[35,18],[[30,11,[\"creation_time\"]]],[[\"addSuffix\"],[true]]]],[1,\"\\n              \"],[13],[1,\"\\n            \"],[13],[1,\"\\n          \"],[13],[1,\"\\n          \"],[10,0],[14,0,\"column is-4\"],[12],[1,\"\\n            \"],[10,0],[14,0,\"td is-borderless\"],[12],[1,\"\\n\"],[41,[28,[37,19],[[30,2,[\"minDecryptionVersion\"]],[30,12]],null],[[[1,\"                \"],[10,2],[14,0,\"help level level-left\"],[12],[1,\"\\n                  \"],[8,[39,14],[[24,0,\"has-text-success\"]],[[\"@name\"],[\"check-circle-fill\"]],null],[1,\"\\n                  Current minimum decryption version\\n                \"],[13],[1,\"\\n\"]],[]],null],[1,\"            \"],[13],[1,\"\\n          \"],[13],[1,\"\\n          \"],[10,0],[14,0,\"column is-1 is-flex-end\"],[12],[1,\"\\n            \"],[8,[39,20],[[24,3,\"secret-menu\"]],null,[[\"default\"],[[[[1,\"\\n              \"],[10,\"nav\"],[14,0,\"menu\"],[14,\"aria-label\",\"copy public key\"],[12],[1,\"\\n                \"],[10,\"ul\"],[14,0,\"menu-list\"],[12],[1,\"\\n                  \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                    \"],[8,[39,21],null,[[\"@clipboardText\",\"@class\",\"@buttonType\",\"@success\"],[[30,11,[\"public_key\"]],\"link button is-transparent\",\"button\",[28,[37,22],[[30,0],[28,[37,23],[\"Public key copied!\"],null]],null]]],[[\"default\"],[[[[1,\"\\n                      Copy Public Key\\n                    \"]],[]]]]],[1,\"\\n                  \"],[13],[1,\"\\n                \"],[13],[1,\"\\n              \"],[13],[1,\"\\n            \"]],[]]]]],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n\"]],[11,12]],null]],[]]]],[]],[[[1,\"  \"],[8,[39,24],null,[[\"@label\",\"@value\"],[\"Type\",[30,2,[\"type\"]]]],null],[1,\"\\n  \"],[8,[39,24],null,[[\"@label\",\"@value\"],[\"Auto-rotation period\",[28,[37,8],[[28,[37,25],[[30,2,[\"autoRotatePeriod\"]]],null],\"Key will not be automatically rotated\"],null]]],null],[1,\"\\n  \"],[8,[39,24],null,[[\"@label\",\"@value\"],[\"Deletion allowed\",[28,[37,26],[[30,2,[\"deletionAllowed\"]]],null]]],null],[1,\"\\n\\n\"],[41,[30,2,[\"derived\"]],[[[1,\"    \"],[8,[39,24],null,[[\"@label\",\"@value\"],[\"Derived\",[30,2,[\"derived\"]]]],null],[1,\"\\n    \"],[8,[39,24],null,[[\"@label\",\"@value\"],[\"Convergent encryption\",[30,2,[\"convergentEncryption\"]]]],null],[1,\"\\n\"]],[]],null]],[]]]],[]]]],[\"@tab\",\"@key\",\"@capabilities\",\"@refresh\",\"@mode\",\"@model\",\"supportedAction\",\"@backend\",\"creationTimestamp\",\"version\",\"meta\",\"version\"],false,[\"if\",\"eq\",\"secret-link\",\"hash\",\"not-eq\",\"toolbar\",\"toolbar-actions\",\"transit-key-actions\",\"or\",\"toolbar-secret-link\",\"each\",\"-track-array\",\"linked-block\",\"array\",\"icon\",\"concat\",\"humanize\",\"-each-in\",\"date-from-now\",\"coerce-eq\",\"popup-menu\",\"copy-button\",\"action\",\"set-flash-message\",\"info-table-row\",\"format-duration\",\"stringify\"]]",
    "moduleName": "vault/templates/components/transit-form-show.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/transit-key-action/datakey", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <form onsubmit={{action @doSubmit (hash param=@param context=@context nonce=@nonce bits=@bits)}}>
    <div class="box is-sideless is-fullwidth is-marginless">
      <NamespaceReminder @mode="perform" @noun="datakey creation" />
      <div class="content has-bottom-margin-l">
        <p>Generate a new high-entropy key and value using <code>{{@key.name}}</code> as the encryption key.</p>
      </div>
      <div class="field">
        <label for="param" class="is-label">Output format</label>
        <div class="control is-expanded">
          <div class="select is-fullwidth">
            <select name="param" id="param" onchange={{action (mut @param) value="target.value"}}>
              {{#each (array "plaintext" "wrapped") as |paramOption|}}
                <option selected={{eq @param paramOption}} value={{paramOption}}>
                  {{paramOption}}
                </option>
              {{/each}}
            </select>
          </div>
        </div>
      </div>
      {{#if @key.derived}}
        <div class="field">
          <label for="context" class="is-label">
            Context
          </label>
          <div class="field has-addons">
            <div class="control">
              <Input @type="text" id="context" @value={{@context}} class="input" data-test-transit-input="context" />
            </div>
            <div class="control">
              <B64Toggle @value={{@context}} @data-test-transit-b64-toggle="context" />
            </div>
          </div>
        </div>
      {{/if}}
      {{#if (eq @key.convergentEncryptionVersion 1)}}
        <div class="field">
          <label for="nonce" class="is-label">Nonce</label>
          <div class="field has-addons">
            <div class="control">
              <Input @type="text" id="nonce" @value={{@nonce}} class="input" data-test-transit-input="nonce" />
            </div>
            <div class="control">
              <B64Toggle @value={{@nonce}} @data-test-transit-b64-toggle="nonce" />
            </div>
          </div>
        </div>
      {{/if}}
      <div class="field">
        <label for="bits" class="is-label">Bits</label>
        <div class="control is-expanded">
          <div class="select is-fullwidth">
            <select name="bits" id="bits" onchange={{action (mut @bits) value="target.value"}}>
              {{#each (array 128 256 512) as |bitOption|}}
                <option selected={{eq @bits bitOption}} value={{bitOption}}>
                  <code>{{bitOption}}</code>
                </option>
              {{/each}}
            </select>
          </div>
        </div>
      </div>
    </div>
    <div class="field is-grouped box is-fullwidth is-bottomless">
      <div class="control">
        <button type="submit" class="button is-primary">
          Create datakey
        </button>
      </div>
    </div>
  </form>
  <Modal @title="Copy your generated key" @onClose={{action (mut @isModalActive) false}} @isActive={{@isModalActive}}>
    <section class="modal-card-body">
      <div class="box is-shadowless is-fullwidth is-sideless">
        {{#if (eq @param "plaintext")}}
          <h2 class="title is-6">Plaintext</h2>
          <div class="copy-text level">
            <code class="level-left">{{@plaintext}}</code>
            <CopyButton
              class="button is-compact is-transparent level-right"
              data-test-button="modal-copy"
              @clipboardText={{@plaintext}}
              @buttonType="button"
              @success={{action (set-flash-message "Plaintext copied!")}}
            >
              <Icon @name="clipboard-copy" aria-label="Copy" />
            </CopyButton>
          </div>
          <p class="help has-bottom-margin-m">Plaintext is base64 encoded</p>
          <h2 class="title is-6">Ciphertext</h2>
          <div class="copy-text level">
            <code class="level-left">{{@ciphertext}}</code>
            <CopyButton
              class="button is-compact is-transparent level-right"
              data-test-button="modal-copy"
              @clipboardText={{@ciphertext}}
              @buttonType="button"
              @success={{action (set-flash-message "Ciphertext copied!")}}
            >
              <Icon @name="clipboard-copy" aria-label="Copy" />
            </CopyButton>
          </div>
          <CopyButton
            class="button is-primary"
            data-test-button="modal-copy-close"
            @clipboardText={{@plaintext}}
            @buttonType="button"
            @success={{action (set-flash-message "Plaintext copied!")}}
          >
            Copy Plaintext
          </CopyButton>
          <CopyButton
            class="button is-primary"
            data-test-button="modal-copy-close"
            @clipboardText={{@ciphertext}}
            @buttonType="button"
            @success={{action (set-flash-message "Ciphertext copied!")}}
          >
            Copy Ciphertext
          </CopyButton>
          <button type="submit" class="button is-secondary" onclick={{action (mut @isModalActive) false}}>Close</button>
        {{else}}
          <h2 class="title is-6">Ciphertext</h2>
          <div class="copy-text level">
            <code class="level-left">{{@ciphertext}}</code>
            <CopyButton
              class="button is-compact is-transparent level-right"
              data-test-button="modal-copy"
              @clipboardText={{@ciphertext}}
              @buttonType="button"
              @success={{action (set-flash-message "Ciphertext copied!")}}
            >
              <Icon @name="clipboard-copy" aria-label="Copy" />
            </CopyButton>
          </div>
          <CopyButton
            class="button is-primary copy-close"
            data-test-button="modal-copy-close"
            @clipboardText={{@ciphertext}}
            @buttonType="button"
            @success={{action @toggleModal "Ciphertext copied!"}}
          >
            Copy &amp; Close
          </CopyButton>
        {{/if}}
      </div>
    </section>
  </Modal>
  */
  {
    "id": "S+d5ifsw",
    "block": "[[[10,\"form\"],[15,\"onsubmit\",[28,[37,0],[[30,0],[30,1],[28,[37,1],null,[[\"param\",\"context\",\"nonce\",\"bits\"],[[30,2],[30,3],[30,4],[30,5]]]]],null]],[12],[1,\"\\n  \"],[10,0],[14,0,\"box is-sideless is-fullwidth is-marginless\"],[12],[1,\"\\n    \"],[8,[39,2],null,[[\"@mode\",\"@noun\"],[\"perform\",\"datakey creation\"]],null],[1,\"\\n    \"],[10,0],[14,0,\"content has-bottom-margin-l\"],[12],[1,\"\\n      \"],[10,2],[12],[1,\"Generate a new high-entropy key and value using \"],[10,\"code\"],[12],[1,[30,6,[\"name\"]]],[13],[1,\" as the encryption key.\"],[13],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n      \"],[10,\"label\"],[14,\"for\",\"param\"],[14,0,\"is-label\"],[12],[1,\"Output format\"],[13],[1,\"\\n      \"],[10,0],[14,0,\"control is-expanded\"],[12],[1,\"\\n        \"],[10,0],[14,0,\"select is-fullwidth\"],[12],[1,\"\\n          \"],[10,\"select\"],[14,3,\"param\"],[14,1,\"param\"],[15,\"onchange\",[28,[37,0],[[30,0],[28,[37,3],[[30,2]],null]],[[\"value\"],[\"target.value\"]]]],[12],[1,\"\\n\"],[42,[28,[37,5],[[28,[37,5],[[28,[37,6],[\"plaintext\",\"wrapped\"],null]],null]],null],null,[[[1,\"              \"],[10,\"option\"],[15,\"selected\",[28,[37,7],[[30,2],[30,7]],null]],[15,2,[30,7]],[12],[1,\"\\n                \"],[1,[30,7]],[1,\"\\n              \"],[13],[1,\"\\n\"]],[7]],null],[1,\"          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n\"],[41,[30,6,[\"derived\"]],[[[1,\"      \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n        \"],[10,\"label\"],[14,\"for\",\"context\"],[14,0,\"is-label\"],[12],[1,\"\\n          Context\\n        \"],[13],[1,\"\\n        \"],[10,0],[14,0,\"field has-addons\"],[12],[1,\"\\n          \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n            \"],[8,[39,9],[[24,1,\"context\"],[24,0,\"input\"],[24,\"data-test-transit-input\",\"context\"]],[[\"@type\",\"@value\"],[\"text\",[30,3]]],null],[1,\"\\n          \"],[13],[1,\"\\n          \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n            \"],[8,[39,10],null,[[\"@value\",\"@data-test-transit-b64-toggle\"],[[30,3],\"context\"]],null],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n\"]],[]],null],[41,[28,[37,7],[[30,6,[\"convergentEncryptionVersion\"]],1],null],[[[1,\"      \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n        \"],[10,\"label\"],[14,\"for\",\"nonce\"],[14,0,\"is-label\"],[12],[1,\"Nonce\"],[13],[1,\"\\n        \"],[10,0],[14,0,\"field has-addons\"],[12],[1,\"\\n          \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n            \"],[8,[39,9],[[24,1,\"nonce\"],[24,0,\"input\"],[24,\"data-test-transit-input\",\"nonce\"]],[[\"@type\",\"@value\"],[\"text\",[30,4]]],null],[1,\"\\n          \"],[13],[1,\"\\n          \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n            \"],[8,[39,10],null,[[\"@value\",\"@data-test-transit-b64-toggle\"],[[30,4],\"nonce\"]],null],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n\"]],[]],null],[1,\"    \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n      \"],[10,\"label\"],[14,\"for\",\"bits\"],[14,0,\"is-label\"],[12],[1,\"Bits\"],[13],[1,\"\\n      \"],[10,0],[14,0,\"control is-expanded\"],[12],[1,\"\\n        \"],[10,0],[14,0,\"select is-fullwidth\"],[12],[1,\"\\n          \"],[10,\"select\"],[14,3,\"bits\"],[14,1,\"bits\"],[15,\"onchange\",[28,[37,0],[[30,0],[28,[37,3],[[30,5]],null]],[[\"value\"],[\"target.value\"]]]],[12],[1,\"\\n\"],[42,[28,[37,5],[[28,[37,5],[[28,[37,6],[128,256,512],null]],null]],null],null,[[[1,\"              \"],[10,\"option\"],[15,\"selected\",[28,[37,7],[[30,5],[30,8]],null]],[15,2,[30,8]],[12],[1,\"\\n                \"],[10,\"code\"],[12],[1,[30,8]],[13],[1,\"\\n              \"],[13],[1,\"\\n\"]],[8]],null],[1,\"          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n  \"],[10,0],[14,0,\"field is-grouped box is-fullwidth is-bottomless\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n      \"],[10,\"button\"],[14,0,\"button is-primary\"],[14,4,\"submit\"],[12],[1,\"\\n        Create datakey\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"],[13],[1,\"\\n\"],[8,[39,11],null,[[\"@title\",\"@onClose\",\"@isActive\"],[\"Copy your generated key\",[28,[37,0],[[30,0],[28,[37,3],[[30,9]],null],false],null],[30,9]]],[[\"default\"],[[[[1,\"\\n  \"],[10,\"section\"],[14,0,\"modal-card-body\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"box is-shadowless is-fullwidth is-sideless\"],[12],[1,\"\\n\"],[41,[28,[37,7],[[30,2],\"plaintext\"],null],[[[1,\"        \"],[10,\"h2\"],[14,0,\"title is-6\"],[12],[1,\"Plaintext\"],[13],[1,\"\\n        \"],[10,0],[14,0,\"copy-text level\"],[12],[1,\"\\n          \"],[10,\"code\"],[14,0,\"level-left\"],[12],[1,[30,10]],[13],[1,\"\\n          \"],[8,[39,12],[[24,0,\"button is-compact is-transparent level-right\"],[24,\"data-test-button\",\"modal-copy\"]],[[\"@clipboardText\",\"@buttonType\",\"@success\"],[[30,10],\"button\",[28,[37,0],[[30,0],[28,[37,13],[\"Plaintext copied!\"],null]],null]]],[[\"default\"],[[[[1,\"\\n            \"],[8,[39,14],[[24,\"aria-label\",\"Copy\"]],[[\"@name\"],[\"clipboard-copy\"]],null],[1,\"\\n          \"]],[]]]]],[1,\"\\n        \"],[13],[1,\"\\n        \"],[10,2],[14,0,\"help has-bottom-margin-m\"],[12],[1,\"Plaintext is base64 encoded\"],[13],[1,\"\\n        \"],[10,\"h2\"],[14,0,\"title is-6\"],[12],[1,\"Ciphertext\"],[13],[1,\"\\n        \"],[10,0],[14,0,\"copy-text level\"],[12],[1,\"\\n          \"],[10,\"code\"],[14,0,\"level-left\"],[12],[1,[30,11]],[13],[1,\"\\n          \"],[8,[39,12],[[24,0,\"button is-compact is-transparent level-right\"],[24,\"data-test-button\",\"modal-copy\"]],[[\"@clipboardText\",\"@buttonType\",\"@success\"],[[30,11],\"button\",[28,[37,0],[[30,0],[28,[37,13],[\"Ciphertext copied!\"],null]],null]]],[[\"default\"],[[[[1,\"\\n            \"],[8,[39,14],[[24,\"aria-label\",\"Copy\"]],[[\"@name\"],[\"clipboard-copy\"]],null],[1,\"\\n          \"]],[]]]]],[1,\"\\n        \"],[13],[1,\"\\n        \"],[8,[39,12],[[24,0,\"button is-primary\"],[24,\"data-test-button\",\"modal-copy-close\"]],[[\"@clipboardText\",\"@buttonType\",\"@success\"],[[30,10],\"button\",[28,[37,0],[[30,0],[28,[37,13],[\"Plaintext copied!\"],null]],null]]],[[\"default\"],[[[[1,\"\\n          Copy Plaintext\\n        \"]],[]]]]],[1,\"\\n        \"],[8,[39,12],[[24,0,\"button is-primary\"],[24,\"data-test-button\",\"modal-copy-close\"]],[[\"@clipboardText\",\"@buttonType\",\"@success\"],[[30,11],\"button\",[28,[37,0],[[30,0],[28,[37,13],[\"Ciphertext copied!\"],null]],null]]],[[\"default\"],[[[[1,\"\\n          Copy Ciphertext\\n        \"]],[]]]]],[1,\"\\n        \"],[10,\"button\"],[14,0,\"button is-secondary\"],[15,\"onclick\",[28,[37,0],[[30,0],[28,[37,3],[[30,9]],null],false],null]],[14,4,\"submit\"],[12],[1,\"Close\"],[13],[1,\"\\n\"]],[]],[[[1,\"        \"],[10,\"h2\"],[14,0,\"title is-6\"],[12],[1,\"Ciphertext\"],[13],[1,\"\\n        \"],[10,0],[14,0,\"copy-text level\"],[12],[1,\"\\n          \"],[10,\"code\"],[14,0,\"level-left\"],[12],[1,[30,11]],[13],[1,\"\\n          \"],[8,[39,12],[[24,0,\"button is-compact is-transparent level-right\"],[24,\"data-test-button\",\"modal-copy\"]],[[\"@clipboardText\",\"@buttonType\",\"@success\"],[[30,11],\"button\",[28,[37,0],[[30,0],[28,[37,13],[\"Ciphertext copied!\"],null]],null]]],[[\"default\"],[[[[1,\"\\n            \"],[8,[39,14],[[24,\"aria-label\",\"Copy\"]],[[\"@name\"],[\"clipboard-copy\"]],null],[1,\"\\n          \"]],[]]]]],[1,\"\\n        \"],[13],[1,\"\\n        \"],[8,[39,12],[[24,0,\"button is-primary copy-close\"],[24,\"data-test-button\",\"modal-copy-close\"]],[[\"@clipboardText\",\"@buttonType\",\"@success\"],[[30,11],\"button\",[28,[37,0],[[30,0],[30,12],\"Ciphertext copied!\"],null]]],[[\"default\"],[[[[1,\"\\n          Copy & Close\\n        \"]],[]]]]],[1,\"\\n\"]],[]]],[1,\"    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[\"@doSubmit\",\"@param\",\"@context\",\"@nonce\",\"@bits\",\"@key\",\"paramOption\",\"bitOption\",\"@isModalActive\",\"@plaintext\",\"@ciphertext\",\"@toggleModal\"],false,[\"action\",\"hash\",\"namespace-reminder\",\"mut\",\"each\",\"-track-array\",\"array\",\"eq\",\"if\",\"input\",\"b64-toggle\",\"modal\",\"copy-button\",\"set-flash-message\",\"icon\"]]",
    "moduleName": "vault/templates/components/transit-key-action/datakey.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/transit-key-action/decrypt", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <form onsubmit={{action @doSubmit (hash ciphertext=@ciphertext context=@context nonce=@nonce)}}>
    <div class="box is-sideless is-fullwidth is-marginless">
      <div class="content has-bottom-margin-l">
        <p>You can decrypt ciphertext using <code>{{@key.name}}</code> as the encryption key.</p>
      </div>
      <div class="field">
        <div id="ciphertext-control" class="control">
          <JsonEditor
            @title="Ciphertext"
            @valueUpdated={{action (mut @ciphertext)}}
            @mode="ruby"
            @data-test-transit-input="ciphertext"
          />
        </div>
      </div>
      {{#if @key.derived}}
        <div class="field">
          <label for="context" class="is-label">
            Context
          </label>
          <div class="field has-addons">
            <div class="control">
              <Input @type="text" id="context" @value={{@context}} class="input" data-test-transit-input="context" />
            </div>
            <div class="control">
              <B64Toggle @value={{@context}} @data-test-transit-b64-toggle="context" />
            </div>
          </div>
        </div>
      {{/if}}
      {{#if (eq @key.convergentEncryptionVersion 1)}}
        <div class="field">
          <label for="nonce" class="is-label">Nonce</label>
          <div class="field has-addons">
            <div class="control">
              <Input @type="text" id="nonce" @value={{@nonce}} class="input" data-test-transit-input="nonce" />
            </div>
            <div class="control">
              <B64Toggle @value={{@nonce}} @data-test-transit-b64-toggle="nonce" />
            </div>
          </div>
        </div>
      {{/if}}
    </div>
    <div class="field is-grouped box is-fullwidth is-bottomless">
      <div class="control">
        <button type="submit" class="button is-primary" id="decrypt" data-test-button-decrypt>
          Decrypt
        </button>
      </div>
    </div>
  </form>
  {{#if @isModalActive}}
    <Modal @title="Copy your unwrapped data" @onClose={{action (mut @isModalActive) false}} @isActive={{@isModalActive}}>
      <section class="modal-card-body">
        <div class="box is-shadowless is-fullwidth is-sideless">
          <h2 class="title is-6">Plaintext</h2>
          <div class="copy-text level">
            <code class="level-left" data-test-encrypted-value="plaintext">{{@plaintext}}</code>
            <CopyButton
              class="button is-compact is-transparent level-right"
              data-test-button="modal-copy"
              @clipboardText={{@plaintext}}
              @buttonType="button"
              @success={{action (set-flash-message "Plaintext copied!")}}
            >
              <Icon @name="clipboard-copy" aria-label="Copy" />
            </CopyButton>
          </div>
          <p class="help">Plaintext is base64 encoded</p>
        </div>
      </section>
      <footer class="modal-card-foot">
        <CopyButton
          class="button is-primary copy-close"
          data-test-button="modal-copy-close"
          @clipboardText={{@plaintext}}
          @buttonType="button"
          @success={{action @toggleModal "Plaintext copied!"}}
        >
          Copy &amp; Close
        </CopyButton>
      </footer>
    </Modal>
  {{/if}}
  */
  {
    "id": "pvlDN/zw",
    "block": "[[[10,\"form\"],[15,\"onsubmit\",[28,[37,0],[[30,0],[30,1],[28,[37,1],null,[[\"ciphertext\",\"context\",\"nonce\"],[[30,2],[30,3],[30,4]]]]],null]],[12],[1,\"\\n  \"],[10,0],[14,0,\"box is-sideless is-fullwidth is-marginless\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"content has-bottom-margin-l\"],[12],[1,\"\\n      \"],[10,2],[12],[1,\"You can decrypt ciphertext using \"],[10,\"code\"],[12],[1,[30,5,[\"name\"]]],[13],[1,\" as the encryption key.\"],[13],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n      \"],[10,0],[14,1,\"ciphertext-control\"],[14,0,\"control\"],[12],[1,\"\\n        \"],[8,[39,2],null,[[\"@title\",\"@valueUpdated\",\"@mode\",\"@data-test-transit-input\"],[\"Ciphertext\",[28,[37,0],[[30,0],[28,[37,3],[[30,2]],null]],null],\"ruby\",\"ciphertext\"]],null],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n\"],[41,[30,5,[\"derived\"]],[[[1,\"      \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n        \"],[10,\"label\"],[14,\"for\",\"context\"],[14,0,\"is-label\"],[12],[1,\"\\n          Context\\n        \"],[13],[1,\"\\n        \"],[10,0],[14,0,\"field has-addons\"],[12],[1,\"\\n          \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n            \"],[8,[39,5],[[24,1,\"context\"],[24,0,\"input\"],[24,\"data-test-transit-input\",\"context\"]],[[\"@type\",\"@value\"],[\"text\",[30,3]]],null],[1,\"\\n          \"],[13],[1,\"\\n          \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n            \"],[8,[39,6],null,[[\"@value\",\"@data-test-transit-b64-toggle\"],[[30,3],\"context\"]],null],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n\"]],[]],null],[41,[28,[37,7],[[30,5,[\"convergentEncryptionVersion\"]],1],null],[[[1,\"      \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n        \"],[10,\"label\"],[14,\"for\",\"nonce\"],[14,0,\"is-label\"],[12],[1,\"Nonce\"],[13],[1,\"\\n        \"],[10,0],[14,0,\"field has-addons\"],[12],[1,\"\\n          \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n            \"],[8,[39,5],[[24,1,\"nonce\"],[24,0,\"input\"],[24,\"data-test-transit-input\",\"nonce\"]],[[\"@type\",\"@value\"],[\"text\",[30,4]]],null],[1,\"\\n          \"],[13],[1,\"\\n          \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n            \"],[8,[39,6],null,[[\"@value\",\"@data-test-transit-b64-toggle\"],[[30,4],\"nonce\"]],null],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n\"]],[]],null],[1,\"  \"],[13],[1,\"\\n  \"],[10,0],[14,0,\"field is-grouped box is-fullwidth is-bottomless\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n      \"],[10,\"button\"],[14,0,\"button is-primary\"],[14,1,\"decrypt\"],[14,\"data-test-button-decrypt\",\"\"],[14,4,\"submit\"],[12],[1,\"\\n        Decrypt\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"],[13],[1,\"\\n\"],[41,[30,6],[[[1,\"  \"],[8,[39,8],null,[[\"@title\",\"@onClose\",\"@isActive\"],[\"Copy your unwrapped data\",[28,[37,0],[[30,0],[28,[37,3],[[30,6]],null],false],null],[30,6]]],[[\"default\"],[[[[1,\"\\n    \"],[10,\"section\"],[14,0,\"modal-card-body\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"box is-shadowless is-fullwidth is-sideless\"],[12],[1,\"\\n        \"],[10,\"h2\"],[14,0,\"title is-6\"],[12],[1,\"Plaintext\"],[13],[1,\"\\n        \"],[10,0],[14,0,\"copy-text level\"],[12],[1,\"\\n          \"],[10,\"code\"],[14,0,\"level-left\"],[14,\"data-test-encrypted-value\",\"plaintext\"],[12],[1,[30,7]],[13],[1,\"\\n          \"],[8,[39,9],[[24,0,\"button is-compact is-transparent level-right\"],[24,\"data-test-button\",\"modal-copy\"]],[[\"@clipboardText\",\"@buttonType\",\"@success\"],[[30,7],\"button\",[28,[37,0],[[30,0],[28,[37,10],[\"Plaintext copied!\"],null]],null]]],[[\"default\"],[[[[1,\"\\n            \"],[8,[39,11],[[24,\"aria-label\",\"Copy\"]],[[\"@name\"],[\"clipboard-copy\"]],null],[1,\"\\n          \"]],[]]]]],[1,\"\\n        \"],[13],[1,\"\\n        \"],[10,2],[14,0,\"help\"],[12],[1,\"Plaintext is base64 encoded\"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,\"footer\"],[14,0,\"modal-card-foot\"],[12],[1,\"\\n      \"],[8,[39,9],[[24,0,\"button is-primary copy-close\"],[24,\"data-test-button\",\"modal-copy-close\"]],[[\"@clipboardText\",\"@buttonType\",\"@success\"],[[30,7],\"button\",[28,[37,0],[[30,0],[30,8],\"Plaintext copied!\"],null]]],[[\"default\"],[[[[1,\"\\n        Copy & Close\\n      \"]],[]]]]],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]],null]],[\"@doSubmit\",\"@ciphertext\",\"@context\",\"@nonce\",\"@key\",\"@isModalActive\",\"@plaintext\",\"@toggleModal\"],false,[\"action\",\"hash\",\"json-editor\",\"mut\",\"if\",\"input\",\"b64-toggle\",\"eq\",\"modal\",\"copy-button\",\"set-flash-message\",\"icon\"]]",
    "moduleName": "vault/templates/components/transit-key-action/decrypt.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/transit-key-action/encrypt", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <form
    onsubmit={{action
      @doSubmit
      (hash plaintext=@plaintext context=@context nonce=@nonce key_version=@key_version encodedBase64=@encodedBase64)
    }}
  >
    <div class="box is-sideless is-fullwidth is-marginless">
      <NamespaceReminder @mode="perform" @noun="encryption" />
      <div class="content has-bottom-margin-l">
        <p>You can encrypt plaintext data using <code>{{@key.name}}</code> as the encryption key.</p>
      </div>
      <KeyVersionSelect @key={{@key}} @onVersionChange={{action (mut @key_version)}} @key_version={{@key_version}} />
      <div class="field">
        <div id="plaintext-control" class="control is-relative">
          <JsonEditor
            @title="Plaintext"
            @value={{@plaintext}}
            @valueUpdated={{action (mut @plaintext)}}
            @mode="ruby"
            @data-test-transit-input="plaintext"
          />
        </div>
      </div>
      <div class="field">
        <Input @type="checkbox" id="encodedBase64" @checked={{@encodedBase64}} data-test-transit-input="encodedBase64" />
        <label for="encodedBase64">This data is already encoded in base64</label>
      </div>
      {{#if @key.derived}}
        <div class="field">
          <label for="context" class="is-label">
            Context
          </label>
          <div class="field has-addons">
            <div class="control">
              <Input @type="text" id="context" @value={{@context}} class="input" data-test-transit-input="context" />
            </div>
            <div class="control">
              <B64Toggle @value={{@context}} @data-test-transit-b64-toggle="context" />
            </div>
          </div>
        </div>
      {{/if}}
      {{#if (eq @key.convergentEncryptionVersion 1)}}
        <div class="field">
          <div class="level">
            <div class="level-left">
              <label for="nonce" class="is-label">Nonce</label>
            </div>
            <div class="level-right">
              <B64Toggle @value={{@nonce}} @data-test-transit-b64-toggle="nonce" />
            </div>
          </div>
          <div class="control">
            <Input @type="text" id="nonce" @value={{@nonce}} class="input" data-test-transit-input="nonce" />
          </div>
        </div>
      {{/if}}
    </div>
    <div class="field is-grouped box is-fullwidth is-bottomless">
      <div class="control">
        <button type="submit" class="button is-primary" data-test-button-encrypt>
          Encrypt
        </button>
      </div>
    </div>
  </form>
  <Modal
    @title="Copy your token"
    @onClose={{action (mut @isModalActive) false}}
    @isActive={{@isModalActive}}
    data-test-encrypt-modal
  >
    <section class="modal-card-body">
      <div class="box is-shadowless is-fullwidth is-sideless">
        <h2 class="title is-6">Ciphertext</h2>
        <div class="copy-text level">
          <code class="level-left" data-test-encrypted-value="ciphertext">{{@ciphertext}}</code>
          <CopyButton
            class="button is-compact is-transparent level-right"
            data-test-button="modal-copy"
            @clipboardText={{@ciphertext}}
            @buttonType="button"
            @success={{action (set-flash-message "Ciphertext copied!")}}
          >
            <Icon @name="clipboard-copy" aria-label="Copy" />
          </CopyButton>
        </div>
      </div>
    </section>
    <footer class="modal-card-foot">
      <CopyButton
        class="button is-primary copy-close"
        data-test-button="modal-copy-close"
        @clipboardText={{@ciphertext}}
        @buttonType="button"
        @success={{action @toggleModal "Ciphertext copied!"}}
      >
        Copy &amp; Close
      </CopyButton>
    </footer>
  </Modal>
  */
  {
    "id": "ivGB1avl",
    "block": "[[[10,\"form\"],[15,\"onsubmit\",[28,[37,0],[[30,0],[30,1],[28,[37,1],null,[[\"plaintext\",\"context\",\"nonce\",\"key_version\",\"encodedBase64\"],[[30,2],[30,3],[30,4],[30,5],[30,6]]]]],null]],[12],[1,\"\\n  \"],[10,0],[14,0,\"box is-sideless is-fullwidth is-marginless\"],[12],[1,\"\\n    \"],[8,[39,2],null,[[\"@mode\",\"@noun\"],[\"perform\",\"encryption\"]],null],[1,\"\\n    \"],[10,0],[14,0,\"content has-bottom-margin-l\"],[12],[1,\"\\n      \"],[10,2],[12],[1,\"You can encrypt plaintext data using \"],[10,\"code\"],[12],[1,[30,7,[\"name\"]]],[13],[1,\" as the encryption key.\"],[13],[1,\"\\n    \"],[13],[1,\"\\n    \"],[8,[39,3],null,[[\"@key\",\"@onVersionChange\",\"@key_version\"],[[30,7],[28,[37,0],[[30,0],[28,[37,4],[[30,5]],null]],null],[30,5]]],null],[1,\"\\n    \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n      \"],[10,0],[14,1,\"plaintext-control\"],[14,0,\"control is-relative\"],[12],[1,\"\\n        \"],[8,[39,5],null,[[\"@title\",\"@value\",\"@valueUpdated\",\"@mode\",\"@data-test-transit-input\"],[\"Plaintext\",[30,2],[28,[37,0],[[30,0],[28,[37,4],[[30,2]],null]],null],\"ruby\",\"plaintext\"]],null],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n      \"],[8,[39,6],[[24,1,\"encodedBase64\"],[24,\"data-test-transit-input\",\"encodedBase64\"]],[[\"@type\",\"@checked\"],[\"checkbox\",[30,6]]],null],[1,\"\\n      \"],[10,\"label\"],[14,\"for\",\"encodedBase64\"],[12],[1,\"This data is already encoded in base64\"],[13],[1,\"\\n    \"],[13],[1,\"\\n\"],[41,[30,7,[\"derived\"]],[[[1,\"      \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n        \"],[10,\"label\"],[14,\"for\",\"context\"],[14,0,\"is-label\"],[12],[1,\"\\n          Context\\n        \"],[13],[1,\"\\n        \"],[10,0],[14,0,\"field has-addons\"],[12],[1,\"\\n          \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n            \"],[8,[39,6],[[24,1,\"context\"],[24,0,\"input\"],[24,\"data-test-transit-input\",\"context\"]],[[\"@type\",\"@value\"],[\"text\",[30,3]]],null],[1,\"\\n          \"],[13],[1,\"\\n          \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n            \"],[8,[39,8],null,[[\"@value\",\"@data-test-transit-b64-toggle\"],[[30,3],\"context\"]],null],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n\"]],[]],null],[41,[28,[37,9],[[30,7,[\"convergentEncryptionVersion\"]],1],null],[[[1,\"      \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n        \"],[10,0],[14,0,\"level\"],[12],[1,\"\\n          \"],[10,0],[14,0,\"level-left\"],[12],[1,\"\\n            \"],[10,\"label\"],[14,\"for\",\"nonce\"],[14,0,\"is-label\"],[12],[1,\"Nonce\"],[13],[1,\"\\n          \"],[13],[1,\"\\n          \"],[10,0],[14,0,\"level-right\"],[12],[1,\"\\n            \"],[8,[39,8],null,[[\"@value\",\"@data-test-transit-b64-toggle\"],[[30,4],\"nonce\"]],null],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n        \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n          \"],[8,[39,6],[[24,1,\"nonce\"],[24,0,\"input\"],[24,\"data-test-transit-input\",\"nonce\"]],[[\"@type\",\"@value\"],[\"text\",[30,4]]],null],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n\"]],[]],null],[1,\"  \"],[13],[1,\"\\n  \"],[10,0],[14,0,\"field is-grouped box is-fullwidth is-bottomless\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n      \"],[10,\"button\"],[14,0,\"button is-primary\"],[14,\"data-test-button-encrypt\",\"\"],[14,4,\"submit\"],[12],[1,\"\\n        Encrypt\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"],[13],[1,\"\\n\"],[8,[39,10],[[24,\"data-test-encrypt-modal\",\"\"]],[[\"@title\",\"@onClose\",\"@isActive\"],[\"Copy your token\",[28,[37,0],[[30,0],[28,[37,4],[[30,8]],null],false],null],[30,8]]],[[\"default\"],[[[[1,\"\\n  \"],[10,\"section\"],[14,0,\"modal-card-body\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"box is-shadowless is-fullwidth is-sideless\"],[12],[1,\"\\n      \"],[10,\"h2\"],[14,0,\"title is-6\"],[12],[1,\"Ciphertext\"],[13],[1,\"\\n      \"],[10,0],[14,0,\"copy-text level\"],[12],[1,\"\\n        \"],[10,\"code\"],[14,0,\"level-left\"],[14,\"data-test-encrypted-value\",\"ciphertext\"],[12],[1,[30,9]],[13],[1,\"\\n        \"],[8,[39,11],[[24,0,\"button is-compact is-transparent level-right\"],[24,\"data-test-button\",\"modal-copy\"]],[[\"@clipboardText\",\"@buttonType\",\"@success\"],[[30,9],\"button\",[28,[37,0],[[30,0],[28,[37,12],[\"Ciphertext copied!\"],null]],null]]],[[\"default\"],[[[[1,\"\\n          \"],[8,[39,13],[[24,\"aria-label\",\"Copy\"]],[[\"@name\"],[\"clipboard-copy\"]],null],[1,\"\\n        \"]],[]]]]],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n  \"],[10,\"footer\"],[14,0,\"modal-card-foot\"],[12],[1,\"\\n    \"],[8,[39,11],[[24,0,\"button is-primary copy-close\"],[24,\"data-test-button\",\"modal-copy-close\"]],[[\"@clipboardText\",\"@buttonType\",\"@success\"],[[30,9],\"button\",[28,[37,0],[[30,0],[30,10],\"Ciphertext copied!\"],null]]],[[\"default\"],[[[[1,\"\\n      Copy & Close\\n    \"]],[]]]]],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[\"@doSubmit\",\"@plaintext\",\"@context\",\"@nonce\",\"@key_version\",\"@encodedBase64\",\"@key\",\"@isModalActive\",\"@ciphertext\",\"@toggleModal\"],false,[\"action\",\"hash\",\"namespace-reminder\",\"key-version-select\",\"mut\",\"json-editor\",\"input\",\"if\",\"b64-toggle\",\"eq\",\"modal\",\"copy-button\",\"set-flash-message\",\"icon\"]]",
    "moduleName": "vault/templates/components/transit-key-action/encrypt.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/transit-key-action/export", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <form
    onsubmit={{action
      @doSubmit
      (hash param=(compact (array @exportKeyType (if this.exportVersion @exportKeyVersion))))
      (hash wrapTTL=this.wrapTTL)
    }}
  >
    <div class="box is-sideless is-fullwidth is-marginless">
      <div class="content">
        <p>Export a key using <code>{{@key.name}}</code> as the encryption key.</p>
      </div>
      <div class="field">
        <label for="type" class="is-label">Key type</label>
        <div class="control is-expanded">
          <div class="select is-fullwidth">
            <select name="type" id="type" onchange={{action (mut @exportKeyType) value="target.value"}}>
              {{#each @key.exportKeyTypes as |currOption|}}
                <option selected={{eq @exportKeyType currOption}} value={{currOption}}>
                  <code>{{currOption}}</code>
                </option>
              {{/each}}
            </select>
          </div>
        </div>
      </div>
      <div class="field">
        <div class="b-checkbox">
          <Input @type="checkbox" name="exportVersion" id="exportVersion" class="styled" @checked={{this.exportVersion}} />
          <label for="exportVersion" class="is-label">
            Export a single version
          </label>
        </div>
        {{#if this.exportVersion}}
          <div class="field">
            <label for="version" class="is-label">Version</label>
            <div class="control is-expanded">
              <div class="select is-fullwidth">
                <select name="version" id="version" onchange={{action (mut @exportKeyVersion) value="target.value"}}>
                  {{#each @key.validKeyVersions as |versionOption|}}
                    <option selected={{eq @exportKeyVersion versionOption}} value={{versionOption}}>
                      <code>{{versionOption}}</code>
                      {{#if (eq @key.validKeyVersions.lastObject versionOption)}}
                        <span> (latest) </span>
                      {{/if}}
                    </option>
                  {{/each}}
                </select>
              </div>
            </div>
          </div>
        {{/if}}
      </div>
      <WrapTtl @onChange={{action (mut this.wrapTTL)}} />
    </div>
    <div class="field is-grouped box is-fullwidth is-bottomless">
      <div class="control">
        <button type="submit" class="button is-primary">
          Export key
        </button>
      </div>
    </div>
  </form>
  <Modal @title="Copy your wrapped key" @onClose={{action (mut @isModalActive) false}} @isActive={{@isModalActive}}>
    <section class="modal-card-body">
      <div class="box is-shadowless is-fullwidth is-sideless">
        <h2 class="title is-6">Wrapped Key</h2>
        <div class="copy-text level">
          <pre data-test-encrypted-value="export" class="level-left">{{if this.wrapTTL @wrappedToken (stringify @keys)}}</pre>
          <CopyButton
            class="button is-compact is-transparent level-right"
            data-test-button="modal-copy"
            @clipboardText={{if this.wrapTTL @wrappedToken (stringify @keys)}}
            @buttonType="button"
            @success={{action (set-flash-message "Token copied!")}}
          >
            <Icon @name="clipboard-copy" aria-label="Copy" />
          </CopyButton>
        </div>
      </div>
    </section>
    <footer class="modal-card-foot">
      <CopyButton
        class="button is-primary copy-close"
        data-test-button="modal-copy-close"
        @clipboardText={{if this.wrapTTL @wrappedToken (stringify @keys)}}
        @buttonType="button"
        @success={{action @toggleModal "Token copied!"}}
      >
        Copy &amp; Close
      </CopyButton>
    </footer>
  </Modal>
  */
  {
    "id": "zjjtMEMa",
    "block": "[[[10,\"form\"],[15,\"onsubmit\",[28,[37,0],[[30,0],[30,1],[28,[37,1],null,[[\"param\"],[[28,[37,2],[[28,[37,3],[[30,2],[52,[30,0,[\"exportVersion\"]],[30,3]]],null]],null]]]],[28,[37,1],null,[[\"wrapTTL\"],[[30,0,[\"wrapTTL\"]]]]]],null]],[12],[1,\"\\n  \"],[10,0],[14,0,\"box is-sideless is-fullwidth is-marginless\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"content\"],[12],[1,\"\\n      \"],[10,2],[12],[1,\"Export a key using \"],[10,\"code\"],[12],[1,[30,4,[\"name\"]]],[13],[1,\" as the encryption key.\"],[13],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n      \"],[10,\"label\"],[14,\"for\",\"type\"],[14,0,\"is-label\"],[12],[1,\"Key type\"],[13],[1,\"\\n      \"],[10,0],[14,0,\"control is-expanded\"],[12],[1,\"\\n        \"],[10,0],[14,0,\"select is-fullwidth\"],[12],[1,\"\\n          \"],[10,\"select\"],[14,3,\"type\"],[14,1,\"type\"],[15,\"onchange\",[28,[37,0],[[30,0],[28,[37,5],[[30,2]],null]],[[\"value\"],[\"target.value\"]]]],[12],[1,\"\\n\"],[42,[28,[37,7],[[28,[37,7],[[30,4,[\"exportKeyTypes\"]]],null]],null],null,[[[1,\"              \"],[10,\"option\"],[15,\"selected\",[28,[37,8],[[30,2],[30,5]],null]],[15,2,[30,5]],[12],[1,\"\\n                \"],[10,\"code\"],[12],[1,[30,5]],[13],[1,\"\\n              \"],[13],[1,\"\\n\"]],[5]],null],[1,\"          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"b-checkbox\"],[12],[1,\"\\n        \"],[8,[39,9],[[24,3,\"exportVersion\"],[24,1,\"exportVersion\"],[24,0,\"styled\"]],[[\"@type\",\"@checked\"],[\"checkbox\",[30,0,[\"exportVersion\"]]]],null],[1,\"\\n        \"],[10,\"label\"],[14,\"for\",\"exportVersion\"],[14,0,\"is-label\"],[12],[1,\"\\n          Export a single version\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n\"],[41,[30,0,[\"exportVersion\"]],[[[1,\"        \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n          \"],[10,\"label\"],[14,\"for\",\"version\"],[14,0,\"is-label\"],[12],[1,\"Version\"],[13],[1,\"\\n          \"],[10,0],[14,0,\"control is-expanded\"],[12],[1,\"\\n            \"],[10,0],[14,0,\"select is-fullwidth\"],[12],[1,\"\\n              \"],[10,\"select\"],[14,3,\"version\"],[14,1,\"version\"],[15,\"onchange\",[28,[37,0],[[30,0],[28,[37,5],[[30,3]],null]],[[\"value\"],[\"target.value\"]]]],[12],[1,\"\\n\"],[42,[28,[37,7],[[28,[37,7],[[30,4,[\"validKeyVersions\"]]],null]],null],null,[[[1,\"                  \"],[10,\"option\"],[15,\"selected\",[28,[37,8],[[30,3],[30,6]],null]],[15,2,[30,6]],[12],[1,\"\\n                    \"],[10,\"code\"],[12],[1,[30,6]],[13],[1,\"\\n\"],[41,[28,[37,8],[[30,4,[\"validKeyVersions\",\"lastObject\"]],[30,6]],null],[[[1,\"                      \"],[10,1],[12],[1,\" (latest) \"],[13],[1,\"\\n\"]],[]],null],[1,\"                  \"],[13],[1,\"\\n\"]],[6]],null],[1,\"              \"],[13],[1,\"\\n            \"],[13],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n\"]],[]],null],[1,\"    \"],[13],[1,\"\\n    \"],[8,[39,10],null,[[\"@onChange\"],[[28,[37,0],[[30,0],[28,[37,5],[[30,0,[\"wrapTTL\"]]],null]],null]]],null],[1,\"\\n  \"],[13],[1,\"\\n  \"],[10,0],[14,0,\"field is-grouped box is-fullwidth is-bottomless\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n      \"],[10,\"button\"],[14,0,\"button is-primary\"],[14,4,\"submit\"],[12],[1,\"\\n        Export key\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"],[13],[1,\"\\n\"],[8,[39,11],null,[[\"@title\",\"@onClose\",\"@isActive\"],[\"Copy your wrapped key\",[28,[37,0],[[30,0],[28,[37,5],[[30,7]],null],false],null],[30,7]]],[[\"default\"],[[[[1,\"\\n  \"],[10,\"section\"],[14,0,\"modal-card-body\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"box is-shadowless is-fullwidth is-sideless\"],[12],[1,\"\\n      \"],[10,\"h2\"],[14,0,\"title is-6\"],[12],[1,\"Wrapped Key\"],[13],[1,\"\\n      \"],[10,0],[14,0,\"copy-text level\"],[12],[1,\"\\n        \"],[10,\"pre\"],[14,\"data-test-encrypted-value\",\"export\"],[14,0,\"level-left\"],[12],[1,[52,[30,0,[\"wrapTTL\"]],[30,8],[28,[37,12],[[30,9]],null]]],[13],[1,\"\\n        \"],[8,[39,13],[[24,0,\"button is-compact is-transparent level-right\"],[24,\"data-test-button\",\"modal-copy\"]],[[\"@clipboardText\",\"@buttonType\",\"@success\"],[[52,[30,0,[\"wrapTTL\"]],[30,8],[28,[37,12],[[30,9]],null]],\"button\",[28,[37,0],[[30,0],[28,[37,14],[\"Token copied!\"],null]],null]]],[[\"default\"],[[[[1,\"\\n          \"],[8,[39,15],[[24,\"aria-label\",\"Copy\"]],[[\"@name\"],[\"clipboard-copy\"]],null],[1,\"\\n        \"]],[]]]]],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n  \"],[10,\"footer\"],[14,0,\"modal-card-foot\"],[12],[1,\"\\n    \"],[8,[39,13],[[24,0,\"button is-primary copy-close\"],[24,\"data-test-button\",\"modal-copy-close\"]],[[\"@clipboardText\",\"@buttonType\",\"@success\"],[[52,[30,0,[\"wrapTTL\"]],[30,8],[28,[37,12],[[30,9]],null]],\"button\",[28,[37,0],[[30,0],[30,10],\"Token copied!\"],null]]],[[\"default\"],[[[[1,\"\\n      Copy & Close\\n    \"]],[]]]]],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[\"@doSubmit\",\"@exportKeyType\",\"@exportKeyVersion\",\"@key\",\"currOption\",\"versionOption\",\"@isModalActive\",\"@wrappedToken\",\"@keys\",\"@toggleModal\"],false,[\"action\",\"hash\",\"compact\",\"array\",\"if\",\"mut\",\"each\",\"-track-array\",\"eq\",\"input\",\"wrap-ttl\",\"modal\",\"stringify\",\"copy-button\",\"set-flash-message\",\"icon\"]]",
    "moduleName": "vault/templates/components/transit-key-action/export.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/transit-key-action/hmac", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <form
    onsubmit={{action
      @doSubmit
      (hash input=@input algorithm=@algorithm key_version=@key_version encodedBase64=@encodedBase64)
    }}
  >
    <div class="box is-sideless is-fullwidth is-marginless">
      <NamespaceReminder @mode="perform" @noun="HMAC creation" />
      <div class="content has-bottom-margin-l">
        <p>
          Generate the digest of given data using the specified hash algorithm and
          <code>{{@key.name}}</code>
          as the named key.
        </p>
      </div>
      <KeyVersionSelect @key={{@key}} @onVersionChange={{action (mut @key_version)}} @key_version={{@key_version}} />
      <div class="field">
        <div id="input-control" class="control is-relative">
          <JsonEditor @title="Input" @valueUpdated={{action (mut @input)}} @mode="ruby" @data-test-transit-input="input" />
        </div>
      </div>
      <div class="field">
        <Input @type="checkbox" id="encodedBase64" @checked={{@encodedBase64}} data-test-transit-input="encodedBase64" />
        <label for="encodedBase64">This data is already encoded in base64</label>
      </div>
      <div class="field">
        <label for="algorithm" class="is-label">Hash Algorithm</label>
        <div class="control is-expanded">
          <div class="select is-fullwidth">
            <select name="algorithm" id="algorithm" onchange={{action (mut @algorithm) value="target.value"}}>
              {{#each (sha2-digest-sizes) as |algo|}}
                <option selected={{if @algorithm (eq @algorithm algo)}} value={{algo}}>
                  <code>{{algo}}</code>
                </option>
              {{/each}}
            </select>
          </div>
        </div>
      </div>
    </div>
    <div class="field is-grouped box is-fullwidth is-bottomless">
      <div class="control">
        <button type="submit" class="button is-primary">
          HMAC
        </button>
      </div>
    </div>
  </form>
  <Modal @title="Copy your unwrapped data" @onClose={{action (mut @isModalActive) false}} @isActive={{@isModalActive}}>
    <section class="modal-card-body">
      <div class="box is-shadowless is-fullwidth is-sideless">
        <h2 class="title is-6">HMAC</h2>
        <div class="copy-text level">
          <code class="level-left" data-test-encrypted-value="hmac">{{@hmac}}</code>
          <CopyButton
            class="button is-compact is-transparent level-right"
            data-test-button="modal-copy"
            @clipboardText={{@hmac}}
            @buttonType="button"
            @success={{action (set-flash-message "HMAC copied!")}}
          >
            <Icon @name="clipboard-copy" aria-label="Copy" />
          </CopyButton>
        </div>
      </div>
    </section>
    <footer class="modal-card-foot">
      <CopyButton
        class="button is-primary copy-close"
        data-test-button="modal-copy-close"
        @clipboardText={{@hmac}}
        @buttonType="button"
        @success={{action @toggleModal "HMAC copied!"}}
      >
        Copy &amp; Close
      </CopyButton>
    </footer>
  </Modal>
  */
  {
    "id": "OHmChHfE",
    "block": "[[[10,\"form\"],[15,\"onsubmit\",[28,[37,0],[[30,0],[30,1],[28,[37,1],null,[[\"input\",\"algorithm\",\"key_version\",\"encodedBase64\"],[[30,2],[30,3],[30,4],[30,5]]]]],null]],[12],[1,\"\\n  \"],[10,0],[14,0,\"box is-sideless is-fullwidth is-marginless\"],[12],[1,\"\\n    \"],[8,[39,2],null,[[\"@mode\",\"@noun\"],[\"perform\",\"HMAC creation\"]],null],[1,\"\\n    \"],[10,0],[14,0,\"content has-bottom-margin-l\"],[12],[1,\"\\n      \"],[10,2],[12],[1,\"\\n        Generate the digest of given data using the specified hash algorithm and\\n        \"],[10,\"code\"],[12],[1,[30,6,[\"name\"]]],[13],[1,\"\\n        as the named key.\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n    \"],[8,[39,3],null,[[\"@key\",\"@onVersionChange\",\"@key_version\"],[[30,6],[28,[37,0],[[30,0],[28,[37,4],[[30,4]],null]],null],[30,4]]],null],[1,\"\\n    \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n      \"],[10,0],[14,1,\"input-control\"],[14,0,\"control is-relative\"],[12],[1,\"\\n        \"],[8,[39,5],null,[[\"@title\",\"@valueUpdated\",\"@mode\",\"@data-test-transit-input\"],[\"Input\",[28,[37,0],[[30,0],[28,[37,4],[[30,2]],null]],null],\"ruby\",\"input\"]],null],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n      \"],[8,[39,6],[[24,1,\"encodedBase64\"],[24,\"data-test-transit-input\",\"encodedBase64\"]],[[\"@type\",\"@checked\"],[\"checkbox\",[30,5]]],null],[1,\"\\n      \"],[10,\"label\"],[14,\"for\",\"encodedBase64\"],[12],[1,\"This data is already encoded in base64\"],[13],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n      \"],[10,\"label\"],[14,\"for\",\"algorithm\"],[14,0,\"is-label\"],[12],[1,\"Hash Algorithm\"],[13],[1,\"\\n      \"],[10,0],[14,0,\"control is-expanded\"],[12],[1,\"\\n        \"],[10,0],[14,0,\"select is-fullwidth\"],[12],[1,\"\\n          \"],[10,\"select\"],[14,3,\"algorithm\"],[14,1,\"algorithm\"],[15,\"onchange\",[28,[37,0],[[30,0],[28,[37,4],[[30,3]],null]],[[\"value\"],[\"target.value\"]]]],[12],[1,\"\\n\"],[42,[28,[37,8],[[28,[37,8],[[28,[37,9],null,null]],null]],null],null,[[[1,\"              \"],[10,\"option\"],[15,\"selected\",[52,[30,3],[28,[37,11],[[30,3],[30,7]],null]]],[15,2,[30,7]],[12],[1,\"\\n                \"],[10,\"code\"],[12],[1,[30,7]],[13],[1,\"\\n              \"],[13],[1,\"\\n\"]],[7]],null],[1,\"          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n  \"],[10,0],[14,0,\"field is-grouped box is-fullwidth is-bottomless\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n      \"],[10,\"button\"],[14,0,\"button is-primary\"],[14,4,\"submit\"],[12],[1,\"\\n        HMAC\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"],[13],[1,\"\\n\"],[8,[39,12],null,[[\"@title\",\"@onClose\",\"@isActive\"],[\"Copy your unwrapped data\",[28,[37,0],[[30,0],[28,[37,4],[[30,8]],null],false],null],[30,8]]],[[\"default\"],[[[[1,\"\\n  \"],[10,\"section\"],[14,0,\"modal-card-body\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"box is-shadowless is-fullwidth is-sideless\"],[12],[1,\"\\n      \"],[10,\"h2\"],[14,0,\"title is-6\"],[12],[1,\"HMAC\"],[13],[1,\"\\n      \"],[10,0],[14,0,\"copy-text level\"],[12],[1,\"\\n        \"],[10,\"code\"],[14,0,\"level-left\"],[14,\"data-test-encrypted-value\",\"hmac\"],[12],[1,[30,9]],[13],[1,\"\\n        \"],[8,[39,13],[[24,0,\"button is-compact is-transparent level-right\"],[24,\"data-test-button\",\"modal-copy\"]],[[\"@clipboardText\",\"@buttonType\",\"@success\"],[[30,9],\"button\",[28,[37,0],[[30,0],[28,[37,14],[\"HMAC copied!\"],null]],null]]],[[\"default\"],[[[[1,\"\\n          \"],[8,[39,15],[[24,\"aria-label\",\"Copy\"]],[[\"@name\"],[\"clipboard-copy\"]],null],[1,\"\\n        \"]],[]]]]],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n  \"],[10,\"footer\"],[14,0,\"modal-card-foot\"],[12],[1,\"\\n    \"],[8,[39,13],[[24,0,\"button is-primary copy-close\"],[24,\"data-test-button\",\"modal-copy-close\"]],[[\"@clipboardText\",\"@buttonType\",\"@success\"],[[30,9],\"button\",[28,[37,0],[[30,0],[30,10],\"HMAC copied!\"],null]]],[[\"default\"],[[[[1,\"\\n      Copy & Close\\n    \"]],[]]]]],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[\"@doSubmit\",\"@input\",\"@algorithm\",\"@key_version\",\"@encodedBase64\",\"@key\",\"algo\",\"@isModalActive\",\"@hmac\",\"@toggleModal\"],false,[\"action\",\"hash\",\"namespace-reminder\",\"key-version-select\",\"mut\",\"json-editor\",\"input\",\"each\",\"-track-array\",\"sha2-digest-sizes\",\"if\",\"eq\",\"modal\",\"copy-button\",\"set-flash-message\",\"icon\"]]",
    "moduleName": "vault/templates/components/transit-key-action/hmac.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/transit-key-action/rewrap", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <form onsubmit={{action @doSubmit (hash ciphertext=@ciphertext context=@context nonce=@nonce key_version=@key_version)}}>
    <div class="box is-sideless is-fullwidth is-marginless">
      <NamespaceReminder @mode="perform" @noun="rewrap" />
      <div class="content has-bottom-margin-l">
        <p>
          You can rewrap the provided ciphertext using the latest version of
          <code>{{@key.name}}</code>
          as the encryption key.
        </p>
      </div>
      <KeyVersionSelect @key={{@key}} @onVersionChange={{action (mut @key_version)}} @key_version={{@key_version}} />
      <div class="field">
        <div class="control is-expanded">
          <JsonEditor @title="Ciphertext" @valueUpdated={{action (mut @ciphertext)}} @mode="ruby" />
        </div>
      </div>
      {{#if @key.derived}}
        <div class="field">
          <label for="context" class="is-label">
            Context
          </label>
          <div class="field has-addons">
            <div class="control">
              <Input @type="text" id="context" @value={{@context}} class="input" data-test-transit-input="context" />
            </div>
            <div class="control">
              <B64Toggle @value={{@context}} @data-test-transit-b64-toggle="context" />
            </div>
          </div>
        </div>
      {{/if}}
      {{#if (eq @key.convergentEncryptionVersion 1)}}
        <div class="field">
          <label for="nonce" class="is-label">Nonce</label>
          <div class="field has-addons">
            <div class="control">
              <Input @type="text" id="nonce" @value={{@nonce}} class="input" data-test-transit-input="nonce" />
            </div>
            <div class="control">
              <B64Toggle @value={{@nonce}} @data-test-transit-b64-toggle="nonce" />
            </div>
          </div>
        </div>
      {{/if}}
    </div>
    <div class="field box is-fullwidth is-bottomless">
      <div class="content has-bottom-margin-l">
        <p class="help">
          Submitting this form will update the
          <code>ciphertext</code>
          in-place.
        </p>
      </div>
      <div class="control">
        <button type="submit" class="button is-primary">
          Rewrap
        </button>
      </div>
    </div>
  </form>
  <Modal @title="Copy your token" @onClose={{action (mut @isModalActive)}} @isActive={{@isModalActive}}>
    <section class="modal-card-body">
      <div class="box is-shadowless is-fullwidth is-sideless">
        <h2 class="title is-6">Ciphertext</h2>
        <div class="copy-text level">
          <code class="level-left" data-test-encrypted-value="ciphertext">{{@ciphertext}}</code>
          <CopyButton
            class="button is-compact is-transparent level-right"
            data-test-button="modal-copy"
            @clipboardText={{@ciphertext}}
            @buttonType="button"
            @success={{action (set-flash-message "Ciphertext copied!")}}
          >
            <Icon @name="clipboard-copy" aria-label="Copy" />
          </CopyButton>
        </div>
      </div>
    </section>
    <footer class="modal-card-foot">
      <CopyButton
        class="button is-primary copy-close"
        data-test-button="modal-copy-close"
        @clipboardText={{@ciphertext}}
        @buttonType="button"
        @success={{action @toggleModal "Ciphertext copied!"}}
      >
        Copy &amp; Close
      </CopyButton>
    </footer>
  </Modal>
  */
  {
    "id": "Q0pttSb8",
    "block": "[[[10,\"form\"],[15,\"onsubmit\",[28,[37,0],[[30,0],[30,1],[28,[37,1],null,[[\"ciphertext\",\"context\",\"nonce\",\"key_version\"],[[30,2],[30,3],[30,4],[30,5]]]]],null]],[12],[1,\"\\n  \"],[10,0],[14,0,\"box is-sideless is-fullwidth is-marginless\"],[12],[1,\"\\n    \"],[8,[39,2],null,[[\"@mode\",\"@noun\"],[\"perform\",\"rewrap\"]],null],[1,\"\\n    \"],[10,0],[14,0,\"content has-bottom-margin-l\"],[12],[1,\"\\n      \"],[10,2],[12],[1,\"\\n        You can rewrap the provided ciphertext using the latest version of\\n        \"],[10,\"code\"],[12],[1,[30,6,[\"name\"]]],[13],[1,\"\\n        as the encryption key.\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n    \"],[8,[39,3],null,[[\"@key\",\"@onVersionChange\",\"@key_version\"],[[30,6],[28,[37,0],[[30,0],[28,[37,4],[[30,5]],null]],null],[30,5]]],null],[1,\"\\n    \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"control is-expanded\"],[12],[1,\"\\n        \"],[8,[39,5],null,[[\"@title\",\"@valueUpdated\",\"@mode\"],[\"Ciphertext\",[28,[37,0],[[30,0],[28,[37,4],[[30,2]],null]],null],\"ruby\"]],null],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n\"],[41,[30,6,[\"derived\"]],[[[1,\"      \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n        \"],[10,\"label\"],[14,\"for\",\"context\"],[14,0,\"is-label\"],[12],[1,\"\\n          Context\\n        \"],[13],[1,\"\\n        \"],[10,0],[14,0,\"field has-addons\"],[12],[1,\"\\n          \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n            \"],[8,[39,7],[[24,1,\"context\"],[24,0,\"input\"],[24,\"data-test-transit-input\",\"context\"]],[[\"@type\",\"@value\"],[\"text\",[30,3]]],null],[1,\"\\n          \"],[13],[1,\"\\n          \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n            \"],[8,[39,8],null,[[\"@value\",\"@data-test-transit-b64-toggle\"],[[30,3],\"context\"]],null],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n\"]],[]],null],[41,[28,[37,9],[[30,6,[\"convergentEncryptionVersion\"]],1],null],[[[1,\"      \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n        \"],[10,\"label\"],[14,\"for\",\"nonce\"],[14,0,\"is-label\"],[12],[1,\"Nonce\"],[13],[1,\"\\n        \"],[10,0],[14,0,\"field has-addons\"],[12],[1,\"\\n          \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n            \"],[8,[39,7],[[24,1,\"nonce\"],[24,0,\"input\"],[24,\"data-test-transit-input\",\"nonce\"]],[[\"@type\",\"@value\"],[\"text\",[30,4]]],null],[1,\"\\n          \"],[13],[1,\"\\n          \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n            \"],[8,[39,8],null,[[\"@value\",\"@data-test-transit-b64-toggle\"],[[30,4],\"nonce\"]],null],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n\"]],[]],null],[1,\"  \"],[13],[1,\"\\n  \"],[10,0],[14,0,\"field box is-fullwidth is-bottomless\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"content has-bottom-margin-l\"],[12],[1,\"\\n      \"],[10,2],[14,0,\"help\"],[12],[1,\"\\n        Submitting this form will update the\\n        \"],[10,\"code\"],[12],[1,\"ciphertext\"],[13],[1,\"\\n        in-place.\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n      \"],[10,\"button\"],[14,0,\"button is-primary\"],[14,4,\"submit\"],[12],[1,\"\\n        Rewrap\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"],[13],[1,\"\\n\"],[8,[39,10],null,[[\"@title\",\"@onClose\",\"@isActive\"],[\"Copy your token\",[28,[37,0],[[30,0],[28,[37,4],[[30,7]],null]],null],[30,7]]],[[\"default\"],[[[[1,\"\\n  \"],[10,\"section\"],[14,0,\"modal-card-body\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"box is-shadowless is-fullwidth is-sideless\"],[12],[1,\"\\n      \"],[10,\"h2\"],[14,0,\"title is-6\"],[12],[1,\"Ciphertext\"],[13],[1,\"\\n      \"],[10,0],[14,0,\"copy-text level\"],[12],[1,\"\\n        \"],[10,\"code\"],[14,0,\"level-left\"],[14,\"data-test-encrypted-value\",\"ciphertext\"],[12],[1,[30,2]],[13],[1,\"\\n        \"],[8,[39,11],[[24,0,\"button is-compact is-transparent level-right\"],[24,\"data-test-button\",\"modal-copy\"]],[[\"@clipboardText\",\"@buttonType\",\"@success\"],[[30,2],\"button\",[28,[37,0],[[30,0],[28,[37,12],[\"Ciphertext copied!\"],null]],null]]],[[\"default\"],[[[[1,\"\\n          \"],[8,[39,13],[[24,\"aria-label\",\"Copy\"]],[[\"@name\"],[\"clipboard-copy\"]],null],[1,\"\\n        \"]],[]]]]],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n  \"],[10,\"footer\"],[14,0,\"modal-card-foot\"],[12],[1,\"\\n    \"],[8,[39,11],[[24,0,\"button is-primary copy-close\"],[24,\"data-test-button\",\"modal-copy-close\"]],[[\"@clipboardText\",\"@buttonType\",\"@success\"],[[30,2],\"button\",[28,[37,0],[[30,0],[30,8],\"Ciphertext copied!\"],null]]],[[\"default\"],[[[[1,\"\\n      Copy & Close\\n    \"]],[]]]]],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[\"@doSubmit\",\"@ciphertext\",\"@context\",\"@nonce\",\"@key_version\",\"@key\",\"@isModalActive\",\"@toggleModal\"],false,[\"action\",\"hash\",\"namespace-reminder\",\"key-version-select\",\"mut\",\"json-editor\",\"if\",\"input\",\"b64-toggle\",\"eq\",\"modal\",\"copy-button\",\"set-flash-message\",\"icon\"]]",
    "moduleName": "vault/templates/components/transit-key-action/rewrap.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/transit-key-action/sign", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <form
    onsubmit={{action
      @doSubmit
      (hash
        input=@input
        hash_algorithm=@hash_algorithm
        signature_algorithm=@signature_algorithm
        key_version=@key_version
        context=@context
        prehashed=@prehashed
        encodedBase64=@encodedBase64
      )
    }}
  >
    <div class="box is-sideless is-fullwidth is-marginless">
      <NamespaceReminder @mode="perform" @noun="signing" />
      <div class="content">
        <p>
          Return the cryptographic signature of the given data using
          <code>{{@key.name}}</code>
          as the encryption key and the specified hash algorithm.
        </p>
      </div>
      <KeyVersionSelect @key={{@key}} @onVersionChange={{action (mut @key_version)}} @key_version={{@key_version}} />
      <div class="field">
        <div class="control is-relative">
          <JsonEditor
            @title="Input"
            @value={{@input}}
            @valueUpdated={{action (mut @input)}}
            @mode="ruby"
            @data-test-transit-input="input"
          />
        </div>
      </div>
      <div class="field">
        <Input @type="checkbox" id="encodedBase64" @checked={{@encodedBase64}} data-test-transit-input="encodedBase64" />
        <label for="encodedBase64">This data is already encoded in base64</label>
      </div>
      {{#if @key.derived}}
        <div class="field">
          <label for="context" class="is-label">
            Context
          </label>
          <div class="field has-addons">
            <div class="control">
              <Input @type="text" id="context" @value={{@context}} class="input" data-test-transit-input="context" />
            </div>
            <div class="control">
              <B64Toggle @value={{@context}} @data-test-transit-b64-toggle="context" />
            </div>
          </div>
        </div>
      {{/if}}
      <div class="field">
        <div class="level is-mobile">
          <div class="level-left">
            <label for="hash_algorithm" class="is-label">Hash Algorithm</label>
          </div>
          <div class="level-right">
            <div class="control is-flex">
              <Input
                id="prehashed"
                @type="checkbox"
                name="prehashed"
                class="switch is-rounded is-success is-small"
                @checked={{@prehashed}}
              />
              <label for="prehashed">Prehashed</label>
            </div>
          </div>
        </div>
        <div class="control is-expanded">
          <div class="select is-fullwidth">
            <select name="hash_algorithm" id="hash_algorithm" onchange={{action (mut @hash_algorithm) value="target.value"}}>
              {{#each (sha2-digest-sizes) as |algo|}}
                <option selected={{if @hash_algorithm (eq @hash_algorithm algo) (eq algo "sha2-256")}} value={{algo}}>
                  {{algo}}
                </option>
              {{/each}}
            </select>
          </div>
        </div>
      </div>
      {{#if (or (eq @key.type "rsa-2048") (eq @key.type "rsa-3072") (eq @key.type "rsa-4096"))}}
        <div class="field">
          <label for="signature_algorithm" class="is-label">Signature Algorithm</label>
          <div class="control is-expanded">
            <div class="select is-fullwidth">
              <select
                name="signature_algorithm"
                id="signature_algorithm"
                data-test-signature-algorithm="true"
                onchange={{action (mut @signature_algorithm) value="target.value"}}
              >
                {{#each (array "pss" "pkcs1v15") as |sigAlgo|}}
                  <option
                    selected={{if @signature_algorithm (eq @signature_algorithm sigAlgo) (eq sigAlgo "pss")}}
                    value={{sigAlgo}}
                  >
                    {{sigAlgo}}
                  </option>
                {{/each}}
              </select>
            </div>
          </div>
        </div>
      {{/if}}
    </div>
    <div class="field is-grouped box is-fullwidth is-bottomless">
      <div class="control">
        <button type="submit" disabled={{@loading}} class="button is-primary {{if @loading 'is-loading'}}">
          Sign
        </button>
      </div>
    </div>
  </form>
  <Modal
    @title="Copy your signature"
    @onClose={{action (mut @isModalActive) false}}
    @isActive={{@isModalActive}}
    data-test-sign-modal
  >
    <section class="modal-card-body">
      <div class="box is-shadowless is-fullwidth is-sideless">
        <h2 class="title is-6">Signature</h2>
        <div class="copy-text level">
          <code class="level-left" data-test-encrypted-value="signature">{{@signature}}</code>
          <CopyButton
            class="button is-compact is-transparent level-right"
            data-test-button="modal-copy"
            @clipboardText={{@signature}}
            @buttonType="button"
            @success={{action (set-flash-message "Signature copied!")}}
          >
            <Icon @name="clipboard-copy" aria-label="Copy" />
          </CopyButton>
        </div>
      </div>
    </section>
    <footer class="modal-card-foot">
      <CopyButton
        class="button is-primary copy-close"
        data-test-button="modal-copy-close"
        @clipboardText={{@signature}}
        @buttonType="button"
        @success={{action @toggleModal "Signature copied!"}}
      >
        Copy &amp; Close
      </CopyButton>
    </footer>
  </Modal>
  */
  {
    "id": "IVgTlJlE",
    "block": "[[[10,\"form\"],[15,\"onsubmit\",[28,[37,0],[[30,0],[30,1],[28,[37,1],null,[[\"input\",\"hash_algorithm\",\"signature_algorithm\",\"key_version\",\"context\",\"prehashed\",\"encodedBase64\"],[[30,2],[30,3],[30,4],[30,5],[30,6],[30,7],[30,8]]]]],null]],[12],[1,\"\\n  \"],[10,0],[14,0,\"box is-sideless is-fullwidth is-marginless\"],[12],[1,\"\\n    \"],[8,[39,2],null,[[\"@mode\",\"@noun\"],[\"perform\",\"signing\"]],null],[1,\"\\n    \"],[10,0],[14,0,\"content\"],[12],[1,\"\\n      \"],[10,2],[12],[1,\"\\n        Return the cryptographic signature of the given data using\\n        \"],[10,\"code\"],[12],[1,[30,9,[\"name\"]]],[13],[1,\"\\n        as the encryption key and the specified hash algorithm.\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n    \"],[8,[39,3],null,[[\"@key\",\"@onVersionChange\",\"@key_version\"],[[30,9],[28,[37,0],[[30,0],[28,[37,4],[[30,5]],null]],null],[30,5]]],null],[1,\"\\n    \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"control is-relative\"],[12],[1,\"\\n        \"],[8,[39,5],null,[[\"@title\",\"@value\",\"@valueUpdated\",\"@mode\",\"@data-test-transit-input\"],[\"Input\",[30,2],[28,[37,0],[[30,0],[28,[37,4],[[30,2]],null]],null],\"ruby\",\"input\"]],null],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n      \"],[8,[39,6],[[24,1,\"encodedBase64\"],[24,\"data-test-transit-input\",\"encodedBase64\"]],[[\"@type\",\"@checked\"],[\"checkbox\",[30,8]]],null],[1,\"\\n      \"],[10,\"label\"],[14,\"for\",\"encodedBase64\"],[12],[1,\"This data is already encoded in base64\"],[13],[1,\"\\n    \"],[13],[1,\"\\n\"],[41,[30,9,[\"derived\"]],[[[1,\"      \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n        \"],[10,\"label\"],[14,\"for\",\"context\"],[14,0,\"is-label\"],[12],[1,\"\\n          Context\\n        \"],[13],[1,\"\\n        \"],[10,0],[14,0,\"field has-addons\"],[12],[1,\"\\n          \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n            \"],[8,[39,6],[[24,1,\"context\"],[24,0,\"input\"],[24,\"data-test-transit-input\",\"context\"]],[[\"@type\",\"@value\"],[\"text\",[30,6]]],null],[1,\"\\n          \"],[13],[1,\"\\n          \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n            \"],[8,[39,8],null,[[\"@value\",\"@data-test-transit-b64-toggle\"],[[30,6],\"context\"]],null],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n\"]],[]],null],[1,\"    \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"level is-mobile\"],[12],[1,\"\\n        \"],[10,0],[14,0,\"level-left\"],[12],[1,\"\\n          \"],[10,\"label\"],[14,\"for\",\"hash_algorithm\"],[14,0,\"is-label\"],[12],[1,\"Hash Algorithm\"],[13],[1,\"\\n        \"],[13],[1,\"\\n        \"],[10,0],[14,0,\"level-right\"],[12],[1,\"\\n          \"],[10,0],[14,0,\"control is-flex\"],[12],[1,\"\\n            \"],[8,[39,6],[[24,1,\"prehashed\"],[24,3,\"prehashed\"],[24,0,\"switch is-rounded is-success is-small\"]],[[\"@type\",\"@checked\"],[\"checkbox\",[30,7]]],null],[1,\"\\n            \"],[10,\"label\"],[14,\"for\",\"prehashed\"],[12],[1,\"Prehashed\"],[13],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n      \"],[10,0],[14,0,\"control is-expanded\"],[12],[1,\"\\n        \"],[10,0],[14,0,\"select is-fullwidth\"],[12],[1,\"\\n          \"],[10,\"select\"],[14,3,\"hash_algorithm\"],[14,1,\"hash_algorithm\"],[15,\"onchange\",[28,[37,0],[[30,0],[28,[37,4],[[30,3]],null]],[[\"value\"],[\"target.value\"]]]],[12],[1,\"\\n\"],[42,[28,[37,10],[[28,[37,10],[[28,[37,11],null,null]],null]],null],null,[[[1,\"              \"],[10,\"option\"],[15,\"selected\",[52,[30,3],[28,[37,12],[[30,3],[30,10]],null],[28,[37,12],[[30,10],\"sha2-256\"],null]]],[15,2,[30,10]],[12],[1,\"\\n                \"],[1,[30,10]],[1,\"\\n              \"],[13],[1,\"\\n\"]],[10]],null],[1,\"          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n\"],[41,[28,[37,13],[[28,[37,12],[[30,9,[\"type\"]],\"rsa-2048\"],null],[28,[37,12],[[30,9,[\"type\"]],\"rsa-3072\"],null],[28,[37,12],[[30,9,[\"type\"]],\"rsa-4096\"],null]],null],[[[1,\"      \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n        \"],[10,\"label\"],[14,\"for\",\"signature_algorithm\"],[14,0,\"is-label\"],[12],[1,\"Signature Algorithm\"],[13],[1,\"\\n        \"],[10,0],[14,0,\"control is-expanded\"],[12],[1,\"\\n          \"],[10,0],[14,0,\"select is-fullwidth\"],[12],[1,\"\\n            \"],[10,\"select\"],[14,3,\"signature_algorithm\"],[14,1,\"signature_algorithm\"],[14,\"data-test-signature-algorithm\",\"true\"],[15,\"onchange\",[28,[37,0],[[30,0],[28,[37,4],[[30,4]],null]],[[\"value\"],[\"target.value\"]]]],[12],[1,\"\\n\"],[42,[28,[37,10],[[28,[37,10],[[28,[37,14],[\"pss\",\"pkcs1v15\"],null]],null]],null],null,[[[1,\"                \"],[10,\"option\"],[15,\"selected\",[52,[30,4],[28,[37,12],[[30,4],[30,11]],null],[28,[37,12],[[30,11],\"pss\"],null]]],[15,2,[30,11]],[12],[1,\"\\n                  \"],[1,[30,11]],[1,\"\\n                \"],[13],[1,\"\\n\"]],[11]],null],[1,\"            \"],[13],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n\"]],[]],null],[1,\"  \"],[13],[1,\"\\n  \"],[10,0],[14,0,\"field is-grouped box is-fullwidth is-bottomless\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n      \"],[10,\"button\"],[15,\"disabled\",[30,12]],[15,0,[29,[\"button is-primary \",[52,[30,12],\"is-loading\"]]]],[14,4,\"submit\"],[12],[1,\"\\n        Sign\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"],[13],[1,\"\\n\"],[8,[39,15],[[24,\"data-test-sign-modal\",\"\"]],[[\"@title\",\"@onClose\",\"@isActive\"],[\"Copy your signature\",[28,[37,0],[[30,0],[28,[37,4],[[30,13]],null],false],null],[30,13]]],[[\"default\"],[[[[1,\"\\n  \"],[10,\"section\"],[14,0,\"modal-card-body\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"box is-shadowless is-fullwidth is-sideless\"],[12],[1,\"\\n      \"],[10,\"h2\"],[14,0,\"title is-6\"],[12],[1,\"Signature\"],[13],[1,\"\\n      \"],[10,0],[14,0,\"copy-text level\"],[12],[1,\"\\n        \"],[10,\"code\"],[14,0,\"level-left\"],[14,\"data-test-encrypted-value\",\"signature\"],[12],[1,[30,14]],[13],[1,\"\\n        \"],[8,[39,16],[[24,0,\"button is-compact is-transparent level-right\"],[24,\"data-test-button\",\"modal-copy\"]],[[\"@clipboardText\",\"@buttonType\",\"@success\"],[[30,14],\"button\",[28,[37,0],[[30,0],[28,[37,17],[\"Signature copied!\"],null]],null]]],[[\"default\"],[[[[1,\"\\n          \"],[8,[39,18],[[24,\"aria-label\",\"Copy\"]],[[\"@name\"],[\"clipboard-copy\"]],null],[1,\"\\n        \"]],[]]]]],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n  \"],[10,\"footer\"],[14,0,\"modal-card-foot\"],[12],[1,\"\\n    \"],[8,[39,16],[[24,0,\"button is-primary copy-close\"],[24,\"data-test-button\",\"modal-copy-close\"]],[[\"@clipboardText\",\"@buttonType\",\"@success\"],[[30,14],\"button\",[28,[37,0],[[30,0],[30,15],\"Signature copied!\"],null]]],[[\"default\"],[[[[1,\"\\n      Copy & Close\\n    \"]],[]]]]],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[\"@doSubmit\",\"@input\",\"@hash_algorithm\",\"@signature_algorithm\",\"@key_version\",\"@context\",\"@prehashed\",\"@encodedBase64\",\"@key\",\"algo\",\"sigAlgo\",\"@loading\",\"@isModalActive\",\"@signature\",\"@toggleModal\"],false,[\"action\",\"hash\",\"namespace-reminder\",\"key-version-select\",\"mut\",\"json-editor\",\"input\",\"if\",\"b64-toggle\",\"each\",\"-track-array\",\"sha2-digest-sizes\",\"eq\",\"or\",\"array\",\"modal\",\"copy-button\",\"set-flash-message\",\"icon\"]]",
    "moduleName": "vault/templates/components/transit-key-action/sign.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/transit-key-action/verify", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <form
    onsubmit={{action
      @doSubmit
      (hash
        input=@input
        signature=@signature
        signature_algorithm=@signature_algorithm
        hmac=@hmac
        hash_algorithm=@hash_algorithm
        context=@context
        prehashed=@prehashed
        encodedBase64=@encodedBase64
      )
    }}
  >
    <div class="box is-sideless is-fullwidth is-marginless">
      <div class="content has-bottom-margin-l">
        <p>Check whether the provided signature is valid for the given data.</p>
      </div>
      <div class="field">
        <div class="control is-relative">
          <JsonEditor
            @title="Input"
            @value={{@input}}
            @valueUpdated={{action (mut @input)}}
            @mode="ruby"
            @data-test-transit-input="input"
          />
        </div>
      </div>
      <div class="field">
        <Input @type="checkbox" id="encodedBase64" @checked={{@encodedBase64}} data-test-transit-input="encodedBase64" />
        <label for="encodedBase64">This data is already encoded in base64</label>
      </div>
      {{#if (and @key.supportsSigning @key.derived (not @hmac))}}
        <div class="field">
          <label for="context" class="is-label">
            Context
          </label>
          <div class="field has-addons">
            <div class="control">
              <Input @type="text" id="context" @value={{@context}} class="input" data-test-transit-input="context" />
            </div>
            <div class="control">
              <B64Toggle @value={{@context}} @data-test-transit-b64-toggle="context" />
            </div>
          </div>
        </div>
      {{/if}}
      {{#if @key.supportsSigning}}
        <div class="columns is-5">
          <div class="column is-one-third">
            <div class="field">
              <label for="verification" class="is-label">Verification Type</label>
              <div class="control is-expanded">
                <div class="select is-fullwidth">
                  <select
                    name="verification"
                    id="verification"
                    onchange={{queue
                      (action (mut @verification) value="target.value")
                      (action @clearParams (array "hmac" "signature"))
                    }}
                  >
                    {{#each (array "Signature" "HMAC") as |type|}}
                      <option
                        selected={{if @verification (eq @verification type) (if @hmac (eq type "HMAC") (eq type "Signature"))}}
                        value={{type}}
                      >
                        {{type}}
                      </option>
                    {{/each}}
                  </select>
                </div>
              </div>
            </div>
            <div class="field">
              <div class="level is-mobile">
                <div class="level-left">
                  <label for="hash_algorithm" class="is-label">Hash Algorithm</label>
                </div>
                <div class="level-right">
                  {{#if (not-eq @verification "HMAC")}}
                    <div class="control is-flex">
                      <Input
                        id="prehashed"
                        @type="checkbox"
                        name="prehashed"
                        class="switch is-rounded is-success is-small"
                        @checked={{@prehashed}}
                      />
                      <label for="prehashed">Prehashed</label>
                    </div>
                  {{/if}}
                </div>
              </div>
              <div class="control is-expanded">
                <div class="select is-fullwidth">
                  <select
                    name="hash_algorithm"
                    id="hash_algorithm"
                    onchange={{action (mut @hash_algorithm) value="target.value"}}
                  >
                    {{#each (sha2-digest-sizes) as |algo|}}
                      <option selected={{if @hash_algorithm (eq @hash_algorithm algo) (eq algo "sha2-256")}} value={{algo}}>
                        <code>{{algo}}</code>
                      </option>
                    {{/each}}
                  </select>
                </div>
              </div>
            </div>
            {{#if (and @keyIsRSA (or (and @verification (eq @verification "Signature")) @signature))}}
              <div class="field">
                <label for="signature_algorithm" class="is-label">Signature Algorithm</label>
                <div class="control is-expanded">
                  <div class="select is-fullwidth">
                    <select
                      name="signature_algorithm"
                      id="signature_algorithm"
                      data-test-signature-algorithm="true"
                      onchange={{action (mut @signature_algorithm) value="target.value"}}
                    >
                      {{#each (array "pss" "pkcs1v15") as |sigAlgo|}}
                        <option
                          selected={{if @signature_algorithm (eq @signature_algorithm sigAlgo) (eq sigAlgo "pss")}}
                          value={{sigAlgo}}
                        >
                          {{sigAlgo}}
                        </option>
                      {{/each}}
                    </select>
                  </div>
                </div>
              </div>
            {{/if}}
  
          </div>
          <div class="column is-two-thirds is-flex-column">
            {{#if (or (and @verification (eq @verification "HMAC")) @hmac)}}
              <div class="field is-flex-column is-flex-1">
                <div class="control is-flex-column is-flex-1">
                  <JsonEditor @title="HMAC" @value={{@hmac}} @valueUpdated={{action (mut @hmac)}} @mode="ruby" />
                </div>
              </div>
            {{else}}
              <div class="field is-flex-column is-flex-1">
                <div class="control is-flex-column is-flex-1">
                  <JsonEditor
                    @title="Signature"
                    @value={{@signature}}
                    @valueUpdated={{action (mut @signature)}}
                    @mode="ruby"
                  />
                </div>
              </div>
            {{/if}}
          </div>
        </div>
      {{else}}
        <div class="field">
          <div class="control">
            <JsonEditor @title="HMAC" @value={{@hmac}} @valueUpdated={{action (mut @hmac)}} @mode="ruby" />
          </div>
        </div>
        <div class="field">
          <label for="hash_algorithm" class="is-label">Algorithm</label>
          <div class="control is-expanded">
            <div class="select is-fullwidth">
              <select name="hash_algorithm" id="hash_algorithm" onchange={{action (mut @hash_algorithm) value="target.value"}}>
                {{#each (array "sha2-224" "sha2-256" "sha2-384" "sha2-512") as |algo|}}
                  <option selected={{if @hash_algorithm (eq @hash_algorithm algo) (eq algo "sha2-256")}} value={{algo}}>
                    <code>{{algo}}</code>
                  </option>
                {{/each}}
              </select>
            </div>
          </div>
        </div>
      {{/if}}
    </div>
    <div class="field is-grouped box is-fullwidth is-bottomless">
      <div class="control">
        <button type="submit" disabled={{@loading}} class="button is-primary {{if @loading 'is-loading'}}">
          Verify
        </button>
      </div>
    </div>
  </form>
  <Modal @title="Results" @onClose={{action (mut @isModalActive) false}} @isActive={{@isModalActive}}>
    <section class="modal-card-body">
      <AlertBanner
        @type={{if @valid "success" "danger"}}
        @title={{if @valid "Valid" "Not Valid"}}
        @message="The input is {{if @valid 'valid' 'not valid'}} for the given {{if @signature 'signature' 'HMAC'}}"
        data-test-transit-verify="true"
      />
    </section>
  </Modal>
  */
  {
    "id": "pPOL3MFa",
    "block": "[[[10,\"form\"],[15,\"onsubmit\",[28,[37,0],[[30,0],[30,1],[28,[37,1],null,[[\"input\",\"signature\",\"signature_algorithm\",\"hmac\",\"hash_algorithm\",\"context\",\"prehashed\",\"encodedBase64\"],[[30,2],[30,3],[30,4],[30,5],[30,6],[30,7],[30,8],[30,9]]]]],null]],[12],[1,\"\\n  \"],[10,0],[14,0,\"box is-sideless is-fullwidth is-marginless\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"content has-bottom-margin-l\"],[12],[1,\"\\n      \"],[10,2],[12],[1,\"Check whether the provided signature is valid for the given data.\"],[13],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"control is-relative\"],[12],[1,\"\\n        \"],[8,[39,2],null,[[\"@title\",\"@value\",\"@valueUpdated\",\"@mode\",\"@data-test-transit-input\"],[\"Input\",[30,2],[28,[37,0],[[30,0],[28,[37,3],[[30,2]],null]],null],\"ruby\",\"input\"]],null],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n      \"],[8,[39,4],[[24,1,\"encodedBase64\"],[24,\"data-test-transit-input\",\"encodedBase64\"]],[[\"@type\",\"@checked\"],[\"checkbox\",[30,9]]],null],[1,\"\\n      \"],[10,\"label\"],[14,\"for\",\"encodedBase64\"],[12],[1,\"This data is already encoded in base64\"],[13],[1,\"\\n    \"],[13],[1,\"\\n\"],[41,[28,[37,6],[[30,10,[\"supportsSigning\"]],[30,10,[\"derived\"]],[28,[37,7],[[30,5]],null]],null],[[[1,\"      \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n        \"],[10,\"label\"],[14,\"for\",\"context\"],[14,0,\"is-label\"],[12],[1,\"\\n          Context\\n        \"],[13],[1,\"\\n        \"],[10,0],[14,0,\"field has-addons\"],[12],[1,\"\\n          \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n            \"],[8,[39,4],[[24,1,\"context\"],[24,0,\"input\"],[24,\"data-test-transit-input\",\"context\"]],[[\"@type\",\"@value\"],[\"text\",[30,7]]],null],[1,\"\\n          \"],[13],[1,\"\\n          \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n            \"],[8,[39,8],null,[[\"@value\",\"@data-test-transit-b64-toggle\"],[[30,7],\"context\"]],null],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n\"]],[]],null],[41,[30,10,[\"supportsSigning\"]],[[[1,\"      \"],[10,0],[14,0,\"columns is-5\"],[12],[1,\"\\n        \"],[10,0],[14,0,\"column is-one-third\"],[12],[1,\"\\n          \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n            \"],[10,\"label\"],[14,\"for\",\"verification\"],[14,0,\"is-label\"],[12],[1,\"Verification Type\"],[13],[1,\"\\n            \"],[10,0],[14,0,\"control is-expanded\"],[12],[1,\"\\n              \"],[10,0],[14,0,\"select is-fullwidth\"],[12],[1,\"\\n                \"],[10,\"select\"],[14,3,\"verification\"],[14,1,\"verification\"],[15,\"onchange\",[28,[37,9],[[28,[37,0],[[30,0],[28,[37,3],[[30,11]],null]],[[\"value\"],[\"target.value\"]]],[28,[37,0],[[30,0],[30,12],[28,[37,10],[\"hmac\",\"signature\"],null]],null]],null]],[12],[1,\"\\n\"],[42,[28,[37,12],[[28,[37,12],[[28,[37,10],[\"Signature\",\"HMAC\"],null]],null]],null],null,[[[1,\"                    \"],[10,\"option\"],[15,\"selected\",[52,[30,11],[28,[37,13],[[30,11],[30,13]],null],[52,[30,5],[28,[37,13],[[30,13],\"HMAC\"],null],[28,[37,13],[[30,13],\"Signature\"],null]]]],[15,2,[30,13]],[12],[1,\"\\n                      \"],[1,[30,13]],[1,\"\\n                    \"],[13],[1,\"\\n\"]],[13]],null],[1,\"                \"],[13],[1,\"\\n              \"],[13],[1,\"\\n            \"],[13],[1,\"\\n          \"],[13],[1,\"\\n          \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n            \"],[10,0],[14,0,\"level is-mobile\"],[12],[1,\"\\n              \"],[10,0],[14,0,\"level-left\"],[12],[1,\"\\n                \"],[10,\"label\"],[14,\"for\",\"hash_algorithm\"],[14,0,\"is-label\"],[12],[1,\"Hash Algorithm\"],[13],[1,\"\\n              \"],[13],[1,\"\\n              \"],[10,0],[14,0,\"level-right\"],[12],[1,\"\\n\"],[41,[28,[37,14],[[30,11],\"HMAC\"],null],[[[1,\"                  \"],[10,0],[14,0,\"control is-flex\"],[12],[1,\"\\n                    \"],[8,[39,4],[[24,1,\"prehashed\"],[24,3,\"prehashed\"],[24,0,\"switch is-rounded is-success is-small\"]],[[\"@type\",\"@checked\"],[\"checkbox\",[30,8]]],null],[1,\"\\n                    \"],[10,\"label\"],[14,\"for\",\"prehashed\"],[12],[1,\"Prehashed\"],[13],[1,\"\\n                  \"],[13],[1,\"\\n\"]],[]],null],[1,\"              \"],[13],[1,\"\\n            \"],[13],[1,\"\\n            \"],[10,0],[14,0,\"control is-expanded\"],[12],[1,\"\\n              \"],[10,0],[14,0,\"select is-fullwidth\"],[12],[1,\"\\n                \"],[10,\"select\"],[14,3,\"hash_algorithm\"],[14,1,\"hash_algorithm\"],[15,\"onchange\",[28,[37,0],[[30,0],[28,[37,3],[[30,6]],null]],[[\"value\"],[\"target.value\"]]]],[12],[1,\"\\n\"],[42,[28,[37,12],[[28,[37,12],[[28,[37,15],null,null]],null]],null],null,[[[1,\"                    \"],[10,\"option\"],[15,\"selected\",[52,[30,6],[28,[37,13],[[30,6],[30,14]],null],[28,[37,13],[[30,14],\"sha2-256\"],null]]],[15,2,[30,14]],[12],[1,\"\\n                      \"],[10,\"code\"],[12],[1,[30,14]],[13],[1,\"\\n                    \"],[13],[1,\"\\n\"]],[14]],null],[1,\"                \"],[13],[1,\"\\n              \"],[13],[1,\"\\n            \"],[13],[1,\"\\n          \"],[13],[1,\"\\n\"],[41,[28,[37,6],[[30,15],[28,[37,16],[[28,[37,6],[[30,11],[28,[37,13],[[30,11],\"Signature\"],null]],null],[30,3]],null]],null],[[[1,\"            \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n              \"],[10,\"label\"],[14,\"for\",\"signature_algorithm\"],[14,0,\"is-label\"],[12],[1,\"Signature Algorithm\"],[13],[1,\"\\n              \"],[10,0],[14,0,\"control is-expanded\"],[12],[1,\"\\n                \"],[10,0],[14,0,\"select is-fullwidth\"],[12],[1,\"\\n                  \"],[10,\"select\"],[14,3,\"signature_algorithm\"],[14,1,\"signature_algorithm\"],[14,\"data-test-signature-algorithm\",\"true\"],[15,\"onchange\",[28,[37,0],[[30,0],[28,[37,3],[[30,4]],null]],[[\"value\"],[\"target.value\"]]]],[12],[1,\"\\n\"],[42,[28,[37,12],[[28,[37,12],[[28,[37,10],[\"pss\",\"pkcs1v15\"],null]],null]],null],null,[[[1,\"                      \"],[10,\"option\"],[15,\"selected\",[52,[30,4],[28,[37,13],[[30,4],[30,16]],null],[28,[37,13],[[30,16],\"pss\"],null]]],[15,2,[30,16]],[12],[1,\"\\n                        \"],[1,[30,16]],[1,\"\\n                      \"],[13],[1,\"\\n\"]],[16]],null],[1,\"                  \"],[13],[1,\"\\n                \"],[13],[1,\"\\n              \"],[13],[1,\"\\n            \"],[13],[1,\"\\n\"]],[]],null],[1,\"\\n        \"],[13],[1,\"\\n        \"],[10,0],[14,0,\"column is-two-thirds is-flex-column\"],[12],[1,\"\\n\"],[41,[28,[37,16],[[28,[37,6],[[30,11],[28,[37,13],[[30,11],\"HMAC\"],null]],null],[30,5]],null],[[[1,\"            \"],[10,0],[14,0,\"field is-flex-column is-flex-1\"],[12],[1,\"\\n              \"],[10,0],[14,0,\"control is-flex-column is-flex-1\"],[12],[1,\"\\n                \"],[8,[39,2],null,[[\"@title\",\"@value\",\"@valueUpdated\",\"@mode\"],[\"HMAC\",[30,5],[28,[37,0],[[30,0],[28,[37,3],[[30,5]],null]],null],\"ruby\"]],null],[1,\"\\n              \"],[13],[1,\"\\n            \"],[13],[1,\"\\n\"]],[]],[[[1,\"            \"],[10,0],[14,0,\"field is-flex-column is-flex-1\"],[12],[1,\"\\n              \"],[10,0],[14,0,\"control is-flex-column is-flex-1\"],[12],[1,\"\\n                \"],[8,[39,2],null,[[\"@title\",\"@value\",\"@valueUpdated\",\"@mode\"],[\"Signature\",[30,3],[28,[37,0],[[30,0],[28,[37,3],[[30,3]],null]],null],\"ruby\"]],null],[1,\"\\n              \"],[13],[1,\"\\n            \"],[13],[1,\"\\n\"]],[]]],[1,\"        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n\"]],[]],[[[1,\"      \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n        \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n          \"],[8,[39,2],null,[[\"@title\",\"@value\",\"@valueUpdated\",\"@mode\"],[\"HMAC\",[30,5],[28,[37,0],[[30,0],[28,[37,3],[[30,5]],null]],null],\"ruby\"]],null],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n      \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n        \"],[10,\"label\"],[14,\"for\",\"hash_algorithm\"],[14,0,\"is-label\"],[12],[1,\"Algorithm\"],[13],[1,\"\\n        \"],[10,0],[14,0,\"control is-expanded\"],[12],[1,\"\\n          \"],[10,0],[14,0,\"select is-fullwidth\"],[12],[1,\"\\n            \"],[10,\"select\"],[14,3,\"hash_algorithm\"],[14,1,\"hash_algorithm\"],[15,\"onchange\",[28,[37,0],[[30,0],[28,[37,3],[[30,6]],null]],[[\"value\"],[\"target.value\"]]]],[12],[1,\"\\n\"],[42,[28,[37,12],[[28,[37,12],[[28,[37,10],[\"sha2-224\",\"sha2-256\",\"sha2-384\",\"sha2-512\"],null]],null]],null],null,[[[1,\"                \"],[10,\"option\"],[15,\"selected\",[52,[30,6],[28,[37,13],[[30,6],[30,17]],null],[28,[37,13],[[30,17],\"sha2-256\"],null]]],[15,2,[30,17]],[12],[1,\"\\n                  \"],[10,\"code\"],[12],[1,[30,17]],[13],[1,\"\\n                \"],[13],[1,\"\\n\"]],[17]],null],[1,\"            \"],[13],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n\"]],[]]],[1,\"  \"],[13],[1,\"\\n  \"],[10,0],[14,0,\"field is-grouped box is-fullwidth is-bottomless\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n      \"],[10,\"button\"],[15,\"disabled\",[30,18]],[15,0,[29,[\"button is-primary \",[52,[30,18],\"is-loading\"]]]],[14,4,\"submit\"],[12],[1,\"\\n        Verify\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"],[13],[1,\"\\n\"],[8,[39,17],null,[[\"@title\",\"@onClose\",\"@isActive\"],[\"Results\",[28,[37,0],[[30,0],[28,[37,3],[[30,19]],null],false],null],[30,19]]],[[\"default\"],[[[[1,\"\\n  \"],[10,\"section\"],[14,0,\"modal-card-body\"],[12],[1,\"\\n    \"],[8,[39,18],[[24,\"data-test-transit-verify\",\"true\"]],[[\"@type\",\"@title\",\"@message\"],[[52,[30,20],\"success\",\"danger\"],[52,[30,20],\"Valid\",\"Not Valid\"],[29,[\"The input is \",[52,[30,20],\"valid\",\"not valid\"],\" for the given \",[52,[30,3],\"signature\",\"HMAC\"]]]]],null],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[\"@doSubmit\",\"@input\",\"@signature\",\"@signature_algorithm\",\"@hmac\",\"@hash_algorithm\",\"@context\",\"@prehashed\",\"@encodedBase64\",\"@key\",\"@verification\",\"@clearParams\",\"type\",\"algo\",\"@keyIsRSA\",\"sigAlgo\",\"algo\",\"@loading\",\"@isModalActive\",\"@valid\"],false,[\"action\",\"hash\",\"json-editor\",\"mut\",\"input\",\"if\",\"and\",\"not\",\"b64-toggle\",\"queue\",\"array\",\"each\",\"-track-array\",\"eq\",\"not-eq\",\"sha2-digest-sizes\",\"or\",\"modal\",\"alert-banner\"]]",
    "moduleName": "vault/templates/components/transit-key-action/verify.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/transit-key-actions", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{#if (eq this.selectedAction "rotate")}}
    {{#if this.key.canRotate}}
      <ConfirmAction
        @buttonClasses="toolbar-link"
        @confirmTitle="Rotate this key?"
        @confirmMessage="After rotation, all key actions will default to using the newest version of the key."
        @confirmButtonText="Rotate"
        @onConfirmAction={{action "doSubmit"}}
        data-test-transit-key-rotate="true"
      >
        Rotate encryption key
      </ConfirmAction>
    {{/if}}
  {{else}}
    <MessageError @errors={{this.errors}} />
    {{#if this.selectedAction}}
      <div data-test-transit-action={{this.selectedAction}}>
        {{! template-lint-disable no-passed-in-event-handlers }}
        {{component
          (concat "transit-key-action/" this.selectedAction)
          key=this.key
          keys=this.keys
          keyIsRSA=this.keyIsRSA
          verification=this.verification
          hmac=this.hmac
          param=this.param
          key_version=this.key_version
          isModalActive=this.isModalActive
          ciphertext=this.ciphertext
          plaintext=this.plaintext
          context=this.context
          nonce=this.nonce
          input=this.input
          bits=this.bits
          algorithm=this.algorithm
          signature=this.signature
          signature_algorithm=this.signature_algorithm
          hash_algorithm=this.hash_algorithm
          prehashed=this.prehashed
          wrappedToken=this.wrappedToken
          exportKeyType=this.exportKeyType
          exportKeyVersion=this.exportKeyVersion
          encodedBase64=this.encodedBase64
          valid=this.valid
          doSubmit=(action "doSubmit")
          toggleModal=(action "toggleModal")
          clearParams=(action "clearParams")
        }}
      </div>
    {{/if}}
  {{/if}}
  */
  {
    "id": "nhOpZmsq",
    "block": "[[[41,[28,[37,1],[[30,0,[\"selectedAction\"]],\"rotate\"],null],[[[41,[30,0,[\"key\",\"canRotate\"]],[[[1,\"    \"],[8,[39,2],[[24,\"data-test-transit-key-rotate\",\"true\"]],[[\"@buttonClasses\",\"@confirmTitle\",\"@confirmMessage\",\"@confirmButtonText\",\"@onConfirmAction\"],[\"toolbar-link\",\"Rotate this key?\",\"After rotation, all key actions will default to using the newest version of the key.\",\"Rotate\",[28,[37,3],[[30,0],\"doSubmit\"],null]]],[[\"default\"],[[[[1,\"\\n      Rotate encryption key\\n    \"]],[]]]]],[1,\"\\n\"]],[]],null]],[]],[[[1,\"  \"],[8,[39,4],null,[[\"@errors\"],[[30,0,[\"errors\"]]]],null],[1,\"\\n\"],[41,[30,0,[\"selectedAction\"]],[[[1,\"    \"],[10,0],[15,\"data-test-transit-action\",[30,0,[\"selectedAction\"]]],[12],[1,\"\\n\"],[1,\"      \"],[46,[28,[37,6],[\"transit-key-action/\",[30,0,[\"selectedAction\"]]],null],null,[[\"key\",\"keys\",\"keyIsRSA\",\"verification\",\"hmac\",\"param\",\"key_version\",\"isModalActive\",\"ciphertext\",\"plaintext\",\"context\",\"nonce\",\"input\",\"bits\",\"algorithm\",\"signature\",\"signature_algorithm\",\"hash_algorithm\",\"prehashed\",\"wrappedToken\",\"exportKeyType\",\"exportKeyVersion\",\"encodedBase64\",\"valid\",\"doSubmit\",\"toggleModal\",\"clearParams\"],[[30,0,[\"key\"]],[30,0,[\"keys\"]],[30,0,[\"keyIsRSA\"]],[30,0,[\"verification\"]],[30,0,[\"hmac\"]],[30,0,[\"param\"]],[30,0,[\"key_version\"]],[30,0,[\"isModalActive\"]],[30,0,[\"ciphertext\"]],[30,0,[\"plaintext\"]],[30,0,[\"context\"]],[30,0,[\"nonce\"]],[30,0,[\"input\"]],[30,0,[\"bits\"]],[30,0,[\"algorithm\"]],[30,0,[\"signature\"]],[30,0,[\"signature_algorithm\"]],[30,0,[\"hash_algorithm\"]],[30,0,[\"prehashed\"]],[30,0,[\"wrappedToken\"]],[30,0,[\"exportKeyType\"]],[30,0,[\"exportKeyVersion\"]],[30,0,[\"encodedBase64\"]],[30,0,[\"valid\"]],[28,[37,3],[[30,0],\"doSubmit\"],null],[28,[37,3],[[30,0],\"toggleModal\"],null],[28,[37,3],[[30,0],\"clearParams\"],null]]],null],[1,\"\\n    \"],[13],[1,\"\\n\"]],[]],null]],[]]]],[],false,[\"if\",\"eq\",\"confirm-action\",\"action\",\"message-error\",\"component\",\"concat\"]]",
    "moduleName": "vault/templates/components/transit-key-actions.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/ui-wizard", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <div class="app-content {{if (and this.shouldRender this.featureComponent) 'wizard-open'}}">
    {{yield}}
  </div>
  {{#if this.featureComponent}}
    {{#component
      (if this.shouldRender this.tutorialComponent)
      onAdvance=(action "advanceWizard")
      onDismiss=(action "dismissWizard")
    }}
      {{component
        this.featureComponent
        componentState=this.componentState
        nextFeature=this.nextFeature
        nextStep=this.nextStep
        onDone=(action "finishFeature")
        onRepeat=(action "repeatStep")
        onReset=(action "resetFeature")
        onAdvance=(action "advanceFeature")
        currentRouteName=this.currentRouteName
      }}
    {{/component}}
  {{/if}}
  */
  {
    "id": "+MDvckzB",
    "block": "[[[10,0],[15,0,[29,[\"app-content \",[52,[28,[37,1],[[30,0,[\"shouldRender\"]],[30,0,[\"featureComponent\"]]],null],\"wizard-open\"]]]],[12],[1,\"\\n  \"],[18,1,null],[1,\"\\n\"],[13],[1,\"\\n\"],[41,[30,0,[\"featureComponent\"]],[[[46,[52,[30,0,[\"shouldRender\"]],[30,0,[\"tutorialComponent\"]]],null,[[\"onAdvance\",\"onDismiss\"],[[28,[37,4],[[30,0],\"advanceWizard\"],null],[28,[37,4],[[30,0],\"dismissWizard\"],null]]],[[\"default\"],[[[[1,\"    \"],[46,[30,0,[\"featureComponent\"]],null,[[\"componentState\",\"nextFeature\",\"nextStep\",\"onDone\",\"onRepeat\",\"onReset\",\"onAdvance\",\"currentRouteName\"],[[30,0,[\"componentState\"]],[30,0,[\"nextFeature\"]],[30,0,[\"nextStep\"]],[28,[37,4],[[30,0],\"finishFeature\"],null],[28,[37,4],[[30,0],\"repeatStep\"],null],[28,[37,4],[[30,0],\"resetFeature\"],null],[28,[37,4],[[30,0],\"advanceFeature\"],null],[30,0,[\"currentRouteName\"]]]],null],[1,\"\\n\"]],[]]]]]],[]],null]],[\"&default\"],false,[\"if\",\"and\",\"yield\",\"component\",\"action\"]]",
    "moduleName": "vault/templates/components/ui-wizard.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard-content", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <div class="wizard-header">
    {{#unless this.hidePopup}}
      <PopupMenu @class="wizard-dismiss-menu">
        <nav class="menu">
          <ul class="menu-list">
            <li class="action">
              <button type="button" class="button link" onclick={{action "dismissWizard"}}>
                Dismiss
              </button>
            </li>
          </ul>
        </nav>
      </PopupMenu>
    {{/unless}}
    <h1 class="title is-5">
      <Icon @name={{this.glyph}} />
      {{this.headerText}}
    </h1>
    {{#if this.showProgress}}
      <ToolTip @verticalPosition="below" as |T|>
        <T.Trigger @tabindex="-1">
          <WizardProgress @currentFeatureProgress={{this.currentFeatureProgress}} @progressBar={{this.progressBar}} />
        </T.Trigger>
        <T.Content @defaultClass="tool-tip">
          <div class="box">
            {{#if this.currentTutorialProgress}}
              {{this.currentTutorialProgress.text}}
            {{else}}
              <p>{{capitalize this.currentFeatureProgress.feature}}</p>
              {{this.currentFeatureProgress.text}}
            {{/if}}
          </div>
        </T.Content>
      </ToolTip>
    {{else}}
      {{#if this.selectProgress}}
        <WizardProgress @noProgress={{true}} @progressBar={{this.selectProgress}} />
      {{/if}}
    {{/if}}
  </div>
  {{yield}}
  */
  {
    "id": "bHWlgSGl",
    "block": "[[[10,0],[14,0,\"wizard-header\"],[12],[1,\"\\n\"],[41,[51,[30,0,[\"hidePopup\"]]],[[[1,\"    \"],[8,[39,1],null,[[\"@class\"],[\"wizard-dismiss-menu\"]],[[\"default\"],[[[[1,\"\\n      \"],[10,\"nav\"],[14,0,\"menu\"],[12],[1,\"\\n        \"],[10,\"ul\"],[14,0,\"menu-list\"],[12],[1,\"\\n          \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n            \"],[10,\"button\"],[14,0,\"button link\"],[15,\"onclick\",[28,[37,2],[[30,0],\"dismissWizard\"],null]],[14,4,\"button\"],[12],[1,\"\\n              Dismiss\\n            \"],[13],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"  \"],[10,\"h1\"],[14,0,\"title is-5\"],[12],[1,\"\\n    \"],[8,[39,3],null,[[\"@name\"],[[30,0,[\"glyph\"]]]],null],[1,\"\\n    \"],[1,[30,0,[\"headerText\"]]],[1,\"\\n  \"],[13],[1,\"\\n\"],[41,[30,0,[\"showProgress\"]],[[[1,\"    \"],[8,[39,5],null,[[\"@verticalPosition\"],[\"below\"]],[[\"default\"],[[[[1,\"\\n      \"],[8,[30,1,[\"Trigger\"]],null,[[\"@tabindex\"],[\"-1\"]],[[\"default\"],[[[[1,\"\\n        \"],[8,[39,6],null,[[\"@currentFeatureProgress\",\"@progressBar\"],[[30,0,[\"currentFeatureProgress\"]],[30,0,[\"progressBar\"]]]],null],[1,\"\\n      \"]],[]]]]],[1,\"\\n      \"],[8,[30,1,[\"Content\"]],null,[[\"@defaultClass\"],[\"tool-tip\"]],[[\"default\"],[[[[1,\"\\n        \"],[10,0],[14,0,\"box\"],[12],[1,\"\\n\"],[41,[30,0,[\"currentTutorialProgress\"]],[[[1,\"            \"],[1,[30,0,[\"currentTutorialProgress\",\"text\"]]],[1,\"\\n\"]],[]],[[[1,\"            \"],[10,2],[12],[1,[28,[35,7],[[30,0,[\"currentFeatureProgress\",\"feature\"]]],null]],[13],[1,\"\\n            \"],[1,[30,0,[\"currentFeatureProgress\",\"text\"]]],[1,\"\\n\"]],[]]],[1,\"        \"],[13],[1,\"\\n      \"]],[]]]]],[1,\"\\n    \"]],[1]]]]],[1,\"\\n\"]],[]],[[[41,[30,0,[\"selectProgress\"]],[[[1,\"      \"],[8,[39,6],null,[[\"@noProgress\",\"@progressBar\"],[true,[30,0,[\"selectProgress\"]]]],null],[1,\"\\n\"]],[]],null]],[]]],[13],[1,\"\\n\"],[18,2,null]],[\"T\",\"&default\"],false,[\"unless\",\"popup-menu\",\"action\",\"icon\",\"if\",\"tool-tip\",\"wizard-progress\",\"capitalize\",\"yield\"]]",
    "moduleName": "vault/templates/components/wizard-content.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard-progress", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <div class="progress-container">
    {{#each @progressBar as |bar|}}
      <div class="feature-progress-container">
        <span class="progress-bar">
          <span class="feature-progress" style={{sanitized-html bar.style}}></span>
        </span>
        {{#if bar.showIcon}}
          <Icon @name="check-circle-fill" class="feature-check {{if bar.completed 'completed-check' 'incomplete-check'}}" />
        {{/if}}
      </div>
    {{/each}}
  </div>
  */
  {
    "id": "08gyFwZ5",
    "block": "[[[10,0],[14,0,\"progress-container\"],[12],[1,\"\\n\"],[42,[28,[37,1],[[28,[37,1],[[30,1]],null]],null],null,[[[1,\"    \"],[10,0],[14,0,\"feature-progress-container\"],[12],[1,\"\\n      \"],[10,1],[14,0,\"progress-bar\"],[12],[1,\"\\n        \"],[10,1],[14,0,\"feature-progress\"],[15,5,[28,[37,2],[[30,2,[\"style\"]]],null]],[12],[13],[1,\"\\n      \"],[13],[1,\"\\n\"],[41,[30,2,[\"showIcon\"]],[[[1,\"        \"],[8,[39,4],[[16,0,[29,[\"feature-check \",[52,[30,2,[\"completed\"]],\"completed-check\",\"incomplete-check\"]]]]],[[\"@name\"],[\"check-circle-fill\"]],null],[1,\"\\n\"]],[]],null],[1,\"    \"],[13],[1,\"\\n\"]],[2]],null],[13]],[\"@progressBar\",\"bar\"],false,[\"each\",\"-track-array\",\"sanitized-html\",\"if\",\"icon\"]]",
    "moduleName": "vault/templates/components/wizard-progress.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard-section", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <div class="wizard-section {{@class}}">
    <h2 class="title is-6">
      {{#if @headerIcon}}
        <Icon @name={{@headerIcon}} aria-hidden="true" />
      {{/if}}
      {{@headerText}}
    </h2>
    {{yield}}
    {{#if @instructions}}
      <div class="wizard-instructions">
        <h2 class="title is-6">What to do</h2>
        <p>{{@instructions}}</p>
      </div>
    {{/if}}
    {{#if @docText}}
      <DocLink @path={{@docPath}}>
        <Icon @name="learn-link" />
        {{@docText}}
      </DocLink>
    {{/if}}
  </div>
  */
  {
    "id": "QX+6BgO2",
    "block": "[[[10,0],[15,0,[29,[\"wizard-section \",[30,1]]]],[12],[1,\"\\n  \"],[10,\"h2\"],[14,0,\"title is-6\"],[12],[1,\"\\n\"],[41,[30,2],[[[1,\"      \"],[8,[39,1],[[24,\"aria-hidden\",\"true\"]],[[\"@name\"],[[30,2]]],null],[1,\"\\n\"]],[]],null],[1,\"    \"],[1,[30,3]],[1,\"\\n  \"],[13],[1,\"\\n  \"],[18,7,null],[1,\"\\n\"],[41,[30,4],[[[1,\"    \"],[10,0],[14,0,\"wizard-instructions\"],[12],[1,\"\\n      \"],[10,\"h2\"],[14,0,\"title is-6\"],[12],[1,\"What to do\"],[13],[1,\"\\n      \"],[10,2],[12],[1,[30,4]],[13],[1,\"\\n    \"],[13],[1,\"\\n\"]],[]],null],[41,[30,5],[[[1,\"    \"],[8,[39,3],null,[[\"@path\"],[[30,6]]],[[\"default\"],[[[[1,\"\\n      \"],[8,[39,1],null,[[\"@name\"],[\"learn-link\"]],null],[1,\"\\n      \"],[1,[30,5]],[1,\"\\n    \"]],[]]]]],[1,\"\\n\"]],[]],null],[13]],[\"@class\",\"@headerIcon\",\"@headerText\",\"@instructions\",\"@docText\",\"@docPath\",\"&default\"],false,[\"if\",\"icon\",\"yield\",\"doc-link\"]]",
    "moduleName": "vault/templates/components/wizard-section.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/ad-engine", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <WizardSection
    @headerText="Active Directory"
    @headerIcon="azure-color"
    @docText="Docs: Active Directory Secrets"
    @docPath="/docs/secrets/ad/index.html"
  >
    <p>
      The AD Secrets Engine rotates AD passwords dynamically, and is designed for a high-load environment where many instances
      may be accessing a shared password simultaneously.
    </p>
  </WizardSection>
  */
  {
    "id": "6/p/IZ8J",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@headerIcon\",\"@docText\",\"@docPath\"],[\"Active Directory\",\"azure-color\",\"Docs: Active Directory Secrets\",\"/docs/secrets/ad/index.html\"]],[[\"default\"],[[[[1,\"\\n  \"],[10,2],[12],[1,\"\\n    The AD Secrets Engine rotates AD passwords dynamically, and is designed for a high-load environment where many instances\\n    may be accessing a shared password simultaneously.\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/ad-engine.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/alicloud-engine", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <WizardSection
    @headerText="AliCloud"
    @headerIcon="alibaba"
    @docText="Docs: Google Cloud Secrets"
    @docPath="/docs/secrets/alicloud/index.html"
  >
    <p>
      The AliCloud Secrets Engine dynamically generates AliCloud access tokens based on RAM policies, or AliCloud STS
      credentials based on RAM roles. This generally makes working with AliCloud easier, since it does not involve clicking in
      the web UI. The AliCloud access tokens are time-based and are automatically revoked when the OpenBao lease expires. STS
      credentials are short-lived, non-renewable, and expire on their own.
    </p>
  </WizardSection>
  */
  {
    "id": "CbQ0w8ql",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@headerIcon\",\"@docText\",\"@docPath\"],[\"AliCloud\",\"alibaba\",\"Docs: Google Cloud Secrets\",\"/docs/secrets/alicloud/index.html\"]],[[\"default\"],[[[[1,\"\\n  \"],[10,2],[12],[1,\"\\n    The AliCloud Secrets Engine dynamically generates AliCloud access tokens based on RAM policies, or AliCloud STS\\n    credentials based on RAM roles. This generally makes working with AliCloud easier, since it does not involve clicking in\\n    the web UI. The AliCloud access tokens are time-based and are automatically revoked when the OpenBao lease expires. STS\\n    credentials are short-lived, non-renewable, and expire on their own.\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/alicloud-engine.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/alicloud-method", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <WizardSection
    @headerText="AliCloud"
    @headerIcon="alibaba"
    @docText="Docs: AliCloud Authentication"
    @docPath="/docs/auth/alicloud.html"
  >
    <p>
      The AliCloud Auth Method provides an automated mechanism to retrieve an OpenBao token for AliCloud entities.
    </p>
  </WizardSection>
  */
  {
    "id": "RITdOSIZ",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@headerIcon\",\"@docText\",\"@docPath\"],[\"AliCloud\",\"alibaba\",\"Docs: AliCloud Authentication\",\"/docs/auth/alicloud.html\"]],[[\"default\"],[[[[1,\"\\n  \"],[10,2],[12],[1,\"\\n    The AliCloud Auth Method provides an automated mechanism to retrieve an OpenBao token for AliCloud entities.\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/alicloud-method.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/approle-method", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <WizardSection
    @headerText="AppRole"
    @headerIcon="cpu"
    @docText="Docs: AppRole Authentication"
    @docPath="/docs/auth/approle.html"
  >
    <p>
      The Approle Auth Method allows machines or apps to authenticate with OpenBao-defined roles. The open design of AppRole
      enables a varied set of workflows and configurations to handle large numbers of apps. This Auth Method is oriented to
      automated workflows (machines and services), and is less useful for human operators.
    </p>
  </WizardSection>
  */
  {
    "id": "sCtww5iA",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@headerIcon\",\"@docText\",\"@docPath\"],[\"AppRole\",\"cpu\",\"Docs: AppRole Authentication\",\"/docs/auth/approle.html\"]],[[\"default\"],[[[[1,\"\\n  \"],[10,2],[12],[1,\"\\n    The Approle Auth Method allows machines or apps to authenticate with OpenBao-defined roles. The open design of AppRole\\n    enables a varied set of workflows and configurations to handle large numbers of apps. This Auth Method is oriented to\\n    automated workflows (machines and services), and is less useful for human operators.\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/approle-method.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/auth-config", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <WizardSection
    @headerText="Configuring your Auth Method"
    @docText="Docs: Authentication Methods"
    @docPath="/docs/auth/index.html"
    @instructions="Click the 'Save' link to save any extra configuration. Saving without filling anything in will use the defaults."
  >
    <p>
      You can update your new Auth Method configuration here.
    </p>
  </WizardSection>
  */
  {
    "id": "3sfPDlrY",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@docText\",\"@docPath\",\"@instructions\"],[\"Configuring your Auth Method\",\"Docs: Authentication Methods\",\"/docs/auth/index.html\",\"Click the 'Save' link to save any extra configuration. Saving without filling anything in will use the defaults.\"]],[[\"default\"],[[[[1,\"\\n  \"],[10,2],[12],[1,\"\\n    You can update your new Auth Method configuration here.\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/auth-config.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/auth-details", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <WizardSection @headerText="Auth Method Details" @docText="Docs: Authentication Methods" @docPath="/docs/auth/index.html">
    <p>
      Fantastic! Now you're ready to use your new
      {{@mountName}}
      Auth Method!
    </p>
  </WizardSection>
  <WizardSection @headerText="Want to start again or move on?" @class="wizard-details">
    <button type="button" class="button next-feature-step" {{action @onReset}}>
      Enable another Auth Method
      <Icon @name="sync" class="hs-icon-button-right" />
    </button>
    <button type="button" class="button next-feature-step" {{action @onAdvance}}>
      {{@nextFeature}}
      <Chevron @isButton={{true}} />
    </button>
  </WizardSection>
  */
  {
    "id": "EXNNOqm6",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@docText\",\"@docPath\"],[\"Auth Method Details\",\"Docs: Authentication Methods\",\"/docs/auth/index.html\"]],[[\"default\"],[[[[1,\"\\n  \"],[10,2],[12],[1,\"\\n    Fantastic! Now you're ready to use your new\\n    \"],[1,[30,1]],[1,\"\\n    Auth Method!\\n  \"],[13],[1,\"\\n\"]],[]]]]],[1,\"\\n\"],[8,[39,0],null,[[\"@headerText\",\"@class\"],[\"Want to start again or move on?\",\"wizard-details\"]],[[\"default\"],[[[[1,\"\\n  \"],[11,\"button\"],[24,0,\"button next-feature-step\"],[24,4,\"button\"],[4,[38,1],[[30,0],[30,2]],null],[12],[1,\"\\n    Enable another Auth Method\\n    \"],[8,[39,2],[[24,0,\"hs-icon-button-right\"]],[[\"@name\"],[\"sync\"]],null],[1,\"\\n  \"],[13],[1,\"\\n  \"],[11,\"button\"],[24,0,\"button next-feature-step\"],[24,4,\"button\"],[4,[38,1],[[30,0],[30,3]],null],[12],[1,\"\\n    \"],[1,[30,4]],[1,\"\\n    \"],[8,[39,3],null,[[\"@isButton\"],[true]],null],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[\"@mountName\",\"@onReset\",\"@onAdvance\",\"@nextFeature\"],false,[\"wizard-section\",\"action\",\"icon\",\"chevron\"]]",
    "moduleName": "vault/templates/components/wizard/auth-details.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/auth-edit", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{! template-lint-disable quotes }}
  <WizardSection
    @headerText="Editing your Auth Method"
    @docText="Docs: Authentication Methods"
    @docPath="/docs/auth/index.html"
    @instructions='Click the "View method" link to see its details.'
  >
    <p>
      You can update your new Auth Method configuration here.
    </p>
  </WizardSection>
  */
  {
    "id": "SZ9lKgBI",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@docText\",\"@docPath\",\"@instructions\"],[\"Editing your Auth Method\",\"Docs: Authentication Methods\",\"/docs/auth/index.html\",\"Click the \\\"View method\\\" link to see its details.\"]],[[\"default\"],[[[[1,\"\\n  \"],[10,2],[12],[1,\"\\n    You can update your new Auth Method configuration here.\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/auth-edit.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/auth-enable", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <WizardSection
    @headerText="Entering Auth Method details"
    @docText="Docs: Authentication Methods"
    @docPath="/docs/auth/index.html"
    @instructions="Name your method and click 'Enable Method'."
  >
    <p>
      Great! Now you can customize this method with a name and fill out general configuration under "Method Options".
    </p>
  </WizardSection>
  */
  {
    "id": "MoYf6xHS",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@docText\",\"@docPath\",\"@instructions\"],[\"Entering Auth Method details\",\"Docs: Authentication Methods\",\"/docs/auth/index.html\",\"Name your method and click 'Enable Method'.\"]],[[\"default\"],[[[[1,\"\\n  \"],[10,2],[12],[1,\"\\n    Great! Now you can customize this method with a name and fill out general configuration under \\\"Method Options\\\".\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/auth-enable.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/auth-idle", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{! template-lint-disable quotes }}
  <WizardSection
    @headerText="Enabling an Auth Method"
    @docText="Docs: Authentication Methods"
    @docPath="/docs/auth/index.html"
    @instructions='Choose an Authentication Method and click "Next" to get started.'
  >
    <p>
      Controlling who can see your secrets is important. Let's set up a an Authentication Method for you and your team to use.
      Don't worry, you can add more methods later.
    </p>
  </WizardSection>
  */
  {
    "id": "qSf91zTO",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@docText\",\"@docPath\",\"@instructions\"],[\"Enabling an Auth Method\",\"Docs: Authentication Methods\",\"/docs/auth/index.html\",\"Choose an Authentication Method and click \\\"Next\\\" to get started.\"]],[[\"default\"],[[[[1,\"\\n  \"],[10,2],[12],[1,\"\\n    Controlling who can see your secrets is important. Let's set up a an Authentication Method for you and your team to use.\\n    Don't worry, you can add more methods later.\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/auth-idle.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/auth-list", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{! template-lint-disable quotes }}
  <WizardSection
    @headerText="Auth Method list"
    @docText="Docs: Authentication Methods"
    @docPath="/docs/auth/index.html"
    @instructions='Click the ellipsis menu for your method and then click "View configuration" to see its details.'
  >
    <p>
      Awesome! Now you can see your new Auth Method in the list.
    </p>
  </WizardSection>
  */
  {
    "id": "IY8qIQ9k",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@docText\",\"@docPath\",\"@instructions\"],[\"Auth Method list\",\"Docs: Authentication Methods\",\"/docs/auth/index.html\",\"Click the ellipsis menu for your method and then click \\\"View configuration\\\" to see its details.\"]],[[\"default\"],[[[[1,\"\\n  \"],[10,2],[12],[1,\"\\n    Awesome! Now you can see your new Auth Method in the list.\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/auth-list.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/aws-engine", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <WizardSection
    @headerText="AWS"
    @headerIcon="aws-color"
    @docText="Docs: AWS Secrets"
    @docPath="/docs/secrets/aws/index.html"
  >
    <p>
      The AWS Secrets Engine generates AWS access credentials dynamically based on IAM policies. This generally makes working
      with AWS IAM easier, since it does not involve clicking in the web UI. Additionally, the process is codified and mapped
      to internal Auth Methods (such as LDAP). The AWS IAM credentials are time-based and are automatically revoked when the
      OpenBao lease expires.
    </p>
  </WizardSection>
  */
  {
    "id": "qCw6+BYC",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@headerIcon\",\"@docText\",\"@docPath\"],[\"AWS\",\"aws-color\",\"Docs: AWS Secrets\",\"/docs/secrets/aws/index.html\"]],[[\"default\"],[[[[1,\"\\n  \"],[10,2],[12],[1,\"\\n    The AWS Secrets Engine generates AWS access credentials dynamically based on IAM policies. This generally makes working\\n    with AWS IAM easier, since it does not involve clicking in the web UI. Additionally, the process is codified and mapped\\n    to internal Auth Methods (such as LDAP). The AWS IAM credentials are time-based and are automatically revoked when the\\n    OpenBao lease expires.\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/aws-engine.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/aws-method", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <WizardSection @headerText="AWS" @headerIcon="aws-color" @docText="Docs: AWS Authentication" @docPath="/docs/auth/aws.html">
    <p>
      The AWS Auth Method provides an automated mechanism to retrieve a OpenBao token for AWS EC2 instances and IAM principals.
      Unlike most OpenBao Auth Methods, this method does not require manual first-deploying, or provisioning security-sensitive
      credentials (tokens, username/password, client certificates, etc), by operators under many circumstances.
    </p>
  </WizardSection>
  */
  {
    "id": "PW8T8egW",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@headerIcon\",\"@docText\",\"@docPath\"],[\"AWS\",\"aws-color\",\"Docs: AWS Authentication\",\"/docs/auth/aws.html\"]],[[\"default\"],[[[[1,\"\\n  \"],[10,2],[12],[1,\"\\n    The AWS Auth Method provides an automated mechanism to retrieve a OpenBao token for AWS EC2 instances and IAM principals.\\n    Unlike most OpenBao Auth Methods, this method does not require manual first-deploying, or provisioning security-sensitive\\n    credentials (tokens, username/password, client certificates, etc), by operators under many circumstances.\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/aws-method.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/azure-engine", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <WizardSection
    @headerText="Azure"
    @headerIcon="azure-color"
    @docText="Docs: Azure Secrets"
    @docPath="/docs/secrets/azure/index.html"
  >
    <p>
      The Azure Secrets Engine dynamically generates Azure service principals and role assignments. OpenBao roles can be mapped
      to one or more Azure roles, providing a simple, flexible way to manage the permissions granted to generated service
      principals.
    </p>
  </WizardSection>
  */
  {
    "id": "pnMwtGJC",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@headerIcon\",\"@docText\",\"@docPath\"],[\"Azure\",\"azure-color\",\"Docs: Azure Secrets\",\"/docs/secrets/azure/index.html\"]],[[\"default\"],[[[[1,\"\\n  \"],[10,2],[12],[1,\"\\n    The Azure Secrets Engine dynamically generates Azure service principals and role assignments. OpenBao roles can be mapped\\n    to one or more Azure roles, providing a simple, flexible way to manage the permissions granted to generated service\\n    principals.\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/azure-engine.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/azure-method", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <WizardSection
    @headerText="Azure"
    @headerIcon="azure-color"
    @docText="Docs: Azure Authentication"
    @docPath="/docs/auth/azure.html"
  >
    <p>
      The Azure Auth Method allows authentication against OpenBao using Azure Active Directory credentials.
    </p>
  </WizardSection>
  */
  {
    "id": "dZC3NzC5",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@headerIcon\",\"@docText\",\"@docPath\"],[\"Azure\",\"azure-color\",\"Docs: Azure Authentication\",\"/docs/auth/azure.html\"]],[[\"default\"],[[[[1,\"\\n  \"],[10,2],[12],[1,\"\\n    The Azure Auth Method allows authentication against OpenBao using Azure Active Directory credentials.\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/azure-method.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/cert-method", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <WizardSection
    @headerText="TLS Certificates"
    @headerIcon="certificate"
    @docText="Docs: TLS Certificates Authentication"
    @docPath="/docs/auth/cert.html"
  >
    <p>
      The TLS Certificates Auth Method allows authentication using SSL/TLS client certificates which are either signed by a CA
      or self-signed. CA certificates are associated with a role.
    </p>
  </WizardSection>
  */
  {
    "id": "K7gmKHbz",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@headerIcon\",\"@docText\",\"@docPath\"],[\"TLS Certificates\",\"certificate\",\"Docs: TLS Certificates Authentication\",\"/docs/auth/cert.html\"]],[[\"default\"],[[[[1,\"\\n  \"],[10,2],[12],[1,\"\\n    The TLS Certificates Auth Method allows authentication using SSL/TLS client certificates which are either signed by a CA\\n    or self-signed. CA certificates are associated with a role.\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/cert-method.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/ch-engine", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <WizardSection @headerText="Cubbyhole" @docText="Docs: Cubbyhole Secrets" @docPath="/docs/secrets/cubbyhole/index.html">
    <p>
      The cubbyhole Secrets Engine is used to store arbitrary secrets within the configured physical storage for OpenBao
      namespaced to a token. In cubbyhole, paths are scoped per token. No token can access another token's cubbyhole. When the
      token expires, its cubbyhole is destroyed.
    </p>
  </WizardSection>
  */
  {
    "id": "egkPknsc",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@docText\",\"@docPath\"],[\"Cubbyhole\",\"Docs: Cubbyhole Secrets\",\"/docs/secrets/cubbyhole/index.html\"]],[[\"default\"],[[[[1,\"\\n  \"],[10,2],[12],[1,\"\\n    The cubbyhole Secrets Engine is used to store arbitrary secrets within the configured physical storage for OpenBao\\n    namespaced to a token. In cubbyhole, paths are scoped per token. No token can access another token's cubbyhole. When the\\n    token expires, its cubbyhole is destroyed.\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/ch-engine.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/consul-engine", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <WizardSection
    @headerText="Consul"
    @headerIcon="consul"
    @docText="Docs: Consul Secrets"
    @docPath="/docs/secrets/consul/index.html"
  >
    <p>
      The Consul Secrets Engine generates Consul API tokens dynamically based on Consul ACL policies.
    </p>
  </WizardSection>
  */
  {
    "id": "GNzovMOx",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@headerIcon\",\"@docText\",\"@docPath\"],[\"Consul\",\"consul\",\"Docs: Consul Secrets\",\"/docs/secrets/consul/index.html\"]],[[\"default\"],[[[[1,\"\\n  \"],[10,2],[12],[1,\"\\n    The Consul Secrets Engine generates Consul API tokens dynamically based on Consul ACL policies.\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/consul-engine.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/database-engine", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <WizardSection
    @headerText="Databases"
    @headerIcon="database"
    @docText="Docs: Database Secrets"
    @docPath="/docs/secrets/databases/index.html"
  >
    <p>
      The database Secrets Engine generates database credentials dynamically based on configured roles.
    </p>
  </WizardSection>
  */
  {
    "id": "pjr251Xr",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@headerIcon\",\"@docText\",\"@docPath\"],[\"Databases\",\"database\",\"Docs: Database Secrets\",\"/docs/secrets/databases/index.html\"]],[[\"default\"],[[[[1,\"\\n  \"],[10,2],[12],[1,\"\\n    The database Secrets Engine generates database credentials dynamically based on configured roles.\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/database-engine.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/features-selection", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <WizardContent @headerText="OpenBao Web UI" @glyph="tour" @selectProgress={{this.selectProgress}}>
    <h2 class="title is-6">
      Choosing where to go
    </h2>
    <p>
      You did it! You now have access to your OpenBao and can start entering your data. We can help you get started with any of
      the options below.
    </p>
    <div class="access-information">
      <Icon @name="info" class="has-text-info" />
      <p>
        OpenBao only shows links to pages that you have access to based on your policies. Contact your administrator if you
        need access changes.
      </p>
    </div>
    <h3 class="feature-header">Walk me through setting up:</h3>
    <form id="features-form" class="feature-selection" {{action "saveFeatures" on="submit"}}>
      {{#each this.allFeatures as |feature|}}
        {{#if feature.show}}
          <div
            class="feature-box {{if feature.selected 'is-active'}} {{if feature.disabled 'is-disabled'}}"
            data-test-select-input={{true}}
          >
            <div class="b-checkbox">
              <input
                id="feature-{{feature.key}}"
                type="checkbox"
                class="styled"
                checked={{feature.selected}}
                onchange={{action (mut feature.selected) value="target.checked"}}
                disabled={{feature.disabled}}
                data-test-checkbox={{feature.name}}
              />
              <label for="feature-{{feature.key}}">{{feature.name}}</label>
              <button
                type="button"
                class="button is-ghost icon is-pulled-right"
                onclick={{action (toggle (concat feature.key "-isOpen") this)}}
              >
                <Chevron
                  @direction={{if (get this (concat feature.key "-isOpen")) "up" "down"}}
                  @class="has-text-grey auto-width is-paddingless is-flex-column"
                />
              </button>
              {{#if feature.disabled}}
                <Info-Tooltip data-test-tooltip>
                  You do not have permissions to tour some parts of this feature
                </Info-Tooltip>
              {{/if}}
            </div>
            {{#if (get this (concat feature.key "-isOpen"))}}
              <ul class="feature-steps">
                {{#each feature.steps as |step|}}
                  <li>{{step}}</li>
                {{/each}}
              </ul>
            {{/if}}
          </div>
        {{/if}}
      {{/each}}
      <span class="selection-summary">
        <button type="submit" class="button is-primary" disabled={{this.cannotStartWizard}} data-test-start-button>
          Start
        </button>
        {{#if this.selectedFeatures}}
          <span class="time-estimate">
            <Icon @name="clock" class="has-text-grey" />About
            {{this.estimatedTime}}
            minutes
          </span>
        {{/if}}
      </span>
    </form>
  </WizardContent>
  */
  {
    "id": "jdb0UkwC",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@glyph\",\"@selectProgress\"],[\"OpenBao Web UI\",\"tour\",[30,0,[\"selectProgress\"]]]],[[\"default\"],[[[[1,\"\\n  \"],[10,\"h2\"],[14,0,\"title is-6\"],[12],[1,\"\\n    Choosing where to go\\n  \"],[13],[1,\"\\n  \"],[10,2],[12],[1,\"\\n    You did it! You now have access to your OpenBao and can start entering your data. We can help you get started with any of\\n    the options below.\\n  \"],[13],[1,\"\\n  \"],[10,0],[14,0,\"access-information\"],[12],[1,\"\\n    \"],[8,[39,1],[[24,0,\"has-text-info\"]],[[\"@name\"],[\"info\"]],null],[1,\"\\n    \"],[10,2],[12],[1,\"\\n      OpenBao only shows links to pages that you have access to based on your policies. Contact your administrator if you\\n      need access changes.\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n  \"],[10,\"h3\"],[14,0,\"feature-header\"],[12],[1,\"Walk me through setting up:\"],[13],[1,\"\\n  \"],[11,\"form\"],[24,1,\"features-form\"],[24,0,\"feature-selection\"],[4,[38,2],[[30,0],\"saveFeatures\"],[[\"on\"],[\"submit\"]]],[12],[1,\"\\n\"],[42,[28,[37,4],[[28,[37,4],[[30,0,[\"allFeatures\"]]],null]],null],null,[[[41,[30,1,[\"show\"]],[[[1,\"        \"],[10,0],[15,0,[29,[\"feature-box \",[52,[30,1,[\"selected\"]],\"is-active\"],\" \",[52,[30,1,[\"disabled\"]],\"is-disabled\"]]]],[15,\"data-test-select-input\",true],[12],[1,\"\\n          \"],[10,0],[14,0,\"b-checkbox\"],[12],[1,\"\\n            \"],[10,\"input\"],[15,1,[29,[\"feature-\",[30,1,[\"key\"]]]]],[14,0,\"styled\"],[15,\"checked\",[30,1,[\"selected\"]]],[15,\"onchange\",[28,[37,2],[[30,0],[28,[37,6],[[30,1,[\"selected\"]]],null]],[[\"value\"],[\"target.checked\"]]]],[15,\"disabled\",[30,1,[\"disabled\"]]],[15,\"data-test-checkbox\",[30,1,[\"name\"]]],[14,4,\"checkbox\"],[12],[13],[1,\"\\n            \"],[10,\"label\"],[15,\"for\",[29,[\"feature-\",[30,1,[\"key\"]]]]],[12],[1,[30,1,[\"name\"]]],[13],[1,\"\\n            \"],[10,\"button\"],[14,0,\"button is-ghost icon is-pulled-right\"],[15,\"onclick\",[28,[37,2],[[30,0],[28,[37,7],[[28,[37,8],[[30,1,[\"key\"]],\"-isOpen\"],null],[30,0]],null]],null]],[14,4,\"button\"],[12],[1,\"\\n              \"],[8,[39,9],null,[[\"@direction\",\"@class\"],[[52,[28,[37,10],[[30,0],[28,[37,8],[[30,1,[\"key\"]],\"-isOpen\"],null]],null],\"up\",\"down\"],\"has-text-grey auto-width is-paddingless is-flex-column\"]],null],[1,\"\\n            \"],[13],[1,\"\\n\"],[41,[30,1,[\"disabled\"]],[[[1,\"              \"],[8,[39,11],[[24,\"data-test-tooltip\",\"\"]],null,[[\"default\"],[[[[1,\"\\n                You do not have permissions to tour some parts of this feature\\n              \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"          \"],[13],[1,\"\\n\"],[41,[28,[37,10],[[30,0],[28,[37,8],[[30,1,[\"key\"]],\"-isOpen\"],null]],null],[[[1,\"            \"],[10,\"ul\"],[14,0,\"feature-steps\"],[12],[1,\"\\n\"],[42,[28,[37,4],[[28,[37,4],[[30,1,[\"steps\"]]],null]],null],null,[[[1,\"                \"],[10,\"li\"],[12],[1,[30,2]],[13],[1,\"\\n\"]],[2]],null],[1,\"            \"],[13],[1,\"\\n\"]],[]],null],[1,\"        \"],[13],[1,\"\\n\"]],[]],null]],[1]],null],[1,\"    \"],[10,1],[14,0,\"selection-summary\"],[12],[1,\"\\n      \"],[10,\"button\"],[14,0,\"button is-primary\"],[15,\"disabled\",[30,0,[\"cannotStartWizard\"]]],[14,\"data-test-start-button\",\"\"],[14,4,\"submit\"],[12],[1,\"\\n        Start\\n      \"],[13],[1,\"\\n\"],[41,[30,0,[\"selectedFeatures\"]],[[[1,\"        \"],[10,1],[14,0,\"time-estimate\"],[12],[1,\"\\n          \"],[8,[39,1],[[24,0,\"has-text-grey\"]],[[\"@name\"],[\"clock\"]],null],[1,\"About\\n          \"],[1,[30,0,[\"estimatedTime\"]]],[1,\"\\n          minutes\\n        \"],[13],[1,\"\\n\"]],[]],null],[1,\"    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[\"feature\",\"step\"],false,[\"wizard-content\",\"icon\",\"action\",\"each\",\"-track-array\",\"if\",\"mut\",\"toggle\",\"concat\",\"chevron\",\"get\",\"info-tooltip\"]]",
    "moduleName": "vault/templates/components/wizard/features-selection.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/init-login", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <WizardContent @headerText="Authentication" @glyph="tour">
    <WizardSection
      @headerText="Authenticate to OpenBao"
      @docText="Learn: Initialization"
      @docPath="/docs/concepts/tokens.html"
    >
      <p>
        OpenBao is unsealed, but we still need to authenticate using the Initial Root Token that was generated. We recommend
        setting up an Authentication Method such as Username & Password for regular use, and only using a root token for
        initial setup or for emergencies.
      </p>
    </WizardSection>
  </WizardContent>
  */
  {
    "id": "3qwCWLVB",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@glyph\"],[\"Authentication\",\"tour\"]],[[\"default\"],[[[[1,\"\\n  \"],[8,[39,1],null,[[\"@headerText\",\"@docText\",\"@docPath\"],[\"Authenticate to OpenBao\",\"Learn: Initialization\",\"/docs/concepts/tokens.html\"]],[[\"default\"],[[[[1,\"\\n    \"],[10,2],[12],[1,\"\\n      OpenBao is unsealed, but we still need to authenticate using the Initial Root Token that was generated. We recommend\\n      setting up an Authentication Method such as Username & Password for regular use, and only using a root token for\\n      initial setup or for emergencies.\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-content\",\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/init-login.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/init-save-keys", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <WizardContent @headerText="Initialization" @glyph="tour">
    <WizardSection
      @headerText="Saving your keys"
      @docText="Learn: Initialization"
      @docPath="/intro/getting-started/deploy.html#initializing-the-vault"
    >
      <p>
        Now that OpenBao is initialized, you'll want to save your root token and root key portions in a safe place. Distribute
        your keys to responsible people on your team. If these keys are lost, you may not be able to access your data again.
        Keep them safe!
      </p>
    </WizardSection>
  </WizardContent>
  */
  {
    "id": "bdPq9JPZ",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@glyph\"],[\"Initialization\",\"tour\"]],[[\"default\"],[[[[1,\"\\n  \"],[8,[39,1],null,[[\"@headerText\",\"@docText\",\"@docPath\"],[\"Saving your keys\",\"Learn: Initialization\",\"/intro/getting-started/deploy.html#initializing-the-vault\"]],[[\"default\"],[[[[1,\"\\n    \"],[10,2],[12],[1,\"\\n      Now that OpenBao is initialized, you'll want to save your root token and root key portions in a safe place. Distribute\\n      your keys to responsible people on your team. If these keys are lost, you may not be able to access your data again.\\n      Keep them safe!\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-content\",\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/init-save-keys.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/init-setup", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <WizardContent @headerText="Initialization" @glyph="tour">
    <WizardSection
      @headerText="Setting up your root keys"
      @docText="Learn: Initialization"
      @docPath="/intro/getting-started/deploy.html#initializing-the-vault"
    >
      <p>
        This is the very first step of setting up an OpenBao server. OpenBao comes with an important security feature called a
        "seal", which lets you shut down and secure your OpenBao installation if there is a security breach. This is the
        default state of OpenBao, so it is currently sealed since it was just installed. To unseal OpenBao, you will need to
        provide the key(s) that you generate here.
      </p>
    </WizardSection>
  </WizardContent>
  */
  {
    "id": "d/tuPrn4",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@glyph\"],[\"Initialization\",\"tour\"]],[[\"default\"],[[[[1,\"\\n  \"],[8,[39,1],null,[[\"@headerText\",\"@docText\",\"@docPath\"],[\"Setting up your root keys\",\"Learn: Initialization\",\"/intro/getting-started/deploy.html#initializing-the-vault\"]],[[\"default\"],[[[[1,\"\\n    \"],[10,2],[12],[1,\"\\n      This is the very first step of setting up an OpenBao server. OpenBao comes with an important security feature called a\\n      \\\"seal\\\", which lets you shut down and secure your OpenBao installation if there is a security breach. This is the\\n      default state of OpenBao, so it is currently sealed since it was just installed. To unseal OpenBao, you will need to\\n      provide the key(s) that you generate here.\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-content\",\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/init-setup.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/init-unseal", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <WizardContent @headerText="Initialization" @glyph="tour">
    <WizardSection
      @headerText="Unsealing your vault"
      @docText="Learn: Initialization"
      @docPath="/intro/getting-started/deploy.html#initializing-the-vault"
    >
      <p>
        Now we will provide the
        {{pluralize this.componentState.threshold "key"}}
        that you copied or downloaded to unseal the vault so that we can get started using it. You'll need
        {{pluralize this.componentState.threshold "key"}}
        total, and
        {{#let (pluralize this.componentState.progress "key" without-count=true) as |word|}}
          {{if
            (eq word "key")
            (concat this.componentState.progress " " word " has ")
            (concat this.componentState.progress " " word " have ")
          }}
        {{/let}}
        already been provided. Please provide
        {{pluralize (dec this.componentState.progress this.componentState.threshold) "more key"}}
        to unseal.
      </p>
    </WizardSection>
  </WizardContent>
  */
  {
    "id": "yTTZmzFH",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@glyph\"],[\"Initialization\",\"tour\"]],[[\"default\"],[[[[1,\"\\n  \"],[8,[39,1],null,[[\"@headerText\",\"@docText\",\"@docPath\"],[\"Unsealing your vault\",\"Learn: Initialization\",\"/intro/getting-started/deploy.html#initializing-the-vault\"]],[[\"default\"],[[[[1,\"\\n    \"],[10,2],[12],[1,\"\\n      Now we will provide the\\n      \"],[1,[28,[35,2],[[30,0,[\"componentState\",\"threshold\"]],\"key\"],null]],[1,\"\\n      that you copied or downloaded to unseal the vault so that we can get started using it. You'll need\\n      \"],[1,[28,[35,2],[[30,0,[\"componentState\",\"threshold\"]],\"key\"],null]],[1,\"\\n      total, and\\n\"],[44,[[28,[37,2],[[30,0,[\"componentState\",\"progress\"]],\"key\"],[[\"without-count\"],[true]]]],[[[1,\"        \"],[1,[52,[28,[37,5],[[30,1],\"key\"],null],[28,[37,6],[[30,0,[\"componentState\",\"progress\"]],\" \",[30,1],\" has \"],null],[28,[37,6],[[30,0,[\"componentState\",\"progress\"]],\" \",[30,1],\" have \"],null]]],[1,\"\\n\"]],[1]]],[1,\"      already been provided. Please provide\\n      \"],[1,[28,[35,2],[[28,[37,7],[[30,0,[\"componentState\",\"progress\"]],[30,0,[\"componentState\",\"threshold\"]]],null],\"more key\"],null]],[1,\"\\n      to unseal.\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]]]]]],[\"word\"],false,[\"wizard-content\",\"wizard-section\",\"pluralize\",\"let\",\"if\",\"eq\",\"concat\",\"dec\"]]",
    "moduleName": "vault/templates/components/wizard/init-unseal.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/keymgmt-engine", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <WizardSection
    @headerText="Key Management"
    @headerIcon="key"
    @docText="Docs: Key Management Secrets Engine"
    @docPath="/docs/secrets/key-management"
  >
    <p>
      Key Management is a secrets engine that allows key generation, lifecycle management, and secure distribution of
      cryptographic keys into cloud key management services.
    </p>
  </WizardSection>
  */
  {
    "id": "9h2EA7K4",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@headerIcon\",\"@docText\",\"@docPath\"],[\"Key Management\",\"key\",\"Docs: Key Management Secrets Engine\",\"/docs/secrets/key-management\"]],[[\"default\"],[[[[1,\"\\n  \"],[10,2],[12],[1,\"\\n    Key Management is a secrets engine that allows key generation, lifecycle management, and secure distribution of\\n    cryptographic keys into cloud key management services.\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/keymgmt-engine.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/kubernetes-method", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <WizardSection
    @headerText="Kubernetes"
    @headerIcon="kubernetes-color"
    @docText="Docs: Kubernetes Authentication"
    @docPath="/docs/auth/kubernetes.html"
  >
    <p>
      The Kubernetes Auth Method can be used to authenticate with OpenBao using a Kubernetes Service Account Token. This method
      of authentication makes it easy to introduce an OpenBao token into a Kubernetes Pod.
    </p>
  </WizardSection>
  */
  {
    "id": "kTPPqP56",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@headerIcon\",\"@docText\",\"@docPath\"],[\"Kubernetes\",\"kubernetes-color\",\"Docs: Kubernetes Authentication\",\"/docs/auth/kubernetes.html\"]],[[\"default\"],[[[[1,\"\\n  \"],[10,2],[12],[1,\"\\n    The Kubernetes Auth Method can be used to authenticate with OpenBao using a Kubernetes Service Account Token. This method\\n    of authentication makes it easy to introduce an OpenBao token into a Kubernetes Pod.\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/kubernetes-method.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/kv-engine", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <WizardSection
    @headerText="Key/Value"
    @headerIcon="list"
    @docText="Docs: Key/Value Secrets"
    @docPath="/docs/secrets/kv/index.html"
  >
    <p>
      The KV Secrets Engine is used to store arbitrary secrets within the configured physical storage for OpenBao. This backend
      can be run in one of two modes. It can be a generic key-value store that stores one value for a key. Versioning can be
      enabled and a configurable number of versions for each key will be stored.
    </p>
  </WizardSection>
  */
  {
    "id": "9hoRe9Vc",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@headerIcon\",\"@docText\",\"@docPath\"],[\"Key/Value\",\"list\",\"Docs: Key/Value Secrets\",\"/docs/secrets/kv/index.html\"]],[[\"default\"],[[[[1,\"\\n  \"],[10,2],[12],[1,\"\\n    The KV Secrets Engine is used to store arbitrary secrets within the configured physical storage for OpenBao. This backend\\n    can be run in one of two modes. It can be a generic key-value store that stores one value for a key. Versioning can be\\n    enabled and a configurable number of versions for each key will be stored.\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/kv-engine.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/ldap-method", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <WizardSection @headerText="LDAP" @headerIcon="user" @docText="Docs: LDAP Authentication" @docPath="/docs/auth/ldap.html">
    <p>
      The LDAP Auth Method allows authentication using an existing LDAP server and user/password credentials. This allows
      OpenBao to be integrated into environments using LDAP without duplicating the user/pass configuration in multiple places.
    </p>
  </WizardSection>
  */
  {
    "id": "lbgMfMG5",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@headerIcon\",\"@docText\",\"@docPath\"],[\"LDAP\",\"user\",\"Docs: LDAP Authentication\",\"/docs/auth/ldap.html\"]],[[\"default\"],[[[[1,\"\\n  \"],[10,2],[12],[1,\"\\n    The LDAP Auth Method allows authentication using an existing LDAP server and user/password credentials. This allows\\n    OpenBao to be integrated into environments using LDAP without duplicating the user/pass configuration in multiple places.\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/ldap-method.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/mounts-wizard", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <WizardContent @headerText={{capitalize this.currentMachine}} @glyph="tour">
    {{component
      this.stepComponent
      mountSubtype=this.mountSubtype
      mountName=this.mountName
      actionText=this.actionText
      nextFeature=this.nextFeature
      nextStep=this.nextStep
      featureState=this.wizard.featureState
      needsConnection=this.needsConnection
      needsEncryption=this.needsEncryption
      isSupported=this.isSupported
      onDone=this.onDone
      onAdvance=this.onAdvance
      onRepeat=this.onRepeat
      onReset=this.onReset
      class="wizard-step"
    }}
    {{component this.detailsComponent onAdvance=this.onAdvance onRepeat=this.onRepeat class="wizard-details"}}
  </WizardContent>
  */
  {
    "id": "5ceuxe9r",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@glyph\"],[[28,[37,1],[[30,0,[\"currentMachine\"]]],null],\"tour\"]],[[\"default\"],[[[[1,\"\\n  \"],[46,[30,0,[\"stepComponent\"]],null,[[\"mountSubtype\",\"mountName\",\"actionText\",\"nextFeature\",\"nextStep\",\"featureState\",\"needsConnection\",\"needsEncryption\",\"isSupported\",\"onDone\",\"onAdvance\",\"onRepeat\",\"onReset\",\"class\"],[[30,0,[\"mountSubtype\"]],[30,0,[\"mountName\"]],[30,0,[\"actionText\"]],[30,0,[\"nextFeature\"]],[30,0,[\"nextStep\"]],[30,0,[\"wizard\",\"featureState\"]],[30,0,[\"needsConnection\"]],[30,0,[\"needsEncryption\"]],[30,0,[\"isSupported\"]],[30,0,[\"onDone\"]],[30,0,[\"onAdvance\"]],[30,0,[\"onRepeat\"]],[30,0,[\"onReset\"]],\"wizard-step\"]],null],[1,\"\\n  \"],[46,[30,0,[\"detailsComponent\"]],null,[[\"onAdvance\",\"onRepeat\",\"class\"],[[30,0,[\"onAdvance\"]],[30,0,[\"onRepeat\"]],\"wizard-details\"]],null],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-content\",\"capitalize\",\"component\"]]",
    "moduleName": "vault/templates/components/wizard/mounts-wizard.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/nomad-engine", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <WizardSection
    @headerText="Nomad"
    @headerIcon="nomad"
    @docText="Docs: Nomad Secrets"
    @docPath="/docs/secrets/nomad/index.html"
  >
    <p>
      The Nomad secret backend for OpenBao generates Nomad API tokens dynamically based on pre-existing Nomad ACL policies.
    </p>
  </WizardSection>
  */
  {
    "id": "P5Bkk8Vj",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@headerIcon\",\"@docText\",\"@docPath\"],[\"Nomad\",\"nomad\",\"Docs: Nomad Secrets\",\"/docs/secrets/nomad/index.html\"]],[[\"default\"],[[[[1,\"\\n  \"],[10,2],[12],[1,\"\\n    The Nomad secret backend for OpenBao generates Nomad API tokens dynamically based on pre-existing Nomad ACL policies.\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/nomad-engine.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/pki-engine", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <WizardSection
    @headerText="PKI"
    @headerIcon="file-text"
    @docText="Docs: PKI Secrets"
    @docPath="/docs/secrets/pki/index.html"
  >
    <p>
      The PKI Secrets Engine generates dynamic X.509 certificates. With this Secrets Engine, services can get certificates
      without going through the usual manual process of generating a private key and CSR, submitting to a CA, and waiting for a
      verification and signing process to complete.
    </p>
  </WizardSection>
  */
  {
    "id": "KJzKe6P9",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@headerIcon\",\"@docText\",\"@docPath\"],[\"PKI\",\"file-text\",\"Docs: PKI Secrets\",\"/docs/secrets/pki/index.html\"]],[[\"default\"],[[[[1,\"\\n  \"],[10,2],[12],[1,\"\\n    The PKI Secrets Engine generates dynamic X.509 certificates. With this Secrets Engine, services can get certificates\\n    without going through the usual manual process of generating a private key and CSR, submitting to a CA, and waiting for a\\n    verification and signing process to complete.\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/pki-engine.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/policies-create", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{! template-lint-disable quotes }}
  <WizardContent @headerText="Policies" @glyph="tour">
    <WizardSection
      @headerText="Creating a policy"
      @docText="Docs: Policies"
      @docPath="/docs/concepts/policies.html"
      @instructions='Fill in your policy details and click "Create Policy".'
    >
      <p>
        Let's use "<code>my-new-policy</code>" for your policy name. Copy the policy below to try it out:
      </p>
      <pre><code>path "secret/foo" { capabilities = ["read"] }</code></pre>
    </WizardSection>
  </WizardContent>
  */
  {
    "id": "YDSV+tkl",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@glyph\"],[\"Policies\",\"tour\"]],[[\"default\"],[[[[1,\"\\n  \"],[8,[39,1],null,[[\"@headerText\",\"@docText\",\"@docPath\",\"@instructions\"],[\"Creating a policy\",\"Docs: Policies\",\"/docs/concepts/policies.html\",\"Fill in your policy details and click \\\"Create Policy\\\".\"]],[[\"default\"],[[[[1,\"\\n    \"],[10,2],[12],[1,\"\\n      Let's use \\\"\"],[10,\"code\"],[12],[1,\"my-new-policy\"],[13],[1,\"\\\" for your policy name. Copy the policy below to try it out:\\n    \"],[13],[1,\"\\n    \"],[10,\"pre\"],[12],[10,\"code\"],[12],[1,\"path \\\"secret/foo\\\" { capabilities = [\\\"read\\\"] }\"],[13],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-content\",\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/policies-create.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/policies-delete", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{! template-lint-disable quotes }}
  <WizardContent @headerText="Policies" @glyph="tour">
    <WizardSection
      @headerText="Deleting your policy"
      @docText="Docs: Policies"
      @docPath="/docs/concepts/policies.html"
      @instructions='Click on "Delete" to remove the policy that you created.'
    >
      <p>
        {{#if (eq @currentRouteName "vault.cluster.policies.index")}}
          You can delete your test policy by clicking the "..." icon to the right of the policy name.
        {{else}}
          You can delete your test policy by clicking "Delete" in the toolbar.
        {{/if}}
      </p>
    </WizardSection>
  </WizardContent>
  */
  {
    "id": "vSPrbQiX",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@glyph\"],[\"Policies\",\"tour\"]],[[\"default\"],[[[[1,\"\\n  \"],[8,[39,1],null,[[\"@headerText\",\"@docText\",\"@docPath\",\"@instructions\"],[\"Deleting your policy\",\"Docs: Policies\",\"/docs/concepts/policies.html\",\"Click on \\\"Delete\\\" to remove the policy that you created.\"]],[[\"default\"],[[[[1,\"\\n    \"],[10,2],[12],[1,\"\\n\"],[41,[28,[37,3],[[30,1],\"vault.cluster.policies.index\"],null],[[[1,\"        You can delete your test policy by clicking the \\\"...\\\" icon to the right of the policy name.\\n\"]],[]],[[[1,\"        You can delete your test policy by clicking \\\"Delete\\\" in the toolbar.\\n\"]],[]]],[1,\"    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]]]]]],[\"@currentRouteName\"],false,[\"wizard-content\",\"wizard-section\",\"if\",\"eq\"]]",
    "moduleName": "vault/templates/components/wizard/policies-delete.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/policies-details", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{! template-lint-disable quotes }}
  <WizardContent @headerText="Policies" @glyph="tour">
    <WizardSection
      @headerText="Your new policy"
      @docText="Docs: Policies"
      @docPath="/docs/concepts/policies.html"
      @instructions='Click on "ACL Policies" in the sidebar to go back to the list of policies.'
    >
      <p>
        Good job! Here you can see your new policy. If you'd like to edit it, you'd just click "Edit policy" in the toolbar.
      </p>
    </WizardSection>
  </WizardContent>
  */
  {
    "id": "BcKx9zDN",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@glyph\"],[\"Policies\",\"tour\"]],[[\"default\"],[[[[1,\"\\n  \"],[8,[39,1],null,[[\"@headerText\",\"@docText\",\"@docPath\",\"@instructions\"],[\"Your new policy\",\"Docs: Policies\",\"/docs/concepts/policies.html\",\"Click on \\\"ACL Policies\\\" in the sidebar to go back to the list of policies.\"]],[[\"default\"],[[[[1,\"\\n    \"],[10,2],[12],[1,\"\\n      Good job! Here you can see your new policy. If you'd like to edit it, you'd just click \\\"Edit policy\\\" in the toolbar.\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-content\",\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/policies-details.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/policies-intro", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{! template-lint-disable quotes }}
  <WizardContent @headerText="Policies" @glyph="tour">
    <WizardSection
      @headerText="Choosing a policy type"
      @docText="Docs: Policies"
      @docPath="/docs/concepts/policies.html"
      @instructions='To get started with something simple, click on "Create ACL policy".'
    >
      <p>
        Policies in OpenBao are a way for you to control what data can be accessed, including things like creating new secrets,
        listing users, or even entire OpenBao features.
      </p>
    </WizardSection>
  </WizardContent>
  */
  {
    "id": "12NSiHLJ",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@glyph\"],[\"Policies\",\"tour\"]],[[\"default\"],[[[[1,\"\\n  \"],[8,[39,1],null,[[\"@headerText\",\"@docText\",\"@docPath\",\"@instructions\"],[\"Choosing a policy type\",\"Docs: Policies\",\"/docs/concepts/policies.html\",\"To get started with something simple, click on \\\"Create ACL policy\\\".\"]],[[\"default\"],[[[[1,\"\\n    \"],[10,2],[12],[1,\"\\n      Policies in OpenBao are a way for you to control what data can be accessed, including things like creating new secrets,\\n      listing users, or even entire OpenBao features.\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-content\",\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/policies-intro.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/rabbitmq-engine", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <WizardSection
    @headerText="RabbitMQ"
    @headerIcon="rabbitmq"
    @docText="Docs: RabbitMQ Secrets"
    @docPath="/docs/secrets/rabbitmq/index.html"
  >
    <p>
      The RabbitMQ Secrets Engine generates user credentials dynamically based on configured permissions and virtual hosts.
      This means that services that need to access a virtual host no longer need to hardcode credentials.
    </p>
  </WizardSection>
  */
  {
    "id": "gjm4D6Gg",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@headerIcon\",\"@docText\",\"@docPath\"],[\"RabbitMQ\",\"rabbitmq\",\"Docs: RabbitMQ Secrets\",\"/docs/secrets/rabbitmq/index.html\"]],[[\"default\"],[[[[1,\"\\n  \"],[10,2],[12],[1,\"\\n    The RabbitMQ Secrets Engine generates user credentials dynamically based on configured permissions and virtual hosts.\\n    This means that services that need to access a virtual host no longer need to hardcode credentials.\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/rabbitmq-engine.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/radius-method", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <WizardSection
    @headerText="RADIUS"
    @headerIcon="user"
    @docText="Docs: RADIUS Authentication"
    @docPath="/docs/auth/radius.html"
  >
    <p>
      The RADIUS Auth Method allows users to authenticate with OpenBao using an existing RADIUS server that accepts the PAP
      authentication scheme.
    </p>
  </WizardSection>
  */
  {
    "id": "D6k02EFv",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@headerIcon\",\"@docText\",\"@docPath\"],[\"RADIUS\",\"user\",\"Docs: RADIUS Authentication\",\"/docs/auth/radius.html\"]],[[\"default\"],[[[[1,\"\\n  \"],[10,2],[12],[1,\"\\n    The RADIUS Auth Method allows users to authenticate with OpenBao using an existing RADIUS server that accepts the PAP\\n    authentication scheme.\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/radius-method.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/secrets-connection-show", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <WizardSection @headerText="Create a Role" @instructions="Click “Add role.”">
    <p>
      Now that we've setup a database let's connect a role.
    </p>
  </WizardSection>
  */
  {
    "id": "TTVJejw5",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@instructions\"],[\"Create a Role\",\"Click “Add role.”\"]],[[\"default\"],[[[[1,\"\\n  \"],[10,2],[12],[1,\"\\n    Now that we've setup a database let's connect a role.\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/secrets-connection-show.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/secrets-connection", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <WizardSection
    @headerText="Connect a database"
    @instructions="Enter the details of your database and click “Create database.”"
  >
    <p>
      Here you can specify the details of your database plugin and include any root rotation statements.
    </p>
  </WizardSection>
  */
  {
    "id": "VJ53imLb",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@instructions\"],[\"Connect a database\",\"Enter the details of your database and click “Create database.”\"]],[[\"default\"],[[[[1,\"\\n  \"],[10,2],[12],[1,\"\\n    Here you can specify the details of your database plugin and include any root rotation statements.\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/secrets-connection.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/secrets-credentials", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <WizardSection @headerText="Generate Credential">
    <p>
      Enter details and generate your credential.
    </p>
  </WizardSection>
  */
  {
    "id": "5lrpNGPJ",
    "block": "[[[8,[39,0],null,[[\"@headerText\"],[\"Generate Credential\"]],[[\"default\"],[[[[1,\"\\n  \"],[10,2],[12],[1,\"\\n    Enter details and generate your credential.\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/secrets-credentials.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/secrets-details", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <WizardSection @headerText="Your Secrets Engine" @instructions="Click on the link to add a {{@nextStep}} in the page header">
    <p>
      {{#if (eq @mountSubtype "keymgmt")}}
        This secrets engine manages keys and distributes them to external destinations. We recommend that you create a provider
        to which you can distribute keys.
      {{else}}
        {{#if @needsEncryption}}
          The Transit Secrets Engine uses encryption keys to provide "encryption as a service". Click on "Create Encryption
          Key" at the top to create one.
        {{/if}}
        {{#if @needsConnection}}
          Now that the engine has been mounted, let’s connect a
          {{@mountSubtype}}.
        {{/if}}
      {{/if}}
    </p>
  </WizardSection>
  */
  {
    "id": "9GtExDXf",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@instructions\"],[\"Your Secrets Engine\",[29,[\"Click on the link to add a \",[30,1],\" in the page header\"]]]],[[\"default\"],[[[[1,\"\\n  \"],[10,2],[12],[1,\"\\n\"],[41,[28,[37,2],[[30,2],\"keymgmt\"],null],[[[1,\"      This secrets engine manages keys and distributes them to external destinations. We recommend that you create a provider\\n      to which you can distribute keys.\\n\"]],[]],[[[41,[30,3],[[[1,\"        The Transit Secrets Engine uses encryption keys to provide \\\"encryption as a service\\\". Click on \\\"Create Encryption\\n        Key\\\" at the top to create one.\\n\"]],[]],null],[41,[30,4],[[[1,\"        Now that the engine has been mounted, let’s connect a\\n        \"],[1,[30,2]],[1,\".\\n\"]],[]],null]],[]]],[1,\"  \"],[13],[1,\"\\n\"]],[]]]]]],[\"@nextStep\",\"@mountSubtype\",\"@needsEncryption\",\"@needsConnection\"],false,[\"wizard-section\",\"if\",\"eq\"]]",
    "moduleName": "vault/templates/components/wizard/secrets-details.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/secrets-display-database-role", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <WizardSection @headerText="Create a Role" @instructions="Edit the details of your role and click “Create role.”">
    <p>
      Roles are what generate database credentials. They can be static or dynamic.
    </p>
  </WizardSection>
  */
  {
    "id": "EyIWCBR8",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@instructions\"],[\"Create a Role\",\"Edit the details of your role and click “Create role.”\"]],[[\"default\"],[[[[1,\"\\n  \"],[10,2],[12],[1,\"\\n    Roles are what generate database credentials. They can be static or dynamic.\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/secrets-display-database-role.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/secrets-display-role", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <WizardSection @headerText="Your new role">
    <p>
      With our new role, we can generate a credential that has the same permissions as that role. Click on "Generate
      credentials" links at the top of the page.
    </p>
  </WizardSection>
  */
  {
    "id": "WB77EYiG",
    "block": "[[[8,[39,0],null,[[\"@headerText\"],[\"Your new role\"]],[[\"default\"],[[[[1,\"\\n  \"],[10,2],[12],[1,\"\\n    With our new role, we can generate a credential that has the same permissions as that role. Click on \\\"Generate\\n    credentials\\\" links at the top of the page.\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/secrets-display-role.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/secrets-display", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{#if @isSupported}}
    <WizardSection
      @headerText={{if
        (eq @mountSubtype "keymgmt")
        "Your key and provider"
        (unless @actionText "All set!" "Generate Credential")
      }}
    >
      <p>
        {{#if (eq @mountSubtype "keymgmt")}}
          Your key and your provider have been created and connected. From here, you can click the key name to view the key
          You’re now ready to start using the secrets engine.
        {{else if @actionText}}
          Here is your generated credential. As you can see, we can only show the credential once, so you'll want to be sure to
          save it. If you need another credential in the future, just come back and generate a new one.
        {{else}}
          Well done!
        {{/if}}
        You're now ready to start using your new
        {{@mountName}}
        Secrets Engine.
      </p>
    </WizardSection>
  {{else}}
    <WizardSection @headerText="Viewing engine configuration">
      <p>
        Here you can see all the details of your new engine. This can be useful to get information for things like TTL or Seal
        Wrap settings.
      </p>
    </WizardSection>
  {{/if}}
  <WizardSection @headerText="Want to start again or move on?" @class="wizard-details has-bottom-margin-l">
    {{#if @isSupported}}
      <button type="button" class="button next-feature-step" {{action @onRepeat}}>
        Create another
        {{unless @needsEncryption @mountName}}
        {{@nextStep}}
        {{if @needsEncryption "key"}}
        <Icon @name="sync" class="hs-icon-button-right" />
      </button>
    {{/if}}
    <button type="button" class="button next-feature-step" {{action @onReset}}>
      Enable another Secrets Engine<Icon @name="sync" class="hs-icon-button-right" />
    </button>
    <button type="button" class="button next-feature-step" {{action @onDone}}>
      {{@nextFeature}}
      <Chevron @isButton={{true}} />
    </button>
  </WizardSection>
  */
  {
    "id": "ux0iHimX",
    "block": "[[[41,[30,1],[[[1,\"  \"],[8,[39,1],null,[[\"@headerText\"],[[52,[28,[37,2],[[30,2],\"keymgmt\"],null],\"Your key and provider\",[52,[51,[30,3]],\"All set!\",\"Generate Credential\"]]]],[[\"default\"],[[[[1,\"\\n    \"],[10,2],[12],[1,\"\\n\"],[41,[28,[37,2],[[30,2],\"keymgmt\"],null],[[[1,\"        Your key and your provider have been created and connected. From here, you can click the key name to view the key\\n        You’re now ready to start using the secrets engine.\\n\"]],[]],[[[41,[30,3],[[[1,\"        Here is your generated credential. As you can see, we can only show the credential once, so you'll want to be sure to\\n        save it. If you need another credential in the future, just come back and generate a new one.\\n\"]],[]],[[[1,\"        Well done!\\n      \"]],[]]]],[]]],[1,\"      You're now ready to start using your new\\n      \"],[1,[30,4]],[1,\"\\n      Secrets Engine.\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]],[[[1,\"  \"],[8,[39,1],null,[[\"@headerText\"],[\"Viewing engine configuration\"]],[[\"default\"],[[[[1,\"\\n    \"],[10,2],[12],[1,\"\\n      Here you can see all the details of your new engine. This can be useful to get information for things like TTL or Seal\\n      Wrap settings.\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]]],[8,[39,1],null,[[\"@headerText\",\"@class\"],[\"Want to start again or move on?\",\"wizard-details has-bottom-margin-l\"]],[[\"default\"],[[[[1,\"\\n\"],[41,[30,1],[[[1,\"    \"],[11,\"button\"],[24,0,\"button next-feature-step\"],[24,4,\"button\"],[4,[38,4],[[30,0],[30,5]],null],[12],[1,\"\\n      Create another\\n      \"],[1,[52,[51,[30,6]],[30,4]]],[1,\"\\n      \"],[1,[30,7]],[1,\"\\n      \"],[1,[52,[30,6],\"key\"]],[1,\"\\n      \"],[8,[39,5],[[24,0,\"hs-icon-button-right\"]],[[\"@name\"],[\"sync\"]],null],[1,\"\\n    \"],[13],[1,\"\\n\"]],[]],null],[1,\"  \"],[11,\"button\"],[24,0,\"button next-feature-step\"],[24,4,\"button\"],[4,[38,4],[[30,0],[30,8]],null],[12],[1,\"\\n    Enable another Secrets Engine\"],[8,[39,5],[[24,0,\"hs-icon-button-right\"]],[[\"@name\"],[\"sync\"]],null],[1,\"\\n  \"],[13],[1,\"\\n  \"],[11,\"button\"],[24,0,\"button next-feature-step\"],[24,4,\"button\"],[4,[38,4],[[30,0],[30,9]],null],[12],[1,\"\\n    \"],[1,[30,10]],[1,\"\\n    \"],[8,[39,6],null,[[\"@isButton\"],[true]],null],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[\"@isSupported\",\"@mountSubtype\",\"@actionText\",\"@mountName\",\"@onRepeat\",\"@needsEncryption\",\"@nextStep\",\"@onReset\",\"@onDone\",\"@nextFeature\"],false,[\"if\",\"wizard-section\",\"eq\",\"unless\",\"action\",\"icon\",\"chevron\"]]",
    "moduleName": "vault/templates/components/wizard/secrets-display.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/secrets-enable", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{! template-lint-disable quotes }}
  <WizardSection
    @headerText="Entering Secrets Engine details"
    @docText="Docs: Secrets Engines"
    @docPath="/docs/secrets/index.html"
    @instructions='Fill in the details for your engine and click "Enable Engine"'
    @class="has-bottom-margin-l"
  >
    <p>
      Good choice! Now you can customize your engine with a name and description that makes sense for your team, as well as
      options for replication and caching.
    </p>
  </WizardSection>
  */
  {
    "id": "XM6emEFy",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@docText\",\"@docPath\",\"@instructions\",\"@class\"],[\"Entering Secrets Engine details\",\"Docs: Secrets Engines\",\"/docs/secrets/index.html\",\"Fill in the details for your engine and click \\\"Enable Engine\\\"\",\"has-bottom-margin-l\"]],[[\"default\"],[[[[1,\"\\n  \"],[10,2],[12],[1,\"\\n    Good choice! Now you can customize your engine with a name and description that makes sense for your team, as well as\\n    options for replication and caching.\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/secrets-enable.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/secrets-encryption", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <WizardSection @headerText="Adding an encryption key">
    <p>
      Enter the details about your encryption key and save it.
    </p>
  </WizardSection>
  */
  {
    "id": "TK/haGD9",
    "block": "[[[8,[39,0],null,[[\"@headerText\"],[\"Adding an encryption key\"]],[[\"default\"],[[[[1,\"\\n  \"],[10,2],[12],[1,\"\\n    Enter the details about your encryption key and save it.\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/secrets-encryption.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/secrets-idle", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{! template-lint-disable quotes }}
  <WizardSection
    @headerText="Enabling a Secrets Engine"
    @docText="Docs: Secrets Engines"
    @docPath="/docs/secrets/index.html"
    @instructions='Select an engine and click "Next"'
    @class="has-bottom-margin-l"
  >
    <p>
      OpenBao is all about managing secrets, so let's set up your first Secrets Engine. You can use a static engine to store
      your secrets locally in OpenBao, or connect to a cloud backend with one of the dynamic engines.
    </p>
  </WizardSection>
  */
  {
    "id": "fup0j/HS",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@docText\",\"@docPath\",\"@instructions\",\"@class\"],[\"Enabling a Secrets Engine\",\"Docs: Secrets Engines\",\"/docs/secrets/index.html\",\"Select an engine and click \\\"Next\\\"\",\"has-bottom-margin-l\"]],[[\"default\"],[[[[1,\"\\n  \"],[10,2],[12],[1,\"\\n    OpenBao is all about managing secrets, so let's set up your first Secrets Engine. You can use a static engine to store\\n    your secrets locally in OpenBao, or connect to a cloud backend with one of the dynamic engines.\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/secrets-idle.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/secrets-keymgmt", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <WizardSection @headerText={{this.headerText}} @instructions={{this.instructions}}>
    <p>
      {{this.body}}
    </p>
  </WizardSection>
  */
  {
    "id": "+ccLBIep",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@instructions\"],[[30,0,[\"headerText\"]],[30,0,[\"instructions\"]]]],[[\"default\"],[[[[1,\"\\n  \"],[10,2],[12],[1,\"\\n    \"],[1,[30,0,[\"body\"]]],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/secrets-keymgmt.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/secrets-list", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{! template-lint-disable quotes }}
  <WizardSection
    @headerText="Viewing engine configuration"
    @instructions='Find the engine in the list and click on "View configuration" in the menu on the right.'
  >
    <p>
      This engine isn't fully supported in the OpenBao UI yet, but you can view and edit the configuration and use the OpenBao
      Browser CLI to interact with the engine just like you would on the command-line.
    </p>
  </WizardSection>
  */
  {
    "id": "PL6MNQ6O",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@instructions\"],[\"Viewing engine configuration\",\"Find the engine in the list and click on \\\"View configuration\\\" in the menu on the right.\"]],[[\"default\"],[[[[1,\"\\n  \"],[10,2],[12],[1,\"\\n    This engine isn't fully supported in the OpenBao UI yet, but you can view and edit the configuration and use the OpenBao\\n    Browser CLI to interact with the engine just like you would on the command-line.\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/secrets-list.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/secrets-role", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{! template-lint-disable quotes }}
  <WizardSection @headerText="Adding a role" @instructions='Enter your role details and click "Create role"'>
    <p>
      A role grants permissions that specify what an identity can and cannot do. A role is typically shared among many users
      who are then granted credentials with that are granted the policy permissions.
    </p>
  </WizardSection>
  */
  {
    "id": "WxUYqTWJ",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@instructions\"],[\"Adding a role\",\"Enter your role details and click \\\"Create role\\\"\"]],[[\"default\"],[[[[1,\"\\n  \"],[10,2],[12],[1,\"\\n    A role grants permissions that specify what an identity can and cannot do. A role is typically shared among many users\\n    who are then granted credentials with that are granted the policy permissions.\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/secrets-role.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/secrets-secret", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{! template-lint-disable quotes }}
  <WizardSection @headerText="Adding a secret" @instructions='Enter the details of your secret and click "Save"'>
    <p>
      Here you can specify the path of your secret and include the key/value pairs to include.
    </p>
  </WizardSection>
  */
  {
    "id": "AdVbphrD",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@instructions\"],[\"Adding a secret\",\"Enter the details of your secret and click \\\"Save\\\"\"]],[[\"default\"],[[[[1,\"\\n  \"],[10,2],[12],[1,\"\\n    Here you can specify the path of your secret and include the key/value pairs to include.\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/secrets-secret.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/ssh-engine", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <WizardSection
    @headerText="SSH"
    @headerIcon="terminal-screen"
    @docText="Docs: SSH Secrets"
    @docPath="/docs/secrets/ssh/index.html"
  >
    <p>
      The OpenBao SSH Secrets Engine provides secure authentication and authorization for access to machines via the SSH
      protocol. The OpenBao SSH Secrets Engine helps manage access to machine infrastructure, providing several ways to issue
      SSH credentials.
    </p>
  </WizardSection>
  */
  {
    "id": "el4mlSyQ",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@headerIcon\",\"@docText\",\"@docPath\"],[\"SSH\",\"terminal-screen\",\"Docs: SSH Secrets\",\"/docs/secrets/ssh/index.html\"]],[[\"default\"],[[[[1,\"\\n  \"],[10,2],[12],[1,\"\\n    The OpenBao SSH Secrets Engine provides secure authentication and authorization for access to machines via the SSH\\n    protocol. The OpenBao SSH Secrets Engine helps manage access to machine infrastructure, providing several ways to issue\\n    SSH credentials.\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/ssh-engine.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/tools-info", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{! template-lint-disable quotes }}
  <WizardContent @headerText="Tools" @glyph="tour">
    <WizardSection
      @headerText="Information about your data"
      @docText="API: Lookup Data"
      @docPath="/api/system/wrapping-lookup.html"
      @instructions='Click on "Rewrap" in the sidebar.'
    >
      <p>
        Good job! You can see some basic information about your wrapped data, including the expiration time. Next up, we'll
        take the token you still have in your clipboard and rewrap it to keep it active and extend that expiration time.
      </p>
    </WizardSection>
  </WizardContent>
  */
  {
    "id": "2ug+HgiN",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@glyph\"],[\"Tools\",\"tour\"]],[[\"default\"],[[[[1,\"\\n  \"],[8,[39,1],null,[[\"@headerText\",\"@docText\",\"@docPath\",\"@instructions\"],[\"Information about your data\",\"API: Lookup Data\",\"/api/system/wrapping-lookup.html\",\"Click on \\\"Rewrap\\\" in the sidebar.\"]],[[\"default\"],[[[[1,\"\\n    \"],[10,2],[12],[1,\"\\n      Good job! You can see some basic information about your wrapped data, including the expiration time. Next up, we'll\\n      take the token you still have in your clipboard and rewrap it to keep it active and extend that expiration time.\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-content\",\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/tools-info.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/tools-lookup", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{! template-lint-disable quotes }}
  <WizardContent @headerText="Tools" @glyph="tour">
    <WizardSection
      @headerText="Lookup wrapped data"
      @docText="API: Lookup Data"
      @docPath="/api/system/wrapping-lookup.html"
      @instructions='Paste the token that you copied and click "Lookup Token".'
    >
      <p>
        Lookup lets you see information about your token without unwrapping it or changing it. Paste your token here and click
        "Lookup". If you find that your data didn't copy for some reason, you can always go back and do it again.
      </p>
    </WizardSection>
  </WizardContent>
  */
  {
    "id": "kRbgoF/M",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@glyph\"],[\"Tools\",\"tour\"]],[[\"default\"],[[[[1,\"\\n  \"],[8,[39,1],null,[[\"@headerText\",\"@docText\",\"@docPath\",\"@instructions\"],[\"Lookup wrapped data\",\"API: Lookup Data\",\"/api/system/wrapping-lookup.html\",\"Paste the token that you copied and click \\\"Lookup Token\\\".\"]],[[\"default\"],[[[[1,\"\\n    \"],[10,2],[12],[1,\"\\n      Lookup lets you see information about your token without unwrapping it or changing it. Paste your token here and click\\n      \\\"Lookup\\\". If you find that your data didn't copy for some reason, you can always go back and do it again.\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-content\",\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/tools-lookup.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/tools-rewrap", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{! template-lint-disable quotes }}
  <WizardContent @headerText="Tools" @glyph="tour">
    <WizardSection
      @headerText="Rewrapping your data"
      @docText="API: Rewrap Data"
      @docPath="/api/system/wrapping-rewrap.html"
      @instructions='Paste your token into the input and click "Rewrap Token" to transform your token into a new one.'
    >
      <p>
        You can rewrap your data to rotate the token, but it will still have the same creation time and TTL. Don't worry, the
        new token will still have the same data.
      </p>
    </WizardSection>
  </WizardContent>
  */
  {
    "id": "yAhacaCo",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@glyph\"],[\"Tools\",\"tour\"]],[[\"default\"],[[[[1,\"\\n  \"],[8,[39,1],null,[[\"@headerText\",\"@docText\",\"@docPath\",\"@instructions\"],[\"Rewrapping your data\",\"API: Rewrap Data\",\"/api/system/wrapping-rewrap.html\",\"Paste your token into the input and click \\\"Rewrap Token\\\" to transform your token into a new one.\"]],[[\"default\"],[[[[1,\"\\n    \"],[10,2],[12],[1,\"\\n      You can rewrap your data to rotate the token, but it will still have the same creation time and TTL. Don't worry, the\\n      new token will still have the same data.\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-content\",\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/tools-rewrap.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/tools-rewrapped", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{! template-lint-disable quotes }}
  <WizardContent @headerText="Tools" @glyph="tour">
    <WizardSection
      @headerText="Your rewrapped data"
      @docText="API: Rewrap Data"
      @docPath="/api/system/wrapping-rewrap.html"
      @instructions='Copy this token and then click on "Unwrap" in the sidebar to verify the data is still in there.'
    >
      <p>
        It's a subtle transformation, but your old token has been revoked and this new one has taken its place.
      </p>
    </WizardSection>
  </WizardContent>
  */
  {
    "id": "4A7TN5aW",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@glyph\"],[\"Tools\",\"tour\"]],[[\"default\"],[[[[1,\"\\n  \"],[8,[39,1],null,[[\"@headerText\",\"@docText\",\"@docPath\",\"@instructions\"],[\"Your rewrapped data\",\"API: Rewrap Data\",\"/api/system/wrapping-rewrap.html\",\"Copy this token and then click on \\\"Unwrap\\\" in the sidebar to verify the data is still in there.\"]],[[\"default\"],[[[[1,\"\\n    \"],[10,2],[12],[1,\"\\n      It's a subtle transformation, but your old token has been revoked and this new one has taken its place.\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-content\",\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/tools-rewrapped.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/tools-unwrap", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{! template-lint-disable quotes }}
  <WizardContent @headerText="Tools" @glyph="tour">
    <WizardSection
      @headerText="Unwrapping your data"
      @docText="API: Unwrap Data"
      @docPath="/api/system/wrapping-unwrap.html"
      @instructions='Paste your token into the input and click "Unwrap Data".'
    >
      <p>
        We saved this step for the end because unwrapping the token will revoke it, so we can only do this once.
      </p>
    </WizardSection>
  </WizardContent>
  */
  {
    "id": "woN1n2Eb",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@glyph\"],[\"Tools\",\"tour\"]],[[\"default\"],[[[[1,\"\\n  \"],[8,[39,1],null,[[\"@headerText\",\"@docText\",\"@docPath\",\"@instructions\"],[\"Unwrapping your data\",\"API: Unwrap Data\",\"/api/system/wrapping-unwrap.html\",\"Paste your token into the input and click \\\"Unwrap Data\\\".\"]],[[\"default\"],[[[[1,\"\\n    \"],[10,2],[12],[1,\"\\n      We saved this step for the end because unwrapping the token will revoke it, so we can only do this once.\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-content\",\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/tools-unwrap.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/tools-unwrapped", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <WizardContent @headerText="Tools" @glyph="tour">
    <WizardSection @headerText="Your unwrapped data" @docText="API: Unwrap Data" @docPath="/api/system/wrapping-unwrap.html">
      <p>
        Here you can see that your data survived intact. These tools are mostly handy for applications to use, but if you ever
        do need to wrap data or handle the wrapped token, now you know how.
      </p>
    </WizardSection>
    <button type="button" class="button next-feature-step" {{action @onAdvance}}>
      {{@nextFeature}}
      <Chevron @isButton={{true}} />
    </button>
  </WizardContent>
  */
  {
    "id": "OPTkQ4jX",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@glyph\"],[\"Tools\",\"tour\"]],[[\"default\"],[[[[1,\"\\n  \"],[8,[39,1],null,[[\"@headerText\",\"@docText\",\"@docPath\"],[\"Your unwrapped data\",\"API: Unwrap Data\",\"/api/system/wrapping-unwrap.html\"]],[[\"default\"],[[[[1,\"\\n    \"],[10,2],[12],[1,\"\\n      Here you can see that your data survived intact. These tools are mostly handy for applications to use, but if you ever\\n      do need to wrap data or handle the wrapped token, now you know how.\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[11,\"button\"],[24,0,\"button next-feature-step\"],[24,4,\"button\"],[4,[38,2],[[30,0],[30,1]],null],[12],[1,\"\\n    \"],[1,[30,2]],[1,\"\\n    \"],[8,[39,3],null,[[\"@isButton\"],[true]],null],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[\"@onAdvance\",\"@nextFeature\"],false,[\"wizard-content\",\"wizard-section\",\"action\",\"chevron\"]]",
    "moduleName": "vault/templates/components/wizard/tools-unwrapped.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/tools-wrap", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{! template-lint-disable quotes }}
  <WizardContent @headerText="Tools" @glyph="tour">
    <WizardSection
      @headerText="Wrapping data"
      @docText="API: Wrap Data"
      @docPath="/api/system/wrapping-wrap.html"
      @instructions='Enter some data in JSON format and click "Wrap Data".'
    >
      <p>
        OpenBao provides several ways to create or wrap data, and manage it from there. Here you can wrap a token (or anything
        you like) in JSON format. Give it a try.
      </p>
    </WizardSection>
  </WizardContent>
  */
  {
    "id": "07pOhVbt",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@glyph\"],[\"Tools\",\"tour\"]],[[\"default\"],[[[[1,\"\\n  \"],[8,[39,1],null,[[\"@headerText\",\"@docText\",\"@docPath\",\"@instructions\"],[\"Wrapping data\",\"API: Wrap Data\",\"/api/system/wrapping-wrap.html\",\"Enter some data in JSON format and click \\\"Wrap Data\\\".\"]],[[\"default\"],[[[[1,\"\\n    \"],[10,2],[12],[1,\"\\n      OpenBao provides several ways to create or wrap data, and manage it from there. Here you can wrap a token (or anything\\n      you like) in JSON format. Give it a try.\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-content\",\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/tools-wrap.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/tools-wrapped", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{! template-lint-disable quotes }}
  <WizardContent @headerText="Tools" @glyph="tour">
    <WizardSection
      @headerText="Copying your wrapped token"
      @docText="API: Wrap Data"
      @docPath="/api/system/wrapping-wrap.html"
      @instructions='Copy the token and then click on "Lookup" in the sidebar.'
    >
      <p>
        Your data is now encrypted. You can recover the data using the token on this page, but be careful because if you lose
        the token you won't be able to retrieve your data! We will use this token for the next few steps.
      </p>
    </WizardSection>
  </WizardContent>
  */
  {
    "id": "g9XjbmZj",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@glyph\"],[\"Tools\",\"tour\"]],[[\"default\"],[[[[1,\"\\n  \"],[8,[39,1],null,[[\"@headerText\",\"@docText\",\"@docPath\",\"@instructions\"],[\"Copying your wrapped token\",\"API: Wrap Data\",\"/api/system/wrapping-wrap.html\",\"Copy the token and then click on \\\"Lookup\\\" in the sidebar.\"]],[[\"default\"],[[[[1,\"\\n    \"],[10,2],[12],[1,\"\\n      Your data is now encrypted. You can recover the data using the token on this page, but be careful because if you lose\\n      the token you won't be able to retrieve your data! We will use this token for the next few steps.\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-content\",\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/tools-wrapped.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/totp-engine", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <WizardSection
    @headerText="TOTP"
    @headerIcon="history"
    @docText="Docs: TOTP Secrets"
    @docPath="/docs/secrets/totp/index.html"
  >
    <p>
      The TOTP Secrets Engine generates time-based credentials according to the TOTP standard.
    </p>
  </WizardSection>
  */
  {
    "id": "OQDeGWW8",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@headerIcon\",\"@docText\",\"@docPath\"],[\"TOTP\",\"history\",\"Docs: TOTP Secrets\",\"/docs/secrets/totp/index.html\"]],[[\"default\"],[[[[1,\"\\n  \"],[10,2],[12],[1,\"\\n    The TOTP Secrets Engine generates time-based credentials according to the TOTP standard.\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/totp-engine.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/transit-engine", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <WizardSection
    @headerText="Transit"
    @headerIcon="swap-horizontal"
    @docText="Docs: Transit Secrets"
    @docPath="/docs/secrets/transit/index.html"
  >
    <p>
      The Transit Secrets Engine handles cryptographic functions on data in-transit. OpenBao doesn't store the data sent to the
      Secrets Engine. It can also be viewed as "cryptography as a service" or "encryption as a service".
    </p>
  </WizardSection>
  */
  {
    "id": "2TlbIL61",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@headerIcon\",\"@docText\",\"@docPath\"],[\"Transit\",\"swap-horizontal\",\"Docs: Transit Secrets\",\"/docs/secrets/transit/index.html\"]],[[\"default\"],[[[[1,\"\\n  \"],[10,2],[12],[1,\"\\n    The Transit Secrets Engine handles cryptographic functions on data in-transit. OpenBao doesn't store the data sent to the\\n    Secrets Engine. It can also be viewed as \\\"cryptography as a service\\\" or \\\"encryption as a service\\\".\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/transit-engine.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/tutorial-active", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{! template-lint-disable no-yield-only }}
  {{yield}}
  */
  {
    "id": "6dzwhJ5U",
    "block": "[[[18,1,null]],[\"&default\"],false,[\"yield\"]]",
    "moduleName": "vault/templates/components/wizard/tutorial-active.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/tutorial-complete", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <WizardContent @headerText="Thanks for taking the tour!" @glyph="tour" @class="collapsed">
    <p>
      We hope you enjoyed using OpenBao. You can get back to the guide in the user menu in the upper right.
    </p>
    <div class="box wizard-divider-box">
      <button type="button" class="button is-transparent has-icon-left has-text-white" {{action this.onDismiss}}>
        <Icon @name="x" />
        Close
      </button>
    </div>
  </WizardContent>
  */
  {
    "id": "UkpOS0XY",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@glyph\",\"@class\"],[\"Thanks for taking the tour!\",\"tour\",\"collapsed\"]],[[\"default\"],[[[[1,\"\\n  \"],[10,2],[12],[1,\"\\n    We hope you enjoyed using OpenBao. You can get back to the guide in the user menu in the upper right.\\n  \"],[13],[1,\"\\n  \"],[10,0],[14,0,\"box wizard-divider-box\"],[12],[1,\"\\n    \"],[11,\"button\"],[24,0,\"button is-transparent has-icon-left has-text-white\"],[24,4,\"button\"],[4,[38,1],[[30,0],[30,0,[\"onDismiss\"]]],null],[12],[1,\"\\n      \"],[8,[39,2],null,[[\"@name\"],[\"x\"]],null],[1,\"\\n      Close\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-content\",\"action\",\"icon\"]]",
    "moduleName": "vault/templates/components/wizard/tutorial-complete.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/tutorial-error", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <WizardSection @headerText="Oops!">
    <p>
      Something went wrong and you can't complete this step.
    </p>
  </WizardSection>
  <WizardSection>
    <button type="button" class="button next-feature-step" {{action @onReset}}>
      Go Back
      <Icon @name="corner-up-left" />
    </button>
    <button type="button" class="button next-feature-step" {{action @onAdvance}}>
      {{@nextFeature}}
      <Chevron @isButton={{true}} />
    </button>
  </WizardSection>
  */
  {
    "id": "C7bo78uA",
    "block": "[[[8,[39,0],null,[[\"@headerText\"],[\"Oops!\"]],[[\"default\"],[[[[1,\"\\n  \"],[10,2],[12],[1,\"\\n    Something went wrong and you can't complete this step.\\n  \"],[13],[1,\"\\n\"]],[]]]]],[1,\"\\n\"],[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[11,\"button\"],[24,0,\"button next-feature-step\"],[24,4,\"button\"],[4,[38,1],[[30,0],[30,1]],null],[12],[1,\"\\n    Go Back\\n    \"],[8,[39,2],null,[[\"@name\"],[\"corner-up-left\"]],null],[1,\"\\n  \"],[13],[1,\"\\n  \"],[11,\"button\"],[24,0,\"button next-feature-step\"],[24,4,\"button\"],[4,[38,1],[[30,0],[30,2]],null],[12],[1,\"\\n    \"],[1,[30,3]],[1,\"\\n    \"],[8,[39,3],null,[[\"@isButton\"],[true]],null],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[\"@onReset\",\"@onAdvance\",\"@nextFeature\"],false,[\"wizard-section\",\"action\",\"icon\",\"chevron\"]]",
    "moduleName": "vault/templates/components/wizard/tutorial-error.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/tutorial-idle", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <WizardContent @headerText="Welcome to OpenBao" @glyph="tour" @class="collapsed" @hidePopup={{true}}>
    <button type="button" class="button is-transparent icon dismiss-collapsed" {{action @onDismiss}}>
      <Icon @name="x" aria-label="Close" />
    </button>
    <p>Want a tour? Our helpful guide will introduce you to the OpenBao Web UI.</p>
    <div class="box wizard-divider-box">
      <button type="button" class="button is-transparent has-icon-left has-text-white" {{action @onAdvance}}>
        <Chevron @direction="up" />
        Let's get started
      </button>
    </div>
  </WizardContent>
  */
  {
    "id": "f9Sdj1zo",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@glyph\",\"@class\",\"@hidePopup\"],[\"Welcome to OpenBao\",\"tour\",\"collapsed\",true]],[[\"default\"],[[[[1,\"\\n  \"],[11,\"button\"],[24,0,\"button is-transparent icon dismiss-collapsed\"],[24,4,\"button\"],[4,[38,1],[[30,0],[30,1]],null],[12],[1,\"\\n    \"],[8,[39,2],[[24,\"aria-label\",\"Close\"]],[[\"@name\"],[\"x\"]],null],[1,\"\\n  \"],[13],[1,\"\\n  \"],[10,2],[12],[1,\"Want a tour? Our helpful guide will introduce you to the OpenBao Web UI.\"],[13],[1,\"\\n  \"],[10,0],[14,0,\"box wizard-divider-box\"],[12],[1,\"\\n    \"],[11,\"button\"],[24,0,\"button is-transparent has-icon-left has-text-white\"],[24,4,\"button\"],[4,[38,1],[[30,0],[30,2]],null],[12],[1,\"\\n      \"],[8,[39,3],null,[[\"@direction\"],[\"up\"]],null],[1,\"\\n      Let's get started\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[\"@onDismiss\",\"@onAdvance\"],false,[\"wizard-content\",\"action\",\"icon\",\"chevron\"]]",
    "moduleName": "vault/templates/components/wizard/tutorial-idle.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/tutorial-paused", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <WizardContent @headerText="OpenBao Web UI Guide" @glyph="tour" @class="collapsed" @hidePopup={{true}}>
    <button type="button" class="button is-transparent dismiss-collapsed" {{action @onDismiss}}>
      <Icon @name="x" aria-label="Close" />
    </button>
    <p>Feel free to explore OpenBao. Click below to get back to the guide or close this window.</p>
    <div class="box wizard-divider-box">
      <button type="button" class="button is-transparent has-icon-left has-text-white" {{action @onAdvance}}>
        <Chevron @direction="up" />
        Back to guide
      </button>
    </div>
  </WizardContent>
  */
  {
    "id": "HipSgHjP",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@glyph\",\"@class\",\"@hidePopup\"],[\"OpenBao Web UI Guide\",\"tour\",\"collapsed\",true]],[[\"default\"],[[[[1,\"\\n  \"],[11,\"button\"],[24,0,\"button is-transparent dismiss-collapsed\"],[24,4,\"button\"],[4,[38,1],[[30,0],[30,1]],null],[12],[1,\"\\n    \"],[8,[39,2],[[24,\"aria-label\",\"Close\"]],[[\"@name\"],[\"x\"]],null],[1,\"\\n  \"],[13],[1,\"\\n  \"],[10,2],[12],[1,\"Feel free to explore OpenBao. Click below to get back to the guide or close this window.\"],[13],[1,\"\\n  \"],[10,0],[14,0,\"box wizard-divider-box\"],[12],[1,\"\\n    \"],[11,\"button\"],[24,0,\"button is-transparent has-icon-left has-text-white\"],[24,4,\"button\"],[4,[38,1],[[30,0],[30,2]],null],[12],[1,\"\\n      \"],[8,[39,3],null,[[\"@direction\"],[\"up\"]],null],[1,\"\\n      Back to guide\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[\"@onDismiss\",\"@onAdvance\"],false,[\"wizard-content\",\"action\",\"icon\",\"chevron\"]]",
    "moduleName": "vault/templates/components/wizard/tutorial-paused.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/components/wizard/userpass-method", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <WizardSection
    @headerText="Username & Password"
    @headerIcon="identity-user"
    @docText="Docs: Userpass Authentication"
    @docPath="/docs/auth/userpass.html"
  >
    <p>
      The Username & Password Auth Method allows users to authenticate with OpenBao using a username and password combination.
    </p>
  </WizardSection>
  */
  {
    "id": "U1ca1xWy",
    "block": "[[[8,[39,0],null,[[\"@headerText\",\"@headerIcon\",\"@docText\",\"@docPath\"],[\"Username & Password\",\"identity-user\",\"Docs: Userpass Authentication\",\"/docs/auth/userpass.html\"]],[[\"default\"],[[[[1,\"\\n  \"],[10,2],[12],[1,\"\\n    The Username & Password Auth Method allows users to authenticate with OpenBao using a username and password combination.\\n  \"],[13],[1,\"\\n\"]],[]]]]]],[],false,[\"wizard-section\"]]",
    "moduleName": "vault/templates/components/wizard/userpass-method.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/loading", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{#if this.isCallback}}
    <OidcCallbackSplash />
  {{else}}
    <LogoSplash />
  {{/if}}
  */
  {
    "id": "KLNe6lHH",
    "block": "[[[41,[30,0,[\"isCallback\"]],[[[1,\"  \"],[8,[39,1],null,null,null],[1,\"\\n\"]],[]],[[[1,\"  \"],[8,[39,2],null,null,null],[1,\"\\n\"]],[]]]],[],false,[\"if\",\"oidc-callback-splash\",\"logo-splash\"]]",
    "moduleName": "vault/templates/loading.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{outlet}}
  <footer class="footer has-text-grey has-text-centered">
    <span class="is-inline-block">
      <Icon @name="openbao-single" aria-hidden="true" class="has-text-grey-light" />
      &copy;
      {{date-format (now) "yyyy"}}
      OpenBao
    </span>
    <span>
      <ExternalLink @href={{changelog-url-for this.auth.activeCluster.leaderNode.version}} class="link has-text-grey">
        OpenBao
        {{this.auth.activeCluster.leaderNode.version}}
      </ExternalLink>
    </span>
    <span>
      <DocLink @path="" class="has-text-grey">
        Documentation
      </DocLink>
    </span>
  </footer>
  {{#if (eq this.env "development")}}
    <div class="env-banner level development">
      <div class="level-item notification">
        <Icon @name="git-branch" /><Icon @name="pencil-tool" />
        Local development
        <Icon @name="pencil-tool" /><Icon @name="git-branch" />
      </div>
    </div>
  {{/if}}
  */
  {
    "id": "woC1LswO",
    "block": "[[[46,[28,[37,1],null,null],null,null,null],[1,\"\\n\"],[10,\"footer\"],[14,0,\"footer has-text-grey has-text-centered\"],[12],[1,\"\\n  \"],[10,1],[14,0,\"is-inline-block\"],[12],[1,\"\\n    \"],[8,[39,2],[[24,\"aria-hidden\",\"true\"],[24,0,\"has-text-grey-light\"]],[[\"@name\"],[\"openbao-single\"]],null],[1,\"\\n    ©\\n    \"],[1,[28,[35,3],[[28,[37,4],null,null],\"yyyy\"],null]],[1,\"\\n    OpenBao\\n  \"],[13],[1,\"\\n  \"],[10,1],[12],[1,\"\\n    \"],[8,[39,5],[[24,0,\"link has-text-grey\"]],[[\"@href\"],[[28,[37,6],[[30,0,[\"auth\",\"activeCluster\",\"leaderNode\",\"version\"]]],null]]],[[\"default\"],[[[[1,\"\\n      OpenBao\\n      \"],[1,[30,0,[\"auth\",\"activeCluster\",\"leaderNode\",\"version\"]]],[1,\"\\n    \"]],[]]]]],[1,\"\\n  \"],[13],[1,\"\\n  \"],[10,1],[12],[1,\"\\n    \"],[8,[39,7],[[24,0,\"has-text-grey\"]],[[\"@path\"],[\"\"]],[[\"default\"],[[[[1,\"\\n      Documentation\\n    \"]],[]]]]],[1,\"\\n  \"],[13],[1,\"\\n\"],[13],[1,\"\\n\"],[41,[28,[37,9],[[30,0,[\"env\"]],\"development\"],null],[[[1,\"  \"],[10,0],[14,0,\"env-banner level development\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"level-item notification\"],[12],[1,\"\\n      \"],[8,[39,2],null,[[\"@name\"],[\"git-branch\"]],null],[8,[39,2],null,[[\"@name\"],[\"pencil-tool\"]],null],[1,\"\\n      Local development\\n      \"],[8,[39,2],null,[[\"@name\"],[\"pencil-tool\"]],null],[8,[39,2],null,[[\"@name\"],[\"git-branch\"]],null],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]],null]],[],false,[\"component\",\"-outlet\",\"icon\",\"date-format\",\"now\",\"external-link\",\"changelog-url-for\",\"doc-link\",\"if\",\"eq\"]]",
    "moduleName": "vault/templates/vault.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <Sidebar::Nav::Cluster />
  <div class="global-flash">
    {{#each this.flashMessages.queue as |flash|}}
      <FlashMessage data-test-flash-message={{true}} @flash={{flash}} as |customComponent flash close|>
        {{#if flash.componentName}}
          {{component flash.componentName content=flash.content}}
        {{else}}
          <AlertPopup
            @type={{message-types flash.type}}
            @message={{flash.message}}
            @close={{close}}
            @isPreformatted={{flash.preformatted}}
          />
        {{/if}}
      </FlashMessage>
    {{/each}}
  </div>
  
  {{#if this.auth.isActiveSession}}
    <section class="section">
      <div class="container is-widescreen">
        <TokenExpireWarning @expirationDate={{this.auth.tokenExpirationDate}}>
          {{outlet}}
        </TokenExpireWarning>
      </div>
    </section>
  {{else}}
    {{outlet}}
  {{/if}}
  */
  {
    "id": "za7VQorP",
    "block": "[[[8,[39,0],null,null,null],[1,\"\\n\"],[10,0],[14,0,\"global-flash\"],[12],[1,\"\\n\"],[42,[28,[37,2],[[28,[37,2],[[30,0,[\"flashMessages\",\"queue\"]]],null]],null],null,[[[1,\"    \"],[8,[39,3],[[16,\"data-test-flash-message\",true]],[[\"@flash\"],[[30,1]]],[[\"default\"],[[[[1,\"\\n\"],[41,[30,3,[\"componentName\"]],[[[1,\"        \"],[46,[30,3,[\"componentName\"]],null,[[\"content\"],[[30,3,[\"content\"]]]],null],[1,\"\\n\"]],[]],[[[1,\"        \"],[8,[39,6],null,[[\"@type\",\"@message\",\"@close\",\"@isPreformatted\"],[[28,[37,7],[[30,3,[\"type\"]]],null],[30,3,[\"message\"]],[30,4],[30,3,[\"preformatted\"]]]],null],[1,\"\\n\"]],[]]],[1,\"    \"]],[2,3,4]]]]],[1,\"\\n\"]],[1]],null],[13],[1,\"\\n\\n\"],[41,[30,0,[\"auth\",\"isActiveSession\"]],[[[1,\"  \"],[10,\"section\"],[14,0,\"section\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"container is-widescreen\"],[12],[1,\"\\n      \"],[8,[39,8],null,[[\"@expirationDate\"],[[30,0,[\"auth\",\"tokenExpirationDate\"]]]],[[\"default\"],[[[[1,\"\\n        \"],[46,[28,[37,9],null,null],null,null,null],[1,\"\\n      \"]],[]]]]],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]],[[[1,\"  \"],[46,[28,[37,9],null,null],null,null,null],[1,\"\\n\"]],[]]]],[\"flash\",\"customComponent\",\"flash\",\"close\"],false,[\"sidebar/nav/cluster\",\"each\",\"-track-array\",\"flash-message\",\"if\",\"component\",\"alert-popup\",\"message-types\",\"token-expire-warning\",\"-outlet\"]]",
    "moduleName": "vault/templates/vault/cluster.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <Sidebar::Nav::Access />
  {{outlet}}
  */
  {
    "id": "GGh8c6fW",
    "block": "[[[8,[39,0],null,null,null],[1,\"\\n\"],[46,[28,[37,2],null,null],null,null,null]],[],false,[\"sidebar/nav/access\",\"component\",\"-outlet\"]]",
    "moduleName": "vault/templates/vault/cluster/access.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/error", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{#if (eq this.model.httpStatus 404)}}
    <NotFound @model={{this.model}} />
  {{else}}
    <PageHeader as |p|>
      <p.levelLeft>
        <h1 class="title is-3 has-text-grey">
          {{#if (eq this.model.httpStatus 403)}}
            Not authorized
          {{else}}
            Error
          {{/if}}
        </h1>
      </p.levelLeft>
    </PageHeader>
    <div class="box is-sideless has-background-white-bis has-text-grey has-text-centered">
      {{#if this.model.message}}
        <p>{{this.model.message}}</p>
      {{/if}}
      {{#each this.model.errors as |error|}}
        <p>{{error}}</p>
      {{/each}}
    </div>
  {{/if}}
  */
  {
    "id": "0s0FGlSZ",
    "block": "[[[41,[28,[37,1],[[30,0,[\"model\",\"httpStatus\"]],404],null],[[[1,\"  \"],[8,[39,2],null,[[\"@model\"],[[30,0,[\"model\"]]]],null],[1,\"\\n\"]],[]],[[[1,\"  \"],[8,[39,3],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n      \"],[10,\"h1\"],[14,0,\"title is-3 has-text-grey\"],[12],[1,\"\\n\"],[41,[28,[37,1],[[30,0,[\"model\",\"httpStatus\"]],403],null],[[[1,\"          Not authorized\\n\"]],[]],[[[1,\"          Error\\n\"]],[]]],[1,\"      \"],[13],[1,\"\\n    \"]],[]]]]],[1,\"\\n  \"]],[1]]]]],[1,\"\\n  \"],[10,0],[14,0,\"box is-sideless has-background-white-bis has-text-grey has-text-centered\"],[12],[1,\"\\n\"],[41,[30,0,[\"model\",\"message\"]],[[[1,\"      \"],[10,2],[12],[1,[30,0,[\"model\",\"message\"]]],[13],[1,\"\\n\"]],[]],null],[42,[28,[37,5],[[28,[37,5],[[30,0,[\"model\",\"errors\"]]],null]],null],null,[[[1,\"      \"],[10,2],[12],[1,[30,2]],[13],[1,\"\\n\"]],[2]],null],[1,\"  \"],[13],[1,\"\\n\"]],[]]]],[\"p\",\"error\"],false,[\"if\",\"eq\",\"not-found\",\"page-header\",\"each\",\"-track-array\"]]",
    "moduleName": "vault/templates/vault/cluster/access/error.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/identity/aliases/add", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.levelLeft>
      <h1 class="title is-3">
        Create
        {{lowercase (humanize this.model.identityType)}}
        for
        {{this.model.canonicalId}}
      </h1>
    </p.levelLeft>
  </PageHeader>
  
  <Identity::EditForm @model={{this.model}} @onSave={{perform this.navAfterSave}} />
  */
  {
    "id": "YfRnqaTm",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n      Create\\n      \"],[1,[28,[35,1],[[28,[37,2],[[30,0,[\"model\",\"identityType\"]]],null]],null]],[1,\"\\n      for\\n      \"],[1,[30,0,[\"model\",\"canonicalId\"]]],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\\n\"],[8,[39,3],null,[[\"@model\",\"@onSave\"],[[30,0,[\"model\"]],[28,[37,4],[[30,0,[\"navAfterSave\"]]],null]]],null]],[\"p\"],false,[\"page-header\",\"lowercase\",\"humanize\",\"identity/edit-form\",\"perform\"]]",
    "moduleName": "vault/templates/vault/cluster/access/identity/aliases/add.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/identity/aliases/edit", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.levelLeft>
      <h1 class="title is-3">
        Edit
        {{this.model.name}}
      </h1>
    </p.levelLeft>
  </PageHeader>
  
  <Identity::EditForm @mode="edit" @model={{this.model}} @onSave={{perform this.navAfterSave}} />
  */
  {
    "id": "fK4ERvTE",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n      Edit\\n      \"],[1,[30,0,[\"model\",\"name\"]]],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\\n\"],[8,[39,1],null,[[\"@mode\",\"@model\",\"@onSave\"],[\"edit\",[30,0,[\"model\"]],[28,[37,2],[[30,0,[\"navAfterSave\"]]],null]]],null]],[\"p\"],false,[\"page-header\",\"identity/edit-form\",\"perform\"]]",
    "moduleName": "vault/templates/vault/cluster/access/identity/aliases/edit.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/identity/aliases/index", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <Identity::EntityNav @identityType={{this.identityType}} @model={{this.model}} />
  {{#if this.model.meta.total}}
    {{#each this.model as |item|}}
      <LinkedBlock
        @params={{array "vault.cluster.access.identity.aliases.show" item.id "details"}}
        class="list-item-row"
        data-test-identity-row
      >
        <div class="columns is-mobile">
          <div class="column is-10">
            <LinkTo
              @route="vault.cluster.access.identity.aliases.show"
              @models={{array item.id "details"}}
              class="is-block has-text-black has-text-weight-semibold"
              data-test-identity-link={{item.id}}
            >
              <Icon @name="user" class="has-text-grey-light" />
              <span class="has-text-weight-semibold">{{item.name}}</span>
            </LinkTo>
            <div class="has-text-grey">
              {{item.id}}
            </div>
            <span class="tag">{{item.mountType}}</span>
            <span class="has-text-grey is-size-8">
              {{item.mountAccessor}}
            </span>
          </div>
          <div class="column has-text-right">
            <Identity::PopupAlias @params={{array item}} @onSuccess={{action "onDelete"}} />
          </div>
        </div>
      </LinkedBlock>
    {{/each}}
    {{#if (gt this.model.meta.lastPage 1)}}
      <ListPagination
        @page={{this.model.meta.currentPage}}
        @lastPage={{this.model.meta.lastPage}}
        @link="vault.cluster.access.identity.aliases.index"
      />
    {{/if}}
  {{else}}
    <EmptyState
      @title="No {{this.identityType}} aliases yet"
      @message="A list of {{this.identityType}} aliases in this namespace will be listed here. Choose one of the {{pluralize
        this.identityType
      }} and click &quot;Create Alias&quot; to get started."
    >
      <LinkTo @route="vault.cluster.access.identity.create" @model={{pluralize this.identityType}} class="link">
        Create
        {{this.identityType}}
      </LinkTo>
      {{! TODO Add a link to a tutorial for 'auth-methods/identity' }}
    </EmptyState>
  {{/if}}
  */
  {
    "id": "3PB4BpEn",
    "block": "[[[8,[39,0],null,[[\"@identityType\",\"@model\"],[[30,0,[\"identityType\"]],[30,0,[\"model\"]]]],null],[1,\"\\n\"],[41,[30,0,[\"model\",\"meta\",\"total\"]],[[[42,[28,[37,3],[[28,[37,3],[[30,0,[\"model\"]]],null]],null],null,[[[1,\"    \"],[8,[39,4],[[24,0,\"list-item-row\"],[24,\"data-test-identity-row\",\"\"]],[[\"@params\"],[[28,[37,5],[\"vault.cluster.access.identity.aliases.show\",[30,1,[\"id\"]],\"details\"],null]]],[[\"default\"],[[[[1,\"\\n      \"],[10,0],[14,0,\"columns is-mobile\"],[12],[1,\"\\n        \"],[10,0],[14,0,\"column is-10\"],[12],[1,\"\\n          \"],[8,[39,6],[[24,0,\"is-block has-text-black has-text-weight-semibold\"],[16,\"data-test-identity-link\",[30,1,[\"id\"]]]],[[\"@route\",\"@models\"],[\"vault.cluster.access.identity.aliases.show\",[28,[37,5],[[30,1,[\"id\"]],\"details\"],null]]],[[\"default\"],[[[[1,\"\\n            \"],[8,[39,7],[[24,0,\"has-text-grey-light\"]],[[\"@name\"],[\"user\"]],null],[1,\"\\n            \"],[10,1],[14,0,\"has-text-weight-semibold\"],[12],[1,[30,1,[\"name\"]]],[13],[1,\"\\n          \"]],[]]]]],[1,\"\\n          \"],[10,0],[14,0,\"has-text-grey\"],[12],[1,\"\\n            \"],[1,[30,1,[\"id\"]]],[1,\"\\n          \"],[13],[1,\"\\n          \"],[10,1],[14,0,\"tag\"],[12],[1,[30,1,[\"mountType\"]]],[13],[1,\"\\n          \"],[10,1],[14,0,\"has-text-grey is-size-8\"],[12],[1,\"\\n            \"],[1,[30,1,[\"mountAccessor\"]]],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n        \"],[10,0],[14,0,\"column has-text-right\"],[12],[1,\"\\n          \"],[8,[39,8],null,[[\"@params\",\"@onSuccess\"],[[28,[37,5],[[30,1]],null],[28,[37,9],[[30,0],\"onDelete\"],null]]],null],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"]],[]]]]],[1,\"\\n\"]],[1]],null],[41,[28,[37,10],[[30,0,[\"model\",\"meta\",\"lastPage\"]],1],null],[[[1,\"    \"],[8,[39,11],null,[[\"@page\",\"@lastPage\",\"@link\"],[[30,0,[\"model\",\"meta\",\"currentPage\"]],[30,0,[\"model\",\"meta\",\"lastPage\"]],\"vault.cluster.access.identity.aliases.index\"]],null],[1,\"\\n\"]],[]],null]],[]],[[[1,\"  \"],[8,[39,12],null,[[\"@title\",\"@message\"],[[29,[\"No \",[30,0,[\"identityType\"]],\" aliases yet\"]],[29,[\"A list of \",[30,0,[\"identityType\"]],\" aliases in this namespace will be listed here. Choose one of the \",[28,[37,13],[[30,0,[\"identityType\"]]],null],\" and click \\\"Create Alias\\\" to get started.\"]]]],[[\"default\"],[[[[1,\"\\n    \"],[8,[39,6],[[24,0,\"link\"]],[[\"@route\",\"@model\"],[\"vault.cluster.access.identity.create\",[28,[37,13],[[30,0,[\"identityType\"]]],null]]],[[\"default\"],[[[[1,\"\\n      Create\\n      \"],[1,[30,0,[\"identityType\"]]],[1,\"\\n    \"]],[]]]]],[1,\"\\n\"],[1,\"  \"]],[]]]]],[1,\"\\n\"]],[]]]],[\"item\"],false,[\"identity/entity-nav\",\"if\",\"each\",\"-track-array\",\"linked-block\",\"array\",\"link-to\",\"icon\",\"identity/popup-alias\",\"action\",\"gt\",\"list-pagination\",\"empty-state\",\"pluralize\"]]",
    "moduleName": "vault/templates/vault/cluster/access/identity/aliases/index.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/identity/aliases/show", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.top>
      <nav class="breadcrumb" aria-label="breadcrumbs">
        <ul>
          <li>
            <span class="sep">&#x0002f;</span>
            <LinkTo @route="vault.cluster.access.identity.aliases">
              {{pluralize (humanize this.model.identityType)}}
            </LinkTo>
          </li>
        </ul>
      </nav>
    </p.top>
    <p.levelLeft>
      <h1 class="title is-3">
        {{this.model.name}}
      </h1>
    </p.levelLeft>
  </PageHeader>
  <div class="tabs-container box is-sideless is-fullwidth is-paddingless is-marginless">
    <nav class="tabs sub-nav" aria-label="tabs">
      <ul>
        {{#each (tabs-for-identity-show this.model.identityType) as |tab|}}
          <LinkTo @route="vault.cluster.access.identity.aliases.show" @models={{array this.model.id tab}}>
            {{capitalize tab}}
          </LinkTo>
        {{/each}}
      </ul>
    </nav>
  </div>
  <Toolbar>
    <ToolbarActions>
      <ToolbarLink @route="vault.cluster.access.identity.aliases.edit" @model={{this.model.id}} data-test-alias-edit-link>
        Edit
        {{lowercase (humanize this.model.identityType)}}
      </ToolbarLink>
    </ToolbarActions>
  </Toolbar>
  {{component (concat "identity/item-alias/alias-" this.section) model=this.model}}
  */
  {
    "id": "wSjcQW6R",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"top\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"nav\"],[14,0,\"breadcrumb\"],[14,\"aria-label\",\"breadcrumbs\"],[12],[1,\"\\n      \"],[10,\"ul\"],[12],[1,\"\\n        \"],[10,\"li\"],[12],[1,\"\\n          \"],[10,1],[14,0,\"sep\"],[12],[1,\"/\"],[13],[1,\"\\n          \"],[8,[39,1],null,[[\"@route\"],[\"vault.cluster.access.identity.aliases\"]],[[\"default\"],[[[[1,\"\\n            \"],[1,[28,[35,2],[[28,[37,3],[[30,0,[\"model\",\"identityType\"]]],null]],null]],[1,\"\\n          \"]],[]]]]],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n      \"],[1,[30,0,[\"model\",\"name\"]]],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\"],[10,0],[14,0,\"tabs-container box is-sideless is-fullwidth is-paddingless is-marginless\"],[12],[1,\"\\n  \"],[10,\"nav\"],[14,0,\"tabs sub-nav\"],[14,\"aria-label\",\"tabs\"],[12],[1,\"\\n    \"],[10,\"ul\"],[12],[1,\"\\n\"],[42,[28,[37,5],[[28,[37,5],[[28,[37,6],[[30,0,[\"model\",\"identityType\"]]],null]],null]],null],null,[[[1,\"        \"],[8,[39,1],null,[[\"@route\",\"@models\"],[\"vault.cluster.access.identity.aliases.show\",[28,[37,7],[[30,0,[\"model\",\"id\"]],[30,2]],null]]],[[\"default\"],[[[[1,\"\\n          \"],[1,[28,[35,8],[[30,2]],null]],[1,\"\\n        \"]],[]]]]],[1,\"\\n\"]],[2]],null],[1,\"    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"],[13],[1,\"\\n\"],[8,[39,9],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[39,10],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,11],[[24,\"data-test-alias-edit-link\",\"\"]],[[\"@route\",\"@model\"],[\"vault.cluster.access.identity.aliases.edit\",[30,0,[\"model\",\"id\"]]]],[[\"default\"],[[[[1,\"\\n      Edit\\n      \"],[1,[28,[35,12],[[28,[37,3],[[30,0,[\"model\",\"identityType\"]]],null]],null]],[1,\"\\n    \"]],[]]]]],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]]]]],[1,\"\\n\"],[46,[28,[37,14],[\"identity/item-alias/alias-\",[30,0,[\"section\"]]],null],null,[[\"model\"],[[30,0,[\"model\"]]]],null]],[\"p\",\"tab\"],false,[\"page-header\",\"link-to\",\"pluralize\",\"humanize\",\"each\",\"-track-array\",\"tabs-for-identity-show\",\"array\",\"capitalize\",\"toolbar\",\"toolbar-actions\",\"toolbar-link\",\"lowercase\",\"component\",\"concat\"]]",
    "moduleName": "vault/templates/vault/cluster/access/identity/aliases/show.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/identity/create", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.levelLeft>
      <h1 class="title is-3">
        Create
        {{this.model.identityType}}
      </h1>
    </p.levelLeft>
  </PageHeader>
  <Identity::EditForm @model={{this.model}} @onSave={{perform this.navAfterSave}} />
  */
  {
    "id": "qZyvukaF",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n      Create\\n      \"],[1,[30,0,[\"model\",\"identityType\"]]],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\"],[8,[39,1],null,[[\"@model\",\"@onSave\"],[[30,0,[\"model\"]],[28,[37,2],[[30,0,[\"navAfterSave\"]]],null]]],null]],[\"p\"],false,[\"page-header\",\"identity/edit-form\",\"perform\"]]",
    "moduleName": "vault/templates/vault/cluster/access/identity/create.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/identity/edit", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.levelLeft>
      <h1 class="title is-3">
        Edit
        {{this.model.name}}
      </h1>
    </p.levelLeft>
  </PageHeader>
  
  <Identity::EditForm @mode="edit" @model={{this.model}} @onSave={{perform this.navAfterSave}} />
  */
  {
    "id": "/MFDOfHv",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n      Edit\\n      \"],[1,[30,0,[\"model\",\"name\"]]],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\\n\"],[8,[39,1],null,[[\"@mode\",\"@model\",\"@onSave\"],[\"edit\",[30,0,[\"model\"]],[28,[37,2],[[30,0,[\"navAfterSave\"]]],null]]],null]],[\"p\"],false,[\"page-header\",\"identity/edit-form\",\"perform\"]]",
    "moduleName": "vault/templates/vault/cluster/access/identity/edit.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/identity/index", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <Identity::EntityNav @identityType={{this.identityType}} @model={{this.model}} />
  {{#if this.model.meta.total}}
    {{#each this.model as |item|}}
      <LinkedBlock
        @params={{array "vault.cluster.access.identity.show" item.id "details"}}
        class="list-item-row"
        data-test-identity-row
      >
        <div class="columns is-mobile">
          <div class="column is-7-tablet is-10-mobile">
            <LinkTo
              @route="vault.cluster.access.identity.show"
              @models={{array item.id "details"}}
              class="is-block has-text-black has-text-weight-semibold"
              data-test-identity-link={{true}}
            >
              <Icon @name="user" class="has-text-grey-light" />
              <span class="has-text-weight-semibold">{{item.name}}</span>
            </LinkTo>
            <div class="has-text-grey is-size-8">
              {{item.id}}
            </div>
          </div>
          <div class="column is-3 is-hidden-mobile">
            {{#if item.aliases.length}}
              {{pluralize item.aliases.length "alias"}}
            {{/if}}
          </div>
          <div class="column has-text-right">
            <PopupMenu @name="identity-item" @onOpen={{action "reloadRecord" item}}>
              <Confirm as |c|>
                <nav class="menu">
                  <ul class="menu-list">
                    <li class="action">
                      <LinkTo @route="vault.cluster.access.identity.show" @models={{array item.id "details"}}>
                        Details
                      </LinkTo>
                    </li>
                    {{#if (or item.isReloading item.updatePath.isPending item.aliasPath.isPending)}}
                      <li class="action">
                        <button disabled type="button" class="link button is-loading is-transparent">
                          loading
                        </button>
                      </li>
                    {{else}}
                      {{#if item.canAddAlias}}
                        <li class="action">
                          <LinkTo
                            @route="vault.cluster.access.identity.aliases.add"
                            @models={{array (pluralize this.identityType) item.id}}
                          >
                            Create alias
                          </LinkTo>
                        </li>
                      {{/if}}
                      {{#if item.canEdit}}
                        <li class="action">
                          <LinkTo @route="vault.cluster.access.identity.edit" @model={{item.id}}>
                            Edit
                          </LinkTo>
                        </li>
                        <li class="action">
                          {{#if item.disabled}}
                            <button type="button" {{action "toggleDisabled" item}} class="link">
                              Enable
                            </button>
                          {{else if (eq this.identityType "entity")}}
                            <c.Message
                              @id="{{item.id}}-disable"
                              @triggerText="Disable"
                              @message="Associated tokens will not be revoked, but cannot be used"
                              @title="Disable this?"
                              @confirmButtonText="Disable"
                              @onConfirm={{action "toggleDisabled" item}}
                              data-test-engine-disable="true"
                            />
                          {{/if}}
                        </li>
                      {{/if}}
                      {{#if item.canDelete}}
                        <li class="action">
                          <c.Message @id={{item.id}} @onConfirm={{action "delete" item}} data-test-item-delete="true" />
                        </li>
                      {{/if}}
                    {{/if}}
                  </ul>
                </nav>
              </Confirm>
            </PopupMenu>
          </div>
        </div>
      </LinkedBlock>
    {{/each}}
    {{#if (gt this.model.meta.lastPage 1)}}
      <ListPagination
        @page={{this.model.meta.currentPage}}
        @lastPage={{this.model.meta.lastPage}}
        @link="vault.cluster.access.identity.index"
      />
    {{/if}}
  {{else}}
    <EmptyState
      @title="No {{pluralize this.identityType}} yet"
      @message="A list of {{pluralize
        this.identityType
      }} in this namespace will be listed here. Create your first {{this.identityType}} to get started."
    >
      <LinkTo @route="vault.cluster.access.identity.create" @model={{pluralize this.identityType}} class="link">
        Create
        {{this.identityType}}
      </LinkTo>
      {{! TODO Add a link to a tutorial for 'auth-methods/identity' }}
    </EmptyState>
  {{/if}}
  */
  {
    "id": "pxQOR3hA",
    "block": "[[[8,[39,0],null,[[\"@identityType\",\"@model\"],[[30,0,[\"identityType\"]],[30,0,[\"model\"]]]],null],[1,\"\\n\"],[41,[30,0,[\"model\",\"meta\",\"total\"]],[[[42,[28,[37,3],[[28,[37,3],[[30,0,[\"model\"]]],null]],null],null,[[[1,\"    \"],[8,[39,4],[[24,0,\"list-item-row\"],[24,\"data-test-identity-row\",\"\"]],[[\"@params\"],[[28,[37,5],[\"vault.cluster.access.identity.show\",[30,1,[\"id\"]],\"details\"],null]]],[[\"default\"],[[[[1,\"\\n      \"],[10,0],[14,0,\"columns is-mobile\"],[12],[1,\"\\n        \"],[10,0],[14,0,\"column is-7-tablet is-10-mobile\"],[12],[1,\"\\n          \"],[8,[39,6],[[24,0,\"is-block has-text-black has-text-weight-semibold\"],[16,\"data-test-identity-link\",true]],[[\"@route\",\"@models\"],[\"vault.cluster.access.identity.show\",[28,[37,5],[[30,1,[\"id\"]],\"details\"],null]]],[[\"default\"],[[[[1,\"\\n            \"],[8,[39,7],[[24,0,\"has-text-grey-light\"]],[[\"@name\"],[\"user\"]],null],[1,\"\\n            \"],[10,1],[14,0,\"has-text-weight-semibold\"],[12],[1,[30,1,[\"name\"]]],[13],[1,\"\\n          \"]],[]]]]],[1,\"\\n          \"],[10,0],[14,0,\"has-text-grey is-size-8\"],[12],[1,\"\\n            \"],[1,[30,1,[\"id\"]]],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n        \"],[10,0],[14,0,\"column is-3 is-hidden-mobile\"],[12],[1,\"\\n\"],[41,[30,1,[\"aliases\",\"length\"]],[[[1,\"            \"],[1,[28,[35,8],[[30,1,[\"aliases\",\"length\"]],\"alias\"],null]],[1,\"\\n\"]],[]],null],[1,\"        \"],[13],[1,\"\\n        \"],[10,0],[14,0,\"column has-text-right\"],[12],[1,\"\\n          \"],[8,[39,9],null,[[\"@name\",\"@onOpen\"],[\"identity-item\",[28,[37,10],[[30,0],\"reloadRecord\",[30,1]],null]]],[[\"default\"],[[[[1,\"\\n            \"],[8,[39,11],null,null,[[\"default\"],[[[[1,\"\\n              \"],[10,\"nav\"],[14,0,\"menu\"],[12],[1,\"\\n                \"],[10,\"ul\"],[14,0,\"menu-list\"],[12],[1,\"\\n                  \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                    \"],[8,[39,6],null,[[\"@route\",\"@models\"],[\"vault.cluster.access.identity.show\",[28,[37,5],[[30,1,[\"id\"]],\"details\"],null]]],[[\"default\"],[[[[1,\"\\n                      Details\\n                    \"]],[]]]]],[1,\"\\n                  \"],[13],[1,\"\\n\"],[41,[28,[37,12],[[30,1,[\"isReloading\"]],[30,1,[\"updatePath\",\"isPending\"]],[30,1,[\"aliasPath\",\"isPending\"]]],null],[[[1,\"                    \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                      \"],[10,\"button\"],[14,\"disabled\",\"\"],[14,0,\"link button is-loading is-transparent\"],[14,4,\"button\"],[12],[1,\"\\n                        loading\\n                      \"],[13],[1,\"\\n                    \"],[13],[1,\"\\n\"]],[]],[[[41,[30,1,[\"canAddAlias\"]],[[[1,\"                      \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                        \"],[8,[39,6],null,[[\"@route\",\"@models\"],[\"vault.cluster.access.identity.aliases.add\",[28,[37,5],[[28,[37,8],[[30,0,[\"identityType\"]]],null],[30,1,[\"id\"]]],null]]],[[\"default\"],[[[[1,\"\\n                          Create alias\\n                        \"]],[]]]]],[1,\"\\n                      \"],[13],[1,\"\\n\"]],[]],null],[41,[30,1,[\"canEdit\"]],[[[1,\"                      \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                        \"],[8,[39,6],null,[[\"@route\",\"@model\"],[\"vault.cluster.access.identity.edit\",[30,1,[\"id\"]]]],[[\"default\"],[[[[1,\"\\n                          Edit\\n                        \"]],[]]]]],[1,\"\\n                      \"],[13],[1,\"\\n                      \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n\"],[41,[30,1,[\"disabled\"]],[[[1,\"                          \"],[11,\"button\"],[24,0,\"link\"],[24,4,\"button\"],[4,[38,10],[[30,0],\"toggleDisabled\",[30,1]],null],[12],[1,\"\\n                            Enable\\n                          \"],[13],[1,\"\\n\"]],[]],[[[41,[28,[37,13],[[30,0,[\"identityType\"]],\"entity\"],null],[[[1,\"                          \"],[8,[30,2,[\"Message\"]],[[24,\"data-test-engine-disable\",\"true\"]],[[\"@id\",\"@triggerText\",\"@message\",\"@title\",\"@confirmButtonText\",\"@onConfirm\"],[[29,[[30,1,[\"id\"]],\"-disable\"]],\"Disable\",\"Associated tokens will not be revoked, but cannot be used\",\"Disable this?\",\"Disable\",[28,[37,10],[[30,0],\"toggleDisabled\",[30,1]],null]]],null],[1,\"\\n                        \"]],[]],null]],[]]],[1,\"                      \"],[13],[1,\"\\n\"]],[]],null],[41,[30,1,[\"canDelete\"]],[[[1,\"                      \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                        \"],[8,[30,2,[\"Message\"]],[[24,\"data-test-item-delete\",\"true\"]],[[\"@id\",\"@onConfirm\"],[[30,1,[\"id\"]],[28,[37,10],[[30,0],\"delete\",[30,1]],null]]],null],[1,\"\\n                      \"],[13],[1,\"\\n\"]],[]],null]],[]]],[1,\"                \"],[13],[1,\"\\n              \"],[13],[1,\"\\n            \"]],[2]]]]],[1,\"\\n          \"]],[]]]]],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"]],[]]]]],[1,\"\\n\"]],[1]],null],[41,[28,[37,14],[[30,0,[\"model\",\"meta\",\"lastPage\"]],1],null],[[[1,\"    \"],[8,[39,15],null,[[\"@page\",\"@lastPage\",\"@link\"],[[30,0,[\"model\",\"meta\",\"currentPage\"]],[30,0,[\"model\",\"meta\",\"lastPage\"]],\"vault.cluster.access.identity.index\"]],null],[1,\"\\n\"]],[]],null]],[]],[[[1,\"  \"],[8,[39,16],null,[[\"@title\",\"@message\"],[[29,[\"No \",[28,[37,8],[[30,0,[\"identityType\"]]],null],\" yet\"]],[29,[\"A list of \",[28,[37,8],[[30,0,[\"identityType\"]]],null],\" in this namespace will be listed here. Create your first \",[30,0,[\"identityType\"]],\" to get started.\"]]]],[[\"default\"],[[[[1,\"\\n    \"],[8,[39,6],[[24,0,\"link\"]],[[\"@route\",\"@model\"],[\"vault.cluster.access.identity.create\",[28,[37,8],[[30,0,[\"identityType\"]]],null]]],[[\"default\"],[[[[1,\"\\n      Create\\n      \"],[1,[30,0,[\"identityType\"]]],[1,\"\\n    \"]],[]]]]],[1,\"\\n\"],[1,\"  \"]],[]]]]],[1,\"\\n\"]],[]]]],[\"item\",\"c\"],false,[\"identity/entity-nav\",\"if\",\"each\",\"-track-array\",\"linked-block\",\"array\",\"link-to\",\"icon\",\"pluralize\",\"popup-menu\",\"action\",\"confirm\",\"or\",\"eq\",\"gt\",\"list-pagination\",\"empty-state\"]]",
    "moduleName": "vault/templates/vault/cluster/access/identity/index.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/identity/merge", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.levelLeft>
      <h1 class="title is-3">
        Merge entities
      </h1>
    </p.levelLeft>
  </PageHeader>
  
  <Identity::EditForm @mode="merge" @model={{this.model}} @onSave={{perform this.navAfterSave}} />
  */
  {
    "id": "8gp+1fQc",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n      Merge entities\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\\n\"],[8,[39,1],null,[[\"@mode\",\"@model\",\"@onSave\"],[\"merge\",[30,0,[\"model\"]],[28,[37,2],[[30,0,[\"navAfterSave\"]]],null]]],null]],[\"p\"],false,[\"page-header\",\"identity/edit-form\",\"perform\"]]",
    "moduleName": "vault/templates/vault/cluster/access/identity/merge.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/identity/show", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.top>
      <nav class="breadcrumb" aria-label="breadcrumbs">
        <ul>
          <li>
            <span class="sep">&#x0002f;</span>
            <LinkTo @route="vault.cluster.access.identity.index">
              {{capitalize (pluralize this.model.identityType)}}
            </LinkTo>
          </li>
        </ul>
      </nav>
    </p.top>
    <p.levelLeft>
      <h1 class="title is-3">
        {{this.model.name}}
      </h1>
    </p.levelLeft>
  </PageHeader>
  <div class="tabs-container box is-sideless is-fullwidth is-paddingless is-marginless">
    <nav class="tabs sub-nav" aria-label="tabs">
      <ul>
        {{#each (tabs-for-identity-show this.model.identityType this.model.type) as |tab|}}
          <LinkTo
            @route="vault.cluster.access.identity.show"
            @models={{array (pluralize this.model.identityType) this.model.id tab}}
            data-test-tab-subnav={{tab}}
          >
            {{capitalize (humanize tab)}}
          </LinkTo>
        {{/each}}
      </ul>
    </nav>
  </div>
  <Toolbar>
    <ToolbarActions>
      {{! template-lint-disable simple-unless }}
      {{#unless (or (and (eq this.model.identityType "group") (eq this.model.type "internal")) this.model.alias)}}
        <ToolbarLink
          @route="vault.cluster.access.identity.aliases.add"
          @models={{array (pluralize this.model.identityType) this.model.id}}
          @type="add"
          data-test-entity-create-link={{true}}
        >
          Add alias
        </ToolbarLink>
      {{/unless}}
      {{! template-lint-enable simple-unless }}
      <ToolbarLink
        @route="vault.cluster.access.identity.edit"
        @models={{array (pluralize this.model.identityType) this.model.id}}
        data-test-entity-edit-link={{true}}
      >
        Edit
        {{this.model.identityType}}
      </ToolbarLink>
    </ToolbarActions>
  </Toolbar>
  {{component (concat "identity/item-" this.section) model=this.model}}
  */
  {
    "id": "ckyVBNQF",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"top\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"nav\"],[14,0,\"breadcrumb\"],[14,\"aria-label\",\"breadcrumbs\"],[12],[1,\"\\n      \"],[10,\"ul\"],[12],[1,\"\\n        \"],[10,\"li\"],[12],[1,\"\\n          \"],[10,1],[14,0,\"sep\"],[12],[1,\"/\"],[13],[1,\"\\n          \"],[8,[39,1],null,[[\"@route\"],[\"vault.cluster.access.identity.index\"]],[[\"default\"],[[[[1,\"\\n            \"],[1,[28,[35,2],[[28,[37,3],[[30,0,[\"model\",\"identityType\"]]],null]],null]],[1,\"\\n          \"]],[]]]]],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n      \"],[1,[30,0,[\"model\",\"name\"]]],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\"],[10,0],[14,0,\"tabs-container box is-sideless is-fullwidth is-paddingless is-marginless\"],[12],[1,\"\\n  \"],[10,\"nav\"],[14,0,\"tabs sub-nav\"],[14,\"aria-label\",\"tabs\"],[12],[1,\"\\n    \"],[10,\"ul\"],[12],[1,\"\\n\"],[42,[28,[37,5],[[28,[37,5],[[28,[37,6],[[30,0,[\"model\",\"identityType\"]],[30,0,[\"model\",\"type\"]]],null]],null]],null],null,[[[1,\"        \"],[8,[39,1],[[16,\"data-test-tab-subnav\",[30,2]]],[[\"@route\",\"@models\"],[\"vault.cluster.access.identity.show\",[28,[37,7],[[28,[37,3],[[30,0,[\"model\",\"identityType\"]]],null],[30,0,[\"model\",\"id\"]],[30,2]],null]]],[[\"default\"],[[[[1,\"\\n          \"],[1,[28,[35,2],[[28,[37,8],[[30,2]],null]],null]],[1,\"\\n        \"]],[]]]]],[1,\"\\n\"]],[2]],null],[1,\"    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"],[13],[1,\"\\n\"],[8,[39,9],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[39,10],null,null,[[\"default\"],[[[[1,\"\\n\"],[41,[51,[28,[37,12],[[28,[37,13],[[28,[37,14],[[30,0,[\"model\",\"identityType\"]],\"group\"],null],[28,[37,14],[[30,0,[\"model\",\"type\"]],\"internal\"],null]],null],[30,0,[\"model\",\"alias\"]]],null]],[[[1,\"      \"],[8,[39,15],[[16,\"data-test-entity-create-link\",true]],[[\"@route\",\"@models\",\"@type\"],[\"vault.cluster.access.identity.aliases.add\",[28,[37,7],[[28,[37,3],[[30,0,[\"model\",\"identityType\"]]],null],[30,0,[\"model\",\"id\"]]],null],\"add\"]],[[\"default\"],[[[[1,\"\\n        Add alias\\n      \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"    \"],[8,[39,15],[[16,\"data-test-entity-edit-link\",true]],[[\"@route\",\"@models\"],[\"vault.cluster.access.identity.edit\",[28,[37,7],[[28,[37,3],[[30,0,[\"model\",\"identityType\"]]],null],[30,0,[\"model\",\"id\"]]],null]]],[[\"default\"],[[[[1,\"\\n      Edit\\n      \"],[1,[30,0,[\"model\",\"identityType\"]]],[1,\"\\n    \"]],[]]]]],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]]]]],[1,\"\\n\"],[46,[28,[37,17],[\"identity/item-\",[30,0,[\"section\"]]],null],null,[[\"model\"],[[30,0,[\"model\"]]]],null]],[\"p\",\"tab\"],false,[\"page-header\",\"link-to\",\"capitalize\",\"pluralize\",\"each\",\"-track-array\",\"tabs-for-identity-show\",\"array\",\"humanize\",\"toolbar\",\"toolbar-actions\",\"unless\",\"or\",\"and\",\"eq\",\"toolbar-link\",\"component\",\"concat\"]]",
    "moduleName": "vault/templates/vault/cluster/access/identity/show.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/leases/error", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.levelLeft>
      <h1 class="title is-3">
        <LinkTo @route="vault.cluster.access.leases">Leases</LinkTo>
      </h1>
    </p.levelLeft>
  </PageHeader>
  {{! template-lint-configure simple-unless "warn" }}
  {{#unless (or (eq this.model.httpStatus 400) (eq this.model.httpStatus 404))}}
    {{this.model.message}}
  {{/unless}}
  
  {{#if (eq this.model.httpStatus 400)}}
    <AlertBanner @type="danger" @message="{{this.model.keyId}} is not a valid lease ID" />
  {{else if (eq this.model.httpStatus 404)}}
    <EmptyState
      @title="No leases with that ID"
      @message="Unable to find lease for the ID &quot;{{this.model.keyId}}&quot;. Try going back to the lookup and re-entering the ID."
    >
      <LinkTo @route="vault.cluster.access.leases" class="link">
        Back to lookup
      </LinkTo>
    </EmptyState>
  {{else if (eq this.model.httpStatus 403)}}
    <EmptyState
      @title="You don't have access to a lease with that ID"
      @message="If you think you've reached this page in error, please contact your administrator."
    >
      <LinkTo @route="vault.cluster.access.leases" class="link">
        Back to lookup
      </LinkTo>
    </EmptyState>
  {{else}}
    {{#each this.model.errors as |error|}}
      <AlertBanner @type="danger" @message={{error}} />
    {{/each}}
  {{/if}}
  */
  {
    "id": "7Rti3w2q",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n      \"],[8,[39,1],null,[[\"@route\"],[\"vault.cluster.access.leases\"]],[[\"default\"],[[[[1,\"Leases\"]],[]]]]],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\"],[41,[51,[28,[37,3],[[28,[37,4],[[30,0,[\"model\",\"httpStatus\"]],400],null],[28,[37,4],[[30,0,[\"model\",\"httpStatus\"]],404],null]],null]],[[[1,\"  \"],[1,[30,0,[\"model\",\"message\"]]],[1,\"\\n\"]],[]],null],[1,\"\\n\"],[41,[28,[37,4],[[30,0,[\"model\",\"httpStatus\"]],400],null],[[[1,\"  \"],[8,[39,6],null,[[\"@type\",\"@message\"],[\"danger\",[29,[[30,0,[\"model\",\"keyId\"]],\" is not a valid lease ID\"]]]],null],[1,\"\\n\"]],[]],[[[41,[28,[37,4],[[30,0,[\"model\",\"httpStatus\"]],404],null],[[[1,\"  \"],[8,[39,7],null,[[\"@title\",\"@message\"],[\"No leases with that ID\",[29,[\"Unable to find lease for the ID \\\"\",[30,0,[\"model\",\"keyId\"]],\"\\\". Try going back to the lookup and re-entering the ID.\"]]]],[[\"default\"],[[[[1,\"\\n    \"],[8,[39,1],[[24,0,\"link\"]],[[\"@route\"],[\"vault.cluster.access.leases\"]],[[\"default\"],[[[[1,\"\\n      Back to lookup\\n    \"]],[]]]]],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]],[[[41,[28,[37,4],[[30,0,[\"model\",\"httpStatus\"]],403],null],[[[1,\"  \"],[8,[39,7],null,[[\"@title\",\"@message\"],[\"You don't have access to a lease with that ID\",\"If you think you've reached this page in error, please contact your administrator.\"]],[[\"default\"],[[[[1,\"\\n    \"],[8,[39,1],[[24,0,\"link\"]],[[\"@route\"],[\"vault.cluster.access.leases\"]],[[\"default\"],[[[[1,\"\\n      Back to lookup\\n    \"]],[]]]]],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]],[[[42,[28,[37,9],[[28,[37,9],[[30,0,[\"model\",\"errors\"]]],null]],null],null,[[[1,\"    \"],[8,[39,6],null,[[\"@type\",\"@message\"],[\"danger\",[30,2]]],null],[1,\"\\n\"]],[2]],null]],[]]]],[]]]],[]]]],[\"p\",\"error\"],false,[\"page-header\",\"link-to\",\"unless\",\"or\",\"eq\",\"if\",\"alert-banner\",\"empty-state\",\"each\",\"-track-array\"]]",
    "moduleName": "vault/templates/vault/cluster/access/leases/error.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/leases/index", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.levelLeft>
      <h1 class="title is-3">
        Lookup a lease
      </h1>
    </p.levelLeft>
  </PageHeader>
  
  <form {{action "lookupLease" this.leaseId on="submit"}}>
    <div class="box is-sideless is-fullwidth is-marginless">
      <div class="field">
        <label for="lease-id" class="is-label">Lease ID</label>
        <div class="control">
          <Input @value={{this.leaseId}} id="lease-id" class="input" />
        </div>
        <p class="help has-text-grey">
          If you know the
          <code>id</code>
          of a lease, enter it above to lookup details of the lease.
        </p>
      </div>
    </div>
    <div class="field is-grouped box is-fullwidth is-bottomless">
      <div class="control">
        <button type="submit" class="button is-primary">Lookup</button>
      </div>
    </div>
  </form>
  */
  {
    "id": "ob3vFurT",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n      Lookup a lease\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\\n\"],[11,\"form\"],[4,[38,1],[[30,0],\"lookupLease\",[30,0,[\"leaseId\"]]],[[\"on\"],[\"submit\"]]],[12],[1,\"\\n  \"],[10,0],[14,0,\"box is-sideless is-fullwidth is-marginless\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n      \"],[10,\"label\"],[14,\"for\",\"lease-id\"],[14,0,\"is-label\"],[12],[1,\"Lease ID\"],[13],[1,\"\\n      \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n        \"],[8,[39,2],[[24,1,\"lease-id\"],[24,0,\"input\"]],[[\"@value\"],[[30,0,[\"leaseId\"]]]],null],[1,\"\\n      \"],[13],[1,\"\\n      \"],[10,2],[14,0,\"help has-text-grey\"],[12],[1,\"\\n        If you know the\\n        \"],[10,\"code\"],[12],[1,\"id\"],[13],[1,\"\\n        of a lease, enter it above to lookup details of the lease.\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n  \"],[10,0],[14,0,\"field is-grouped box is-fullwidth is-bottomless\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n      \"],[10,\"button\"],[14,0,\"button is-primary\"],[14,4,\"submit\"],[12],[1,\"Lookup\"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"],[13]],[\"p\"],false,[\"page-header\",\"action\",\"input\"]]",
    "moduleName": "vault/templates/vault/cluster/access/leases/index.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/leases/list", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.top>
      <KeyValueHeader
        @baseKey={{this.baseKey}}
        @path="vault.cluster.access.leases.list"
        @model={{this.clusterController.model.name}}
        @root={{this.backendCrumb}}
        @showCurrent={{true}}
      />
    </p.top>
    <p.levelLeft>
      <h1 class="title is-3">
        <LinkTo @route="vault.cluster.access.leases.list-root">
          Leases
        </LinkTo>
      </h1>
    </p.levelLeft>
  </PageHeader>
  
  <Toolbar>
    <ToolbarFilters>
      <NavigateInput
        @filterFocusDidChange={{action "setFilterFocus"}}
        @filterDidChange={{action "setFilter"}}
        @filter={{this.filter}}
        @filterMatchesKey={{this.filterMatchesKey}}
        @firstPartialMatch={{this.firstPartialMatch}}
        @baseKey={{get this.baseKey "id"}}
        @shouldNavigateTree={{true}}
        @mode="leases"
        @placeholder="Filter leases"
      />
      {{#if this.filterFocused}}
        {{! template-lint-disable no-whitespace-for-layout }}
        &nbsp; &nbsp;
        {{! template-lint-enable no-whitespace-for-layout }}
        {{#if this.filterMatchesKey}}
          {{#unless this.filterIsFolder}}
            <p class="help has-text-grey is-size-8">
              <kbd>ENTER</kbd>
              to go to see details
            </p>
          {{/unless}}
        {{/if}}
        {{#if this.firstPartialMatch}}
          <p class="help has-text-grey is-size-8">
            <kbd>TAB</kbd>
            to complete
          </p>
        {{/if}}
      {{/if}}
    </ToolbarFilters>
    <ToolbarActions>
      {{#if (not-eq this.baseKey.id "")}}
        <div class="control">
          {{#if (and this.capabilities.forceRevokePrefix.canUpdate (not this.confirmingRevoke))}}
            <ConfirmAction
              @buttonClasses="toolbar-link"
              @confirmTitle="Disable this?"
              @confirmMessage={{concat "All leases under this one will also be removed and disregard any errors encountered."}}
              @confirmButtonText="Revoke"
              @onConfirmAction={{action "revokePrefix" this.baseKey.id true}}
            >
              Force revoke prefix
            </ConfirmAction>
          {{/if}}
        </div>
        <div class="control">
          {{#if (and this.capabilities.revokePrefix.canUpdate (not this.confirmingForceRevoke))}}
            <ConfirmAction
              @buttonClasses="toolbar-link"
              @confirmTitle="Revoke this?"
              @confirmMessage={{concat "All leases under this one will also be removed"}}
              @confirmButtonText="Revoke"
              @onConfirmAction={{action "revokePrefix" this.baseKey.id}}
              data-test-lease-revoke-prefix="true"
            >
              Revoke prefix
            </ConfirmAction>
          {{/if}}
        </div>
      {{/if}}
    </ToolbarActions>
  </Toolbar>
  
  {{#if this.model.meta.total}}
    {{#each this.model as |item|}}
      <LinkTo
        @route={{if item.isFolder "vault.cluster.access.leases.list" "vault.cluster.access.leases.show"}}
        @model={{item.id}}
        class="list-item-row"
        data-test-lease-link={{item.id}}
      >
        <Icon @name={{if item.isFolder "folder" "file"}} class="has-text-grey-light" />
        <span class="has-text-weight-semibold">{{or item.keyWithoutParent item.id}}</span>
      </LinkTo>
    {{else}}
      <EmptyState @title="There are no leases matching &quot;{{this.filter}}&quot;" />
    {{/each}}
  {{else}}
    <EmptyState @title={{this.emptyTitle}} />
  {{/if}}
  {{#if (gt this.model.meta.lastPage 1)}}
    <ListPagination
      @page={{this.model.meta.currentPage}}
      @lastPage={{this.model.meta.lastPage}}
      @link={{concat "vault.cluster.access.leases.list" (unless this.baseKey.id "-root")}}
      @models={{compact (array (if this.baseKey.id this.baseKey.id))}}
    />
  {{/if}}
  */
  {
    "id": "gdt6VZr/",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"top\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,1],null,[[\"@baseKey\",\"@path\",\"@model\",\"@root\",\"@showCurrent\"],[[30,0,[\"baseKey\"]],\"vault.cluster.access.leases.list\",[30,0,[\"clusterController\",\"model\",\"name\"]],[30,0,[\"backendCrumb\"]],true]],null],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n      \"],[8,[39,2],null,[[\"@route\"],[\"vault.cluster.access.leases.list-root\"]],[[\"default\"],[[[[1,\"\\n        Leases\\n      \"]],[]]]]],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\\n\"],[8,[39,3],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[39,4],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,5],null,[[\"@filterFocusDidChange\",\"@filterDidChange\",\"@filter\",\"@filterMatchesKey\",\"@firstPartialMatch\",\"@baseKey\",\"@shouldNavigateTree\",\"@mode\",\"@placeholder\"],[[28,[37,6],[[30,0],\"setFilterFocus\"],null],[28,[37,6],[[30,0],\"setFilter\"],null],[30,0,[\"filter\"]],[30,0,[\"filterMatchesKey\"]],[30,0,[\"firstPartialMatch\"]],[28,[37,7],[[30,0,[\"baseKey\"]],\"id\"],null],true,\"leases\",\"Filter leases\"]],null],[1,\"\\n\"],[41,[30,0,[\"filterFocused\"]],[[[1,\"         \\n\"],[41,[30,0,[\"filterMatchesKey\"]],[[[41,[51,[30,0,[\"filterIsFolder\"]]],[[[1,\"          \"],[10,2],[14,0,\"help has-text-grey is-size-8\"],[12],[1,\"\\n            \"],[10,\"kbd\"],[12],[1,\"ENTER\"],[13],[1,\"\\n            to go to see details\\n          \"],[13],[1,\"\\n\"]],[]],null]],[]],null],[41,[30,0,[\"firstPartialMatch\"]],[[[1,\"        \"],[10,2],[14,0,\"help has-text-grey is-size-8\"],[12],[1,\"\\n          \"],[10,\"kbd\"],[12],[1,\"TAB\"],[13],[1,\"\\n          to complete\\n        \"],[13],[1,\"\\n\"]],[]],null]],[]],null],[1,\"  \"]],[]]]]],[1,\"\\n  \"],[8,[39,10],null,null,[[\"default\"],[[[[1,\"\\n\"],[41,[28,[37,11],[[30,0,[\"baseKey\",\"id\"]],\"\"],null],[[[1,\"      \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n\"],[41,[28,[37,12],[[30,0,[\"capabilities\",\"forceRevokePrefix\",\"canUpdate\"]],[28,[37,13],[[30,0,[\"confirmingRevoke\"]]],null]],null],[[[1,\"          \"],[8,[39,14],null,[[\"@buttonClasses\",\"@confirmTitle\",\"@confirmMessage\",\"@confirmButtonText\",\"@onConfirmAction\"],[\"toolbar-link\",\"Disable this?\",[28,[37,15],[\"All leases under this one will also be removed and disregard any errors encountered.\"],null],\"Revoke\",[28,[37,6],[[30,0],\"revokePrefix\",[30,0,[\"baseKey\",\"id\"]],true],null]]],[[\"default\"],[[[[1,\"\\n            Force revoke prefix\\n          \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"      \"],[13],[1,\"\\n      \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n\"],[41,[28,[37,12],[[30,0,[\"capabilities\",\"revokePrefix\",\"canUpdate\"]],[28,[37,13],[[30,0,[\"confirmingForceRevoke\"]]],null]],null],[[[1,\"          \"],[8,[39,14],[[24,\"data-test-lease-revoke-prefix\",\"true\"]],[[\"@buttonClasses\",\"@confirmTitle\",\"@confirmMessage\",\"@confirmButtonText\",\"@onConfirmAction\"],[\"toolbar-link\",\"Revoke this?\",[28,[37,15],[\"All leases under this one will also be removed\"],null],\"Revoke\",[28,[37,6],[[30,0],\"revokePrefix\",[30,0,[\"baseKey\",\"id\"]]],null]]],[[\"default\"],[[[[1,\"\\n            Revoke prefix\\n          \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"      \"],[13],[1,\"\\n\"]],[]],null],[1,\"  \"]],[]]]]],[1,\"\\n\"]],[]]]]],[1,\"\\n\\n\"],[41,[30,0,[\"model\",\"meta\",\"total\"]],[[[42,[28,[37,17],[[28,[37,17],[[30,0,[\"model\"]]],null]],null],null,[[[1,\"    \"],[8,[39,2],[[24,0,\"list-item-row\"],[16,\"data-test-lease-link\",[30,2,[\"id\"]]]],[[\"@route\",\"@model\"],[[52,[30,2,[\"isFolder\"]],\"vault.cluster.access.leases.list\",\"vault.cluster.access.leases.show\"],[30,2,[\"id\"]]]],[[\"default\"],[[[[1,\"\\n      \"],[8,[39,18],[[24,0,\"has-text-grey-light\"]],[[\"@name\"],[[52,[30,2,[\"isFolder\"]],\"folder\",\"file\"]]],null],[1,\"\\n      \"],[10,1],[14,0,\"has-text-weight-semibold\"],[12],[1,[28,[35,19],[[30,2,[\"keyWithoutParent\"]],[30,2,[\"id\"]]],null]],[13],[1,\"\\n    \"]],[]]]]],[1,\"\\n\"]],[2]],[[[1,\"    \"],[8,[39,20],null,[[\"@title\"],[[29,[\"There are no leases matching \\\"\",[30,0,[\"filter\"]],\"\\\"\"]]]],null],[1,\"\\n\"]],[]]]],[]],[[[1,\"  \"],[8,[39,20],null,[[\"@title\"],[[30,0,[\"emptyTitle\"]]]],null],[1,\"\\n\"]],[]]],[41,[28,[37,21],[[30,0,[\"model\",\"meta\",\"lastPage\"]],1],null],[[[1,\"  \"],[8,[39,22],null,[[\"@page\",\"@lastPage\",\"@link\",\"@models\"],[[30,0,[\"model\",\"meta\",\"currentPage\"]],[30,0,[\"model\",\"meta\",\"lastPage\"]],[28,[37,15],[\"vault.cluster.access.leases.list\",[52,[51,[30,0,[\"baseKey\",\"id\"]]],\"-root\"]],null],[28,[37,23],[[28,[37,24],[[52,[30,0,[\"baseKey\",\"id\"]],[30,0,[\"baseKey\",\"id\"]]]],null]],null]]],null],[1,\"\\n\"]],[]],null]],[\"p\",\"item\"],false,[\"page-header\",\"key-value-header\",\"link-to\",\"toolbar\",\"toolbar-filters\",\"navigate-input\",\"action\",\"get\",\"if\",\"unless\",\"toolbar-actions\",\"not-eq\",\"and\",\"not\",\"confirm-action\",\"concat\",\"each\",\"-track-array\",\"icon\",\"or\",\"empty-state\",\"gt\",\"list-pagination\",\"compact\",\"array\"]]",
    "moduleName": "vault/templates/vault/cluster/access/leases/list.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/leases/show", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.top>
      <KeyValueHeader
        @baseKey={{this.baseKey}}
        @path="vault.cluster.access.leases.list"
        @root={{this.backendCrumb}}
        @showCurrent={{true}}
        @linkToPaths={{this.capabilities.leases.canList}}
      />
    </p.top>
    <p.levelLeft>
      <h1 class="title is-3">
        <LinkTo @route="vault.cluster.access.leases">
          Leases
        </LinkTo>
      </h1>
    </p.levelLeft>
  </PageHeader>
  
  {{#if this.capabilities.revoke.canUpdate}}
    <Toolbar>
      <ToolbarActions>
        <ConfirmAction
          @buttonClasses="toolbar-link"
          @confirmTitle="Revoke this?"
          @confirmMessage={{concat "All leases under this one will also be removed"}}
          @confirmButtonText="Confirm"
          @onConfirmAction={{action "revokeLease" this.model}}
          data-test-lease-revoke="true"
        >
          Revoke lease
        </ConfirmAction>
      </ToolbarActions>
    </Toolbar>
  {{/if}}
  
  <div class="field box is-fullwidth is-sideless is-paddingless is-marginless">
    <InfoTableRow @label="Issue time" @value={{this.model.issueTime}}>
      {{date-format this.model.issueTime "MMM dd, yyyy hh:mm:ss a"}}
      <br />
      <code>
        {{this.model.issueTime}}
      </code>
    </InfoTableRow>
    <InfoTableRow @label="Renewable" @value={{this.model.renewable}} />
    <InfoTableRow @label="Last renewal" @value={{this.model.lastRenewal}}>
      {{date-format this.model.lastRenewal "MMM dd, yyyy hh:mm:ss a"}}
      <br />
      <code>
        {{this.model.lastRenewal}}
      </code>
    </InfoTableRow>
    {{#if this.model.expireTime}}
      <InfoTableRow @label="Expiration time" @value={{this.model.expireTime}}>
        {{date-format this.model.expireTime "MMM dd, yyyy hh:mm:ss a"}}
        <br />
        <code>
          {{this.model.expireTime}}
        </code>
      </InfoTableRow>
      <InfoTableRow @label="Expires in" @value={{date-from-now this.model.expireTime increment=1000 hideSuffix=true}} />
    {{/if}}
    <InfoTableRow @label="TTL" @value={{this.model.ttl}} />
  </div>
  {{#if (and (not this.model.isAuthLease) this.model.renewable this.capabilities.renew.canUpdate)}}
    <div class="box is-shadowless" data-test-lease-renew-picker={{true}}>
      <h2 class="title is-6">Renew Lease</h2>
      <form {{action "renewLease" this.model this.increment on="submit"}}>
        <TtlPicker
          @label="Increment"
          @helperTextEnabled="Lease will expire after"
          @helperTextDisabled="OpenBao will use the default lease duration"
          @labelClass="is-label"
          @onChange={{action (mut this.increment)}}
          @unit="s"
        />
        <div class="field has-top-margin-s">
          <div class="control">
            <button type="submit" class="button is-primary">
              Renew lease
            </button>
          </div>
        </div>
      </form>
    </div>
  {{/if}}
  */
  {
    "id": "lBMOGfOF",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"top\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,1],null,[[\"@baseKey\",\"@path\",\"@root\",\"@showCurrent\",\"@linkToPaths\"],[[30,0,[\"baseKey\"]],\"vault.cluster.access.leases.list\",[30,0,[\"backendCrumb\"]],true,[30,0,[\"capabilities\",\"leases\",\"canList\"]]]],null],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n      \"],[8,[39,2],null,[[\"@route\"],[\"vault.cluster.access.leases\"]],[[\"default\"],[[[[1,\"\\n        Leases\\n      \"]],[]]]]],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\\n\"],[41,[30,0,[\"capabilities\",\"revoke\",\"canUpdate\"]],[[[1,\"  \"],[8,[39,4],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,5],null,null,[[\"default\"],[[[[1,\"\\n      \"],[8,[39,6],[[24,\"data-test-lease-revoke\",\"true\"]],[[\"@buttonClasses\",\"@confirmTitle\",\"@confirmMessage\",\"@confirmButtonText\",\"@onConfirmAction\"],[\"toolbar-link\",\"Revoke this?\",[28,[37,7],[\"All leases under this one will also be removed\"],null],\"Confirm\",[28,[37,8],[[30,0],\"revokeLease\",[30,0,[\"model\"]]],null]]],[[\"default\"],[[[[1,\"\\n        Revoke lease\\n      \"]],[]]]]],[1,\"\\n    \"]],[]]]]],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"\\n\"],[10,0],[14,0,\"field box is-fullwidth is-sideless is-paddingless is-marginless\"],[12],[1,\"\\n  \"],[8,[39,9],null,[[\"@label\",\"@value\"],[\"Issue time\",[30,0,[\"model\",\"issueTime\"]]]],[[\"default\"],[[[[1,\"\\n    \"],[1,[28,[35,10],[[30,0,[\"model\",\"issueTime\"]],\"MMM dd, yyyy hh:mm:ss a\"],null]],[1,\"\\n    \"],[10,\"br\"],[12],[13],[1,\"\\n    \"],[10,\"code\"],[12],[1,\"\\n      \"],[1,[30,0,[\"model\",\"issueTime\"]]],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[39,9],null,[[\"@label\",\"@value\"],[\"Renewable\",[30,0,[\"model\",\"renewable\"]]]],null],[1,\"\\n  \"],[8,[39,9],null,[[\"@label\",\"@value\"],[\"Last renewal\",[30,0,[\"model\",\"lastRenewal\"]]]],[[\"default\"],[[[[1,\"\\n    \"],[1,[28,[35,10],[[30,0,[\"model\",\"lastRenewal\"]],\"MMM dd, yyyy hh:mm:ss a\"],null]],[1,\"\\n    \"],[10,\"br\"],[12],[13],[1,\"\\n    \"],[10,\"code\"],[12],[1,\"\\n      \"],[1,[30,0,[\"model\",\"lastRenewal\"]]],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"],[41,[30,0,[\"model\",\"expireTime\"]],[[[1,\"    \"],[8,[39,9],null,[[\"@label\",\"@value\"],[\"Expiration time\",[30,0,[\"model\",\"expireTime\"]]]],[[\"default\"],[[[[1,\"\\n      \"],[1,[28,[35,10],[[30,0,[\"model\",\"expireTime\"]],\"MMM dd, yyyy hh:mm:ss a\"],null]],[1,\"\\n      \"],[10,\"br\"],[12],[13],[1,\"\\n      \"],[10,\"code\"],[12],[1,\"\\n        \"],[1,[30,0,[\"model\",\"expireTime\"]]],[1,\"\\n      \"],[13],[1,\"\\n    \"]],[]]]]],[1,\"\\n    \"],[8,[39,9],null,[[\"@label\",\"@value\"],[\"Expires in\",[28,[37,11],[[30,0,[\"model\",\"expireTime\"]]],[[\"increment\",\"hideSuffix\"],[1000,true]]]]],null],[1,\"\\n\"]],[]],null],[1,\"  \"],[8,[39,9],null,[[\"@label\",\"@value\"],[\"TTL\",[30,0,[\"model\",\"ttl\"]]]],null],[1,\"\\n\"],[13],[1,\"\\n\"],[41,[28,[37,12],[[28,[37,13],[[30,0,[\"model\",\"isAuthLease\"]]],null],[30,0,[\"model\",\"renewable\"]],[30,0,[\"capabilities\",\"renew\",\"canUpdate\"]]],null],[[[1,\"  \"],[10,0],[14,0,\"box is-shadowless\"],[15,\"data-test-lease-renew-picker\",true],[12],[1,\"\\n    \"],[10,\"h2\"],[14,0,\"title is-6\"],[12],[1,\"Renew Lease\"],[13],[1,\"\\n    \"],[11,\"form\"],[4,[38,8],[[30,0],\"renewLease\",[30,0,[\"model\"]],[30,0,[\"increment\"]]],[[\"on\"],[\"submit\"]]],[12],[1,\"\\n      \"],[8,[39,14],null,[[\"@label\",\"@helperTextEnabled\",\"@helperTextDisabled\",\"@labelClass\",\"@onChange\",\"@unit\"],[\"Increment\",\"Lease will expire after\",\"OpenBao will use the default lease duration\",\"is-label\",[28,[37,8],[[30,0],[28,[37,15],[[30,0,[\"increment\"]]],null]],null],\"s\"]],null],[1,\"\\n      \"],[10,0],[14,0,\"field has-top-margin-s\"],[12],[1,\"\\n        \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n          \"],[10,\"button\"],[14,0,\"button is-primary\"],[14,4,\"submit\"],[12],[1,\"\\n            Renew lease\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]],null]],[\"p\"],false,[\"page-header\",\"key-value-header\",\"link-to\",\"if\",\"toolbar\",\"toolbar-actions\",\"confirm-action\",\"concat\",\"action\",\"info-table-row\",\"date-format\",\"date-from-now\",\"and\",\"not\",\"ttl-picker\",\"mut\"]]",
    "moduleName": "vault/templates/vault/cluster/access/leases/show.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/loading", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <LayoutLoading />
  */
  {
    "id": "ckfPq652",
    "block": "[[[8,[39,0],null,null,null]],[],false,[\"layout-loading\"]]",
    "moduleName": "vault/templates/vault/cluster/access/loading.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/method/item/create", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <GeneratedItem @model={{this.model}} @mode="create" @itemType={{this.model.itemType}} />
  */
  {
    "id": "Xpq4Thn8",
    "block": "[[[8,[39,0],null,[[\"@model\",\"@mode\",\"@itemType\"],[[30,0,[\"model\"]],\"create\",[30,0,[\"model\",\"itemType\"]]]],null]],[],false,[\"generated-item\"]]",
    "moduleName": "vault/templates/vault/cluster/access/method/item/create.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/method/item/edit", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <GeneratedItem @model={{this.model}} @mode="edit" @itemType={{this.itemType}} />
  */
  {
    "id": "UCxiwdyz",
    "block": "[[[8,[39,0],null,[[\"@model\",\"@mode\",\"@itemType\"],[[30,0,[\"model\"]],\"edit\",[30,0,[\"itemType\"]]]],null]],[],false,[\"generated-item\"]]",
    "moduleName": "vault/templates/vault/cluster/access/method/item/edit.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/method/item/list", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <GeneratedItemList
    @model={{this.model}}
    @itemType={{this.itemType}}
    @paths={{this.paths}}
    @methodModel={{this.methodModel}}
  />
  */
  {
    "id": "MX/DXqIs",
    "block": "[[[8,[39,0],null,[[\"@model\",\"@itemType\",\"@paths\",\"@methodModel\"],[[30,0,[\"model\"]],[30,0,[\"itemType\"]],[30,0,[\"paths\"]],[30,0,[\"methodModel\"]]]],null]],[],false,[\"generated-item-list\"]]",
    "moduleName": "vault/templates/vault/cluster/access/method/item/list.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/method/item/show", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <GeneratedItem @model={{this.model}} @itemType={{this.itemType}} @mode="show" />
  */
  {
    "id": "P0mTV8Yq",
    "block": "[[[8,[39,0],null,[[\"@model\",\"@itemType\",\"@mode\"],[[30,0,[\"model\"]],[30,0,[\"itemType\"]],\"show\"]],null]],[],false,[\"generated-item\"]]",
    "moduleName": "vault/templates/vault/cluster/access/method/item/show.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/method/section", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.top>
      <KeyValueHeader @path="vault.cluster.access.methods">
        <li>
          <span class="sep">
            /
          </span>
          <LinkTo @route="vault.cluster.access.methods">
            methods
          </LinkTo>
        </li>
      </KeyValueHeader>
    </p.top>
    <p.levelLeft>
      <h1 class="title is-3">
        {{this.model.id}}
      </h1>
    </p.levelLeft>
  </PageHeader>
  
  {{#if (not (includes this.model.type (supported-managed-auth-backends)))}}
    <div class="has-text-grey has-top-bottom-margin" data-test-doc-link>
      The OpenBao UI only supports configuration for this authentication method. For management, the
      <DocLink @path="/api-docs">API or CLI</DocLink>
      should be used.
    </div>
  {{/if}}
  
  {{section-tabs this.model "authShow" this.paths}}
  
  {{#if (eq this.section "configuration")}}
    <Toolbar>
      <ToolbarActions>
        <ToolbarLink @route="vault.cluster.settings.auth.configure" @model={{this.model.id}} data-test-configure-link="true">
          Configure
        </ToolbarLink>
      </ToolbarActions>
    </Toolbar>
  {{/if}}
  {{component (concat "auth-method/" this.section) model=this.model}}
  */
  {
    "id": "Awt2apZT",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"top\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,1],null,[[\"@path\"],[\"vault.cluster.access.methods\"]],[[\"default\"],[[[[1,\"\\n      \"],[10,\"li\"],[12],[1,\"\\n        \"],[10,1],[14,0,\"sep\"],[12],[1,\"\\n          /\\n        \"],[13],[1,\"\\n        \"],[8,[39,2],null,[[\"@route\"],[\"vault.cluster.access.methods\"]],[[\"default\"],[[[[1,\"\\n          methods\\n        \"]],[]]]]],[1,\"\\n      \"],[13],[1,\"\\n    \"]],[]]]]],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n      \"],[1,[30,0,[\"model\",\"id\"]]],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\\n\"],[41,[28,[37,4],[[28,[37,5],[[30,0,[\"model\",\"type\"]],[28,[37,6],null,null]],null]],null],[[[1,\"  \"],[10,0],[14,0,\"has-text-grey has-top-bottom-margin\"],[14,\"data-test-doc-link\",\"\"],[12],[1,\"\\n    The OpenBao UI only supports configuration for this authentication method. For management, the\\n    \"],[8,[39,7],null,[[\"@path\"],[\"/api-docs\"]],[[\"default\"],[[[[1,\"API or CLI\"]],[]]]]],[1,\"\\n    should be used.\\n  \"],[13],[1,\"\\n\"]],[]],null],[1,\"\\n\"],[1,[28,[35,8],[[30,0,[\"model\"]],\"authShow\",[30,0,[\"paths\"]]],null]],[1,\"\\n\\n\"],[41,[28,[37,9],[[30,0,[\"section\"]],\"configuration\"],null],[[[1,\"  \"],[8,[39,10],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,11],null,null,[[\"default\"],[[[[1,\"\\n      \"],[8,[39,12],[[24,\"data-test-configure-link\",\"true\"]],[[\"@route\",\"@model\"],[\"vault.cluster.settings.auth.configure\",[30,0,[\"model\",\"id\"]]]],[[\"default\"],[[[[1,\"\\n        Configure\\n      \"]],[]]]]],[1,\"\\n    \"]],[]]]]],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]],null],[46,[28,[37,14],[\"auth-method/\",[30,0,[\"section\"]]],null],null,[[\"model\"],[[30,0,[\"model\"]]]],null]],[\"p\"],false,[\"page-header\",\"key-value-header\",\"link-to\",\"if\",\"not\",\"includes\",\"supported-managed-auth-backends\",\"doc-link\",\"section-tabs\",\"eq\",\"toolbar\",\"toolbar-actions\",\"toolbar-link\",\"component\",\"concat\"]]",
    "moduleName": "vault/templates/vault/cluster/access/method/section.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/methods", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.levelLeft>
      <h1 class="title is-3">
        Authentication Methods
      </h1>
    </p.levelLeft>
  </PageHeader>
  
  <Toolbar>
    <ToolbarFilters>
      <SearchSelect
        @id="filter-by-auth-type"
        @options={{this.authMethodArrayByType}}
        @selectLimit="1"
        @disallowNewItems={{true}}
        @fallbackComponent="input-search"
        @onChange={{this.filterAuthType}}
        @placeholder={{"Filter by auth type"}}
        @displayInherit={{true}}
        @inputValue={{if this.selectedAuthType (array this.selectedAuthType)}}
        @disabled={{if this.selectedAuthName true false}}
        class="is-marginless"
      />
      <SearchSelect
        @id="filter-by-auth-name"
        @options={{this.authMethodArrayByName}}
        @selectLimit="1"
        @disallowNewItems={{true}}
        @fallbackComponent="input-search"
        @onChange={{this.filterAuthName}}
        @placeholder={{"Filter by auth name"}}
        @displayInherit={{true}}
        @inputValue={{if this.selectedAuthName (array this.selectedAuthName)}}
        class="is-marginless has-left-padding-s"
      />
    </ToolbarFilters>
    <ToolbarActions>
      <ToolbarLink @route="vault.cluster.settings.auth.enable" @type="add" data-test-auth-enable>
        Enable new method
      </ToolbarLink>
    </ToolbarActions>
  </Toolbar>
  
  {{#each (sort-by "path" this.authMethodList) as |method|}}
    <LinkedBlock
      @params={{array "vault.cluster.access.method" method.id}}
      class="list-item-row"
      data-test-auth-backend-link={{method.id}}
    >
      <div class="level is-mobile">
        <div class="level-left">
          <div>
            <ToolTip @horizontalPosition="left" as |T|>
              <T.Trigger>
                <Icon
                  @name={{if
                    (or (find-by "type" method.methodType (mountable-auth-methods)) (eq method.methodType "token"))
                    method.methodType
                    "auth"
                  }}
                  class="has-text-grey-light"
                />
              </T.Trigger>
              <T.Content @defaultClass="tool-tip">
                <div class="box">
                  {{method.methodType}}
                </div>
              </T.Content>
            </ToolTip>
            <span data-test-path data-test-id={{method.id}} class="has-text-weight-semibold has-text-black">
              {{method.path}}
            </span>
            <br />
            <code class="has-text-grey is-size-8">
              {{method.accessor}}
            </code>
          </div>
        </div>
        <div class="level-right is-flex is-paddingless is-marginless">
          <div class="level-item">
            <PopupMenu @name="auth-backend-nav">
              <Confirm as |c|>
                <nav class="menu">
                  <ul class="menu-list">
                    <li>
                      <LinkTo @route="vault.cluster.access.method.section" @models={{array method.id "configuration"}}>
                        View configuration
                      </LinkTo>
                    </li>
                    {{#if method.canEdit}}
                      <li>
                        <LinkTo @route="vault.cluster.settings.auth.configure" @model={{method.id}}>
                          Edit configuration
                        </LinkTo>
                      </li>
                    {{/if}}
  
                    {{#if (and (not-eq method.methodType "token") method.canDisable)}}
                      <li class="action">
                        <c.Message
                          @id={{method.id}}
                          @title="Disable method?"
                          @message="This may affect access to OpenBao data."
                          @triggerText="Disable"
                          @onConfirm={{perform this.disableMethod method}}
                        />
                      </li>
                    {{/if}}
                  </ul>
                </nav>
              </Confirm>
            </PopupMenu>
          </div>
        </div>
      </div>
    </LinkedBlock>
  {{/each}}
  */
  {
    "id": "eOru5Y2V",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n      Authentication Methods\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\\n\"],[8,[39,1],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[39,2],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,3],[[24,0,\"is-marginless\"]],[[\"@id\",\"@options\",\"@selectLimit\",\"@disallowNewItems\",\"@fallbackComponent\",\"@onChange\",\"@placeholder\",\"@displayInherit\",\"@inputValue\",\"@disabled\"],[\"filter-by-auth-type\",[30,0,[\"authMethodArrayByType\"]],\"1\",true,\"input-search\",[30,0,[\"filterAuthType\"]],\"Filter by auth type\",true,[52,[30,0,[\"selectedAuthType\"]],[28,[37,5],[[30,0,[\"selectedAuthType\"]]],null]],[52,[30,0,[\"selectedAuthName\"]],true,false]]],null],[1,\"\\n    \"],[8,[39,3],[[24,0,\"is-marginless has-left-padding-s\"]],[[\"@id\",\"@options\",\"@selectLimit\",\"@disallowNewItems\",\"@fallbackComponent\",\"@onChange\",\"@placeholder\",\"@displayInherit\",\"@inputValue\"],[\"filter-by-auth-name\",[30,0,[\"authMethodArrayByName\"]],\"1\",true,\"input-search\",[30,0,[\"filterAuthName\"]],\"Filter by auth name\",true,[52,[30,0,[\"selectedAuthName\"]],[28,[37,5],[[30,0,[\"selectedAuthName\"]]],null]]]],null],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[39,6],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,7],[[24,\"data-test-auth-enable\",\"\"]],[[\"@route\",\"@type\"],[\"vault.cluster.settings.auth.enable\",\"add\"]],[[\"default\"],[[[[1,\"\\n      Enable new method\\n    \"]],[]]]]],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]]]]],[1,\"\\n\\n\"],[42,[28,[37,9],[[28,[37,9],[[28,[37,10],[\"path\",[30,0,[\"authMethodList\"]]],null]],null]],null],null,[[[1,\"  \"],[8,[39,11],[[24,0,\"list-item-row\"],[16,\"data-test-auth-backend-link\",[30,2,[\"id\"]]]],[[\"@params\"],[[28,[37,5],[\"vault.cluster.access.method\",[30,2,[\"id\"]]],null]]],[[\"default\"],[[[[1,\"\\n    \"],[10,0],[14,0,\"level is-mobile\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"level-left\"],[12],[1,\"\\n        \"],[10,0],[12],[1,\"\\n          \"],[8,[39,12],null,[[\"@horizontalPosition\"],[\"left\"]],[[\"default\"],[[[[1,\"\\n            \"],[8,[30,3,[\"Trigger\"]],null,null,[[\"default\"],[[[[1,\"\\n              \"],[8,[39,13],[[24,0,\"has-text-grey-light\"]],[[\"@name\"],[[52,[28,[37,14],[[28,[37,15],[\"type\",[30,2,[\"methodType\"]],[28,[37,16],null,null]],null],[28,[37,17],[[30,2,[\"methodType\"]],\"token\"],null]],null],[30,2,[\"methodType\"]],\"auth\"]]],null],[1,\"\\n            \"]],[]]]]],[1,\"\\n            \"],[8,[30,3,[\"Content\"]],null,[[\"@defaultClass\"],[\"tool-tip\"]],[[\"default\"],[[[[1,\"\\n              \"],[10,0],[14,0,\"box\"],[12],[1,\"\\n                \"],[1,[30,2,[\"methodType\"]]],[1,\"\\n              \"],[13],[1,\"\\n            \"]],[]]]]],[1,\"\\n          \"]],[3]]]]],[1,\"\\n          \"],[10,1],[14,\"data-test-path\",\"\"],[15,\"data-test-id\",[30,2,[\"id\"]]],[14,0,\"has-text-weight-semibold has-text-black\"],[12],[1,\"\\n            \"],[1,[30,2,[\"path\"]]],[1,\"\\n          \"],[13],[1,\"\\n          \"],[10,\"br\"],[12],[13],[1,\"\\n          \"],[10,\"code\"],[14,0,\"has-text-grey is-size-8\"],[12],[1,\"\\n            \"],[1,[30,2,[\"accessor\"]]],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n      \"],[10,0],[14,0,\"level-right is-flex is-paddingless is-marginless\"],[12],[1,\"\\n        \"],[10,0],[14,0,\"level-item\"],[12],[1,\"\\n          \"],[8,[39,18],null,[[\"@name\"],[\"auth-backend-nav\"]],[[\"default\"],[[[[1,\"\\n            \"],[8,[39,19],null,null,[[\"default\"],[[[[1,\"\\n              \"],[10,\"nav\"],[14,0,\"menu\"],[12],[1,\"\\n                \"],[10,\"ul\"],[14,0,\"menu-list\"],[12],[1,\"\\n                  \"],[10,\"li\"],[12],[1,\"\\n                    \"],[8,[39,20],null,[[\"@route\",\"@models\"],[\"vault.cluster.access.method.section\",[28,[37,5],[[30,2,[\"id\"]],\"configuration\"],null]]],[[\"default\"],[[[[1,\"\\n                      View configuration\\n                    \"]],[]]]]],[1,\"\\n                  \"],[13],[1,\"\\n\"],[41,[30,2,[\"canEdit\"]],[[[1,\"                    \"],[10,\"li\"],[12],[1,\"\\n                      \"],[8,[39,20],null,[[\"@route\",\"@model\"],[\"vault.cluster.settings.auth.configure\",[30,2,[\"id\"]]]],[[\"default\"],[[[[1,\"\\n                        Edit configuration\\n                      \"]],[]]]]],[1,\"\\n                    \"],[13],[1,\"\\n\"]],[]],null],[1,\"\\n\"],[41,[28,[37,21],[[28,[37,22],[[30,2,[\"methodType\"]],\"token\"],null],[30,2,[\"canDisable\"]]],null],[[[1,\"                    \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                      \"],[8,[30,4,[\"Message\"]],null,[[\"@id\",\"@title\",\"@message\",\"@triggerText\",\"@onConfirm\"],[[30,2,[\"id\"]],\"Disable method?\",\"This may affect access to OpenBao data.\",\"Disable\",[28,[37,23],[[30,0,[\"disableMethod\"]],[30,2]],null]]],null],[1,\"\\n                    \"],[13],[1,\"\\n\"]],[]],null],[1,\"                \"],[13],[1,\"\\n              \"],[13],[1,\"\\n            \"]],[4]]]]],[1,\"\\n          \"]],[]]]]],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[2]],null]],[\"p\",\"method\",\"T\",\"c\"],false,[\"page-header\",\"toolbar\",\"toolbar-filters\",\"search-select\",\"if\",\"array\",\"toolbar-actions\",\"toolbar-link\",\"each\",\"-track-array\",\"sort-by\",\"linked-block\",\"tool-tip\",\"icon\",\"or\",\"find-by\",\"mountable-auth-methods\",\"eq\",\"popup-menu\",\"confirm\",\"link-to\",\"and\",\"not-eq\",\"perform\"]]",
    "moduleName": "vault/templates/vault/cluster/access/methods.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/mfa/enforcements/create", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <Mfa::MfaLoginEnforcementHeader @heading="New enforcement" />
  <Mfa::MfaLoginEnforcementForm
    @model={{this.model}}
    @onClose={{transition-to "vault.cluster.access.mfa.enforcements"}}
    @onSave={{transition-to "vault.cluster.access.mfa.enforcements.enforcement" this.model.name}}
    class="has-top-margin-l"
  />
  */
  {
    "id": "NND6dJh1",
    "block": "[[[8,[39,0],null,[[\"@heading\"],[\"New enforcement\"]],null],[1,\"\\n\"],[8,[39,1],[[24,0,\"has-top-margin-l\"]],[[\"@model\",\"@onClose\",\"@onSave\"],[[30,0,[\"model\"]],[28,[37,2],[\"vault.cluster.access.mfa.enforcements\"],null],[28,[37,2],[\"vault.cluster.access.mfa.enforcements.enforcement\",[30,0,[\"model\",\"name\"]]],null]]],null]],[],false,[\"mfa/mfa-login-enforcement-header\",\"mfa/mfa-login-enforcement-form\",\"transition-to\"]]",
    "moduleName": "vault/templates/vault/cluster/access/mfa/enforcements/create.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/mfa/enforcements/enforcement/edit", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <Mfa::MfaLoginEnforcementHeader @heading="Update enforcement" />
  <Mfa::MfaLoginEnforcementForm
    @model={{this.model}}
    @onSave={{transition-to "vault.cluster.access.mfa.enforcements.enforcement" this.model.name}}
    @onClose={{transition-to "vault.cluster.access.mfa.enforcements.enforcement" this.model.name}}
    class="has-top-margin-l"
  />
  */
  {
    "id": "Z5jRM+xj",
    "block": "[[[8,[39,0],null,[[\"@heading\"],[\"Update enforcement\"]],null],[1,\"\\n\"],[8,[39,1],[[24,0,\"has-top-margin-l\"]],[[\"@model\",\"@onSave\",\"@onClose\"],[[30,0,[\"model\"]],[28,[37,2],[\"vault.cluster.access.mfa.enforcements.enforcement\",[30,0,[\"model\",\"name\"]]],null],[28,[37,2],[\"vault.cluster.access.mfa.enforcements.enforcement\",[30,0,[\"model\",\"name\"]]],null]]],null]],[],false,[\"mfa/mfa-login-enforcement-header\",\"mfa/mfa-login-enforcement-form\",\"transition-to\"]]",
    "moduleName": "vault/templates/vault/cluster/access/mfa/enforcements/enforcement/edit.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/mfa/enforcements/enforcement/index", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.top>
      <nav class="breadcrumb" aria-label="breadcrumb">
        <ul>
          <li>
            <span class="sep">&#x0002f;</span>
            <LinkTo @route="vault.cluster.access.mfa.enforcements.index">
              Enforcements
            </LinkTo>
          </li>
        </ul>
      </nav>
    </p.top>
    <p.levelLeft>
      <h1 class="title is-3">
        <Icon @name="lock" @size="24" />
        {{this.model.name}}
      </h1>
    </p.levelLeft>
  </PageHeader>
  <div class="tabs-container box is-sideless is-fullwidth is-paddingless is-marginless">
    <nav class="tabs" aria-label="Enforcement tabs">
      <ul>
        <LinkTo
          @route="vault.cluster.access.mfa.enforcements.enforcement"
          @query={{hash tab="targets"}}
          data-test-tab="targets"
        >
          Targets
        </LinkTo>
        <LinkTo
          @route="vault.cluster.access.mfa.enforcements.enforcement"
          @query={{hash tab="methods"}}
          data-test-tab="methods"
        >
          Methods
        </LinkTo>
      </ul>
    </nav>
  </div>
  <Toolbar>
    <ToolbarActions>
      <button
        class="toolbar-link"
        onclick={{action (mut this.showDeleteConfirmation) true}}
        type="button"
        data-test-enforcement-delete
      >
        Delete
      </button>
      <div class="toolbar-separator"></div>
      <ToolbarLink
        @route="vault.cluster.access.mfa.enforcements.enforcement.edit"
        @model={{this.model.id}}
        data-test-enforcement-edit
      >
        Edit enforcement
      </ToolbarLink>
    </ToolbarActions>
  </Toolbar>
  
  {{#if (eq this.tab "targets")}}
    {{#if @model.targets}}
      {{#each @model.targets as |target|}}
        <LinkedBlock
          class="list-item-row"
          @disabled={{not target.link}}
          @params={{union (array target.link) target.linkModels}}
          data-test-target={{target.title}}
        >
          <div class="level is-mobile">
            <div class="level-left">
              <div>
                <Icon @name={{target.icon}} />
                <span class="has-text-weight-semibold has-text-black">
                  {{target.title}}
                </span>
                <div class="has-text-grey is-size-8">
                  <code>
                    {{target.subTitle}}
                  </code>
                </div>
              </div>
            </div>
            {{#if target.link}}
              <div class="level-right is-flex is-paddingless is-marginless">
                <div class="level-item">
                  <PopupMenu>
                    <nav class="menu" aria-label="Enforcement target more menu">
                      <ul class="menu-list">
                        <li>
                          <LinkTo @route={{target.link}} @models={{target.linkModels}} data-test-target-link={{target.title}}>
                            Details
                          </LinkTo>
                        </li>
                      </ul>
                    </nav>
                  </PopupMenu>
                </div>
              </div>
            {{/if}}
          </div>
        </LinkedBlock>
      {{/each}}
    {{else}}
      <EmptyState
        @title="No target exists for this enforcement"
        @message="A target might have been deleted after the enforcement was created."
      />
    {{/if}}
  {{else if (eq this.tab "methods")}}
    {{#each this.model.mfa_methods as |method|}}
      <Mfa::MethodListItem @model={{method}} />
    {{/each}}
  {{/if}}
  
  <ConfirmationModal
    @title="Delete enforcement?"
    @confirmText={{this.model.name}}
    @toConfirmMsg="deleting the transformation."
    @buttonText="Delete"
    @isActive={{this.showDeleteConfirmation}}
    @onClose={{action (mut this.showDeleteConfirmation) false}}
    @onConfirm={{this.delete}}
  >
    <p class="has-bottom-margin-m">
      Deleting the
      <strong>{{this.model.name}}</strong>
      enforcement will mean that the MFA method that depends on it will no longer enforce multi-factor authentication.
      <br /><br />
      Deleting this enforcement cannot be undone; it will have to be recreated.
    </p>
    <MessageError @model={{this.model}} @errorMessage={{this.deleteError}} />
  </ConfirmationModal>
  */
  {
    "id": "05qhFJCo",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"top\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"nav\"],[14,0,\"breadcrumb\"],[14,\"aria-label\",\"breadcrumb\"],[12],[1,\"\\n      \"],[10,\"ul\"],[12],[1,\"\\n        \"],[10,\"li\"],[12],[1,\"\\n          \"],[10,1],[14,0,\"sep\"],[12],[1,\"/\"],[13],[1,\"\\n          \"],[8,[39,1],null,[[\"@route\"],[\"vault.cluster.access.mfa.enforcements.index\"]],[[\"default\"],[[[[1,\"\\n            Enforcements\\n          \"]],[]]]]],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n      \"],[8,[39,2],null,[[\"@name\",\"@size\"],[\"lock\",\"24\"]],null],[1,\"\\n      \"],[1,[30,0,[\"model\",\"name\"]]],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\"],[10,0],[14,0,\"tabs-container box is-sideless is-fullwidth is-paddingless is-marginless\"],[12],[1,\"\\n  \"],[10,\"nav\"],[14,0,\"tabs\"],[14,\"aria-label\",\"Enforcement tabs\"],[12],[1,\"\\n    \"],[10,\"ul\"],[12],[1,\"\\n      \"],[8,[39,1],[[24,\"data-test-tab\",\"targets\"]],[[\"@route\",\"@query\"],[\"vault.cluster.access.mfa.enforcements.enforcement\",[28,[37,3],null,[[\"tab\"],[\"targets\"]]]]],[[\"default\"],[[[[1,\"\\n        Targets\\n      \"]],[]]]]],[1,\"\\n      \"],[8,[39,1],[[24,\"data-test-tab\",\"methods\"]],[[\"@route\",\"@query\"],[\"vault.cluster.access.mfa.enforcements.enforcement\",[28,[37,3],null,[[\"tab\"],[\"methods\"]]]]],[[\"default\"],[[[[1,\"\\n        Methods\\n      \"]],[]]]]],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"],[13],[1,\"\\n\"],[8,[39,4],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[39,5],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"button\"],[14,0,\"toolbar-link\"],[15,\"onclick\",[28,[37,6],[[30,0],[28,[37,7],[[30,0,[\"showDeleteConfirmation\"]]],null],true],null]],[14,\"data-test-enforcement-delete\",\"\"],[14,4,\"button\"],[12],[1,\"\\n      Delete\\n    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"toolbar-separator\"],[12],[13],[1,\"\\n    \"],[8,[39,8],[[24,\"data-test-enforcement-edit\",\"\"]],[[\"@route\",\"@model\"],[\"vault.cluster.access.mfa.enforcements.enforcement.edit\",[30,0,[\"model\",\"id\"]]]],[[\"default\"],[[[[1,\"\\n      Edit enforcement\\n    \"]],[]]]]],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]]]]],[1,\"\\n\\n\"],[41,[28,[37,10],[[30,0,[\"tab\"]],\"targets\"],null],[[[41,[30,2,[\"targets\"]],[[[42,[28,[37,12],[[28,[37,12],[[30,2,[\"targets\"]]],null]],null],null,[[[1,\"      \"],[8,[39,13],[[24,0,\"list-item-row\"],[16,\"data-test-target\",[30,3,[\"title\"]]]],[[\"@disabled\",\"@params\"],[[28,[37,14],[[30,3,[\"link\"]]],null],[28,[37,15],[[28,[37,16],[[30,3,[\"link\"]]],null],[30,3,[\"linkModels\"]]],null]]],[[\"default\"],[[[[1,\"\\n        \"],[10,0],[14,0,\"level is-mobile\"],[12],[1,\"\\n          \"],[10,0],[14,0,\"level-left\"],[12],[1,\"\\n            \"],[10,0],[12],[1,\"\\n              \"],[8,[39,2],null,[[\"@name\"],[[30,3,[\"icon\"]]]],null],[1,\"\\n              \"],[10,1],[14,0,\"has-text-weight-semibold has-text-black\"],[12],[1,\"\\n                \"],[1,[30,3,[\"title\"]]],[1,\"\\n              \"],[13],[1,\"\\n              \"],[10,0],[14,0,\"has-text-grey is-size-8\"],[12],[1,\"\\n                \"],[10,\"code\"],[12],[1,\"\\n                  \"],[1,[30,3,[\"subTitle\"]]],[1,\"\\n                \"],[13],[1,\"\\n              \"],[13],[1,\"\\n            \"],[13],[1,\"\\n          \"],[13],[1,\"\\n\"],[41,[30,3,[\"link\"]],[[[1,\"            \"],[10,0],[14,0,\"level-right is-flex is-paddingless is-marginless\"],[12],[1,\"\\n              \"],[10,0],[14,0,\"level-item\"],[12],[1,\"\\n                \"],[8,[39,17],null,null,[[\"default\"],[[[[1,\"\\n                  \"],[10,\"nav\"],[14,0,\"menu\"],[14,\"aria-label\",\"Enforcement target more menu\"],[12],[1,\"\\n                    \"],[10,\"ul\"],[14,0,\"menu-list\"],[12],[1,\"\\n                      \"],[10,\"li\"],[12],[1,\"\\n                        \"],[8,[39,1],[[16,\"data-test-target-link\",[30,3,[\"title\"]]]],[[\"@route\",\"@models\"],[[30,3,[\"link\"]],[30,3,[\"linkModels\"]]]],[[\"default\"],[[[[1,\"\\n                          Details\\n                        \"]],[]]]]],[1,\"\\n                      \"],[13],[1,\"\\n                    \"],[13],[1,\"\\n                  \"],[13],[1,\"\\n                \"]],[]]]]],[1,\"\\n              \"],[13],[1,\"\\n            \"],[13],[1,\"\\n\"]],[]],null],[1,\"        \"],[13],[1,\"\\n      \"]],[]]]]],[1,\"\\n\"]],[3]],null]],[]],[[[1,\"    \"],[8,[39,18],null,[[\"@title\",\"@message\"],[\"No target exists for this enforcement\",\"A target might have been deleted after the enforcement was created.\"]],null],[1,\"\\n\"]],[]]]],[]],[[[41,[28,[37,10],[[30,0,[\"tab\"]],\"methods\"],null],[[[42,[28,[37,12],[[28,[37,12],[[30,0,[\"model\",\"mfa_methods\"]]],null]],null],null,[[[1,\"    \"],[8,[39,19],null,[[\"@model\"],[[30,4]]],null],[1,\"\\n\"]],[4]],null]],[]],null]],[]]],[1,\"\\n\"],[8,[39,20],null,[[\"@title\",\"@confirmText\",\"@toConfirmMsg\",\"@buttonText\",\"@isActive\",\"@onClose\",\"@onConfirm\"],[\"Delete enforcement?\",[30,0,[\"model\",\"name\"]],\"deleting the transformation.\",\"Delete\",[30,0,[\"showDeleteConfirmation\"]],[28,[37,6],[[30,0],[28,[37,7],[[30,0,[\"showDeleteConfirmation\"]]],null],false],null],[30,0,[\"delete\"]]]],[[\"default\"],[[[[1,\"\\n  \"],[10,2],[14,0,\"has-bottom-margin-m\"],[12],[1,\"\\n    Deleting the\\n    \"],[10,\"strong\"],[12],[1,[30,0,[\"model\",\"name\"]]],[13],[1,\"\\n    enforcement will mean that the MFA method that depends on it will no longer enforce multi-factor authentication.\\n    \"],[10,\"br\"],[12],[13],[10,\"br\"],[12],[13],[1,\"\\n    Deleting this enforcement cannot be undone; it will have to be recreated.\\n  \"],[13],[1,\"\\n  \"],[8,[39,21],null,[[\"@model\",\"@errorMessage\"],[[30,0,[\"model\"]],[30,0,[\"deleteError\"]]]],null],[1,\"\\n\"]],[]]]]]],[\"p\",\"@model\",\"target\",\"method\"],false,[\"page-header\",\"link-to\",\"icon\",\"hash\",\"toolbar\",\"toolbar-actions\",\"action\",\"mut\",\"toolbar-link\",\"if\",\"eq\",\"each\",\"-track-array\",\"linked-block\",\"not\",\"union\",\"array\",\"popup-menu\",\"empty-state\",\"mfa/method-list-item\",\"confirmation-modal\",\"message-error\"]]",
    "moduleName": "vault/templates/vault/cluster/access/mfa/enforcements/enforcement/index.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/mfa/enforcements/index", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.levelLeft>
      <h1 class="title is-3">
        Multi-factor Authentication
      </h1>
    </p.levelLeft>
  </PageHeader>
  
  <Mfa::Nav />
  
  <Toolbar>
    <ToolbarActions>
      <ToolbarLink @route="vault.cluster.access.mfa.enforcements.create" @type="add" data-test-enforcement-create>
        New enforcement
      </ToolbarLink>
    </ToolbarActions>
  </Toolbar>
  
  {{#if (gt this.model.length 0)}}
    {{#each this.model as |item|}}
      <Mfa::LoginEnforcementListItem @model={{item}} />
    {{/each}}
  {{else}}
    <EmptyState @title="No enforcements found." @message="Add a new one to get started." />
  {{/if}}
  */
  {
    "id": "MhfMpuTU",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n      Multi-factor Authentication\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\\n\"],[8,[39,1],null,null,null],[1,\"\\n\\n\"],[8,[39,2],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[39,3],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,4],[[24,\"data-test-enforcement-create\",\"\"]],[[\"@route\",\"@type\"],[\"vault.cluster.access.mfa.enforcements.create\",\"add\"]],[[\"default\"],[[[[1,\"\\n      New enforcement\\n    \"]],[]]]]],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]]]]],[1,\"\\n\\n\"],[41,[28,[37,6],[[30,0,[\"model\",\"length\"]],0],null],[[[42,[28,[37,8],[[28,[37,8],[[30,0,[\"model\"]]],null]],null],null,[[[1,\"    \"],[8,[39,9],null,[[\"@model\"],[[30,2]]],null],[1,\"\\n\"]],[2]],null]],[]],[[[1,\"  \"],[8,[39,10],null,[[\"@title\",\"@message\"],[\"No enforcements found.\",\"Add a new one to get started.\"]],null],[1,\"\\n\"]],[]]]],[\"p\",\"item\"],false,[\"page-header\",\"mfa/nav\",\"toolbar\",\"toolbar-actions\",\"toolbar-link\",\"if\",\"gt\",\"each\",\"-track-array\",\"mfa/login-enforcement-list-item\",\"empty-state\"]]",
    "moduleName": "vault/templates/vault/cluster/access/mfa/enforcements/index.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/mfa/index", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.levelLeft>
      <h1 class="title is-3">
        Multi-factor authentication
      </h1>
    </p.levelLeft>
  </PageHeader>
  
  <div class="box is-fullwidth is-sideless is-flex-between is-shadowless is-marginless">
    <p>
      Configure and enforce multi-factor authentication (MFA) for users logging into OpenBao, for any
      <br />
      authentication method.
      {{! TODO Add a link to a tutorial for 'auth-methods/multi-factor-authentication' }}
    </p>
    <button
      type="submit"
      class="button is-primary"
      {{on "click" (transition-to "vault.cluster.access.mfa.methods.create")}}
      data-test-mfa-configure
    >
      Configure MFA
    </button>
  </div>
  <div class="box is-fullwidth is-shadowless">
    <p>
      <b>Step 1:</b>
      Set up an MFA configuration using one of the methods; TOTP, Okta, Duo or Pingid.
    </p>
    <p>
      <b>Step 2:</b>
      Set up an enforcement to map the MFA configuration to your chosen auth method(s).
    </p>
  </div>
  
  <div class="box is-fullwidth is-shadowless">
    <img src={{img-path "~/mfa-landing.png"}} alt="MFA configure diagram" />
  </div>
  */
  {
    "id": "dw5Lq4lB",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n      Multi-factor authentication\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\\n\"],[10,0],[14,0,\"box is-fullwidth is-sideless is-flex-between is-shadowless is-marginless\"],[12],[1,\"\\n  \"],[10,2],[12],[1,\"\\n    Configure and enforce multi-factor authentication (MFA) for users logging into OpenBao, for any\\n    \"],[10,\"br\"],[12],[13],[1,\"\\n    authentication method.\\n\"],[1,\"  \"],[13],[1,\"\\n  \"],[11,\"button\"],[24,0,\"button is-primary\"],[24,\"data-test-mfa-configure\",\"\"],[24,4,\"submit\"],[4,[38,1],[\"click\",[28,[37,2],[\"vault.cluster.access.mfa.methods.create\"],null]],null],[12],[1,\"\\n    Configure MFA\\n  \"],[13],[1,\"\\n\"],[13],[1,\"\\n\"],[10,0],[14,0,\"box is-fullwidth is-shadowless\"],[12],[1,\"\\n  \"],[10,2],[12],[1,\"\\n    \"],[10,\"b\"],[12],[1,\"Step 1:\"],[13],[1,\"\\n    Set up an MFA configuration using one of the methods; TOTP, Okta, Duo or Pingid.\\n  \"],[13],[1,\"\\n  \"],[10,2],[12],[1,\"\\n    \"],[10,\"b\"],[12],[1,\"Step 2:\"],[13],[1,\"\\n    Set up an enforcement to map the MFA configuration to your chosen auth method(s).\\n  \"],[13],[1,\"\\n\"],[13],[1,\"\\n\\n\"],[10,0],[14,0,\"box is-fullwidth is-shadowless\"],[12],[1,\"\\n  \"],[10,\"img\"],[15,\"src\",[28,[37,3],[\"~/mfa-landing.png\"],null]],[14,\"alt\",\"MFA configure diagram\"],[12],[13],[1,\"\\n\"],[13]],[\"p\"],false,[\"page-header\",\"on\",\"transition-to\",\"img-path\"]]",
    "moduleName": "vault/templates/vault/cluster/access/mfa/index.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/mfa/methods/create", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.levelLeft class="has-border-bottom-light">
      <h1 class="title is-3">
        {{#if this.method}}
          Configure
          {{this.method.name}}
          MFA
        {{else}}
          Multi-factor authentication
        {{/if}}
      </h1>
    </p.levelLeft>
    <p.top>
      <nav class="breadcrumb">
        <ul>
          <li>
            <span class="sep">&#x0002f;</span>
            <LinkTo @route="vault.cluster.access.mfa.methods.index">
              Methods
            </LinkTo>
          </li>
        </ul>
      </nav>
    </p.top>
  </PageHeader>
  <div class="has-border-top-light has-top-padding-l">
    {{#if this.showForms}}
      <h3 class="is-size-4 has-text-weight-semibold">Settings</h3>
      <p class="has-border-top-light has-top-padding-l">
        {{this.description}}
        <DocLink @path={{concat "/api-docs/secret/identity/mfa/" this.type}}>Learn more.</DocLink>
      </p>
      <Mfa::MethodForm @model={{this.method}} @validations={{this.methodErrors}} class="is-shadowless" />
      <Mfa::MfaLoginEnforcementHeader
        @isInline={{true}}
        @radioCardGroupValue={{this.enforcementPreference}}
        @onRadioCardSelect={{this.onEnforcementPreferenceChange}}
        @onEnforcementSelect={{fn (mut this.enforcement)}}
      />
      {{#if (eq this.enforcementPreference "new")}}
        <Mfa::MfaLoginEnforcementForm
          @model={{this.enforcement}}
          @isInline={{true}}
          @modelErrors={{this.enforcementErrors}}
          class="has-top-margin-l"
        />
      {{/if}}
    {{else}}
      <p>
        Multi-factor authentication (MFA) allows you to set up another layer of security on top of existing authentication
        methods. OpenBao has four available methods.
        <DocLink @path="/api-docs/secret/identity/mfa">Learn more.</DocLink>
      </p>
      <div class="is-flex-row has-top-margin-xl">
        {{#each this.methodNames as |methodName|}}
          <RadioCard
            @value={{lowercase methodName}}
            @groupValue={{this.type}}
            @onChange={{this.onTypeSelect}}
            data-test-radio-card={{lowercase methodName}}
          >
            <div class="radio-card-row is-flex-v-centered">
              <div>
                <Icon @name={{(lowercase methodName)}} @size="24" class={{if (eq methodName "TOTP") "has-text-grey"}} />
                <p class="has-text-weight-semibold has-text-center">
                  {{methodName}}
                </p>
              </div>
            </div>
          </RadioCard>
        {{/each}}
      </div>
      {{#if this.type}}
        <p class="has-top-margin-l">
          {{this.description}}
          <DocLink @path={{concat "/api-docs/secret/identity/mfa/" this.type}}>Learn more.</DocLink>
        </p>
        {{! in a future release cards may be displayed to choose from either template or custom config for TOTP }}
        {{! if template is selected a user could choose a predefined config for common authenticators and the values would be populated on the model }}
      {{/if}}
    {{/if}}
  
    <div class="has-top-margin-l has-border-top-light">
      <div class="has-top-margin-l has-bottom-margin-l">
        {{#if this.showForms}}
          <button class="button is-primary" type="button" {{on "click" (perform this.save)}} data-test-mfa-create-save>
            Continue
          </button>
          <button class="button has-left-margin-xs" type="button" {{on "click" this.cancel}}>
            Cancel
          </button>
        {{else if this.type}}
          <button class="button is-primary" type="button" {{on "click" this.createModels}} data-test-mfa-create-next>
            Next
          </button>
        {{/if}}
      </div>
    </div>
  </div>
  */
  {
    "id": "h1Y/hqIV",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],[[24,0,\"has-border-bottom-light\"]],null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n\"],[41,[30,0,[\"method\"]],[[[1,\"        Configure\\n        \"],[1,[30,0,[\"method\",\"name\"]]],[1,\"\\n        MFA\\n\"]],[]],[[[1,\"        Multi-factor authentication\\n\"]],[]]],[1,\"    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[30,1,[\"top\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"nav\"],[14,0,\"breadcrumb\"],[12],[1,\"\\n      \"],[10,\"ul\"],[12],[1,\"\\n        \"],[10,\"li\"],[12],[1,\"\\n          \"],[10,1],[14,0,\"sep\"],[12],[1,\"/\"],[13],[1,\"\\n          \"],[8,[39,2],null,[[\"@route\"],[\"vault.cluster.access.mfa.methods.index\"]],[[\"default\"],[[[[1,\"\\n            Methods\\n          \"]],[]]]]],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\"],[10,0],[14,0,\"has-border-top-light has-top-padding-l\"],[12],[1,\"\\n\"],[41,[30,0,[\"showForms\"]],[[[1,\"    \"],[10,\"h3\"],[14,0,\"is-size-4 has-text-weight-semibold\"],[12],[1,\"Settings\"],[13],[1,\"\\n    \"],[10,2],[14,0,\"has-border-top-light has-top-padding-l\"],[12],[1,\"\\n      \"],[1,[30,0,[\"description\"]]],[1,\"\\n      \"],[8,[39,3],null,[[\"@path\"],[[28,[37,4],[\"/api-docs/secret/identity/mfa/\",[30,0,[\"type\"]]],null]]],[[\"default\"],[[[[1,\"Learn more.\"]],[]]]]],[1,\"\\n    \"],[13],[1,\"\\n    \"],[8,[39,5],[[24,0,\"is-shadowless\"]],[[\"@model\",\"@validations\"],[[30,0,[\"method\"]],[30,0,[\"methodErrors\"]]]],null],[1,\"\\n    \"],[8,[39,6],null,[[\"@isInline\",\"@radioCardGroupValue\",\"@onRadioCardSelect\",\"@onEnforcementSelect\"],[true,[30,0,[\"enforcementPreference\"]],[30,0,[\"onEnforcementPreferenceChange\"]],[28,[37,7],[[28,[37,8],[[30,0,[\"enforcement\"]]],null]],null]]],null],[1,\"\\n\"],[41,[28,[37,9],[[30,0,[\"enforcementPreference\"]],\"new\"],null],[[[1,\"      \"],[8,[39,10],[[24,0,\"has-top-margin-l\"]],[[\"@model\",\"@isInline\",\"@modelErrors\"],[[30,0,[\"enforcement\"]],true,[30,0,[\"enforcementErrors\"]]]],null],[1,\"\\n\"]],[]],null]],[]],[[[1,\"    \"],[10,2],[12],[1,\"\\n      Multi-factor authentication (MFA) allows you to set up another layer of security on top of existing authentication\\n      methods. OpenBao has four available methods.\\n      \"],[8,[39,3],null,[[\"@path\"],[\"/api-docs/secret/identity/mfa\"]],[[\"default\"],[[[[1,\"Learn more.\"]],[]]]]],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"is-flex-row has-top-margin-xl\"],[12],[1,\"\\n\"],[42,[28,[37,12],[[28,[37,12],[[30,0,[\"methodNames\"]]],null]],null],null,[[[1,\"        \"],[8,[39,13],[[16,\"data-test-radio-card\",[28,[37,14],[[30,2]],null]]],[[\"@value\",\"@groupValue\",\"@onChange\"],[[28,[37,14],[[30,2]],null],[30,0,[\"type\"]],[30,0,[\"onTypeSelect\"]]]],[[\"default\"],[[[[1,\"\\n          \"],[10,0],[14,0,\"radio-card-row is-flex-v-centered\"],[12],[1,\"\\n            \"],[10,0],[12],[1,\"\\n              \"],[8,[39,15],[[16,0,[52,[28,[37,9],[[30,2],\"TOTP\"],null],\"has-text-grey\"]]],[[\"@name\",\"@size\"],[[28,[37,14],[[30,2]],null],\"24\"]],null],[1,\"\\n              \"],[10,2],[14,0,\"has-text-weight-semibold has-text-center\"],[12],[1,\"\\n                \"],[1,[30,2]],[1,\"\\n              \"],[13],[1,\"\\n            \"],[13],[1,\"\\n          \"],[13],[1,\"\\n        \"]],[]]]]],[1,\"\\n\"]],[2]],null],[1,\"    \"],[13],[1,\"\\n\"],[41,[30,0,[\"type\"]],[[[1,\"      \"],[10,2],[14,0,\"has-top-margin-l\"],[12],[1,\"\\n        \"],[1,[30,0,[\"description\"]]],[1,\"\\n        \"],[8,[39,3],null,[[\"@path\"],[[28,[37,4],[\"/api-docs/secret/identity/mfa/\",[30,0,[\"type\"]]],null]]],[[\"default\"],[[[[1,\"Learn more.\"]],[]]]]],[1,\"\\n      \"],[13],[1,\"\\n\"]],[]],null]],[]]],[1,\"\\n  \"],[10,0],[14,0,\"has-top-margin-l has-border-top-light\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"has-top-margin-l has-bottom-margin-l\"],[12],[1,\"\\n\"],[41,[30,0,[\"showForms\"]],[[[1,\"        \"],[11,\"button\"],[24,0,\"button is-primary\"],[24,\"data-test-mfa-create-save\",\"\"],[24,4,\"button\"],[4,[38,16],[\"click\",[28,[37,17],[[30,0,[\"save\"]]],null]],null],[12],[1,\"\\n          Continue\\n        \"],[13],[1,\"\\n        \"],[11,\"button\"],[24,0,\"button has-left-margin-xs\"],[24,4,\"button\"],[4,[38,16],[\"click\",[30,0,[\"cancel\"]]],null],[12],[1,\"\\n          Cancel\\n        \"],[13],[1,\"\\n\"]],[]],[[[41,[30,0,[\"type\"]],[[[1,\"        \"],[11,\"button\"],[24,0,\"button is-primary\"],[24,\"data-test-mfa-create-next\",\"\"],[24,4,\"button\"],[4,[38,16],[\"click\",[30,0,[\"createModels\"]]],null],[12],[1,\"\\n          Next\\n        \"],[13],[1,\"\\n      \"]],[]],null]],[]]],[1,\"    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"],[13]],[\"p\",\"methodName\"],false,[\"page-header\",\"if\",\"link-to\",\"doc-link\",\"concat\",\"mfa/method-form\",\"mfa/mfa-login-enforcement-header\",\"fn\",\"mut\",\"eq\",\"mfa/mfa-login-enforcement-form\",\"each\",\"-track-array\",\"radio-card\",\"lowercase\",\"icon\",\"on\",\"perform\"]]",
    "moduleName": "vault/templates/vault/cluster/access/mfa/methods/create.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/mfa/methods/index", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.levelLeft>
      <h1 class="title is-3">
        Multi-factor Authentication
      </h1>
    </p.levelLeft>
  </PageHeader>
  
  <Mfa::Nav />
  
  <Toolbar>
    <ToolbarActions>
      <ToolbarLink @route="vault.cluster.access.mfa.methods.create" @type="add" data-test-mfa-method-create>
        New MFA method
      </ToolbarLink>
    </ToolbarActions>
  </Toolbar>
  
  {{#if (gt this.model.length 0)}}
    {{#each this.model as |item|}}
      <Mfa::MethodListItem @model={{item}} />
    {{/each}}
  {{else}}
    <EmptyState @title="No methods found." @message="Add a new one to get started." />
  {{/if}}
  */
  {
    "id": "dFfWpF/m",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n      Multi-factor Authentication\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\\n\"],[8,[39,1],null,null,null],[1,\"\\n\\n\"],[8,[39,2],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[39,3],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,4],[[24,\"data-test-mfa-method-create\",\"\"]],[[\"@route\",\"@type\"],[\"vault.cluster.access.mfa.methods.create\",\"add\"]],[[\"default\"],[[[[1,\"\\n      New MFA method\\n    \"]],[]]]]],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]]]]],[1,\"\\n\\n\"],[41,[28,[37,6],[[30,0,[\"model\",\"length\"]],0],null],[[[42,[28,[37,8],[[28,[37,8],[[30,0,[\"model\"]]],null]],null],null,[[[1,\"    \"],[8,[39,9],null,[[\"@model\"],[[30,2]]],null],[1,\"\\n\"]],[2]],null]],[]],[[[1,\"  \"],[8,[39,10],null,[[\"@title\",\"@message\"],[\"No methods found.\",\"Add a new one to get started.\"]],null],[1,\"\\n\"]],[]]]],[\"p\",\"item\"],false,[\"page-header\",\"mfa/nav\",\"toolbar\",\"toolbar-actions\",\"toolbar-link\",\"if\",\"gt\",\"each\",\"-track-array\",\"mfa/method-list-item\",\"empty-state\"]]",
    "moduleName": "vault/templates/vault/cluster/access/mfa/methods/index.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/mfa/methods/method/edit", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.levelLeft>
      <h1 class="title is-3">
        Configure
        {{this.model.method.name}}
        MFA
      </h1>
    </p.levelLeft>
  </PageHeader>
  
  <Mfa::MethodForm
    @model={{this.model.method}}
    @hasActions={{true}}
    @onSave={{transition-to "vault.cluster.access.mfa.methods.method" this.model.method.id}}
    @onClose={{transition-to "vault.cluster.access.mfa.methods.method" this.model.method.id}}
  />
  */
  {
    "id": "Oo1WqiIW",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n      Configure\\n      \"],[1,[30,0,[\"model\",\"method\",\"name\"]]],[1,\"\\n      MFA\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\\n\"],[8,[39,1],null,[[\"@model\",\"@hasActions\",\"@onSave\",\"@onClose\"],[[30,0,[\"model\",\"method\"]],true,[28,[37,2],[\"vault.cluster.access.mfa.methods.method\",[30,0,[\"model\",\"method\",\"id\"]]],null],[28,[37,2],[\"vault.cluster.access.mfa.methods.method\",[30,0,[\"model\",\"method\",\"id\"]]],null]]],null]],[\"p\"],false,[\"page-header\",\"mfa/method-form\",\"transition-to\"]]",
    "moduleName": "vault/templates/vault/cluster/access/mfa/methods/method/edit.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/mfa/methods/method/index", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.top>
      <nav class="breadcrumb" aria-label="breadcrumbs">
        <ul>
          <li>
            <span class="sep">&#x0002f;</span>
            <LinkTo @route="vault.cluster.access.mfa.methods.index">
              Methods
            </LinkTo>
          </li>
        </ul>
      </nav>
    </p.top>
    <p.levelLeft>
      <h1 class="title is-3">
        <Icon @size="24" @name={{this.model.method.type}} />
        {{this.model.method.name}}
      </h1>
    </p.levelLeft>
  </PageHeader>
  
  <div class="tabs-container box is-sideless is-fullwidth is-paddingless is-marginless">
    <nav class="tabs" aria-label="tabs">
      <ul>
        <LinkTo @route="vault.cluster.access.mfa.methods.method" @query={{hash tab="config"}} data-test-tab="config">
          Configuration
        </LinkTo>
        <LinkTo
          @route="vault.cluster.access.mfa.methods.method"
          @query={{hash tab="enforcements"}}
          data-test-tab="enforcements"
        >
          Enforcements
        </LinkTo>
      </ul>
    </nav>
  </div>
  
  {{#if (eq this.tab "config")}}
    <Toolbar>
      <ToolbarActions>
        <ConfirmAction
          @buttonClasses="toolbar-link"
          @disabled={{not (is-empty this.model.enforcements)}}
          @onConfirmAction={{this.deleteMethod}}
          @confirmTitle="Are you sure?"
          @confirmMessage="Deleting this MFA configuration is permanent, and it will no longer be available."
          @confirmButtonText="Delete"
        >
          Delete
        </ConfirmAction>
        <ToolbarLink
          @route="vault.cluster.access.mfa.methods.method.edit"
          @model={{this.model.method.id}}
          data-test-mfa-method-edit
        >
          Edit
        </ToolbarLink>
      </ToolbarActions>
    </Toolbar>
    <div class="box is-fullwidth is-sideless is-paddingless is-marginless">
      {{#each this.model.method.attrs as |attr|}}
        {{#if (eq attr.type "object")}}
          <InfoTableRow
            @alwaysRender={{not (is-empty-value (get this.model.method attr.name))}}
            @label={{or attr.options.label (to-label attr.name)}}
            @value={{stringify (get this.model.method attr.name)}}
          />
        {{else}}
          <InfoTableRow
            @alwaysRender={{not (is-empty-value (get this.model.method attr.name))}}
            @label={{or attr.options.label (to-label attr.name)}}
            @value={{get this.model.method attr.name}}
          />
        {{/if}}
      {{/each}}
    </div>
  {{else if (eq this.tab "enforcements")}}
    <Toolbar>
      <ToolbarActions>
        <ToolbarLink @route="vault.cluster.access.mfa.enforcements.create" @type="add" data-test-enforcement-create>
          New enforcement
        </ToolbarLink>
      </ToolbarActions>
    </Toolbar>
    <div class="box is-fullwidth is-sideless is-paddingless is-marginless">
      {{#if (is-empty this.model.enforcements)}}
        <EmptyState
          @title="No enforcements found."
          @message="No enforcements are applied to this MFA method. Edit an existing enforcement or add a new one to get started."
        />
      {{else}}
        {{#each this.model.enforcements as |item|}}
          <Mfa::LoginEnforcementListItem @model={{item}} />
        {{/each}}
      {{/if}}
    </div>
  {{/if}}
  */
  {
    "id": "Yd3ITvEj",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"top\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"nav\"],[14,0,\"breadcrumb\"],[14,\"aria-label\",\"breadcrumbs\"],[12],[1,\"\\n      \"],[10,\"ul\"],[12],[1,\"\\n        \"],[10,\"li\"],[12],[1,\"\\n          \"],[10,1],[14,0,\"sep\"],[12],[1,\"/\"],[13],[1,\"\\n          \"],[8,[39,1],null,[[\"@route\"],[\"vault.cluster.access.mfa.methods.index\"]],[[\"default\"],[[[[1,\"\\n            Methods\\n          \"]],[]]]]],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n      \"],[8,[39,2],null,[[\"@size\",\"@name\"],[\"24\",[30,0,[\"model\",\"method\",\"type\"]]]],null],[1,\"\\n      \"],[1,[30,0,[\"model\",\"method\",\"name\"]]],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\\n\"],[10,0],[14,0,\"tabs-container box is-sideless is-fullwidth is-paddingless is-marginless\"],[12],[1,\"\\n  \"],[10,\"nav\"],[14,0,\"tabs\"],[14,\"aria-label\",\"tabs\"],[12],[1,\"\\n    \"],[10,\"ul\"],[12],[1,\"\\n      \"],[8,[39,1],[[24,\"data-test-tab\",\"config\"]],[[\"@route\",\"@query\"],[\"vault.cluster.access.mfa.methods.method\",[28,[37,3],null,[[\"tab\"],[\"config\"]]]]],[[\"default\"],[[[[1,\"\\n        Configuration\\n      \"]],[]]]]],[1,\"\\n      \"],[8,[39,1],[[24,\"data-test-tab\",\"enforcements\"]],[[\"@route\",\"@query\"],[\"vault.cluster.access.mfa.methods.method\",[28,[37,3],null,[[\"tab\"],[\"enforcements\"]]]]],[[\"default\"],[[[[1,\"\\n        Enforcements\\n      \"]],[]]]]],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"],[13],[1,\"\\n\\n\"],[41,[28,[37,5],[[30,0,[\"tab\"]],\"config\"],null],[[[1,\"  \"],[8,[39,6],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,7],null,null,[[\"default\"],[[[[1,\"\\n      \"],[8,[39,8],null,[[\"@buttonClasses\",\"@disabled\",\"@onConfirmAction\",\"@confirmTitle\",\"@confirmMessage\",\"@confirmButtonText\"],[\"toolbar-link\",[28,[37,9],[[28,[37,10],[[30,0,[\"model\",\"enforcements\"]]],null]],null],[30,0,[\"deleteMethod\"]],\"Are you sure?\",\"Deleting this MFA configuration is permanent, and it will no longer be available.\",\"Delete\"]],[[\"default\"],[[[[1,\"\\n        Delete\\n      \"]],[]]]]],[1,\"\\n      \"],[8,[39,11],[[24,\"data-test-mfa-method-edit\",\"\"]],[[\"@route\",\"@model\"],[\"vault.cluster.access.mfa.methods.method.edit\",[30,0,[\"model\",\"method\",\"id\"]]]],[[\"default\"],[[[[1,\"\\n        Edit\\n      \"]],[]]]]],[1,\"\\n    \"]],[]]]]],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[10,0],[14,0,\"box is-fullwidth is-sideless is-paddingless is-marginless\"],[12],[1,\"\\n\"],[42,[28,[37,13],[[28,[37,13],[[30,0,[\"model\",\"method\",\"attrs\"]]],null]],null],null,[[[41,[28,[37,5],[[30,2,[\"type\"]],\"object\"],null],[[[1,\"        \"],[8,[39,14],null,[[\"@alwaysRender\",\"@label\",\"@value\"],[[28,[37,9],[[28,[37,15],[[28,[37,16],[[30,0,[\"model\",\"method\"]],[30,2,[\"name\"]]],null]],null]],null],[28,[37,17],[[30,2,[\"options\",\"label\"]],[28,[37,18],[[30,2,[\"name\"]]],null]],null],[28,[37,19],[[28,[37,16],[[30,0,[\"model\",\"method\"]],[30,2,[\"name\"]]],null]],null]]],null],[1,\"\\n\"]],[]],[[[1,\"        \"],[8,[39,14],null,[[\"@alwaysRender\",\"@label\",\"@value\"],[[28,[37,9],[[28,[37,15],[[28,[37,16],[[30,0,[\"model\",\"method\"]],[30,2,[\"name\"]]],null]],null]],null],[28,[37,17],[[30,2,[\"options\",\"label\"]],[28,[37,18],[[30,2,[\"name\"]]],null]],null],[28,[37,16],[[30,0,[\"model\",\"method\"]],[30,2,[\"name\"]]],null]]],null],[1,\"\\n\"]],[]]]],[2]],null],[1,\"  \"],[13],[1,\"\\n\"]],[]],[[[41,[28,[37,5],[[30,0,[\"tab\"]],\"enforcements\"],null],[[[1,\"  \"],[8,[39,6],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,7],null,null,[[\"default\"],[[[[1,\"\\n      \"],[8,[39,11],[[24,\"data-test-enforcement-create\",\"\"]],[[\"@route\",\"@type\"],[\"vault.cluster.access.mfa.enforcements.create\",\"add\"]],[[\"default\"],[[[[1,\"\\n        New enforcement\\n      \"]],[]]]]],[1,\"\\n    \"]],[]]]]],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[10,0],[14,0,\"box is-fullwidth is-sideless is-paddingless is-marginless\"],[12],[1,\"\\n\"],[41,[28,[37,10],[[30,0,[\"model\",\"enforcements\"]]],null],[[[1,\"      \"],[8,[39,20],null,[[\"@title\",\"@message\"],[\"No enforcements found.\",\"No enforcements are applied to this MFA method. Edit an existing enforcement or add a new one to get started.\"]],null],[1,\"\\n\"]],[]],[[[42,[28,[37,13],[[28,[37,13],[[30,0,[\"model\",\"enforcements\"]]],null]],null],null,[[[1,\"        \"],[8,[39,21],null,[[\"@model\"],[[30,3]]],null],[1,\"\\n\"]],[3]],null]],[]]],[1,\"  \"],[13],[1,\"\\n\"]],[]],null]],[]]]],[\"p\",\"attr\",\"item\"],false,[\"page-header\",\"link-to\",\"icon\",\"hash\",\"if\",\"eq\",\"toolbar\",\"toolbar-actions\",\"confirm-action\",\"not\",\"is-empty\",\"toolbar-link\",\"each\",\"-track-array\",\"info-table-row\",\"is-empty-value\",\"get\",\"or\",\"to-label\",\"stringify\",\"empty-state\",\"mfa/login-enforcement-list-item\"]]",
    "moduleName": "vault/templates/vault/cluster/access/mfa/methods/method/index.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/oidc", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{#if this.header}}
    <PageHeader as |p|>
      <p.levelLeft>
        <h1 class="title is-3">
          OIDC Provider
        </h1>
      </p.levelLeft>
    </PageHeader>
    <div class="box is-fullwidth is-sideless is-flex-between is-shadowless is-marginless" data-test-oidc-header>
      <p>
        Configure OpenBao to act as an OIDC identity provider, and offer
        {{"OpenBao’s"}}
        various authentication
        {{#if this.isCta}}
          <br />
        {{/if}}
        methods and source of identity to any client applications.
        {{! TODO Add a link to a tutorial for 'auth-methods/oidc-identity-provider' }}
      </p>
      {{#if this.isCta}}
        <button
          type="submit"
          class="button is-primary"
          {{on "click" (transition-to "vault.cluster.access.oidc.clients.create")}}
          data-test-oidc-configure
        >
          Create your first app
        </button>
      {{/if}}
    </div>
    {{#unless this.isCta}}
      {{! show tab links in list routes }}
      <div class="tabs-container box is-sideless is-fullwidth is-paddingless is-marginless" data-test-oidc-tabs>
        <nav class="tabs">
          <ul>
            <LinkTo @route="vault.cluster.access.oidc.clients" data-test-tab="clients">
              Applications
            </LinkTo>
            <LinkTo @route="vault.cluster.access.oidc.keys" data-test-tab="keys">
              Keys
            </LinkTo>
            <LinkTo @route="vault.cluster.access.oidc.assignments" data-test-tab="assignments">
              Assignments
            </LinkTo>
            <LinkTo @route="vault.cluster.access.oidc.providers" data-test-tab="providers">
              Providers
            </LinkTo>
            <LinkTo @route="vault.cluster.access.oidc.scopes" data-test-tab="scopes">
              Scopes
            </LinkTo>
          </ul>
        </nav>
      </div>
    {{/unless}}
  {{/if}}
  
  {{outlet}}
  */
  {
    "id": "ZDUpB/1b",
    "block": "[[[41,[30,0,[\"header\"]],[[[1,\"  \"],[8,[39,1],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n      \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n        OIDC Provider\\n      \"],[13],[1,\"\\n    \"]],[]]]]],[1,\"\\n  \"]],[1]]]]],[1,\"\\n  \"],[10,0],[14,0,\"box is-fullwidth is-sideless is-flex-between is-shadowless is-marginless\"],[14,\"data-test-oidc-header\",\"\"],[12],[1,\"\\n    \"],[10,2],[12],[1,\"\\n      Configure OpenBao to act as an OIDC identity provider, and offer\\n      \"],[1,\"OpenBao’s\"],[1,\"\\n      various authentication\\n\"],[41,[30,0,[\"isCta\"]],[[[1,\"        \"],[10,\"br\"],[12],[13],[1,\"\\n\"]],[]],null],[1,\"      methods and source of identity to any client applications.\\n\"],[1,\"    \"],[13],[1,\"\\n\"],[41,[30,0,[\"isCta\"]],[[[1,\"      \"],[11,\"button\"],[24,0,\"button is-primary\"],[24,\"data-test-oidc-configure\",\"\"],[24,4,\"submit\"],[4,[38,2],[\"click\",[28,[37,3],[\"vault.cluster.access.oidc.clients.create\"],null]],null],[12],[1,\"\\n        Create your first app\\n      \"],[13],[1,\"\\n\"]],[]],null],[1,\"  \"],[13],[1,\"\\n\"],[41,[51,[30,0,[\"isCta\"]]],[[[1,\"    \"],[10,0],[14,0,\"tabs-container box is-sideless is-fullwidth is-paddingless is-marginless\"],[14,\"data-test-oidc-tabs\",\"\"],[12],[1,\"\\n      \"],[10,\"nav\"],[14,0,\"tabs\"],[12],[1,\"\\n        \"],[10,\"ul\"],[12],[1,\"\\n          \"],[8,[39,5],[[24,\"data-test-tab\",\"clients\"]],[[\"@route\"],[\"vault.cluster.access.oidc.clients\"]],[[\"default\"],[[[[1,\"\\n            Applications\\n          \"]],[]]]]],[1,\"\\n          \"],[8,[39,5],[[24,\"data-test-tab\",\"keys\"]],[[\"@route\"],[\"vault.cluster.access.oidc.keys\"]],[[\"default\"],[[[[1,\"\\n            Keys\\n          \"]],[]]]]],[1,\"\\n          \"],[8,[39,5],[[24,\"data-test-tab\",\"assignments\"]],[[\"@route\"],[\"vault.cluster.access.oidc.assignments\"]],[[\"default\"],[[[[1,\"\\n            Assignments\\n          \"]],[]]]]],[1,\"\\n          \"],[8,[39,5],[[24,\"data-test-tab\",\"providers\"]],[[\"@route\"],[\"vault.cluster.access.oidc.providers\"]],[[\"default\"],[[[[1,\"\\n            Providers\\n          \"]],[]]]]],[1,\"\\n          \"],[8,[39,5],[[24,\"data-test-tab\",\"scopes\"]],[[\"@route\"],[\"vault.cluster.access.oidc.scopes\"]],[[\"default\"],[[[[1,\"\\n            Scopes\\n          \"]],[]]]]],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n\"]],[]],null]],[]],null],[1,\"\\n\"],[46,[28,[37,7],null,null],null,null,null]],[\"p\"],false,[\"if\",\"page-header\",\"on\",\"transition-to\",\"unless\",\"link-to\",\"component\",\"-outlet\"]]",
    "moduleName": "vault/templates/vault/cluster/access/oidc.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/oidc/assignments/assignment/details", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.top>
      <nav class="breadcrumb" aria-label="breadcrumbs">
        <ul>
          <li>
            <span class="sep">&#x0002f;</span>
            <LinkTo @route="vault.cluster.access.oidc.assignments">
              Assignments
            </LinkTo>
          </li>
        </ul>
      </nav>
    </p.top>
    <p.levelLeft>
      <h1 class="title is-3" data-test-oidc-assignment-title>
        {{@model.name}}
      </h1>
    </p.levelLeft>
  </PageHeader>
  
  <div class="tabs-container box is-sideless is-fullwidth is-paddingless is-marginless">
    <nav class="tabs" aria-label="tabs">
      <ul>
        <LinkTo
          @route="vault.cluster.access.oidc.assignments.assignment.details"
          @model={{@model}}
          data-test-oidc-assignment-details
        >
          Details
        </LinkTo>
      </ul>
    </nav>
  </div>
  
  <Toolbar>
    <ToolbarActions>
      {{#if @model.canDelete}}
        <ConfirmAction
          @buttonClasses="toolbar-link"
          @onConfirmAction={{this.delete}}
          @confirmTitle="Delete assignment?"
          @confirmMessage="This assignment will be permanently deleted. You will not be able to recover it."
          @confirmButtonText="Delete"
          data-test-oidc-assignment-delete
        >
          Delete assignment
        </ConfirmAction>
        <div class="toolbar-separator"></div>
      {{/if}}
      {{#if @model.canEdit}}
        <ToolbarLink
          @route="vault.cluster.access.oidc.assignments.assignment.edit"
          @model={{@model.name}}
          data-test-oidc-assignment-edit
        >
          Edit assignment
        </ToolbarLink>
      {{/if}}
    </ToolbarActions>
  </Toolbar>
  
  <div class="box is-fullwidth is-sideless is-paddingless is-marginless">
    <InfoTableRow @label="Name" @value={{@model.name}} />
    <InfoTableRow
      @label="Entities"
      @type="array"
      @value={{@model.entityIds}}
      @model={{@model}}
      @isLink={{true}}
      @renderItemName={{true}}
      @modelType="identity/entity"
      @itemRoute={{(array "vault.cluster.access.identity.show" "entities" "details")}}
      @alwaysRender={{true}}
      @toggleViewAll={{true}}
    />
    <InfoTableRow
      @label="Groups"
      @type="array"
      @value={{@model.groupIds}}
      @model={{@model}}
      @isLink={{true}}
      @renderItemName={{true}}
      @modelType="identity/group"
      @itemRoute={{(array "vault.cluster.access.identity.show" "groups" "details")}}
      @alwaysRender={{true}}
      @doNotTruncate={{true}}
    />
  </div>
  */
  {
    "id": "xdd+1RRW",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"top\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"nav\"],[14,0,\"breadcrumb\"],[14,\"aria-label\",\"breadcrumbs\"],[12],[1,\"\\n      \"],[10,\"ul\"],[12],[1,\"\\n        \"],[10,\"li\"],[12],[1,\"\\n          \"],[10,1],[14,0,\"sep\"],[12],[1,\"/\"],[13],[1,\"\\n          \"],[8,[39,1],null,[[\"@route\"],[\"vault.cluster.access.oidc.assignments\"]],[[\"default\"],[[[[1,\"\\n            Assignments\\n          \"]],[]]]]],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[14,\"data-test-oidc-assignment-title\",\"\"],[12],[1,\"\\n      \"],[1,[30,2,[\"name\"]]],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\\n\"],[10,0],[14,0,\"tabs-container box is-sideless is-fullwidth is-paddingless is-marginless\"],[12],[1,\"\\n  \"],[10,\"nav\"],[14,0,\"tabs\"],[14,\"aria-label\",\"tabs\"],[12],[1,\"\\n    \"],[10,\"ul\"],[12],[1,\"\\n      \"],[8,[39,1],[[24,\"data-test-oidc-assignment-details\",\"\"]],[[\"@route\",\"@model\"],[\"vault.cluster.access.oidc.assignments.assignment.details\",[30,2]]],[[\"default\"],[[[[1,\"\\n        Details\\n      \"]],[]]]]],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"],[13],[1,\"\\n\\n\"],[8,[39,2],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[39,3],null,null,[[\"default\"],[[[[1,\"\\n\"],[41,[30,2,[\"canDelete\"]],[[[1,\"      \"],[8,[39,5],[[24,\"data-test-oidc-assignment-delete\",\"\"]],[[\"@buttonClasses\",\"@onConfirmAction\",\"@confirmTitle\",\"@confirmMessage\",\"@confirmButtonText\"],[\"toolbar-link\",[30,0,[\"delete\"]],\"Delete assignment?\",\"This assignment will be permanently deleted. You will not be able to recover it.\",\"Delete\"]],[[\"default\"],[[[[1,\"\\n        Delete assignment\\n      \"]],[]]]]],[1,\"\\n      \"],[10,0],[14,0,\"toolbar-separator\"],[12],[13],[1,\"\\n\"]],[]],null],[41,[30,2,[\"canEdit\"]],[[[1,\"      \"],[8,[39,6],[[24,\"data-test-oidc-assignment-edit\",\"\"]],[[\"@route\",\"@model\"],[\"vault.cluster.access.oidc.assignments.assignment.edit\",[30,2,[\"name\"]]]],[[\"default\"],[[[[1,\"\\n        Edit assignment\\n      \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"  \"]],[]]]]],[1,\"\\n\"]],[]]]]],[1,\"\\n\\n\"],[10,0],[14,0,\"box is-fullwidth is-sideless is-paddingless is-marginless\"],[12],[1,\"\\n  \"],[8,[39,7],null,[[\"@label\",\"@value\"],[\"Name\",[30,2,[\"name\"]]]],null],[1,\"\\n  \"],[8,[39,7],null,[[\"@label\",\"@type\",\"@value\",\"@model\",\"@isLink\",\"@renderItemName\",\"@modelType\",\"@itemRoute\",\"@alwaysRender\",\"@toggleViewAll\"],[\"Entities\",\"array\",[30,2,[\"entityIds\"]],[30,2],true,true,\"identity/entity\",[28,[37,8],[\"vault.cluster.access.identity.show\",\"entities\",\"details\"],null],true,true]],null],[1,\"\\n  \"],[8,[39,7],null,[[\"@label\",\"@type\",\"@value\",\"@model\",\"@isLink\",\"@renderItemName\",\"@modelType\",\"@itemRoute\",\"@alwaysRender\",\"@doNotTruncate\"],[\"Groups\",\"array\",[30,2,[\"groupIds\"]],[30,2],true,true,\"identity/group\",[28,[37,8],[\"vault.cluster.access.identity.show\",\"groups\",\"details\"],null],true,true]],null],[1,\"\\n\"],[13]],[\"p\",\"@model\"],false,[\"page-header\",\"link-to\",\"toolbar\",\"toolbar-actions\",\"if\",\"confirm-action\",\"toolbar-link\",\"info-table-row\",\"array\"]]",
    "moduleName": "vault/templates/vault/cluster/access/oidc/assignments/assignment/details.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/oidc/assignments/assignment/edit", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.top>
      <nav class="breadcrumb" aria-label="breadcrumbs">
        <ul>
          <li>
            <span class="sep">&#x0002f;</span>
            <LinkTo @route={{"vault.cluster.access.oidc.assignments.assignment.details"}} @model={{this.model.name}}>
              Details
            </LinkTo>
          </li>
        </ul>
      </nav>
    </p.top>
    <p.levelLeft>
      <h1 class="title is-3" data-test-oidc-assignment-title>
        Edit assignment
      </h1>
    </p.levelLeft>
  </PageHeader>
  <Oidc::AssignmentForm
    @model={{this.model}}
    @onCancel={{transition-to "vault.cluster.access.oidc.assignments.assignment.details" this.model.name}}
    @onSave={{transition-to "vault.cluster.access.oidc.assignments.assignment.details" this.model.name}}
  />
  */
  {
    "id": "9FZrx467",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"top\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"nav\"],[14,0,\"breadcrumb\"],[14,\"aria-label\",\"breadcrumbs\"],[12],[1,\"\\n      \"],[10,\"ul\"],[12],[1,\"\\n        \"],[10,\"li\"],[12],[1,\"\\n          \"],[10,1],[14,0,\"sep\"],[12],[1,\"/\"],[13],[1,\"\\n          \"],[8,[39,1],null,[[\"@route\",\"@model\"],[\"vault.cluster.access.oidc.assignments.assignment.details\",[30,0,[\"model\",\"name\"]]]],[[\"default\"],[[[[1,\"\\n            Details\\n          \"]],[]]]]],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[14,\"data-test-oidc-assignment-title\",\"\"],[12],[1,\"\\n      Edit assignment\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\"],[8,[39,2],null,[[\"@model\",\"@onCancel\",\"@onSave\"],[[30,0,[\"model\"]],[28,[37,3],[\"vault.cluster.access.oidc.assignments.assignment.details\",[30,0,[\"model\",\"name\"]]],null],[28,[37,3],[\"vault.cluster.access.oidc.assignments.assignment.details\",[30,0,[\"model\",\"name\"]]],null]]],null]],[\"p\"],false,[\"page-header\",\"link-to\",\"oidc/assignment-form\",\"transition-to\"]]",
    "moduleName": "vault/templates/vault/cluster/access/oidc/assignments/assignment/edit.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/oidc/assignments/create", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.top>
      <nav class="breadcrumb" aria-label="breadcrumbs">
        <ul>
          <li>
            <span class="sep">&#x0002f;</span>
            <LinkTo @route={{"vault.cluster.access.oidc.assignments"}}>
              Assignments
            </LinkTo>
          </li>
        </ul>
      </nav>
    </p.top>
    <p.levelLeft>
      <h1 class="title is-3" data-test-oidc-assignment-title>
        Create assignment
      </h1>
    </p.levelLeft>
  </PageHeader>
  <Oidc::AssignmentForm
    @model={{this.model}}
    @onCancel={{transition-to "vault.cluster.access.oidc.assignments"}}
    @onSave={{transition-to "vault.cluster.access.oidc.assignments.assignment.details" this.model.name}}
  />
  */
  {
    "id": "kfqKUy+l",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"top\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"nav\"],[14,0,\"breadcrumb\"],[14,\"aria-label\",\"breadcrumbs\"],[12],[1,\"\\n      \"],[10,\"ul\"],[12],[1,\"\\n        \"],[10,\"li\"],[12],[1,\"\\n          \"],[10,1],[14,0,\"sep\"],[12],[1,\"/\"],[13],[1,\"\\n          \"],[8,[39,1],null,[[\"@route\"],[\"vault.cluster.access.oidc.assignments\"]],[[\"default\"],[[[[1,\"\\n            Assignments\\n          \"]],[]]]]],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[14,\"data-test-oidc-assignment-title\",\"\"],[12],[1,\"\\n      Create assignment\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\"],[8,[39,2],null,[[\"@model\",\"@onCancel\",\"@onSave\"],[[30,0,[\"model\"]],[28,[37,3],[\"vault.cluster.access.oidc.assignments\"],null],[28,[37,3],[\"vault.cluster.access.oidc.assignments.assignment.details\",[30,0,[\"model\",\"name\"]]],null]]],null]],[\"p\"],false,[\"page-header\",\"link-to\",\"oidc/assignment-form\",\"transition-to\"]]",
    "moduleName": "vault/templates/vault/cluster/access/oidc/assignments/create.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/oidc/assignments/index", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <Toolbar>
    <ToolbarActions>
      <ToolbarLink @route="vault.cluster.access.oidc.assignments.create" @type="add" data-test-oidc-assignment-create>
        Create assignment
      </ToolbarLink>
    </ToolbarActions>
  </Toolbar>
  
  {{#each this.model as |model|}}
    <LinkedBlock
      class="list-item-row {{if (eq model.name 'allow_all') 'is-disabled'}}"
      @params={{array "vault.cluster.access.oidc.assignments.assignment.details" model.name}}
      @disabled={{eq model.name "allow_all"}}
      data-test-oidc-assignment-linked-block={{model.name}}
    >
      <div class="level is-mobile">
        <div class="level-left">
          <div>
            <Icon @name="users" class="has-text-grey-light" />
            <span class="has-text-weight-semibold {{if (not-eq model.name 'allow_all') 'is-underline'}}">
              {{model.name}}
            </span>
            {{#if (eq model.name "allow_all")}}
              <div class="is-size-8">
                This is a built-in assignment that cannot be modified or deleted.
                <DocLink @path="/docs/concepts/oidc-provider#assignments">
                  Learn more
                </DocLink>
              </div>
            {{/if}}
          </div>
        </div>
        {{#if (not-eq model.name "allow_all")}}
          <div class="level-right is-flex is-paddingless is-marginless">
            <div class="level-item">
              <PopupMenu>
                <nav class="menu">
                  <ul class="menu-list">
                    <li>
                      <LinkTo
                        @route="vault.cluster.access.oidc.assignments.assignment.details"
                        @model={{model.name}}
                        @disabled={{eq model.canRead false}}
                        data-test-oidc-assignment-menu-link="details"
                      >
                        Details
                      </LinkTo>
                    </li>
                    <li>
                      <LinkTo
                        @route="vault.cluster.access.oidc.assignments.assignment.edit"
                        @model={{model.name}}
                        @disabled={{eq model.canEdit false}}
                        data-test-oidc-assignment-menu-link="edit"
                      >
                        Edit
                      </LinkTo>
                    </li>
                  </ul>
                </nav>
              </PopupMenu>
            </div>
          </div>
        {{/if}}
      </div>
    </LinkedBlock>
  {{/each}}
  */
  {
    "id": "xCUf+QgL",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[39,1],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,2],[[24,\"data-test-oidc-assignment-create\",\"\"]],[[\"@route\",\"@type\"],[\"vault.cluster.access.oidc.assignments.create\",\"add\"]],[[\"default\"],[[[[1,\"\\n      Create assignment\\n    \"]],[]]]]],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]]]]],[1,\"\\n\\n\"],[42,[28,[37,4],[[28,[37,4],[[30,0,[\"model\"]]],null]],null],null,[[[1,\"  \"],[8,[39,5],[[16,0,[29,[\"list-item-row \",[52,[28,[37,7],[[30,1,[\"name\"]],\"allow_all\"],null],\"is-disabled\"]]]],[16,\"data-test-oidc-assignment-linked-block\",[30,1,[\"name\"]]]],[[\"@params\",\"@disabled\"],[[28,[37,8],[\"vault.cluster.access.oidc.assignments.assignment.details\",[30,1,[\"name\"]]],null],[28,[37,7],[[30,1,[\"name\"]],\"allow_all\"],null]]],[[\"default\"],[[[[1,\"\\n    \"],[10,0],[14,0,\"level is-mobile\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"level-left\"],[12],[1,\"\\n        \"],[10,0],[12],[1,\"\\n          \"],[8,[39,9],[[24,0,\"has-text-grey-light\"]],[[\"@name\"],[\"users\"]],null],[1,\"\\n          \"],[10,1],[15,0,[29,[\"has-text-weight-semibold \",[52,[28,[37,10],[[30,1,[\"name\"]],\"allow_all\"],null],\"is-underline\"]]]],[12],[1,\"\\n            \"],[1,[30,1,[\"name\"]]],[1,\"\\n          \"],[13],[1,\"\\n\"],[41,[28,[37,7],[[30,1,[\"name\"]],\"allow_all\"],null],[[[1,\"            \"],[10,0],[14,0,\"is-size-8\"],[12],[1,\"\\n              This is a built-in assignment that cannot be modified or deleted.\\n              \"],[8,[39,11],null,[[\"@path\"],[\"/docs/concepts/oidc-provider#assignments\"]],[[\"default\"],[[[[1,\"\\n                Learn more\\n              \"]],[]]]]],[1,\"\\n            \"],[13],[1,\"\\n\"]],[]],null],[1,\"        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n\"],[41,[28,[37,10],[[30,1,[\"name\"]],\"allow_all\"],null],[[[1,\"        \"],[10,0],[14,0,\"level-right is-flex is-paddingless is-marginless\"],[12],[1,\"\\n          \"],[10,0],[14,0,\"level-item\"],[12],[1,\"\\n            \"],[8,[39,12],null,null,[[\"default\"],[[[[1,\"\\n              \"],[10,\"nav\"],[14,0,\"menu\"],[12],[1,\"\\n                \"],[10,\"ul\"],[14,0,\"menu-list\"],[12],[1,\"\\n                  \"],[10,\"li\"],[12],[1,\"\\n                    \"],[8,[39,13],[[24,\"data-test-oidc-assignment-menu-link\",\"details\"]],[[\"@route\",\"@model\",\"@disabled\"],[\"vault.cluster.access.oidc.assignments.assignment.details\",[30,1,[\"name\"]],[28,[37,7],[[30,1,[\"canRead\"]],false],null]]],[[\"default\"],[[[[1,\"\\n                      Details\\n                    \"]],[]]]]],[1,\"\\n                  \"],[13],[1,\"\\n                  \"],[10,\"li\"],[12],[1,\"\\n                    \"],[8,[39,13],[[24,\"data-test-oidc-assignment-menu-link\",\"edit\"]],[[\"@route\",\"@model\",\"@disabled\"],[\"vault.cluster.access.oidc.assignments.assignment.edit\",[30,1,[\"name\"]],[28,[37,7],[[30,1,[\"canEdit\"]],false],null]]],[[\"default\"],[[[[1,\"\\n                      Edit\\n                    \"]],[]]]]],[1,\"\\n                  \"],[13],[1,\"\\n                \"],[13],[1,\"\\n              \"],[13],[1,\"\\n            \"]],[]]]]],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n\"]],[]],null],[1,\"    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]],null]],[\"model\"],false,[\"toolbar\",\"toolbar-actions\",\"toolbar-link\",\"each\",\"-track-array\",\"linked-block\",\"if\",\"eq\",\"array\",\"icon\",\"not-eq\",\"doc-link\",\"popup-menu\",\"link-to\"]]",
    "moduleName": "vault/templates/vault/cluster/access/oidc/assignments/index.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/oidc/clients/client", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{#if this.showHeader}}
    <PageHeader as |p|>
      <p.top>
        <nav class="breadcrumb" aria-label="breadcrumbs">
          <ul>
            <li>
              <span class="sep">&#x0002f;</span>
              <LinkTo @route="vault.cluster.access.oidc.clients">
                Applications
              </LinkTo>
            </li>
          </ul>
        </nav>
      </p.top>
      <p.levelLeft>
        <h1 class="title is-3" data-test-oidc-client-header>
          {{this.model.name}}
        </h1>
      </p.levelLeft>
    </PageHeader>
  
    <div class="tabs-container box is-sideless is-fullwidth is-paddingless is-marginless">
      <nav class="tabs" aria-label="tabs">
        <ul>
          <LinkTo
            @route="vault.cluster.access.oidc.clients.client.details"
            @model={{this.model}}
            data-test-oidc-client-details
          >
            Details
          </LinkTo>
          <LinkTo
            @route="vault.cluster.access.oidc.clients.client.providers"
            @model={{this.model}}
            data-test-oidc-client-providers
          >
            Available providers
          </LinkTo>
        </ul>
      </nav>
    </div>
  {{/if}}
  
  {{outlet}}
  */
  {
    "id": "4wlocZ8Z",
    "block": "[[[41,[30,0,[\"showHeader\"]],[[[1,\"  \"],[8,[39,1],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[30,1,[\"top\"]],null,null,[[\"default\"],[[[[1,\"\\n      \"],[10,\"nav\"],[14,0,\"breadcrumb\"],[14,\"aria-label\",\"breadcrumbs\"],[12],[1,\"\\n        \"],[10,\"ul\"],[12],[1,\"\\n          \"],[10,\"li\"],[12],[1,\"\\n            \"],[10,1],[14,0,\"sep\"],[12],[1,\"/\"],[13],[1,\"\\n            \"],[8,[39,2],null,[[\"@route\"],[\"vault.cluster.access.oidc.clients\"]],[[\"default\"],[[[[1,\"\\n              Applications\\n            \"]],[]]]]],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"]],[]]]]],[1,\"\\n    \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n      \"],[10,\"h1\"],[14,0,\"title is-3\"],[14,\"data-test-oidc-client-header\",\"\"],[12],[1,\"\\n        \"],[1,[30,0,[\"model\",\"name\"]]],[1,\"\\n      \"],[13],[1,\"\\n    \"]],[]]]]],[1,\"\\n  \"]],[1]]]]],[1,\"\\n\\n  \"],[10,0],[14,0,\"tabs-container box is-sideless is-fullwidth is-paddingless is-marginless\"],[12],[1,\"\\n    \"],[10,\"nav\"],[14,0,\"tabs\"],[14,\"aria-label\",\"tabs\"],[12],[1,\"\\n      \"],[10,\"ul\"],[12],[1,\"\\n        \"],[8,[39,2],[[24,\"data-test-oidc-client-details\",\"\"]],[[\"@route\",\"@model\"],[\"vault.cluster.access.oidc.clients.client.details\",[30,0,[\"model\"]]]],[[\"default\"],[[[[1,\"\\n          Details\\n        \"]],[]]]]],[1,\"\\n        \"],[8,[39,2],[[24,\"data-test-oidc-client-providers\",\"\"]],[[\"@route\",\"@model\"],[\"vault.cluster.access.oidc.clients.client.providers\",[30,0,[\"model\"]]]],[[\"default\"],[[[[1,\"\\n          Available providers\\n        \"]],[]]]]],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]],null],[1,\"\\n\"],[46,[28,[37,4],null,null],null,null,null]],[\"p\"],false,[\"if\",\"page-header\",\"link-to\",\"component\",\"-outlet\"]]",
    "moduleName": "vault/templates/vault/cluster/access/oidc/clients/client.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/oidc/clients/client/details", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <Toolbar data-test-oidc-client-toolbar>
    <ToolbarActions>
      {{#if this.model.canDelete}}
        <ConfirmAction
          data-test-oidc-client-delete
          @buttonClasses="toolbar-link"
          @onConfirmAction={{this.delete}}
          @confirmTitle="Delete application?"
          @confirmMessage="This application will be permanently deleted. You will need to re-create it to use it again."
          @confirmButtonText="Delete"
        >
          Delete application
        </ConfirmAction>
        <div class="toolbar-separator"></div>
      {{/if}}
      {{#if this.model.canEdit}}
        <ToolbarLink
          @route="vault.cluster.access.oidc.clients.client.edit"
          @model={{this.model.name}}
          data-test-oidc-client-edit
        >
          Edit application
        </ToolbarLink>
      {{/if}}
    </ToolbarActions>
  </Toolbar>
  
  <div class="box is-fullwidth is-sideless is-paddingless is-marginless">
    <InfoTableRow @label="Name" @value={{this.model.name}} @alwaysRender={{true}} />
    <InfoTableRow @label="Type" @value={{this.model.clientType}} @alwaysRender={{true}} />
    <InfoTableRow @label="Redirect URI" @value={{this.model.redirectUris}} @alwaysRender={{true}} />
    <InfoTableRow @label="Assignment" @value={{this.model.assignments}} @alwaysRender={{true}} />
    <InfoTableRow @label="Key" @alwaysRender={{true}}>
      <LinkTo @route="vault.cluster.access.oidc.keys.key.details" @model={{this.model.key}}>
        {{this.model.key}}
      </LinkTo>
    </InfoTableRow>
    <InfoTableRow @label="Client ID" @value={{this.model.clientId}} @addCopyButton={{true}} @alwaysRender={{true}} />
    <InfoTableRow @label="Client Secret">
      <MaskedInput @value={{this.model.clientSecret}} @displayOnly={{true}} @allowCopy={{true}} @alwaysRender={{true}} />
    </InfoTableRow>
    <InfoTableRow @label="ID Token TTL" @value={{format-duration this.model.idTokenTtl}} @alwaysRender={{true}} />
    <InfoTableRow @label="Access Token TTL" @value={{format-duration this.model.accessTokenTtl}} @alwaysRender={{true}} />
  </div>
  */
  {
    "id": "yH79y0c5",
    "block": "[[[8,[39,0],[[24,\"data-test-oidc-client-toolbar\",\"\"]],null,[[\"default\"],[[[[1,\"\\n  \"],[8,[39,1],null,null,[[\"default\"],[[[[1,\"\\n\"],[41,[30,0,[\"model\",\"canDelete\"]],[[[1,\"      \"],[8,[39,3],[[24,\"data-test-oidc-client-delete\",\"\"]],[[\"@buttonClasses\",\"@onConfirmAction\",\"@confirmTitle\",\"@confirmMessage\",\"@confirmButtonText\"],[\"toolbar-link\",[30,0,[\"delete\"]],\"Delete application?\",\"This application will be permanently deleted. You will need to re-create it to use it again.\",\"Delete\"]],[[\"default\"],[[[[1,\"\\n        Delete application\\n      \"]],[]]]]],[1,\"\\n      \"],[10,0],[14,0,\"toolbar-separator\"],[12],[13],[1,\"\\n\"]],[]],null],[41,[30,0,[\"model\",\"canEdit\"]],[[[1,\"      \"],[8,[39,4],[[24,\"data-test-oidc-client-edit\",\"\"]],[[\"@route\",\"@model\"],[\"vault.cluster.access.oidc.clients.client.edit\",[30,0,[\"model\",\"name\"]]]],[[\"default\"],[[[[1,\"\\n        Edit application\\n      \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"  \"]],[]]]]],[1,\"\\n\"]],[]]]]],[1,\"\\n\\n\"],[10,0],[14,0,\"box is-fullwidth is-sideless is-paddingless is-marginless\"],[12],[1,\"\\n  \"],[8,[39,5],null,[[\"@label\",\"@value\",\"@alwaysRender\"],[\"Name\",[30,0,[\"model\",\"name\"]],true]],null],[1,\"\\n  \"],[8,[39,5],null,[[\"@label\",\"@value\",\"@alwaysRender\"],[\"Type\",[30,0,[\"model\",\"clientType\"]],true]],null],[1,\"\\n  \"],[8,[39,5],null,[[\"@label\",\"@value\",\"@alwaysRender\"],[\"Redirect URI\",[30,0,[\"model\",\"redirectUris\"]],true]],null],[1,\"\\n  \"],[8,[39,5],null,[[\"@label\",\"@value\",\"@alwaysRender\"],[\"Assignment\",[30,0,[\"model\",\"assignments\"]],true]],null],[1,\"\\n  \"],[8,[39,5],null,[[\"@label\",\"@alwaysRender\"],[\"Key\",true]],[[\"default\"],[[[[1,\"\\n    \"],[8,[39,6],null,[[\"@route\",\"@model\"],[\"vault.cluster.access.oidc.keys.key.details\",[30,0,[\"model\",\"key\"]]]],[[\"default\"],[[[[1,\"\\n      \"],[1,[30,0,[\"model\",\"key\"]]],[1,\"\\n    \"]],[]]]]],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[39,5],null,[[\"@label\",\"@value\",\"@addCopyButton\",\"@alwaysRender\"],[\"Client ID\",[30,0,[\"model\",\"clientId\"]],true,true]],null],[1,\"\\n  \"],[8,[39,5],null,[[\"@label\"],[\"Client Secret\"]],[[\"default\"],[[[[1,\"\\n    \"],[8,[39,7],null,[[\"@value\",\"@displayOnly\",\"@allowCopy\",\"@alwaysRender\"],[[30,0,[\"model\",\"clientSecret\"]],true,true,true]],null],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[39,5],null,[[\"@label\",\"@value\",\"@alwaysRender\"],[\"ID Token TTL\",[28,[37,8],[[30,0,[\"model\",\"idTokenTtl\"]]],null],true]],null],[1,\"\\n  \"],[8,[39,5],null,[[\"@label\",\"@value\",\"@alwaysRender\"],[\"Access Token TTL\",[28,[37,8],[[30,0,[\"model\",\"accessTokenTtl\"]]],null],true]],null],[1,\"\\n\"],[13]],[],false,[\"toolbar\",\"toolbar-actions\",\"if\",\"confirm-action\",\"toolbar-link\",\"info-table-row\",\"link-to\",\"masked-input\",\"format-duration\"]]",
    "moduleName": "vault/templates/vault/cluster/access/oidc/clients/client/details.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/oidc/clients/client/edit", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <Oidc::ClientForm
    @model={{this.model}}
    @onCancel={{transition-to "vault.cluster.access.oidc.clients.client.details" this.model.name}}
    @onSave={{transition-to "vault.cluster.access.oidc.clients.client.details" this.model.name}}
  />
  */
  {
    "id": "gcyQK09b",
    "block": "[[[8,[39,0],null,[[\"@model\",\"@onCancel\",\"@onSave\"],[[30,0,[\"model\"]],[28,[37,1],[\"vault.cluster.access.oidc.clients.client.details\",[30,0,[\"model\",\"name\"]]],null],[28,[37,1],[\"vault.cluster.access.oidc.clients.client.details\",[30,0,[\"model\",\"name\"]]],null]]],null]],[],false,[\"oidc/client-form\",\"transition-to\"]]",
    "moduleName": "vault/templates/vault/cluster/access/oidc/clients/client/edit.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/oidc/clients/client/providers", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <Toolbar />
  {{#if (gt this.model.length 0)}}
    <Oidc::ProviderList @model={{this.model}} />
  {{else}}
    <EmptyState
      @title="No available providers"
      @message="Edit an existing provider or create a new one to allow this application access for authentication requests."
    >
      <LinkTo @route="vault.cluster.access.oidc.providers">
        View providers
      </LinkTo>
    </EmptyState>
  {{/if}}
  */
  {
    "id": "oK5G4KVU",
    "block": "[[[8,[39,0],null,null,null],[1,\"\\n\"],[41,[28,[37,2],[[30,0,[\"model\",\"length\"]],0],null],[[[1,\"  \"],[8,[39,3],null,[[\"@model\"],[[30,0,[\"model\"]]]],null],[1,\"\\n\"]],[]],[[[1,\"  \"],[8,[39,4],null,[[\"@title\",\"@message\"],[\"No available providers\",\"Edit an existing provider or create a new one to allow this application access for authentication requests.\"]],[[\"default\"],[[[[1,\"\\n    \"],[8,[39,5],null,[[\"@route\"],[\"vault.cluster.access.oidc.providers\"]],[[\"default\"],[[[[1,\"\\n      View providers\\n    \"]],[]]]]],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]]]],[],false,[\"toolbar\",\"if\",\"gt\",\"oidc/provider-list\",\"empty-state\",\"link-to\"]]",
    "moduleName": "vault/templates/vault/cluster/access/oidc/clients/client/providers.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/oidc/clients/create", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <Oidc::ClientForm
    @model={{this.model}}
    @onCancel={{transition-to "vault.cluster.access.oidc.clients"}}
    @onSave={{transition-to "vault.cluster.access.oidc.clients.client.details" this.model.name}}
  />
  */
  {
    "id": "Cg77g94/",
    "block": "[[[8,[39,0],null,[[\"@model\",\"@onCancel\",\"@onSave\"],[[30,0,[\"model\"]],[28,[37,1],[\"vault.cluster.access.oidc.clients\"],null],[28,[37,1],[\"vault.cluster.access.oidc.clients.client.details\",[30,0,[\"model\",\"name\"]]],null]]],null]],[],false,[\"oidc/client-form\",\"transition-to\"]]",
    "moduleName": "vault/templates/vault/cluster/access/oidc/clients/create.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/oidc/clients/index", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <Toolbar>
    <ToolbarActions>
      <ToolbarLink @route="vault.cluster.access.oidc.clients.create" @type="add" data-test-oidc-client-create>
        Create application
      </ToolbarLink>
    </ToolbarActions>
  </Toolbar>
  
  <Oidc::ClientList @model={{this.model}} />
  */
  {
    "id": "meLw8gY8",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[39,1],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,2],[[24,\"data-test-oidc-client-create\",\"\"]],[[\"@route\",\"@type\"],[\"vault.cluster.access.oidc.clients.create\",\"add\"]],[[\"default\"],[[[[1,\"\\n      Create application\\n    \"]],[]]]]],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]]]]],[1,\"\\n\\n\"],[8,[39,3],null,[[\"@model\"],[[30,0,[\"model\"]]]],null]],[],false,[\"toolbar\",\"toolbar-actions\",\"toolbar-link\",\"oidc/client-list\"]]",
    "moduleName": "vault/templates/vault/cluster/access/oidc/clients/index.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/oidc/index", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <div class="box is-fullwidth is-shadowless" data-test-oidc-landing>
    <p>
      <b>Step 1:</b>
      Create an application, and obtain the client ID, client secret and issuer URL.
    </p>
    <p>
      <b>Step 2:</b>
      Set up a new auth method for OpenBao with the client application.
    </p>
  </div>
  
  <div class="box is-fullwidth is-shadowless">
    <img data-test-oidc-img src={{img-path "~/oidc-landing.png"}} alt="OIDC configure diagram" />
  </div>
  */
  {
    "id": "F9Bpj5WA",
    "block": "[[[10,0],[14,0,\"box is-fullwidth is-shadowless\"],[14,\"data-test-oidc-landing\",\"\"],[12],[1,\"\\n  \"],[10,2],[12],[1,\"\\n    \"],[10,\"b\"],[12],[1,\"Step 1:\"],[13],[1,\"\\n    Create an application, and obtain the client ID, client secret and issuer URL.\\n  \"],[13],[1,\"\\n  \"],[10,2],[12],[1,\"\\n    \"],[10,\"b\"],[12],[1,\"Step 2:\"],[13],[1,\"\\n    Set up a new auth method for OpenBao with the client application.\\n  \"],[13],[1,\"\\n\"],[13],[1,\"\\n\\n\"],[10,0],[14,0,\"box is-fullwidth is-shadowless\"],[12],[1,\"\\n  \"],[10,\"img\"],[14,\"data-test-oidc-img\",\"\"],[15,\"src\",[28,[37,0],[\"~/oidc-landing.png\"],null]],[14,\"alt\",\"OIDC configure diagram\"],[12],[13],[1,\"\\n\"],[13]],[],false,[\"img-path\"]]",
    "moduleName": "vault/templates/vault/cluster/access/oidc/index.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/oidc/keys/create", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <Oidc::KeyForm
    @model={{this.model}}
    @onCancel={{transition-to "vault.cluster.access.oidc.keys"}}
    @onSave={{transition-to "vault.cluster.access.oidc.keys.key.details" this.model.name}}
  />
  */
  {
    "id": "p8BmL4b8",
    "block": "[[[8,[39,0],null,[[\"@model\",\"@onCancel\",\"@onSave\"],[[30,0,[\"model\"]],[28,[37,1],[\"vault.cluster.access.oidc.keys\"],null],[28,[37,1],[\"vault.cluster.access.oidc.keys.key.details\",[30,0,[\"model\",\"name\"]]],null]]],null]],[],false,[\"oidc/key-form\",\"transition-to\"]]",
    "moduleName": "vault/templates/vault/cluster/access/oidc/keys/create.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/oidc/keys/index", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <Toolbar>
    <ToolbarActions>
      <ToolbarLink @route="vault.cluster.access.oidc.keys.create" @type="add" data-test-oidc-key-create>
        Create key
      </ToolbarLink>
    </ToolbarActions>
  </Toolbar>
  
  {{#each this.model as |model|}}
    <LinkedBlock
      class="list-item-row"
      @params={{array "vault.cluster.access.oidc.keys.key.details" model.name}}
      data-test-oidc-key-linked-block={{model.name}}
    >
      <div class="level is-mobile">
        <div class="level-left">
          <div>
            <Icon @name="key" class="has-text-grey-light" />
            <span class="has-text-weight-semibold is-underline">
              {{model.name}}
            </span>
          </div>
        </div>
        <div class="level-right is-flex is-paddingless is-marginless">
          <div class="level-item">
            <PopupMenu>
              <nav class="menu">
                <ul class="menu-list">
                  <li>
                    <LinkTo
                      @route="vault.cluster.access.oidc.keys.key.details"
                      @model={{model.name}}
                      @disabled={{eq model.canRead false}}
                      data-test-oidc-key-menu-link="details"
                    >
                      Details
                    </LinkTo>
                  </li>
                  <li>
                    <LinkTo
                      @route="vault.cluster.access.oidc.keys.key.edit"
                      @model={{model.name}}
                      @disabled={{eq model.canEdit false}}
                      data-test-oidc-key-menu-link="edit"
                    >
                      Edit
                    </LinkTo>
                  </li>
                </ul>
              </nav>
            </PopupMenu>
          </div>
        </div>
      </div>
    </LinkedBlock>
  {{/each}}
  */
  {
    "id": "Xo8cq7hh",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[39,1],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,2],[[24,\"data-test-oidc-key-create\",\"\"]],[[\"@route\",\"@type\"],[\"vault.cluster.access.oidc.keys.create\",\"add\"]],[[\"default\"],[[[[1,\"\\n      Create key\\n    \"]],[]]]]],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]]]]],[1,\"\\n\\n\"],[42,[28,[37,4],[[28,[37,4],[[30,0,[\"model\"]]],null]],null],null,[[[1,\"  \"],[8,[39,5],[[24,0,\"list-item-row\"],[16,\"data-test-oidc-key-linked-block\",[30,1,[\"name\"]]]],[[\"@params\"],[[28,[37,6],[\"vault.cluster.access.oidc.keys.key.details\",[30,1,[\"name\"]]],null]]],[[\"default\"],[[[[1,\"\\n    \"],[10,0],[14,0,\"level is-mobile\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"level-left\"],[12],[1,\"\\n        \"],[10,0],[12],[1,\"\\n          \"],[8,[39,7],[[24,0,\"has-text-grey-light\"]],[[\"@name\"],[\"key\"]],null],[1,\"\\n          \"],[10,1],[14,0,\"has-text-weight-semibold is-underline\"],[12],[1,\"\\n            \"],[1,[30,1,[\"name\"]]],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n      \"],[10,0],[14,0,\"level-right is-flex is-paddingless is-marginless\"],[12],[1,\"\\n        \"],[10,0],[14,0,\"level-item\"],[12],[1,\"\\n          \"],[8,[39,8],null,null,[[\"default\"],[[[[1,\"\\n            \"],[10,\"nav\"],[14,0,\"menu\"],[12],[1,\"\\n              \"],[10,\"ul\"],[14,0,\"menu-list\"],[12],[1,\"\\n                \"],[10,\"li\"],[12],[1,\"\\n                  \"],[8,[39,9],[[24,\"data-test-oidc-key-menu-link\",\"details\"]],[[\"@route\",\"@model\",\"@disabled\"],[\"vault.cluster.access.oidc.keys.key.details\",[30,1,[\"name\"]],[28,[37,10],[[30,1,[\"canRead\"]],false],null]]],[[\"default\"],[[[[1,\"\\n                    Details\\n                  \"]],[]]]]],[1,\"\\n                \"],[13],[1,\"\\n                \"],[10,\"li\"],[12],[1,\"\\n                  \"],[8,[39,9],[[24,\"data-test-oidc-key-menu-link\",\"edit\"]],[[\"@route\",\"@model\",\"@disabled\"],[\"vault.cluster.access.oidc.keys.key.edit\",[30,1,[\"name\"]],[28,[37,10],[[30,1,[\"canEdit\"]],false],null]]],[[\"default\"],[[[[1,\"\\n                    Edit\\n                  \"]],[]]]]],[1,\"\\n                \"],[13],[1,\"\\n              \"],[13],[1,\"\\n            \"],[13],[1,\"\\n          \"]],[]]]]],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]],null]],[\"model\"],false,[\"toolbar\",\"toolbar-actions\",\"toolbar-link\",\"each\",\"-track-array\",\"linked-block\",\"array\",\"icon\",\"popup-menu\",\"link-to\",\"eq\"]]",
    "moduleName": "vault/templates/vault/cluster/access/oidc/keys/index.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/oidc/keys/key", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{#if this.showHeader}}
    <PageHeader as |p|>
      <p.top>
        <nav class="breadcrumb" aria-label="breadcrumbs">
          <ul>
            <li>
              <span class="sep">&#x0002f;</span>
              <LinkTo @route="vault.cluster.access.oidc.keys" data-test-breadcrumb-link="oidc-keys">
                Keys
              </LinkTo>
            </li>
          </ul>
        </nav>
      </p.top>
      <p.levelLeft>
        <h1 class="title is-3">
          {{this.model.name}}
        </h1>
      </p.levelLeft>
    </PageHeader>
  
    <div class="tabs-container box is-sideless is-fullwidth is-paddingless is-marginless">
      <nav class="tabs" aria-label="tabs">
        <ul>
          <LinkTo data-test-oidc-key-details @route="vault.cluster.access.oidc.keys.key.details" @model={{this.model}}>
            Details
          </LinkTo>
          <LinkTo data-test-oidc-key-clients @route="vault.cluster.access.oidc.keys.key.clients" @model={{this.model}}>
            Applications
          </LinkTo>
        </ul>
      </nav>
    </div>
  {{/if}}
  
  {{outlet}}
  */
  {
    "id": "qeTiPPlj",
    "block": "[[[41,[30,0,[\"showHeader\"]],[[[1,\"  \"],[8,[39,1],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[30,1,[\"top\"]],null,null,[[\"default\"],[[[[1,\"\\n      \"],[10,\"nav\"],[14,0,\"breadcrumb\"],[14,\"aria-label\",\"breadcrumbs\"],[12],[1,\"\\n        \"],[10,\"ul\"],[12],[1,\"\\n          \"],[10,\"li\"],[12],[1,\"\\n            \"],[10,1],[14,0,\"sep\"],[12],[1,\"/\"],[13],[1,\"\\n            \"],[8,[39,2],[[24,\"data-test-breadcrumb-link\",\"oidc-keys\"]],[[\"@route\"],[\"vault.cluster.access.oidc.keys\"]],[[\"default\"],[[[[1,\"\\n              Keys\\n            \"]],[]]]]],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"]],[]]]]],[1,\"\\n    \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n      \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n        \"],[1,[30,0,[\"model\",\"name\"]]],[1,\"\\n      \"],[13],[1,\"\\n    \"]],[]]]]],[1,\"\\n  \"]],[1]]]]],[1,\"\\n\\n  \"],[10,0],[14,0,\"tabs-container box is-sideless is-fullwidth is-paddingless is-marginless\"],[12],[1,\"\\n    \"],[10,\"nav\"],[14,0,\"tabs\"],[14,\"aria-label\",\"tabs\"],[12],[1,\"\\n      \"],[10,\"ul\"],[12],[1,\"\\n        \"],[8,[39,2],[[24,\"data-test-oidc-key-details\",\"\"]],[[\"@route\",\"@model\"],[\"vault.cluster.access.oidc.keys.key.details\",[30,0,[\"model\"]]]],[[\"default\"],[[[[1,\"\\n          Details\\n        \"]],[]]]]],[1,\"\\n        \"],[8,[39,2],[[24,\"data-test-oidc-key-clients\",\"\"]],[[\"@route\",\"@model\"],[\"vault.cluster.access.oidc.keys.key.clients\",[30,0,[\"model\"]]]],[[\"default\"],[[[[1,\"\\n          Applications\\n        \"]],[]]]]],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]],null],[1,\"\\n\"],[46,[28,[37,4],null,null],null,null,null]],[\"p\"],false,[\"if\",\"page-header\",\"link-to\",\"component\",\"-outlet\"]]",
    "moduleName": "vault/templates/vault/cluster/access/oidc/keys/key.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/oidc/keys/key/clients", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <Toolbar />
  
  {{#if (gt this.model.length 0)}}
    <Oidc::ClientList @model={{this.model}} />
  {{else}}
    <EmptyState
      @title="No applications allowed"
      @message="Access to this key has been limited, and no applications are allowed to use it. Edit the key to allow access."
    >
      <LinkTo @route="vault.cluster.access.oidc.keys.key.edit">
        Edit key
      </LinkTo>
    </EmptyState>
  {{/if}}
  */
  {
    "id": "pj/tUo9h",
    "block": "[[[8,[39,0],null,null,null],[1,\"\\n\\n\"],[41,[28,[37,2],[[30,0,[\"model\",\"length\"]],0],null],[[[1,\"  \"],[8,[39,3],null,[[\"@model\"],[[30,0,[\"model\"]]]],null],[1,\"\\n\"]],[]],[[[1,\"  \"],[8,[39,4],null,[[\"@title\",\"@message\"],[\"No applications allowed\",\"Access to this key has been limited, and no applications are allowed to use it. Edit the key to allow access.\"]],[[\"default\"],[[[[1,\"\\n    \"],[8,[39,5],null,[[\"@route\"],[\"vault.cluster.access.oidc.keys.key.edit\"]],[[\"default\"],[[[[1,\"\\n      Edit key\\n    \"]],[]]]]],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]]]],[],false,[\"toolbar\",\"if\",\"gt\",\"oidc/client-list\",\"empty-state\",\"link-to\"]]",
    "moduleName": "vault/templates/vault/cluster/access/oidc/keys/key/clients.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/oidc/keys/key/details", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <Toolbar>
    <ToolbarActions>
      {{#if this.model.canDelete}}
        <ToolTip @verticalPosition="above" as |T|>
          <T.Trigger tabindex="-1">
            <ConfirmAction
              data-test-oidc-key-delete
              @disabled={{eq this.model.name "default"}}
              @buttonClasses="toolbar-link"
              @onConfirmAction={{this.delete}}
              @confirmTitle="Delete key?"
              @confirmMessage="This key will be permanently deleted. You will not be able to recover it."
              @confirmButtonText="Delete"
            >
              Delete key
            </ConfirmAction>
          </T.Trigger>
          {{#if (eq this.model.name "default")}}
            <T.Content @defaultClass="tool-tip smaller-font">
              <div class="box">
                This is a built-in key that cannot be deleted.
              </div>
            </T.Content>
          {{/if}}
        </ToolTip>
        <div class="toolbar-separator"></div>
      {{/if}}
      {{#if this.model.canRotate}}
        <ConfirmAction
          data-test-oidc-key-rotate
          @buttonClasses="toolbar-link"
          @onConfirmAction={{perform this.rotateKey}}
          @confirmTitle="Rotate this key?"
          @confirmMessage="After rotation, a new public/private key pair will be generated."
          @confirmButtonText="Rotate"
          @isRunning={{this.rotateKey.isRunning}}
        >
          Rotate key
        </ConfirmAction>
      {{/if}}
      {{#if this.model.canEdit}}
        <ToolbarLink @route="vault.cluster.access.oidc.keys.key.edit" @model={{this.model.name}} data-test-oidc-key-edit>
          Edit key
        </ToolbarLink>
      {{/if}}
    </ToolbarActions>
  </Toolbar>
  
  <div class="box is-fullwidth is-sideless is-paddingless is-marginless">
    <InfoTableRow @label="Name" @value={{this.model.name}} @alwaysRender={{true}} />
    <InfoTableRow @label="Algorithm" @value={{this.model.algorithm}} @alwaysRender={{true}} />
    <InfoTableRow @label="Rotation period" @value={{format-duration this.model.rotationPeriod}} @alwaysRender={{true}} />
    <InfoTableRow @label="Verification TTL" @value={{format-duration this.model.verificationTtl}} @alwaysRender={{true}} />
  </div>
  */
  {
    "id": "T1KdzvQu",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[39,1],null,null,[[\"default\"],[[[[1,\"\\n\"],[41,[30,0,[\"model\",\"canDelete\"]],[[[1,\"      \"],[8,[39,3],null,[[\"@verticalPosition\"],[\"above\"]],[[\"default\"],[[[[1,\"\\n        \"],[8,[30,1,[\"Trigger\"]],[[24,\"tabindex\",\"-1\"]],null,[[\"default\"],[[[[1,\"\\n          \"],[8,[39,4],[[24,\"data-test-oidc-key-delete\",\"\"]],[[\"@disabled\",\"@buttonClasses\",\"@onConfirmAction\",\"@confirmTitle\",\"@confirmMessage\",\"@confirmButtonText\"],[[28,[37,5],[[30,0,[\"model\",\"name\"]],\"default\"],null],\"toolbar-link\",[30,0,[\"delete\"]],\"Delete key?\",\"This key will be permanently deleted. You will not be able to recover it.\",\"Delete\"]],[[\"default\"],[[[[1,\"\\n            Delete key\\n          \"]],[]]]]],[1,\"\\n        \"]],[]]]]],[1,\"\\n\"],[41,[28,[37,5],[[30,0,[\"model\",\"name\"]],\"default\"],null],[[[1,\"          \"],[8,[30,1,[\"Content\"]],null,[[\"@defaultClass\"],[\"tool-tip smaller-font\"]],[[\"default\"],[[[[1,\"\\n            \"],[10,0],[14,0,\"box\"],[12],[1,\"\\n              This is a built-in key that cannot be deleted.\\n            \"],[13],[1,\"\\n          \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"      \"]],[1]]]]],[1,\"\\n      \"],[10,0],[14,0,\"toolbar-separator\"],[12],[13],[1,\"\\n\"]],[]],null],[41,[30,0,[\"model\",\"canRotate\"]],[[[1,\"      \"],[8,[39,4],[[24,\"data-test-oidc-key-rotate\",\"\"]],[[\"@buttonClasses\",\"@onConfirmAction\",\"@confirmTitle\",\"@confirmMessage\",\"@confirmButtonText\",\"@isRunning\"],[\"toolbar-link\",[28,[37,6],[[30,0,[\"rotateKey\"]]],null],\"Rotate this key?\",\"After rotation, a new public/private key pair will be generated.\",\"Rotate\",[30,0,[\"rotateKey\",\"isRunning\"]]]],[[\"default\"],[[[[1,\"\\n        Rotate key\\n      \"]],[]]]]],[1,\"\\n\"]],[]],null],[41,[30,0,[\"model\",\"canEdit\"]],[[[1,\"      \"],[8,[39,7],[[24,\"data-test-oidc-key-edit\",\"\"]],[[\"@route\",\"@model\"],[\"vault.cluster.access.oidc.keys.key.edit\",[30,0,[\"model\",\"name\"]]]],[[\"default\"],[[[[1,\"\\n        Edit key\\n      \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"  \"]],[]]]]],[1,\"\\n\"]],[]]]]],[1,\"\\n\\n\"],[10,0],[14,0,\"box is-fullwidth is-sideless is-paddingless is-marginless\"],[12],[1,\"\\n  \"],[8,[39,8],null,[[\"@label\",\"@value\",\"@alwaysRender\"],[\"Name\",[30,0,[\"model\",\"name\"]],true]],null],[1,\"\\n  \"],[8,[39,8],null,[[\"@label\",\"@value\",\"@alwaysRender\"],[\"Algorithm\",[30,0,[\"model\",\"algorithm\"]],true]],null],[1,\"\\n  \"],[8,[39,8],null,[[\"@label\",\"@value\",\"@alwaysRender\"],[\"Rotation period\",[28,[37,9],[[30,0,[\"model\",\"rotationPeriod\"]]],null],true]],null],[1,\"\\n  \"],[8,[39,8],null,[[\"@label\",\"@value\",\"@alwaysRender\"],[\"Verification TTL\",[28,[37,9],[[30,0,[\"model\",\"verificationTtl\"]]],null],true]],null],[1,\"\\n\"],[13]],[\"T\"],false,[\"toolbar\",\"toolbar-actions\",\"if\",\"tool-tip\",\"confirm-action\",\"eq\",\"perform\",\"toolbar-link\",\"info-table-row\",\"format-duration\"]]",
    "moduleName": "vault/templates/vault/cluster/access/oidc/keys/key/details.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/oidc/keys/key/edit", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <Oidc::KeyForm
    @model={{this.model}}
    @onCancel={{transition-to "vault.cluster.access.oidc.keys.key.details" this.model.name}}
    @onSave={{transition-to "vault.cluster.access.oidc.keys.key.details" this.model.name}}
  />
  */
  {
    "id": "h/Ybg0TV",
    "block": "[[[8,[39,0],null,[[\"@model\",\"@onCancel\",\"@onSave\"],[[30,0,[\"model\"]],[28,[37,1],[\"vault.cluster.access.oidc.keys.key.details\",[30,0,[\"model\",\"name\"]]],null],[28,[37,1],[\"vault.cluster.access.oidc.keys.key.details\",[30,0,[\"model\",\"name\"]]],null]]],null]],[],false,[\"oidc/key-form\",\"transition-to\"]]",
    "moduleName": "vault/templates/vault/cluster/access/oidc/keys/key/edit.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/oidc/providers/create", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <Oidc::ProviderForm
    @model={{this.model}}
    @onCancel={{transition-to "vault.cluster.access.oidc.providers"}}
    @onSave={{transition-to "vault.cluster.access.oidc.providers.provider.details" this.model.name}}
  />
  */
  {
    "id": "F2+qwpkr",
    "block": "[[[8,[39,0],null,[[\"@model\",\"@onCancel\",\"@onSave\"],[[30,0,[\"model\"]],[28,[37,1],[\"vault.cluster.access.oidc.providers\"],null],[28,[37,1],[\"vault.cluster.access.oidc.providers.provider.details\",[30,0,[\"model\",\"name\"]]],null]]],null]],[],false,[\"oidc/provider-form\",\"transition-to\"]]",
    "moduleName": "vault/templates/vault/cluster/access/oidc/providers/create.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/oidc/providers/index", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <Toolbar>
    <ToolbarActions>
      <ToolbarLink @route="vault.cluster.access.oidc.providers.create" @type="add" data-test-oidc-provider-create>
        Create provider
      </ToolbarLink>
    </ToolbarActions>
  </Toolbar>
  
  <Oidc::ProviderList @model={{this.model}} />
  */
  {
    "id": "OxkZQVEd",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[39,1],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,2],[[24,\"data-test-oidc-provider-create\",\"\"]],[[\"@route\",\"@type\"],[\"vault.cluster.access.oidc.providers.create\",\"add\"]],[[\"default\"],[[[[1,\"\\n      Create provider\\n    \"]],[]]]]],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]]]]],[1,\"\\n\\n\"],[8,[39,3],null,[[\"@model\"],[[30,0,[\"model\"]]]],null]],[],false,[\"toolbar\",\"toolbar-actions\",\"toolbar-link\",\"oidc/provider-list\"]]",
    "moduleName": "vault/templates/vault/cluster/access/oidc/providers/index.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/oidc/providers/provider", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{#if this.showHeader}}
    <PageHeader as |p|>
      <p.top>
        <nav class="breadcrumb" aria-label="breadcrumbs">
          <ul>
            <li>
              <span class="sep">&#x0002f;</span>
              <LinkTo @route="vault.cluster.access.oidc.providers" data-test-breadcrumb-link="oidc-providers">
                Providers
              </LinkTo>
            </li>
          </ul>
        </nav>
      </p.top>
      <p.levelLeft>
        <h1 class="title is-3">
          {{this.model.name}}
        </h1>
      </p.levelLeft>
    </PageHeader>
  
    <div class="tabs-container box is-sideless is-fullwidth is-paddingless is-marginless">
      <nav class="tabs" aria-label="tabs">
        <ul>
          <LinkTo
            data-test-oidc-provider-details
            @route="vault.cluster.access.oidc.providers.provider.details"
            @model={{this.model}}
          >
            Details
          </LinkTo>
          <LinkTo
            data-test-oidc-provider-clients
            @route="vault.cluster.access.oidc.providers.provider.clients"
            @model={{this.model}}
          >
            Applications
          </LinkTo>
        </ul>
      </nav>
    </div>
  {{/if}}
  
  {{outlet}}
  */
  {
    "id": "RkIbK7OL",
    "block": "[[[41,[30,0,[\"showHeader\"]],[[[1,\"  \"],[8,[39,1],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[30,1,[\"top\"]],null,null,[[\"default\"],[[[[1,\"\\n      \"],[10,\"nav\"],[14,0,\"breadcrumb\"],[14,\"aria-label\",\"breadcrumbs\"],[12],[1,\"\\n        \"],[10,\"ul\"],[12],[1,\"\\n          \"],[10,\"li\"],[12],[1,\"\\n            \"],[10,1],[14,0,\"sep\"],[12],[1,\"/\"],[13],[1,\"\\n            \"],[8,[39,2],[[24,\"data-test-breadcrumb-link\",\"oidc-providers\"]],[[\"@route\"],[\"vault.cluster.access.oidc.providers\"]],[[\"default\"],[[[[1,\"\\n              Providers\\n            \"]],[]]]]],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"]],[]]]]],[1,\"\\n    \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n      \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n        \"],[1,[30,0,[\"model\",\"name\"]]],[1,\"\\n      \"],[13],[1,\"\\n    \"]],[]]]]],[1,\"\\n  \"]],[1]]]]],[1,\"\\n\\n  \"],[10,0],[14,0,\"tabs-container box is-sideless is-fullwidth is-paddingless is-marginless\"],[12],[1,\"\\n    \"],[10,\"nav\"],[14,0,\"tabs\"],[14,\"aria-label\",\"tabs\"],[12],[1,\"\\n      \"],[10,\"ul\"],[12],[1,\"\\n        \"],[8,[39,2],[[24,\"data-test-oidc-provider-details\",\"\"]],[[\"@route\",\"@model\"],[\"vault.cluster.access.oidc.providers.provider.details\",[30,0,[\"model\"]]]],[[\"default\"],[[[[1,\"\\n          Details\\n        \"]],[]]]]],[1,\"\\n        \"],[8,[39,2],[[24,\"data-test-oidc-provider-clients\",\"\"]],[[\"@route\",\"@model\"],[\"vault.cluster.access.oidc.providers.provider.clients\",[30,0,[\"model\"]]]],[[\"default\"],[[[[1,\"\\n          Applications\\n        \"]],[]]]]],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]],null],[1,\"\\n\"],[46,[28,[37,4],null,null],null,null,null]],[\"p\"],false,[\"if\",\"page-header\",\"link-to\",\"component\",\"-outlet\"]]",
    "moduleName": "vault/templates/vault/cluster/access/oidc/providers/provider.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/oidc/providers/provider/clients", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <Toolbar />
  
  {{#if (gt this.model.length 0)}}
    <Oidc::ClientList @model={{this.model}} />
  {{else}}
    <EmptyState
      @title="No applications allowed"
      @message="Access to this provider has been limited, and no applications are allowed to use it. Edit the provider to allow access."
    >
      <LinkTo @route="vault.cluster.access.oidc.providers.provider.edit">
        Edit provider
      </LinkTo>
    </EmptyState>
  {{/if}}
  */
  {
    "id": "/gdTGlM6",
    "block": "[[[8,[39,0],null,null,null],[1,\"\\n\\n\"],[41,[28,[37,2],[[30,0,[\"model\",\"length\"]],0],null],[[[1,\"  \"],[8,[39,3],null,[[\"@model\"],[[30,0,[\"model\"]]]],null],[1,\"\\n\"]],[]],[[[1,\"  \"],[8,[39,4],null,[[\"@title\",\"@message\"],[\"No applications allowed\",\"Access to this provider has been limited, and no applications are allowed to use it. Edit the provider to allow access.\"]],[[\"default\"],[[[[1,\"\\n    \"],[8,[39,5],null,[[\"@route\"],[\"vault.cluster.access.oidc.providers.provider.edit\"]],[[\"default\"],[[[[1,\"\\n      Edit provider\\n    \"]],[]]]]],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]]]],[],false,[\"toolbar\",\"if\",\"gt\",\"oidc/client-list\",\"empty-state\",\"link-to\"]]",
    "moduleName": "vault/templates/vault/cluster/access/oidc/providers/provider/clients.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/oidc/providers/provider/details", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <Toolbar>
    <ToolbarActions>
      {{#if this.model.canDelete}}
        <ToolTip @verticalPosition="above" as |T|>
          <T.Trigger tabindex="-1">
            <ConfirmAction
              data-test-oidc-provider-delete
              @disabled={{eq this.model.name "default"}}
              @buttonClasses="toolbar-link"
              @onConfirmAction={{this.delete}}
              @confirmTitle="Delete provider?"
              @confirmMessage="This provider will be permanently deleted. You will need to re-create it to use it again."
              @confirmButtonText="Delete"
            >
              Delete provider
            </ConfirmAction>
          </T.Trigger>
          {{#if (eq this.model.name "default")}}
            <T.Content @defaultClass="tool-tip smaller-font">
              <div class="box">
                This is a built-in provider that cannot be deleted.
              </div>
            </T.Content>
          {{/if}}
        </ToolTip>
        <div class="toolbar-separator"></div>
      {{/if}}
      {{#if this.model.canEdit}}
        <ToolbarLink
          @route="vault.cluster.access.oidc.providers.provider.edit"
          @model={{this.model.name}}
          data-test-oidc-provider-edit
        >
          Edit provider
        </ToolbarLink>
      {{/if}}
    </ToolbarActions>
  </Toolbar>
  <div class="box is-fullwidth is-sideless is-paddingless is-marginless">
    <InfoTableRow @label="Name" @value={{this.model.name}} @alwaysRender={{true}} />
    <InfoTableRow @label="Issuer URL" @value={{this.model.issuer}} @addCopyButton={{true}} @alwaysRender={{true}} />
    <InfoTableRow
      @label="Scopes"
      @type="array"
      @value={{@model.scopesSupported}}
      @model={{@model}}
      @isLink={{true}}
      @modelType="oidc/scope"
      @itemRoute={{"vault.cluster.access.oidc.scopes.scope.details"}}
      @alwaysRender={{true}}
      @doNotTruncate={{true}}
    />
  </div>
  */
  {
    "id": "ADnOp49a",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[39,1],null,null,[[\"default\"],[[[[1,\"\\n\"],[41,[30,0,[\"model\",\"canDelete\"]],[[[1,\"      \"],[8,[39,3],null,[[\"@verticalPosition\"],[\"above\"]],[[\"default\"],[[[[1,\"\\n        \"],[8,[30,1,[\"Trigger\"]],[[24,\"tabindex\",\"-1\"]],null,[[\"default\"],[[[[1,\"\\n          \"],[8,[39,4],[[24,\"data-test-oidc-provider-delete\",\"\"]],[[\"@disabled\",\"@buttonClasses\",\"@onConfirmAction\",\"@confirmTitle\",\"@confirmMessage\",\"@confirmButtonText\"],[[28,[37,5],[[30,0,[\"model\",\"name\"]],\"default\"],null],\"toolbar-link\",[30,0,[\"delete\"]],\"Delete provider?\",\"This provider will be permanently deleted. You will need to re-create it to use it again.\",\"Delete\"]],[[\"default\"],[[[[1,\"\\n            Delete provider\\n          \"]],[]]]]],[1,\"\\n        \"]],[]]]]],[1,\"\\n\"],[41,[28,[37,5],[[30,0,[\"model\",\"name\"]],\"default\"],null],[[[1,\"          \"],[8,[30,1,[\"Content\"]],null,[[\"@defaultClass\"],[\"tool-tip smaller-font\"]],[[\"default\"],[[[[1,\"\\n            \"],[10,0],[14,0,\"box\"],[12],[1,\"\\n              This is a built-in provider that cannot be deleted.\\n            \"],[13],[1,\"\\n          \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"      \"]],[1]]]]],[1,\"\\n      \"],[10,0],[14,0,\"toolbar-separator\"],[12],[13],[1,\"\\n\"]],[]],null],[41,[30,0,[\"model\",\"canEdit\"]],[[[1,\"      \"],[8,[39,6],[[24,\"data-test-oidc-provider-edit\",\"\"]],[[\"@route\",\"@model\"],[\"vault.cluster.access.oidc.providers.provider.edit\",[30,0,[\"model\",\"name\"]]]],[[\"default\"],[[[[1,\"\\n        Edit provider\\n      \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"  \"]],[]]]]],[1,\"\\n\"]],[]]]]],[1,\"\\n\"],[10,0],[14,0,\"box is-fullwidth is-sideless is-paddingless is-marginless\"],[12],[1,\"\\n  \"],[8,[39,7],null,[[\"@label\",\"@value\",\"@alwaysRender\"],[\"Name\",[30,0,[\"model\",\"name\"]],true]],null],[1,\"\\n  \"],[8,[39,7],null,[[\"@label\",\"@value\",\"@addCopyButton\",\"@alwaysRender\"],[\"Issuer URL\",[30,0,[\"model\",\"issuer\"]],true,true]],null],[1,\"\\n  \"],[8,[39,7],null,[[\"@label\",\"@type\",\"@value\",\"@model\",\"@isLink\",\"@modelType\",\"@itemRoute\",\"@alwaysRender\",\"@doNotTruncate\"],[\"Scopes\",\"array\",[30,2,[\"scopesSupported\"]],[30,2],true,\"oidc/scope\",\"vault.cluster.access.oidc.scopes.scope.details\",true,true]],null],[1,\"\\n\"],[13]],[\"T\",\"@model\"],false,[\"toolbar\",\"toolbar-actions\",\"if\",\"tool-tip\",\"confirm-action\",\"eq\",\"toolbar-link\",\"info-table-row\"]]",
    "moduleName": "vault/templates/vault/cluster/access/oidc/providers/provider/details.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/oidc/providers/provider/edit", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <Oidc::ProviderForm
    @model={{this.model}}
    @onCancel={{transition-to "vault.cluster.access.oidc.providers.provider.details" this.model.name}}
    @onSave={{transition-to "vault.cluster.access.oidc.providers.provider.details" this.model.name}}
  />
  */
  {
    "id": "gCT4vbV1",
    "block": "[[[8,[39,0],null,[[\"@model\",\"@onCancel\",\"@onSave\"],[[30,0,[\"model\"]],[28,[37,1],[\"vault.cluster.access.oidc.providers.provider.details\",[30,0,[\"model\",\"name\"]]],null],[28,[37,1],[\"vault.cluster.access.oidc.providers.provider.details\",[30,0,[\"model\",\"name\"]]],null]]],null]],[],false,[\"oidc/provider-form\",\"transition-to\"]]",
    "moduleName": "vault/templates/vault/cluster/access/oidc/providers/provider/edit.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/oidc/scopes/create", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <Oidc::ScopeForm
    @model={{this.model}}
    @onCancel={{transition-to "vault.cluster.access.oidc.scopes"}}
    @onSave={{transition-to "vault.cluster.access.oidc.scopes.scope.details" this.model.name}}
  />
  */
  {
    "id": "yuKh3mB3",
    "block": "[[[8,[39,0],null,[[\"@model\",\"@onCancel\",\"@onSave\"],[[30,0,[\"model\"]],[28,[37,1],[\"vault.cluster.access.oidc.scopes\"],null],[28,[37,1],[\"vault.cluster.access.oidc.scopes.scope.details\",[30,0,[\"model\",\"name\"]]],null]]],null]],[],false,[\"oidc/scope-form\",\"transition-to\"]]",
    "moduleName": "vault/templates/vault/cluster/access/oidc/scopes/create.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/oidc/scopes/index", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <Toolbar>
    <ToolbarActions>
      <ToolbarLink @route="vault.cluster.access.oidc.scopes.create" @type="add" data-test-oidc-scope-create>
        Create scope
      </ToolbarLink>
    </ToolbarActions>
  </Toolbar>
  
  {{#if (gt this.model.length 0)}}
    {{#each this.model as |model|}}
      <LinkedBlock
        class="list-item-row"
        @params={{array "vault.cluster.access.oidc.scopes.scope.details" model.name}}
        data-test-oidc-scope-linked-block={{model.name}}
      >
        <div class="level is-mobile">
          <div class="level-left">
            <div>
              <Icon @name="file" class="has-text-grey-light" />
              <span class="has-text-weight-semibold is-underline">
                {{model.name}}
              </span>
            </div>
          </div>
          <div class="level-right is-flex is-paddingless is-marginless">
            <div class="level-item">
              <PopupMenu>
                <nav class="menu">
                  <ul class="menu-list">
                    <li>
                      <LinkTo
                        @route="vault.cluster.access.oidc.scopes.scope.details"
                        @model={{model.name}}
                        @disabled={{eq model.canRead false}}
                        data-test-oidc-scope-menu-link="details"
                      >
                        Details
                      </LinkTo>
                    </li>
                    <li>
                      <LinkTo
                        @route="vault.cluster.access.oidc.scopes.scope.edit"
                        @model={{model.name}}
                        @disabled={{eq model.canEdit false}}
                        data-test-oidc-scope-menu-link="edit"
                      >
                        Edit
                      </LinkTo>
                    </li>
                  </ul>
                </nav>
              </PopupMenu>
            </div>
          </div>
        </div>
      </LinkedBlock>
    {{/each}}
  {{else}}
    <EmptyState @title="No scopes yet" data-test-oidc-scope-empty-state>
      <div>
        <p>Use scope to define identity information about the authenticated user.
          <DocLink @path="/docs/concepts/oidc-provider#scopes">
            Learn more.
          </DocLink>
        </p>
        <div class="has-top-margin-m">
          <LinkTo @route="vault.cluster.access.oidc.scopes.create" data-test-oidc-scope-create-empty-state>
            Create scope
          </LinkTo>
        </div>
      </div>
    </EmptyState>
  {{/if}}
  */
  {
    "id": "cLBsekrp",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[39,1],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,2],[[24,\"data-test-oidc-scope-create\",\"\"]],[[\"@route\",\"@type\"],[\"vault.cluster.access.oidc.scopes.create\",\"add\"]],[[\"default\"],[[[[1,\"\\n      Create scope\\n    \"]],[]]]]],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]]]]],[1,\"\\n\\n\"],[41,[28,[37,4],[[30,0,[\"model\",\"length\"]],0],null],[[[42,[28,[37,6],[[28,[37,6],[[30,0,[\"model\"]]],null]],null],null,[[[1,\"    \"],[8,[39,7],[[24,0,\"list-item-row\"],[16,\"data-test-oidc-scope-linked-block\",[30,1,[\"name\"]]]],[[\"@params\"],[[28,[37,8],[\"vault.cluster.access.oidc.scopes.scope.details\",[30,1,[\"name\"]]],null]]],[[\"default\"],[[[[1,\"\\n      \"],[10,0],[14,0,\"level is-mobile\"],[12],[1,\"\\n        \"],[10,0],[14,0,\"level-left\"],[12],[1,\"\\n          \"],[10,0],[12],[1,\"\\n            \"],[8,[39,9],[[24,0,\"has-text-grey-light\"]],[[\"@name\"],[\"file\"]],null],[1,\"\\n            \"],[10,1],[14,0,\"has-text-weight-semibold is-underline\"],[12],[1,\"\\n              \"],[1,[30,1,[\"name\"]]],[1,\"\\n            \"],[13],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n        \"],[10,0],[14,0,\"level-right is-flex is-paddingless is-marginless\"],[12],[1,\"\\n          \"],[10,0],[14,0,\"level-item\"],[12],[1,\"\\n            \"],[8,[39,10],null,null,[[\"default\"],[[[[1,\"\\n              \"],[10,\"nav\"],[14,0,\"menu\"],[12],[1,\"\\n                \"],[10,\"ul\"],[14,0,\"menu-list\"],[12],[1,\"\\n                  \"],[10,\"li\"],[12],[1,\"\\n                    \"],[8,[39,11],[[24,\"data-test-oidc-scope-menu-link\",\"details\"]],[[\"@route\",\"@model\",\"@disabled\"],[\"vault.cluster.access.oidc.scopes.scope.details\",[30,1,[\"name\"]],[28,[37,12],[[30,1,[\"canRead\"]],false],null]]],[[\"default\"],[[[[1,\"\\n                      Details\\n                    \"]],[]]]]],[1,\"\\n                  \"],[13],[1,\"\\n                  \"],[10,\"li\"],[12],[1,\"\\n                    \"],[8,[39,11],[[24,\"data-test-oidc-scope-menu-link\",\"edit\"]],[[\"@route\",\"@model\",\"@disabled\"],[\"vault.cluster.access.oidc.scopes.scope.edit\",[30,1,[\"name\"]],[28,[37,12],[[30,1,[\"canEdit\"]],false],null]]],[[\"default\"],[[[[1,\"\\n                      Edit\\n                    \"]],[]]]]],[1,\"\\n                  \"],[13],[1,\"\\n                \"],[13],[1,\"\\n              \"],[13],[1,\"\\n            \"]],[]]]]],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"]],[]]]]],[1,\"\\n\"]],[1]],null]],[]],[[[1,\"  \"],[8,[39,13],[[24,\"data-test-oidc-scope-empty-state\",\"\"]],[[\"@title\"],[\"No scopes yet\"]],[[\"default\"],[[[[1,\"\\n    \"],[10,0],[12],[1,\"\\n      \"],[10,2],[12],[1,\"Use scope to define identity information about the authenticated user.\\n        \"],[8,[39,14],null,[[\"@path\"],[\"/docs/concepts/oidc-provider#scopes\"]],[[\"default\"],[[[[1,\"\\n          Learn more.\\n        \"]],[]]]]],[1,\"\\n      \"],[13],[1,\"\\n      \"],[10,0],[14,0,\"has-top-margin-m\"],[12],[1,\"\\n        \"],[8,[39,11],[[24,\"data-test-oidc-scope-create-empty-state\",\"\"]],[[\"@route\"],[\"vault.cluster.access.oidc.scopes.create\"]],[[\"default\"],[[[[1,\"\\n          Create scope\\n        \"]],[]]]]],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]]]],[\"model\"],false,[\"toolbar\",\"toolbar-actions\",\"toolbar-link\",\"if\",\"gt\",\"each\",\"-track-array\",\"linked-block\",\"array\",\"icon\",\"popup-menu\",\"link-to\",\"eq\",\"empty-state\",\"doc-link\"]]",
    "moduleName": "vault/templates/vault/cluster/access/oidc/scopes/index.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/oidc/scopes/scope/details", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.top>
      <nav class="breadcrumb" aria-label="breadcrumbs">
        <ul>
          <li>
            <span class="sep">&#x0002f;</span>
            <LinkTo @route="vault.cluster.access.oidc.scopes" data-test-breadcrumb-link="oidc-scopes">
              Scopes
            </LinkTo>
          </li>
        </ul>
      </nav>
    </p.top>
    <p.levelLeft>
      <h1 class="title is-3" data-test-oidc-scope-header>
        {{this.model.name}}
      </h1>
    </p.levelLeft>
  </PageHeader>
  
  <div class="tabs-container box is-sideless is-fullwidth is-paddingless is-marginless">
    <nav class="tabs" aria-label="tabs">
      <ul>
        <LinkTo @route="vault.cluster.access.oidc.scopes.scope.details" @model={{this.model}} data-test-oidc-scope-details>
          Details
        </LinkTo>
      </ul>
    </nav>
  </div>
  
  <Toolbar>
    <ToolbarActions>
      {{#if this.model.canDelete}}
        <ConfirmAction
          data-test-oidc-scope-delete
          @buttonClasses="toolbar-link"
          @onConfirmAction={{this.delete}}
          @confirmTitle="Delete scope?"
          @confirmMessage="This scope will be permanently deleted. You will not be able to recover it."
          @confirmButtonText="Delete"
        >
          Delete scope
        </ConfirmAction>
        <div class="toolbar-separator"></div>
      {{/if}}
      {{#if this.model.canEdit}}
        <ToolbarLink @route="vault.cluster.access.oidc.scopes.scope.edit" @model={{this.model.name}} data-test-oidc-scope-edit>
          Edit scope
        </ToolbarLink>
      {{/if}}
    </ToolbarActions>
  </Toolbar>
  
  <div class="box is-fullwidth is-sideless is-paddingless is-marginless">
    <InfoTableRow @label="Name" @value={{this.model.name}} />
    <InfoTableRow @label="Description" @value={{this.model.description}} />
    <JsonEditor
      @title="JSON Template"
      @mode="ruby"
      @value={{this.model.template}}
      @readOnly={{true}}
      class="has-top-margin-xl has-bottom-margin-xl"
      data-test-oidc-scope-json
    />
  </div>
  */
  {
    "id": "ooOlFlZZ",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"top\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"nav\"],[14,0,\"breadcrumb\"],[14,\"aria-label\",\"breadcrumbs\"],[12],[1,\"\\n      \"],[10,\"ul\"],[12],[1,\"\\n        \"],[10,\"li\"],[12],[1,\"\\n          \"],[10,1],[14,0,\"sep\"],[12],[1,\"/\"],[13],[1,\"\\n          \"],[8,[39,1],[[24,\"data-test-breadcrumb-link\",\"oidc-scopes\"]],[[\"@route\"],[\"vault.cluster.access.oidc.scopes\"]],[[\"default\"],[[[[1,\"\\n            Scopes\\n          \"]],[]]]]],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[14,\"data-test-oidc-scope-header\",\"\"],[12],[1,\"\\n      \"],[1,[30,0,[\"model\",\"name\"]]],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\\n\"],[10,0],[14,0,\"tabs-container box is-sideless is-fullwidth is-paddingless is-marginless\"],[12],[1,\"\\n  \"],[10,\"nav\"],[14,0,\"tabs\"],[14,\"aria-label\",\"tabs\"],[12],[1,\"\\n    \"],[10,\"ul\"],[12],[1,\"\\n      \"],[8,[39,1],[[24,\"data-test-oidc-scope-details\",\"\"]],[[\"@route\",\"@model\"],[\"vault.cluster.access.oidc.scopes.scope.details\",[30,0,[\"model\"]]]],[[\"default\"],[[[[1,\"\\n        Details\\n      \"]],[]]]]],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"],[13],[1,\"\\n\\n\"],[8,[39,2],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[39,3],null,null,[[\"default\"],[[[[1,\"\\n\"],[41,[30,0,[\"model\",\"canDelete\"]],[[[1,\"      \"],[8,[39,5],[[24,\"data-test-oidc-scope-delete\",\"\"]],[[\"@buttonClasses\",\"@onConfirmAction\",\"@confirmTitle\",\"@confirmMessage\",\"@confirmButtonText\"],[\"toolbar-link\",[30,0,[\"delete\"]],\"Delete scope?\",\"This scope will be permanently deleted. You will not be able to recover it.\",\"Delete\"]],[[\"default\"],[[[[1,\"\\n        Delete scope\\n      \"]],[]]]]],[1,\"\\n      \"],[10,0],[14,0,\"toolbar-separator\"],[12],[13],[1,\"\\n\"]],[]],null],[41,[30,0,[\"model\",\"canEdit\"]],[[[1,\"      \"],[8,[39,6],[[24,\"data-test-oidc-scope-edit\",\"\"]],[[\"@route\",\"@model\"],[\"vault.cluster.access.oidc.scopes.scope.edit\",[30,0,[\"model\",\"name\"]]]],[[\"default\"],[[[[1,\"\\n        Edit scope\\n      \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"  \"]],[]]]]],[1,\"\\n\"]],[]]]]],[1,\"\\n\\n\"],[10,0],[14,0,\"box is-fullwidth is-sideless is-paddingless is-marginless\"],[12],[1,\"\\n  \"],[8,[39,7],null,[[\"@label\",\"@value\"],[\"Name\",[30,0,[\"model\",\"name\"]]]],null],[1,\"\\n  \"],[8,[39,7],null,[[\"@label\",\"@value\"],[\"Description\",[30,0,[\"model\",\"description\"]]]],null],[1,\"\\n  \"],[8,[39,8],[[24,0,\"has-top-margin-xl has-bottom-margin-xl\"],[24,\"data-test-oidc-scope-json\",\"\"]],[[\"@title\",\"@mode\",\"@value\",\"@readOnly\"],[\"JSON Template\",\"ruby\",[30,0,[\"model\",\"template\"]],true]],null],[1,\"\\n\"],[13]],[\"p\"],false,[\"page-header\",\"link-to\",\"toolbar\",\"toolbar-actions\",\"if\",\"confirm-action\",\"toolbar-link\",\"info-table-row\",\"json-editor\"]]",
    "moduleName": "vault/templates/vault/cluster/access/oidc/scopes/scope/details.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/access/oidc/scopes/scope/edit", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <Oidc::ScopeForm
    @model={{this.model}}
    @onCancel={{transition-to "vault.cluster.access.oidc.scopes.scope.details" this.model.name}}
    @onSave={{transition-to "vault.cluster.access.oidc.scopes.scope.details" this.model.name}}
  />
  */
  {
    "id": "6lmf+raM",
    "block": "[[[8,[39,0],null,[[\"@model\",\"@onCancel\",\"@onSave\"],[[30,0,[\"model\"]],[28,[37,1],[\"vault.cluster.access.oidc.scopes.scope.details\",[30,0,[\"model\",\"name\"]]],null],[28,[37,1],[\"vault.cluster.access.oidc.scopes.scope.details\",[30,0,[\"model\",\"name\"]]],null]]],null]],[],false,[\"oidc/scope-form\",\"transition-to\"]]",
    "moduleName": "vault/templates/vault/cluster/access/oidc/scopes/scope/edit.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/auth", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <SplashPage @hasAltContent={{this.mfaErrors}} as |Page|>
    <Page.altContent>
      <div class="has-top-margin-xxl" data-test-mfa-error>
        <EmptyState
          @title="Unauthorized"
          @message="Multi-factor authentication is required, but failed. Go back and try again, or contact your administrator."
          @icon="alert-circle"
          @bottomBorder={{true}}
          @subTitle={{join ". " this.mfaErrors}}
          class="is-shadowless"
        >
          <button type="button" class="button is-ghost is-transparent" {{on "click" (action "onMfaErrorDismiss")}}>
            <Icon @name="chevron-left" />
            Go back
          </button>
        </EmptyState>
      </div>
    </Page.altContent>
    <Page.header>
      {{#if this.oidcProvider}}
        <div class="box is-shadowless is-flex-v-centered" data-test-auth-logo>
          <LogoEdition aria-label="Sign in with OpenBao" />
        </div>
      {{else}}
        <div class="is-flex-v-centered has-bottom-margin-xxl">
          <div class="brand-icon-large">
            <Icon @name="openbao" @size="24" @stretched={{true}} />
          </div>
        </div>
        <div class="is-flex-row">
          {{#if this.mfaAuthData}}
            <button type="button" class="icon-button" {{on "click" (fn (mut this.mfaAuthData) null)}}>
              <Icon @name="arrow-left" @size="24" aria-label="Back to login" class="icon-blue" />
            </button>
          {{else if this.waitingForOktaNumberChallenge}}
            <button type="button" class="icon-button" {{on "click" (action "cancelAuthentication")}}>
              <Icon @name="arrow-left" @size="24" aria-label="Back to login" class="icon-blue" />
            </button>
          {{/if}}
          <h1 class="title is-3">
            {{if (or this.mfaAuthData this.waitingForOktaNumberChallenge) "Authenticate" "Sign in to OpenBao"}}
          </h1>
        </div>
      {{/if}}
    </Page.header>
    {{#unless this.mfaAuthData}}
      {{#if this.managedNamespaceRoot}}
        <Page.sub-header>
          <Toolbar>
            <div class="toolbar-namespace-picker" data-test-managed-namespace-toolbar>
              <div class="field is-horizontal">
                <div class="field-label">
                  <label class="is-label" for="namespace">Namespace</label>
                </div>
                <div class="field-label">
                  <span class="has-text-grey" data-test-managed-namespace-root>/{{this.managedNamespaceRoot}}</span>
                </div>
                <div class="field-body">
                  <div class="field">
                    <div class="control">
                      <input
                        value={{this.managedNamespaceChild}}
                        placeholder="/ (Default)"
                        oninput={{perform this.updateManagedNamespace value="target.value"}}
                        autocomplete="off"
                        spellcheck="false"
                        name="namespace"
                        id="namespace"
                        class="input"
                        type="text"
                      />
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </Toolbar>
        </Page.sub-header>
      {{/if}}
    {{/unless}}
    <Page.content>
      {{#if this.mfaAuthData}}
        <Mfa::MfaForm
          @clusterId={{this.model.id}}
          @authData={{this.mfaAuthData}}
          @onSuccess={{action "onMfaSuccess"}}
          @onError={{fn (mut this.mfaErrors)}}
        />
      {{else}}
        <AuthForm
          @wrappedToken={{this.wrappedToken}}
          @cluster={{this.model}}
          @namespace={{this.namespaceQueryParam}}
          @redirectTo={{this.redirectTo}}
          @selectedAuth={{this.authMethod}}
          @onSuccess={{action "onAuthResponse"}}
          @setOktaNumberChallenge={{fn (mut this.waitingForOktaNumberChallenge)}}
          @waitingForOktaNumberChallenge={{this.waitingForOktaNumberChallenge}}
          @setCancellingAuth={{fn (mut this.cancelAuth)}}
          @cancelAuthForOktaNumberChallenge={{this.cancelAuth}}
        />
      {{/if}}
    </Page.content>
    <Page.footer>
      <div class="has-short-padding">
        <p class="help has-text-grey-dark" data-test-auth-helptext>
          {{#if this.oidcProvider}}
            Once you log in, you will be redirected back to your application. If you require login credentials, contact your
            administrator.
          {{else}}
            Contact your administrator for login credentials
          {{/if}}
        </p>
      </div>
    </Page.footer>
  </SplashPage>
  */
  {
    "id": "XVl6wXzQ",
    "block": "[[[8,[39,0],null,[[\"@hasAltContent\"],[[30,0,[\"mfaErrors\"]]]],[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"altContent\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,0],[14,0,\"has-top-margin-xxl\"],[14,\"data-test-mfa-error\",\"\"],[12],[1,\"\\n      \"],[8,[39,1],[[24,0,\"is-shadowless\"]],[[\"@title\",\"@message\",\"@icon\",\"@bottomBorder\",\"@subTitle\"],[\"Unauthorized\",\"Multi-factor authentication is required, but failed. Go back and try again, or contact your administrator.\",\"alert-circle\",true,[28,[37,2],[\". \",[30,0,[\"mfaErrors\"]]],null]]],[[\"default\"],[[[[1,\"\\n        \"],[11,\"button\"],[24,0,\"button is-ghost is-transparent\"],[24,4,\"button\"],[4,[38,3],[\"click\",[28,[37,4],[[30,0],\"onMfaErrorDismiss\"],null]],null],[12],[1,\"\\n          \"],[8,[39,5],null,[[\"@name\"],[\"chevron-left\"]],null],[1,\"\\n          Go back\\n        \"],[13],[1,\"\\n      \"]],[]]]]],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[30,1,[\"header\"]],null,null,[[\"default\"],[[[[1,\"\\n\"],[41,[30,0,[\"oidcProvider\"]],[[[1,\"      \"],[10,0],[14,0,\"box is-shadowless is-flex-v-centered\"],[14,\"data-test-auth-logo\",\"\"],[12],[1,\"\\n        \"],[8,[39,7],[[24,\"aria-label\",\"Sign in with OpenBao\"]],null,null],[1,\"\\n      \"],[13],[1,\"\\n\"]],[]],[[[1,\"      \"],[10,0],[14,0,\"is-flex-v-centered has-bottom-margin-xxl\"],[12],[1,\"\\n        \"],[10,0],[14,0,\"brand-icon-large\"],[12],[1,\"\\n          \"],[8,[39,5],null,[[\"@name\",\"@size\",\"@stretched\"],[\"openbao\",\"24\",true]],null],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n      \"],[10,0],[14,0,\"is-flex-row\"],[12],[1,\"\\n\"],[41,[30,0,[\"mfaAuthData\"]],[[[1,\"          \"],[11,\"button\"],[24,0,\"icon-button\"],[24,4,\"button\"],[4,[38,3],[\"click\",[28,[37,8],[[28,[37,9],[[30,0,[\"mfaAuthData\"]]],null],null],null]],null],[12],[1,\"\\n            \"],[8,[39,5],[[24,\"aria-label\",\"Back to login\"],[24,0,\"icon-blue\"]],[[\"@name\",\"@size\"],[\"arrow-left\",\"24\"]],null],[1,\"\\n          \"],[13],[1,\"\\n\"]],[]],[[[41,[30,0,[\"waitingForOktaNumberChallenge\"]],[[[1,\"          \"],[11,\"button\"],[24,0,\"icon-button\"],[24,4,\"button\"],[4,[38,3],[\"click\",[28,[37,4],[[30,0],\"cancelAuthentication\"],null]],null],[12],[1,\"\\n            \"],[8,[39,5],[[24,\"aria-label\",\"Back to login\"],[24,0,\"icon-blue\"]],[[\"@name\",\"@size\"],[\"arrow-left\",\"24\"]],null],[1,\"\\n          \"],[13],[1,\"\\n        \"]],[]],null]],[]]],[1,\"        \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n          \"],[1,[52,[28,[37,10],[[30,0,[\"mfaAuthData\"]],[30,0,[\"waitingForOktaNumberChallenge\"]]],null],\"Authenticate\",\"Sign in to OpenBao\"]],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n\"]],[]]],[1,\"  \"]],[]]]]],[1,\"\\n\"],[41,[51,[30,0,[\"mfaAuthData\"]]],[[[41,[30,0,[\"managedNamespaceRoot\"]],[[[1,\"      \"],[8,[30,1,[\"sub-header\"]],null,null,[[\"default\"],[[[[1,\"\\n        \"],[8,[39,12],null,null,[[\"default\"],[[[[1,\"\\n          \"],[10,0],[14,0,\"toolbar-namespace-picker\"],[14,\"data-test-managed-namespace-toolbar\",\"\"],[12],[1,\"\\n            \"],[10,0],[14,0,\"field is-horizontal\"],[12],[1,\"\\n              \"],[10,0],[14,0,\"field-label\"],[12],[1,\"\\n                \"],[10,\"label\"],[14,0,\"is-label\"],[14,\"for\",\"namespace\"],[12],[1,\"Namespace\"],[13],[1,\"\\n              \"],[13],[1,\"\\n              \"],[10,0],[14,0,\"field-label\"],[12],[1,\"\\n                \"],[10,1],[14,0,\"has-text-grey\"],[14,\"data-test-managed-namespace-root\",\"\"],[12],[1,\"/\"],[1,[30,0,[\"managedNamespaceRoot\"]]],[13],[1,\"\\n              \"],[13],[1,\"\\n              \"],[10,0],[14,0,\"field-body\"],[12],[1,\"\\n                \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n                  \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n                    \"],[10,\"input\"],[15,2,[30,0,[\"managedNamespaceChild\"]]],[14,\"placeholder\",\"/ (Default)\"],[15,\"oninput\",[28,[37,13],[[30,0,[\"updateManagedNamespace\"]]],[[\"value\"],[\"target.value\"]]]],[14,\"autocomplete\",\"off\"],[14,\"spellcheck\",\"false\"],[14,3,\"namespace\"],[14,1,\"namespace\"],[14,0,\"input\"],[14,4,\"text\"],[12],[13],[1,\"\\n                  \"],[13],[1,\"\\n                \"],[13],[1,\"\\n              \"],[13],[1,\"\\n            \"],[13],[1,\"\\n          \"],[13],[1,\"\\n        \"]],[]]]]],[1,\"\\n      \"]],[]]]]],[1,\"\\n\"]],[]],null]],[]],null],[1,\"  \"],[8,[30,1,[\"content\"]],null,null,[[\"default\"],[[[[1,\"\\n\"],[41,[30,0,[\"mfaAuthData\"]],[[[1,\"      \"],[8,[39,14],null,[[\"@clusterId\",\"@authData\",\"@onSuccess\",\"@onError\"],[[30,0,[\"model\",\"id\"]],[30,0,[\"mfaAuthData\"]],[28,[37,4],[[30,0],\"onMfaSuccess\"],null],[28,[37,8],[[28,[37,9],[[30,0,[\"mfaErrors\"]]],null]],null]]],null],[1,\"\\n\"]],[]],[[[1,\"      \"],[8,[39,15],null,[[\"@wrappedToken\",\"@cluster\",\"@namespace\",\"@redirectTo\",\"@selectedAuth\",\"@onSuccess\",\"@setOktaNumberChallenge\",\"@waitingForOktaNumberChallenge\",\"@setCancellingAuth\",\"@cancelAuthForOktaNumberChallenge\"],[[30,0,[\"wrappedToken\"]],[30,0,[\"model\"]],[30,0,[\"namespaceQueryParam\"]],[30,0,[\"redirectTo\"]],[30,0,[\"authMethod\"]],[28,[37,4],[[30,0],\"onAuthResponse\"],null],[28,[37,8],[[28,[37,9],[[30,0,[\"waitingForOktaNumberChallenge\"]]],null]],null],[30,0,[\"waitingForOktaNumberChallenge\"]],[28,[37,8],[[28,[37,9],[[30,0,[\"cancelAuth\"]]],null]],null],[30,0,[\"cancelAuth\"]]]],null],[1,\"\\n\"]],[]]],[1,\"  \"]],[]]]]],[1,\"\\n  \"],[8,[30,1,[\"footer\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,0],[14,0,\"has-short-padding\"],[12],[1,\"\\n      \"],[10,2],[14,0,\"help has-text-grey-dark\"],[14,\"data-test-auth-helptext\",\"\"],[12],[1,\"\\n\"],[41,[30,0,[\"oidcProvider\"]],[[[1,\"          Once you log in, you will be redirected back to your application. If you require login credentials, contact your\\n          administrator.\\n\"]],[]],[[[1,\"          Contact your administrator for login credentials\\n\"]],[]]],[1,\"      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]]],[\"Page\"],false,[\"splash-page\",\"empty-state\",\"join\",\"on\",\"action\",\"icon\",\"if\",\"logo-edition\",\"fn\",\"mut\",\"or\",\"unless\",\"toolbar\",\"perform\",\"mfa/mfa-form\",\"auth-form\"]]",
    "moduleName": "vault/templates/vault/cluster/auth.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/error", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{#if (eq this.model.httpStatus 404)}}
    <NotFound @model={{this.model}} />
  {{else}}
    <PageHeader as |p|>
      <p.levelLeft>
        <h1 class="title is-3 has-text-grey">
          {{#if (eq this.model.httpStatus 403)}}
            Not authorized
          {{else}}
            Error
          {{/if}}
        </h1>
      </p.levelLeft>
    </PageHeader>
    <div class="box is-sideless has-background-white-bis has-text-grey has-text-centered">
      {{#if (and (eq this.model.httpStatus 403) (eq this.model.policyPath "sys/capabilities-self"))}}
        <p>
          Your auth token does not have access to
          <code>{{this.model.policyPath}}</code>.
        </p>
        <p>
          Make sure the policy for the path
          <code>{{this.model.policyPath}}</code>
          includes
          <code>capabilities = ['update']</code>.
        </p>
      {{else}}
        {{#if this.model.message}}
          <p>{{this.model.message}}</p>
        {{/if}}
        {{#each this.model.errors as |error|}}
          <p>
            {{error}}
          </p>
        {{/each}}
      {{/if}}
    </div>
  {{/if}}
  */
  {
    "id": "fC864XQl",
    "block": "[[[41,[28,[37,1],[[30,0,[\"model\",\"httpStatus\"]],404],null],[[[1,\"  \"],[8,[39,2],null,[[\"@model\"],[[30,0,[\"model\"]]]],null],[1,\"\\n\"]],[]],[[[1,\"  \"],[8,[39,3],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n      \"],[10,\"h1\"],[14,0,\"title is-3 has-text-grey\"],[12],[1,\"\\n\"],[41,[28,[37,1],[[30,0,[\"model\",\"httpStatus\"]],403],null],[[[1,\"          Not authorized\\n\"]],[]],[[[1,\"          Error\\n\"]],[]]],[1,\"      \"],[13],[1,\"\\n    \"]],[]]]]],[1,\"\\n  \"]],[1]]]]],[1,\"\\n  \"],[10,0],[14,0,\"box is-sideless has-background-white-bis has-text-grey has-text-centered\"],[12],[1,\"\\n\"],[41,[28,[37,4],[[28,[37,1],[[30,0,[\"model\",\"httpStatus\"]],403],null],[28,[37,1],[[30,0,[\"model\",\"policyPath\"]],\"sys/capabilities-self\"],null]],null],[[[1,\"      \"],[10,2],[12],[1,\"\\n        Your auth token does not have access to\\n        \"],[10,\"code\"],[12],[1,[30,0,[\"model\",\"policyPath\"]]],[13],[1,\".\\n      \"],[13],[1,\"\\n      \"],[10,2],[12],[1,\"\\n        Make sure the policy for the path\\n        \"],[10,\"code\"],[12],[1,[30,0,[\"model\",\"policyPath\"]]],[13],[1,\"\\n        includes\\n        \"],[10,\"code\"],[12],[1,\"capabilities = ['update']\"],[13],[1,\".\\n      \"],[13],[1,\"\\n\"]],[]],[[[41,[30,0,[\"model\",\"message\"]],[[[1,\"        \"],[10,2],[12],[1,[30,0,[\"model\",\"message\"]]],[13],[1,\"\\n\"]],[]],null],[42,[28,[37,6],[[28,[37,6],[[30,0,[\"model\",\"errors\"]]],null]],null],null,[[[1,\"        \"],[10,2],[12],[1,\"\\n          \"],[1,[30,2]],[1,\"\\n        \"],[13],[1,\"\\n\"]],[2]],null]],[]]],[1,\"  \"],[13],[1,\"\\n\"]],[]]]],[\"p\",\"error\"],false,[\"if\",\"eq\",\"not-found\",\"page-header\",\"and\",\"each\",\"-track-array\"]]",
    "moduleName": "vault/templates/vault/cluster/error.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/init", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <SplashPage as |Page|>
    {{#if (and this.model.usingRaft (not this.prefersInit))}}
      <Page.header>
        <h1 class="title is-4">
          Raft Storage
        </h1>
      </Page.header>
      <Page.content>
        <RaftJoin @onDismiss={{action (mut this.prefersInit) true}} />
      </Page.content>
    {{else if this.keyData}}
      <Page.header>
        {{#let (or this.keyData.recovery_keys this.keyData.keys) as |keyArray|}}
          <h1 class="title is-4">
            OpenBao has been initialized!
            {{#if (eq keyArray.length 1)}}
              Here is your key.
            {{else}}
              Here are your
              {{pluralize keyArray.length "key"}}.
            {{/if}}
          </h1>
        {{/let}}
      </Page.header>
      <Page.content>
        <div class="box is-marginless is-shadowless">
          <div class="content">
            <p>
              {{#if this.keyData.recovery_keys}}
                Please securely distribute the keys below. Certain privileged operations in OpenBao such as rekeying the
                barrier or generating a new root token will require you to provide at least
                <strong class="has-text-danger">{{this.secret_threshold}}</strong>
                of these keys to perform the operation.
              {{else}}
                Please securely distribute the keys below. When the OpenBao is re-sealed, restarted, or stopped, you must
                provide at least
                <strong class="has-text-danger">{{this.secret_threshold}}</strong>
                of these keys to unseal it again. OpenBao does not store the root key. Without at least
                <strong class="has-text-danger">{{this.secret_threshold}}</strong>
                keys, your OpenBao will remain permanently sealed.
              {{/if}}
            </p>
          </div>
          <div class="message is-list is-highlight">
            <div class="message-body">
              <h4 class="title is-7 is-marginless">
                Initial root token
              </h4>
              <MaskedInput
                @class="is-highlight has-label"
                @displayOnly={{true}}
                @value={{this.keyData.root_token}}
                @allowCopy={{true}}
              />
            </div>
          </div>
          {{#each
            (or this.keyData.recovery_keys_base64 this.keyData.recovery_keys this.keyData.keys_base64 this.keyData.keys)
            as |key index|
          }}
            <div data-test-key-box class="message is-list">
              <div class="message-body">
                <h4 class="title is-7 is-marginless">
                  Key
                  {{add index 1}}
                </h4>
                <MaskedInput @class="has-label" @displayOnly={{true}} @value={{key}} @allowCopy={{true}} />
              </div>
            </div>
          {{/each}}
        </div>
        <div class="box is-marginless is-shadowless">
          <div class="field is-grouped-split">
            {{#if (and this.model.sealed (not this.keyData.recovery_keys))}}
              <div data-test-advance-button class="control">
                <LinkTo @route="vault.cluster.unseal" @model={{this.model.name}} class="button is-primary">
                  Continue to Unseal
                </LinkTo>
              </div>
            {{else}}
              <div data-test-advance-button class="control">
                <LinkTo
                  @route="vault.cluster.auth"
                  @model={{this.model.name}}
                  @disabled={{this.model.sealed}}
                  class={{concat (if this.model.sealed "is-loading " "") "button is-primary"}}
                >
                  Continue to Authenticate
                </LinkTo>
              </div>
            {{/if}}
            <DownloadButton
              class="button is-ghost"
              @filename={{this.keyFilename}}
              @data={{this.keyData}}
              @extension="json"
              @stringify={{true}}
            >
              <Icon @name="download" />
              Download keys
            </DownloadButton>
          </div>
        </div>
      </Page.content>
    {{else}}
      <Page.header>
        <h1 class="title h5">
          Let's set up the initial set of root keys that you’ll need in case of an emergency
        </h1>
      </Page.header>
      <Page.content>
        <form
          {{action
            "initCluster"
            (hash
              secret_shares=this.secret_shares
              secret_threshold=this.secret_threshold
              pgp_keys=this.pgp_keys
              use_pgp=this.use_pgp
              use_pgp_for_root=this.use_pgp_for_root
              root_token_pgp_key=this.root_token_pgp_key
            )
            on="submit"
          }}
          id="init"
        >
          <div class="box is-marginless is-shadowless">
            <MessageError @errors={{this.errors}} />
            <div class="field">
              <label for="key-shares" class="is-label">
                Key shares
              </label>
              <div class="control">
                <Input
                  data-test-key-shares="true"
                  class="input"
                  autocomplete="off"
                  spellcheck="false"
                  name="key-shares"
                  @type="number"
                  step="1"
                  min="1"
                  pattern="[0-9]*"
                  @value={{this.secret_shares}}
                />
              </div>
              <p class="help has-text-grey">
                The number of key shares to split the root key into
              </p>
            </div>
            <div class="field">
              <label for="key-threshold" class="is-label">
                Key threshold
              </label>
              <div class="control">
                <Input
                  data-test-key-threshold="true"
                  class="input"
                  autocomplete="off"
                  spellcheck="false"
                  name="key-threshold"
                  @type="number"
                  step="1"
                  min="1"
                  pattern="[0-9]*"
                  @value={{this.secret_threshold}}
                />
              </div>
              <p class="help has-text-grey">
                The number of key shares required to reconstruct the root key
              </p>
            </div>
            <ToggleButton
              @isOpen={{this.use_pgp}}
              @openLabel="Encrypt output with PGP"
              @closedLabel="Encrypt output with PGP"
              @onClick={{fn (mut this.use_pgp)}}
              class="is-block"
            />
            {{#if this.use_pgp}}
              <div class="box init-box">
                <p class="help has-text-grey">
                  The output unseal keys will be encrypted and hex-encoded, in order, with the given public keys.
                </p>
                <PgpList @listLength={{this.secret_shares}} @onDataUpdate={{action "setKeys"}} />
              </div>
            {{/if}}
            <ToggleButton
              @isOpen={{this.use_pgp_for_root}}
              @openLabel="Encrypt root token with PGP"
              @closedLabel="Encrypt root token with PGP"
              @onClick={{fn (mut this.use_pgp_for_root)}}
              class="is-block"
            />
            {{#if this.use_pgp_for_root}}
              <div class="box init-box">
                <p class="help has-text-grey">
                  The root unseal key will be encrypted and hex-encoded with the given public key.
                </p>
                <PgpList @listLength={{1}} @onDataUpdate={{action "setRootKey"}} />
              </div>
            {{/if}}
          </div>
          <div class="box is-marginless is-shadowless">
            <button
              data-test-init-submit
              type="submit"
              class="button is-primary {{if this.loading 'is-loading'}}"
              disabled={{this.loading}}
            >
              Initialize
            </button>
            <div class="init-illustration">
              {{svg-jar "initialize"}}
            </div>
          </div>
        </form>
      </Page.content>
    {{/if}}
  </SplashPage>
  */
  {
    "id": "DluB/glj",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n\"],[41,[28,[37,2],[[30,0,[\"model\",\"usingRaft\"]],[28,[37,3],[[30,0,[\"prefersInit\"]]],null]],null],[[[1,\"    \"],[8,[30,1,[\"header\"]],null,null,[[\"default\"],[[[[1,\"\\n      \"],[10,\"h1\"],[14,0,\"title is-4\"],[12],[1,\"\\n        Raft Storage\\n      \"],[13],[1,\"\\n    \"]],[]]]]],[1,\"\\n    \"],[8,[30,1,[\"content\"]],null,null,[[\"default\"],[[[[1,\"\\n      \"],[8,[39,4],null,[[\"@onDismiss\"],[[28,[37,5],[[30,0],[28,[37,6],[[30,0,[\"prefersInit\"]]],null],true],null]]],null],[1,\"\\n    \"]],[]]]]],[1,\"\\n\"]],[]],[[[41,[30,0,[\"keyData\"]],[[[1,\"    \"],[8,[30,1,[\"header\"]],null,null,[[\"default\"],[[[[1,\"\\n\"],[44,[[28,[37,8],[[30,0,[\"keyData\",\"recovery_keys\"]],[30,0,[\"keyData\",\"keys\"]]],null]],[[[1,\"        \"],[10,\"h1\"],[14,0,\"title is-4\"],[12],[1,\"\\n          OpenBao has been initialized!\\n\"],[41,[28,[37,9],[[30,2,[\"length\"]],1],null],[[[1,\"            Here is your key.\\n\"]],[]],[[[1,\"            Here are your\\n            \"],[1,[28,[35,10],[[30,2,[\"length\"]],\"key\"],null]],[1,\".\\n\"]],[]]],[1,\"        \"],[13],[1,\"\\n\"]],[2]]],[1,\"    \"]],[]]]]],[1,\"\\n    \"],[8,[30,1,[\"content\"]],null,null,[[\"default\"],[[[[1,\"\\n      \"],[10,0],[14,0,\"box is-marginless is-shadowless\"],[12],[1,\"\\n        \"],[10,0],[14,0,\"content\"],[12],[1,\"\\n          \"],[10,2],[12],[1,\"\\n\"],[41,[30,0,[\"keyData\",\"recovery_keys\"]],[[[1,\"              Please securely distribute the keys below. Certain privileged operations in OpenBao such as rekeying the\\n              barrier or generating a new root token will require you to provide at least\\n              \"],[10,\"strong\"],[14,0,\"has-text-danger\"],[12],[1,[30,0,[\"secret_threshold\"]]],[13],[1,\"\\n              of these keys to perform the operation.\\n\"]],[]],[[[1,\"              Please securely distribute the keys below. When the OpenBao is re-sealed, restarted, or stopped, you must\\n              provide at least\\n              \"],[10,\"strong\"],[14,0,\"has-text-danger\"],[12],[1,[30,0,[\"secret_threshold\"]]],[13],[1,\"\\n              of these keys to unseal it again. OpenBao does not store the root key. Without at least\\n              \"],[10,\"strong\"],[14,0,\"has-text-danger\"],[12],[1,[30,0,[\"secret_threshold\"]]],[13],[1,\"\\n              keys, your OpenBao will remain permanently sealed.\\n\"]],[]]],[1,\"          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n        \"],[10,0],[14,0,\"message is-list is-highlight\"],[12],[1,\"\\n          \"],[10,0],[14,0,\"message-body\"],[12],[1,\"\\n            \"],[10,\"h4\"],[14,0,\"title is-7 is-marginless\"],[12],[1,\"\\n              Initial root token\\n            \"],[13],[1,\"\\n            \"],[8,[39,11],null,[[\"@class\",\"@displayOnly\",\"@value\",\"@allowCopy\"],[\"is-highlight has-label\",true,[30,0,[\"keyData\",\"root_token\"]],true]],null],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n\"],[42,[28,[37,13],[[28,[37,13],[[28,[37,8],[[30,0,[\"keyData\",\"recovery_keys_base64\"]],[30,0,[\"keyData\",\"recovery_keys\"]],[30,0,[\"keyData\",\"keys_base64\"]],[30,0,[\"keyData\",\"keys\"]]],null]],null]],null],null,[[[1,\"          \"],[10,0],[14,\"data-test-key-box\",\"\"],[14,0,\"message is-list\"],[12],[1,\"\\n            \"],[10,0],[14,0,\"message-body\"],[12],[1,\"\\n              \"],[10,\"h4\"],[14,0,\"title is-7 is-marginless\"],[12],[1,\"\\n                Key\\n                \"],[1,[28,[35,14],[[30,4],1],null]],[1,\"\\n              \"],[13],[1,\"\\n              \"],[8,[39,11],null,[[\"@class\",\"@displayOnly\",\"@value\",\"@allowCopy\"],[\"has-label\",true,[30,3],true]],null],[1,\"\\n            \"],[13],[1,\"\\n          \"],[13],[1,\"\\n\"]],[3,4]],null],[1,\"      \"],[13],[1,\"\\n      \"],[10,0],[14,0,\"box is-marginless is-shadowless\"],[12],[1,\"\\n        \"],[10,0],[14,0,\"field is-grouped-split\"],[12],[1,\"\\n\"],[41,[28,[37,2],[[30,0,[\"model\",\"sealed\"]],[28,[37,3],[[30,0,[\"keyData\",\"recovery_keys\"]]],null]],null],[[[1,\"            \"],[10,0],[14,\"data-test-advance-button\",\"\"],[14,0,\"control\"],[12],[1,\"\\n              \"],[8,[39,15],[[24,0,\"button is-primary\"]],[[\"@route\",\"@model\"],[\"vault.cluster.unseal\",[30,0,[\"model\",\"name\"]]]],[[\"default\"],[[[[1,\"\\n                Continue to Unseal\\n              \"]],[]]]]],[1,\"\\n            \"],[13],[1,\"\\n\"]],[]],[[[1,\"            \"],[10,0],[14,\"data-test-advance-button\",\"\"],[14,0,\"control\"],[12],[1,\"\\n              \"],[8,[39,15],[[16,0,[28,[37,16],[[52,[30,0,[\"model\",\"sealed\"]],\"is-loading \",\"\"],\"button is-primary\"],null]]],[[\"@route\",\"@model\",\"@disabled\"],[\"vault.cluster.auth\",[30,0,[\"model\",\"name\"]],[30,0,[\"model\",\"sealed\"]]]],[[\"default\"],[[[[1,\"\\n                Continue to Authenticate\\n              \"]],[]]]]],[1,\"\\n            \"],[13],[1,\"\\n\"]],[]]],[1,\"          \"],[8,[39,17],[[24,0,\"button is-ghost\"]],[[\"@filename\",\"@data\",\"@extension\",\"@stringify\"],[[30,0,[\"keyFilename\"]],[30,0,[\"keyData\"]],\"json\",true]],[[\"default\"],[[[[1,\"\\n            \"],[8,[39,18],null,[[\"@name\"],[\"download\"]],null],[1,\"\\n            Download keys\\n          \"]],[]]]]],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"]],[]]]]],[1,\"\\n\"]],[]],[[[1,\"    \"],[8,[30,1,[\"header\"]],null,null,[[\"default\"],[[[[1,\"\\n      \"],[10,\"h1\"],[14,0,\"title h5\"],[12],[1,\"\\n        Let's set up the initial set of root keys that you’ll need in case of an emergency\\n      \"],[13],[1,\"\\n    \"]],[]]]]],[1,\"\\n    \"],[8,[30,1,[\"content\"]],null,null,[[\"default\"],[[[[1,\"\\n      \"],[11,\"form\"],[24,1,\"init\"],[4,[38,5],[[30,0],\"initCluster\",[28,[37,19],null,[[\"secret_shares\",\"secret_threshold\",\"pgp_keys\",\"use_pgp\",\"use_pgp_for_root\",\"root_token_pgp_key\"],[[30,0,[\"secret_shares\"]],[30,0,[\"secret_threshold\"]],[30,0,[\"pgp_keys\"]],[30,0,[\"use_pgp\"]],[30,0,[\"use_pgp_for_root\"]],[30,0,[\"root_token_pgp_key\"]]]]]],[[\"on\"],[\"submit\"]]],[12],[1,\"\\n        \"],[10,0],[14,0,\"box is-marginless is-shadowless\"],[12],[1,\"\\n          \"],[8,[39,20],null,[[\"@errors\"],[[30,0,[\"errors\"]]]],null],[1,\"\\n          \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n            \"],[10,\"label\"],[14,\"for\",\"key-shares\"],[14,0,\"is-label\"],[12],[1,\"\\n              Key shares\\n            \"],[13],[1,\"\\n            \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n              \"],[8,[39,21],[[24,\"data-test-key-shares\",\"true\"],[24,0,\"input\"],[24,\"autocomplete\",\"off\"],[24,\"spellcheck\",\"false\"],[24,3,\"key-shares\"],[24,\"step\",\"1\"],[24,\"min\",\"1\"],[24,\"pattern\",\"[0-9]*\"]],[[\"@type\",\"@value\"],[\"number\",[30,0,[\"secret_shares\"]]]],null],[1,\"\\n            \"],[13],[1,\"\\n            \"],[10,2],[14,0,\"help has-text-grey\"],[12],[1,\"\\n              The number of key shares to split the root key into\\n            \"],[13],[1,\"\\n          \"],[13],[1,\"\\n          \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n            \"],[10,\"label\"],[14,\"for\",\"key-threshold\"],[14,0,\"is-label\"],[12],[1,\"\\n              Key threshold\\n            \"],[13],[1,\"\\n            \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n              \"],[8,[39,21],[[24,\"data-test-key-threshold\",\"true\"],[24,0,\"input\"],[24,\"autocomplete\",\"off\"],[24,\"spellcheck\",\"false\"],[24,3,\"key-threshold\"],[24,\"step\",\"1\"],[24,\"min\",\"1\"],[24,\"pattern\",\"[0-9]*\"]],[[\"@type\",\"@value\"],[\"number\",[30,0,[\"secret_threshold\"]]]],null],[1,\"\\n            \"],[13],[1,\"\\n            \"],[10,2],[14,0,\"help has-text-grey\"],[12],[1,\"\\n              The number of key shares required to reconstruct the root key\\n            \"],[13],[1,\"\\n          \"],[13],[1,\"\\n          \"],[8,[39,22],[[24,0,\"is-block\"]],[[\"@isOpen\",\"@openLabel\",\"@closedLabel\",\"@onClick\"],[[30,0,[\"use_pgp\"]],\"Encrypt output with PGP\",\"Encrypt output with PGP\",[28,[37,23],[[28,[37,6],[[30,0,[\"use_pgp\"]]],null]],null]]],null],[1,\"\\n\"],[41,[30,0,[\"use_pgp\"]],[[[1,\"            \"],[10,0],[14,0,\"box init-box\"],[12],[1,\"\\n              \"],[10,2],[14,0,\"help has-text-grey\"],[12],[1,\"\\n                The output unseal keys will be encrypted and hex-encoded, in order, with the given public keys.\\n              \"],[13],[1,\"\\n              \"],[8,[39,24],null,[[\"@listLength\",\"@onDataUpdate\"],[[30,0,[\"secret_shares\"]],[28,[37,5],[[30,0],\"setKeys\"],null]]],null],[1,\"\\n            \"],[13],[1,\"\\n\"]],[]],null],[1,\"          \"],[8,[39,22],[[24,0,\"is-block\"]],[[\"@isOpen\",\"@openLabel\",\"@closedLabel\",\"@onClick\"],[[30,0,[\"use_pgp_for_root\"]],\"Encrypt root token with PGP\",\"Encrypt root token with PGP\",[28,[37,23],[[28,[37,6],[[30,0,[\"use_pgp_for_root\"]]],null]],null]]],null],[1,\"\\n\"],[41,[30,0,[\"use_pgp_for_root\"]],[[[1,\"            \"],[10,0],[14,0,\"box init-box\"],[12],[1,\"\\n              \"],[10,2],[14,0,\"help has-text-grey\"],[12],[1,\"\\n                The root unseal key will be encrypted and hex-encoded with the given public key.\\n              \"],[13],[1,\"\\n              \"],[8,[39,24],null,[[\"@listLength\",\"@onDataUpdate\"],[1,[28,[37,5],[[30,0],\"setRootKey\"],null]]],null],[1,\"\\n            \"],[13],[1,\"\\n\"]],[]],null],[1,\"        \"],[13],[1,\"\\n        \"],[10,0],[14,0,\"box is-marginless is-shadowless\"],[12],[1,\"\\n          \"],[10,\"button\"],[14,\"data-test-init-submit\",\"\"],[15,0,[29,[\"button is-primary \",[52,[30,0,[\"loading\"]],\"is-loading\"]]]],[15,\"disabled\",[30,0,[\"loading\"]]],[14,4,\"submit\"],[12],[1,\"\\n            Initialize\\n          \"],[13],[1,\"\\n          \"],[10,0],[14,0,\"init-illustration\"],[12],[1,\"\\n            \"],[1,[28,[35,25],[\"initialize\"],null]],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"]],[]]]]],[1,\"\\n  \"]],[]]]],[]]]],[1]]]]]],[\"Page\",\"keyArray\",\"key\",\"index\"],false,[\"splash-page\",\"if\",\"and\",\"not\",\"raft-join\",\"action\",\"mut\",\"let\",\"or\",\"eq\",\"pluralize\",\"masked-input\",\"each\",\"-track-array\",\"add\",\"link-to\",\"concat\",\"download-button\",\"icon\",\"hash\",\"message-error\",\"input\",\"toggle-button\",\"fn\",\"pgp-list\",\"svg-jar\"]]",
    "moduleName": "vault/templates/vault/cluster/init.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/license", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <LicenseInfo
    @startTime={{this.model.startTime}}
    @expirationTime={{this.model.expirationTime}}
    @licenseId={{this.model.licenseId}}
    @features={{this.model.features}}
    @autoloaded={{this.model.autoloaded}}
    @performanceStandbyCount={{this.model.performanceStandbyCount}}
  />
  */
  {
    "id": "Mi0tS7Cx",
    "block": "[[[8,[39,0],null,[[\"@startTime\",\"@expirationTime\",\"@licenseId\",\"@features\",\"@autoloaded\",\"@performanceStandbyCount\"],[[30,0,[\"model\",\"startTime\"]],[30,0,[\"model\",\"expirationTime\"]],[30,0,[\"model\",\"licenseId\"]],[30,0,[\"model\",\"features\"]],[30,0,[\"model\",\"autoloaded\"]],[30,0,[\"model\",\"performanceStandbyCount\"]]]],null]],[],false,[\"license-info\"]]",
    "moduleName": "vault/templates/vault/cluster/license.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/loading", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <LayoutLoading />
  */
  {
    "id": "8Wz6my0v",
    "block": "[[[8,[39,0],null,null,null]],[],false,[\"layout-loading\"]]",
    "moduleName": "vault/templates/vault/cluster/loading.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/mfa-setup", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <SplashPage @showTruncatedNavBar={{false}} as |Page|>
    <Page.header>
      <h1 class="title is-4">MFA setup</h1>
    </Page.header>
    <Page.content>
      <div class="auth-form" data-test-mfa-form>
        <div class="box">
          {{#if (eq this.onStep 1)}}
            <Mfa::MfaSetupStepOne
              @isUUIDVerified={{this.isUUIDVerified}}
              @restartFlow={{this.restartFlow}}
              @saveUUIDandQrCode={{this.saveUUIDandQrCode}}
              @showWarning={{this.showWarning}}
              data-test-step-one
            />
          {{/if}}
          {{#if (eq this.onStep 2)}}
            <Mfa::MfaSetupStepTwo
              @entityId={{this.entityId}}
              @uuid={{this.uuid}}
              @qrCode={{this.qrCode}}
              @restartFlow={{this.restartFlow}}
              @warning={{this.warning}}
              data-test-step-two
            />
          {{/if}}
        </div>
      </div>
    </Page.content>
  </SplashPage>
  */
  {
    "id": "li30QeQI",
    "block": "[[[8,[39,0],null,[[\"@showTruncatedNavBar\"],[false]],[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"header\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-4\"],[12],[1,\"MFA setup\"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[30,1,[\"content\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,0],[14,0,\"auth-form\"],[14,\"data-test-mfa-form\",\"\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"box\"],[12],[1,\"\\n\"],[41,[28,[37,2],[[30,0,[\"onStep\"]],1],null],[[[1,\"          \"],[8,[39,3],[[24,\"data-test-step-one\",\"\"]],[[\"@isUUIDVerified\",\"@restartFlow\",\"@saveUUIDandQrCode\",\"@showWarning\"],[[30,0,[\"isUUIDVerified\"]],[30,0,[\"restartFlow\"]],[30,0,[\"saveUUIDandQrCode\"]],[30,0,[\"showWarning\"]]]],null],[1,\"\\n\"]],[]],null],[41,[28,[37,2],[[30,0,[\"onStep\"]],2],null],[[[1,\"          \"],[8,[39,4],[[24,\"data-test-step-two\",\"\"]],[[\"@entityId\",\"@uuid\",\"@qrCode\",\"@restartFlow\",\"@warning\"],[[30,0,[\"entityId\"]],[30,0,[\"uuid\"]],[30,0,[\"qrCode\"]],[30,0,[\"restartFlow\"]],[30,0,[\"warning\"]]]],null],[1,\"\\n\"]],[]],null],[1,\"      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]]],[\"Page\"],false,[\"splash-page\",\"if\",\"eq\",\"mfa/mfa-setup-step-one\",\"mfa/mfa-setup-step-two\"]]",
    "moduleName": "vault/templates/vault/cluster/mfa-setup.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/not-found", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <NotFound @model={{this.model}} />
  */
  {
    "id": "eZ5R/9LL",
    "block": "[[[8,[39,0],null,[[\"@model\"],[[30,0,[\"model\"]]]],null]],[],false,[\"not-found\"]]",
    "moduleName": "vault/templates/vault/cluster/not-found.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/oidc-callback", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{#in-element this.pageContainer}}
    <OidcCallbackSplash />
  {{/in-element}}
  */
  {
    "id": "DvHvXe5O",
    "block": "[[[40,[[[1,\"  \"],[8,[39,2],null,null,null],[1,\"\\n\"]],[]],\"%cursor:0%\",[28,[37,1],[[30,0,[\"pageContainer\"]]],null]]],[],false,[\"in-element\",\"-in-el-null\",\"oidc-callback-splash\"]]",
    "moduleName": "vault/templates/vault/cluster/oidc-callback.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/oidc-provider-ns", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <div class="splash-page-container section is-flex-v-centered-tablet is-flex-1 is-fullwidth">
    <div class="columns is-centered is-gapless is-fullwidth">
      <div class="column is-4-desktop is-6-tablet">
        {{#if this.model.error}}
          <div class="box is-shadowless is-flex-v-centered">
            <LogoEdition />
          </div>
          <AlertBanner @type="danger" @title={{this.model.error.title}} @message={{this.model.error.message}} />
        {{else if this.model.consent}}
          <OidcConsentBlock
            @code={{this.model.consent.code}}
            @state={{this.model.consent.state}}
            @redirect={{this.model.consent.redirect}}
            @onSuccess={{this._handleSuccess}}
          />
        {{else if this.model.redirectUrl}}
          <div data-test-oidc-redirect>{{this.model.redirectUrl}}</div>
        {{else}}
          <VaultLogoSpinner />
        {{/if}}
      </div>
    </div>
  </div>
  */
  {
    "id": "PVUr3YaI",
    "block": "[[[10,0],[14,0,\"splash-page-container section is-flex-v-centered-tablet is-flex-1 is-fullwidth\"],[12],[1,\"\\n  \"],[10,0],[14,0,\"columns is-centered is-gapless is-fullwidth\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"column is-4-desktop is-6-tablet\"],[12],[1,\"\\n\"],[41,[30,0,[\"model\",\"error\"]],[[[1,\"        \"],[10,0],[14,0,\"box is-shadowless is-flex-v-centered\"],[12],[1,\"\\n          \"],[8,[39,1],null,null,null],[1,\"\\n        \"],[13],[1,\"\\n        \"],[8,[39,2],null,[[\"@type\",\"@title\",\"@message\"],[\"danger\",[30,0,[\"model\",\"error\",\"title\"]],[30,0,[\"model\",\"error\",\"message\"]]]],null],[1,\"\\n\"]],[]],[[[41,[30,0,[\"model\",\"consent\"]],[[[1,\"        \"],[8,[39,3],null,[[\"@code\",\"@state\",\"@redirect\",\"@onSuccess\"],[[30,0,[\"model\",\"consent\",\"code\"]],[30,0,[\"model\",\"consent\",\"state\"]],[30,0,[\"model\",\"consent\",\"redirect\"]],[30,0,[\"_handleSuccess\"]]]],null],[1,\"\\n\"]],[]],[[[41,[30,0,[\"model\",\"redirectUrl\"]],[[[1,\"        \"],[10,0],[14,\"data-test-oidc-redirect\",\"\"],[12],[1,[30,0,[\"model\",\"redirectUrl\"]]],[13],[1,\"\\n\"]],[]],[[[1,\"        \"],[8,[39,4],null,null,null],[1,\"\\n      \"]],[]]]],[]]]],[]]],[1,\"    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"],[13]],[],false,[\"if\",\"logo-edition\",\"alert-banner\",\"oidc-consent-block\",\"vault-logo-spinner\"]]",
    "moduleName": "vault/templates/vault/cluster/oidc-provider-ns.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/oidc-provider", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <div class="splash-page-container section is-flex-v-centered-tablet is-flex-1 is-fullwidth">
    <div class="columns is-centered is-gapless is-fullwidth">
      <div class="column is-4-desktop is-6-tablet">
        {{#if this.model.error}}
          <div class="box is-shadowless is-flex-v-centered">
            <LogoEdition />
          </div>
          <AlertBanner @type="danger" @title={{this.model.error.title}} @message={{this.model.error.message}} />
        {{else if this.model.consent}}
          <OidcConsentBlock
            @code={{this.model.consent.code}}
            @state={{this.model.consent.state}}
            @redirect={{this.model.consent.redirect}}
            @onSuccess={{this._handleSuccess}}
          />
        {{else if this.model.redirectUrl}}
          <VaultLogoSpinner />
          <p>If you are not automatically redirected,
            <a href={{this.model.redirectUrl}} data-test-oidc-redirect>click here to go back to app.</a></p>
        {{else}}
          <VaultLogoSpinner />
        {{/if}}
      </div>
    </div>
  </div>
  */
  {
    "id": "Bt+DmtgK",
    "block": "[[[10,0],[14,0,\"splash-page-container section is-flex-v-centered-tablet is-flex-1 is-fullwidth\"],[12],[1,\"\\n  \"],[10,0],[14,0,\"columns is-centered is-gapless is-fullwidth\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"column is-4-desktop is-6-tablet\"],[12],[1,\"\\n\"],[41,[30,0,[\"model\",\"error\"]],[[[1,\"        \"],[10,0],[14,0,\"box is-shadowless is-flex-v-centered\"],[12],[1,\"\\n          \"],[8,[39,1],null,null,null],[1,\"\\n        \"],[13],[1,\"\\n        \"],[8,[39,2],null,[[\"@type\",\"@title\",\"@message\"],[\"danger\",[30,0,[\"model\",\"error\",\"title\"]],[30,0,[\"model\",\"error\",\"message\"]]]],null],[1,\"\\n\"]],[]],[[[41,[30,0,[\"model\",\"consent\"]],[[[1,\"        \"],[8,[39,3],null,[[\"@code\",\"@state\",\"@redirect\",\"@onSuccess\"],[[30,0,[\"model\",\"consent\",\"code\"]],[30,0,[\"model\",\"consent\",\"state\"]],[30,0,[\"model\",\"consent\",\"redirect\"]],[30,0,[\"_handleSuccess\"]]]],null],[1,\"\\n\"]],[]],[[[41,[30,0,[\"model\",\"redirectUrl\"]],[[[1,\"        \"],[8,[39,4],null,null,null],[1,\"\\n        \"],[10,2],[12],[1,\"If you are not automatically redirected,\\n          \"],[10,3],[15,6,[30,0,[\"model\",\"redirectUrl\"]]],[14,\"data-test-oidc-redirect\",\"\"],[12],[1,\"click here to go back to app.\"],[13],[13],[1,\"\\n\"]],[]],[[[1,\"        \"],[8,[39,4],null,null,null],[1,\"\\n      \"]],[]]]],[]]]],[]]],[1,\"    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"],[13]],[],false,[\"if\",\"logo-edition\",\"alert-banner\",\"oidc-consent-block\",\"vault-logo-spinner\"]]",
    "moduleName": "vault/templates/vault/cluster/oidc-provider.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/policies", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <Sidebar::Nav::Policies />
  {{outlet}}
  */
  {
    "id": "q0rq5uLx",
    "block": "[[[8,[39,0],null,null,null],[1,\"\\n\"],[46,[28,[37,2],null,null],null,null,null]],[],false,[\"sidebar/nav/policies\",\"component\",\"-outlet\"]]",
    "moduleName": "vault/templates/vault/cluster/policies.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/policies/create", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.top>
      <div class="breadcrumb">
        <LinkTo @route="vault.cluster.policies" @model={{this.policyType}} data-test-policy-list-link={{true}}>
          <span class="sep">&#x0002f;</span>
          {{uppercase this.policyType}}
          Policies
        </LinkTo>
      </div>
    </p.top>
    <p.levelLeft>
      <h1 class="title is-3">
        Create
        {{uppercase this.policyType}}
        policy
      </h1>
    </p.levelLeft>
  </PageHeader>
  
  <PolicyForm
    @model={{this.model}}
    @onSave={{transition-to "vault.cluster.policy.show" this.model.policyType this.model.name}}
    @onCancel={{transition-to "vault.cluster.policies.index"}}
  />
  */
  {
    "id": "P5cgjZOs",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"top\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,0],[14,0,\"breadcrumb\"],[12],[1,\"\\n      \"],[8,[39,1],[[16,\"data-test-policy-list-link\",true]],[[\"@route\",\"@model\"],[\"vault.cluster.policies\",[30,0,[\"policyType\"]]]],[[\"default\"],[[[[1,\"\\n        \"],[10,1],[14,0,\"sep\"],[12],[1,\"/\"],[13],[1,\"\\n        \"],[1,[28,[35,2],[[30,0,[\"policyType\"]]],null]],[1,\"\\n        Policies\\n      \"]],[]]]]],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n      Create\\n      \"],[1,[28,[35,2],[[30,0,[\"policyType\"]]],null]],[1,\"\\n      policy\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\\n\"],[8,[39,3],null,[[\"@model\",\"@onSave\",\"@onCancel\"],[[30,0,[\"model\"]],[28,[37,4],[\"vault.cluster.policy.show\",[30,0,[\"model\",\"policyType\"]],[30,0,[\"model\",\"name\"]]],null],[28,[37,4],[\"vault.cluster.policies.index\"],null]]],null]],[\"p\"],false,[\"page-header\",\"link-to\",\"uppercase\",\"policy-form\",\"transition-to\"]]",
    "moduleName": "vault/templates/vault/cluster/policies/create.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/policies/index", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{#if (or (eq this.policyType "acl"))}}
    <PageHeader as |p|>
      <p.levelLeft>
        <h1 class="title is-3">
          {{uppercase this.policyType}}
          Policies
        </h1>
      </p.levelLeft>
    </PageHeader>
    <Toolbar>
      {{#if this.model.meta.total}}
        <ToolbarFilters>
          <NavigateInput
            @filterFocusDidChange={{action "setFilterFocus"}}
            @filterDidChange={{action "setFilter"}}
            @filter={{this.filter}}
            @filterMatchesKey={{this.filterMatchesKey}}
            @firstPartialMatch={{this.firstPartialMatch}}
            @extraNavParams={{this.policyType}}
            @placeholder="Filter policies"
            @mode="policy"
          />
          {{#if this.filterFocused}}
            {{#if this.filterMatchesKey}}
              <p class="input-hint">
                <kbd>ENTER</kbd>
                to go to
                <code>{{or this.pageFilter this.filter}}</code>
              </p>
            {{/if}}
            {{#if this.firstPartialMatch}}
              <p class="input-hint">
                <kbd>TAB</kbd>
                to complete
                <code>{{this.firstPartialMatch.id}}</code>
              </p>
            {{/if}}
          {{/if}}
        </ToolbarFilters>
      {{/if}}
      <ToolbarActions>
        <ToolbarLink @route="vault.cluster.policies.create" @type="add" data-test-policy-create-link>
          Create
          {{uppercase this.policyType}}
          policy
        </ToolbarLink>
      </ToolbarActions>
    </Toolbar>
    {{#if this.model.meta.total}}
      {{#each this.model as |item|}}
        {{#if (eq item.id "root")}}
          <div class="list-item-row is-flex" data-test-policy-item>
            <Icon @name="file" class="has-text-grey-light" />
            <div>
              <span class="has-text-weight-semibold has-text-grey" data-test-policy-name>
                {{item.id}}
              </span>
              <p class="help has-text-grey">
                The
                <code>root</code>
                policy does not contain any rules but can do anything within OpenBao. It should be used with extreme care.
              </p>
            </div>
          </div>
        {{else}}
          <LinkedBlock
            @params={{array "vault.cluster.policy.show" this.policyType item.id}}
            class="list-item-row"
            data-test-policy-link={{item.id}}
          >
            <div class="columns is-mobile">
              <div class="column is-10">
                <LinkTo
                  @route="vault.cluster.policy.show"
                  @models={{array this.policyType item.id}}
                  class="has-text-black has-text-weight-semibold"
                  data-test-policy-item={{true}}
                >
                  <Icon @name="file" class="has-text-grey-light" />
                  <span class="is-underline" data-test-policy-name>{{item.id}}</span>
                </LinkTo>
              </div>
              <div class="column has-text-right">
                <PopupMenu name="policy-nav">
                  <Confirm as |c|>
                    <nav class="menu">
                      <ul class="menu-list">
                        {{#if item.updatePath.isPending}}
                          <li class="action">
                            <button disabled type="button" class="link button is-loading is-transparent">
                              loading
                            </button>
                          </li>
                          <li class="action">
                            <button disabled type="button" class="link button is-loading is-transparent">
                              loading
                            </button>
                          </li>
                        {{else}}
                          {{#if item.canRead}}
                            <li class="action">
                              <LinkTo
                                @route="vault.cluster.policy.show"
                                @models={{array this.policyType item.id}}
                                data-test-policy-link="show"
                              >
                                Details
                              </LinkTo>
                            </li>
                          {{/if}}
                          {{#if item.canEdit}}
                            <li class="action">
                              <LinkTo
                                @route="vault.cluster.policy.edit"
                                @models={{array this.policyType item.id}}
                                data-test-policy-link="edit"
                              >
                                Edit
                              </LinkTo>
                            </li>
                          {{/if}}
                          {{#if item.canDelete}}
                            <li class="action">
                              <c.Message
                                @id={{item.id}}
                                @confirmMessage="This will permanently delete this policy and may affect access to some data"
                                @onConfirm={{action "deletePolicy" item}}
                                data-test-policy-delete={{item.id}}
                              />
                            </li>
                          {{/if}}
                        {{/if}}
                      </ul>
                    </nav>
                  </Confirm>
                </PopupMenu>
              </div>
            </div>
          </LinkedBlock>
        {{/if}}
      {{else}}
        <EmptyState @title="No policies matching &quot;{{this.pageFilter}}&quot;" />
      {{/each}}
      {{#if (gt this.model.meta.lastPage 1)}}
        <ListPagination
          @page={{this.model.meta.currentPage}}
          @lastPage={{this.model.meta.lastPage}}
          @link="vault.cluster.policies.index"
        />
      {{/if}}
    {{else}}
      <EmptyState
        @title="No {{uppercase this.policyType}} policies yet"
        @message="A list of policies will be listed here. Create your first {{uppercase
          this.policyType
        }} policy to get started."
      >
        <LinkTo @route="vault.cluster.policies.create" class="link">
          Create
          {{uppercase this.policyType}}
          policy
          <Chevron />
        </LinkTo>
        {{! TODO Add a link to a tutorial for 'getting-started/getting-started-policies' }}
      </EmptyState>
    {{/if}}
  {{/if}}
  */
  {
    "id": "04LH4v69",
    "block": "[[[41,[28,[37,1],[[28,[37,2],[[30,0,[\"policyType\"]],\"acl\"],null]],null],[[[1,\"  \"],[8,[39,3],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n      \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n        \"],[1,[28,[35,4],[[30,0,[\"policyType\"]]],null]],[1,\"\\n        Policies\\n      \"],[13],[1,\"\\n    \"]],[]]]]],[1,\"\\n  \"]],[1]]]]],[1,\"\\n  \"],[8,[39,5],null,null,[[\"default\"],[[[[1,\"\\n\"],[41,[30,0,[\"model\",\"meta\",\"total\"]],[[[1,\"      \"],[8,[39,6],null,null,[[\"default\"],[[[[1,\"\\n        \"],[8,[39,7],null,[[\"@filterFocusDidChange\",\"@filterDidChange\",\"@filter\",\"@filterMatchesKey\",\"@firstPartialMatch\",\"@extraNavParams\",\"@placeholder\",\"@mode\"],[[28,[37,8],[[30,0],\"setFilterFocus\"],null],[28,[37,8],[[30,0],\"setFilter\"],null],[30,0,[\"filter\"]],[30,0,[\"filterMatchesKey\"]],[30,0,[\"firstPartialMatch\"]],[30,0,[\"policyType\"]],\"Filter policies\",\"policy\"]],null],[1,\"\\n\"],[41,[30,0,[\"filterFocused\"]],[[[41,[30,0,[\"filterMatchesKey\"]],[[[1,\"            \"],[10,2],[14,0,\"input-hint\"],[12],[1,\"\\n              \"],[10,\"kbd\"],[12],[1,\"ENTER\"],[13],[1,\"\\n              to go to\\n              \"],[10,\"code\"],[12],[1,[28,[35,1],[[30,0,[\"pageFilter\"]],[30,0,[\"filter\"]]],null]],[13],[1,\"\\n            \"],[13],[1,\"\\n\"]],[]],null],[41,[30,0,[\"firstPartialMatch\"]],[[[1,\"            \"],[10,2],[14,0,\"input-hint\"],[12],[1,\"\\n              \"],[10,\"kbd\"],[12],[1,\"TAB\"],[13],[1,\"\\n              to complete\\n              \"],[10,\"code\"],[12],[1,[30,0,[\"firstPartialMatch\",\"id\"]]],[13],[1,\"\\n            \"],[13],[1,\"\\n\"]],[]],null]],[]],null],[1,\"      \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"    \"],[8,[39,9],null,null,[[\"default\"],[[[[1,\"\\n      \"],[8,[39,10],[[24,\"data-test-policy-create-link\",\"\"]],[[\"@route\",\"@type\"],[\"vault.cluster.policies.create\",\"add\"]],[[\"default\"],[[[[1,\"\\n        Create\\n        \"],[1,[28,[35,4],[[30,0,[\"policyType\"]]],null]],[1,\"\\n        policy\\n      \"]],[]]]]],[1,\"\\n    \"]],[]]]]],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"],[41,[30,0,[\"model\",\"meta\",\"total\"]],[[[42,[28,[37,12],[[28,[37,12],[[30,0,[\"model\"]]],null]],null],null,[[[41,[28,[37,2],[[30,2,[\"id\"]],\"root\"],null],[[[1,\"        \"],[10,0],[14,0,\"list-item-row is-flex\"],[14,\"data-test-policy-item\",\"\"],[12],[1,\"\\n          \"],[8,[39,13],[[24,0,\"has-text-grey-light\"]],[[\"@name\"],[\"file\"]],null],[1,\"\\n          \"],[10,0],[12],[1,\"\\n            \"],[10,1],[14,0,\"has-text-weight-semibold has-text-grey\"],[14,\"data-test-policy-name\",\"\"],[12],[1,\"\\n              \"],[1,[30,2,[\"id\"]]],[1,\"\\n            \"],[13],[1,\"\\n            \"],[10,2],[14,0,\"help has-text-grey\"],[12],[1,\"\\n              The\\n              \"],[10,\"code\"],[12],[1,\"root\"],[13],[1,\"\\n              policy does not contain any rules but can do anything within OpenBao. It should be used with extreme care.\\n            \"],[13],[1,\"\\n          \"],[13],[1,\"\\n        \"],[13],[1,\"\\n\"]],[]],[[[1,\"        \"],[8,[39,14],[[24,0,\"list-item-row\"],[16,\"data-test-policy-link\",[30,2,[\"id\"]]]],[[\"@params\"],[[28,[37,15],[\"vault.cluster.policy.show\",[30,0,[\"policyType\"]],[30,2,[\"id\"]]],null]]],[[\"default\"],[[[[1,\"\\n          \"],[10,0],[14,0,\"columns is-mobile\"],[12],[1,\"\\n            \"],[10,0],[14,0,\"column is-10\"],[12],[1,\"\\n              \"],[8,[39,16],[[24,0,\"has-text-black has-text-weight-semibold\"],[16,\"data-test-policy-item\",true]],[[\"@route\",\"@models\"],[\"vault.cluster.policy.show\",[28,[37,15],[[30,0,[\"policyType\"]],[30,2,[\"id\"]]],null]]],[[\"default\"],[[[[1,\"\\n                \"],[8,[39,13],[[24,0,\"has-text-grey-light\"]],[[\"@name\"],[\"file\"]],null],[1,\"\\n                \"],[10,1],[14,0,\"is-underline\"],[14,\"data-test-policy-name\",\"\"],[12],[1,[30,2,[\"id\"]]],[13],[1,\"\\n              \"]],[]]]]],[1,\"\\n            \"],[13],[1,\"\\n            \"],[10,0],[14,0,\"column has-text-right\"],[12],[1,\"\\n              \"],[8,[39,17],[[24,3,\"policy-nav\"]],null,[[\"default\"],[[[[1,\"\\n                \"],[8,[39,18],null,null,[[\"default\"],[[[[1,\"\\n                  \"],[10,\"nav\"],[14,0,\"menu\"],[12],[1,\"\\n                    \"],[10,\"ul\"],[14,0,\"menu-list\"],[12],[1,\"\\n\"],[41,[30,2,[\"updatePath\",\"isPending\"]],[[[1,\"                        \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                          \"],[10,\"button\"],[14,\"disabled\",\"\"],[14,0,\"link button is-loading is-transparent\"],[14,4,\"button\"],[12],[1,\"\\n                            loading\\n                          \"],[13],[1,\"\\n                        \"],[13],[1,\"\\n                        \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                          \"],[10,\"button\"],[14,\"disabled\",\"\"],[14,0,\"link button is-loading is-transparent\"],[14,4,\"button\"],[12],[1,\"\\n                            loading\\n                          \"],[13],[1,\"\\n                        \"],[13],[1,\"\\n\"]],[]],[[[41,[30,2,[\"canRead\"]],[[[1,\"                          \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                            \"],[8,[39,16],[[24,\"data-test-policy-link\",\"show\"]],[[\"@route\",\"@models\"],[\"vault.cluster.policy.show\",[28,[37,15],[[30,0,[\"policyType\"]],[30,2,[\"id\"]]],null]]],[[\"default\"],[[[[1,\"\\n                              Details\\n                            \"]],[]]]]],[1,\"\\n                          \"],[13],[1,\"\\n\"]],[]],null],[41,[30,2,[\"canEdit\"]],[[[1,\"                          \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                            \"],[8,[39,16],[[24,\"data-test-policy-link\",\"edit\"]],[[\"@route\",\"@models\"],[\"vault.cluster.policy.edit\",[28,[37,15],[[30,0,[\"policyType\"]],[30,2,[\"id\"]]],null]]],[[\"default\"],[[[[1,\"\\n                              Edit\\n                            \"]],[]]]]],[1,\"\\n                          \"],[13],[1,\"\\n\"]],[]],null],[41,[30,2,[\"canDelete\"]],[[[1,\"                          \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                            \"],[8,[30,3,[\"Message\"]],[[16,\"data-test-policy-delete\",[30,2,[\"id\"]]]],[[\"@id\",\"@confirmMessage\",\"@onConfirm\"],[[30,2,[\"id\"]],\"This will permanently delete this policy and may affect access to some data\",[28,[37,8],[[30,0],\"deletePolicy\",[30,2]],null]]],null],[1,\"\\n                          \"],[13],[1,\"\\n\"]],[]],null]],[]]],[1,\"                    \"],[13],[1,\"\\n                  \"],[13],[1,\"\\n                \"]],[3]]]]],[1,\"\\n              \"]],[]]]]],[1,\"\\n            \"],[13],[1,\"\\n          \"],[13],[1,\"\\n        \"]],[]]]]],[1,\"\\n\"]],[]]]],[2]],[[[1,\"      \"],[8,[39,19],null,[[\"@title\"],[[29,[\"No policies matching \\\"\",[30,0,[\"pageFilter\"]],\"\\\"\"]]]],null],[1,\"\\n\"]],[]]],[41,[28,[37,20],[[30,0,[\"model\",\"meta\",\"lastPage\"]],1],null],[[[1,\"      \"],[8,[39,21],null,[[\"@page\",\"@lastPage\",\"@link\"],[[30,0,[\"model\",\"meta\",\"currentPage\"]],[30,0,[\"model\",\"meta\",\"lastPage\"]],\"vault.cluster.policies.index\"]],null],[1,\"\\n\"]],[]],null]],[]],[[[1,\"    \"],[8,[39,19],null,[[\"@title\",\"@message\"],[[29,[\"No \",[28,[37,4],[[30,0,[\"policyType\"]]],null],\" policies yet\"]],[29,[\"A list of policies will be listed here. Create your first \",[28,[37,4],[[30,0,[\"policyType\"]]],null],\" policy to get started.\"]]]],[[\"default\"],[[[[1,\"\\n      \"],[8,[39,16],[[24,0,\"link\"]],[[\"@route\"],[\"vault.cluster.policies.create\"]],[[\"default\"],[[[[1,\"\\n        Create\\n        \"],[1,[28,[35,4],[[30,0,[\"policyType\"]]],null]],[1,\"\\n        policy\\n        \"],[8,[39,22],null,null,null],[1,\"\\n      \"]],[]]]]],[1,\"\\n\"],[1,\"    \"]],[]]]]],[1,\"\\n\"]],[]]]],[]],null]],[\"p\",\"item\",\"c\"],false,[\"if\",\"or\",\"eq\",\"page-header\",\"uppercase\",\"toolbar\",\"toolbar-filters\",\"navigate-input\",\"action\",\"toolbar-actions\",\"toolbar-link\",\"each\",\"-track-array\",\"icon\",\"linked-block\",\"array\",\"link-to\",\"popup-menu\",\"confirm\",\"empty-state\",\"gt\",\"list-pagination\",\"chevron\"]]",
    "moduleName": "vault/templates/vault/cluster/policies/index.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/policies/loading", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <LayoutLoading />
  */
  {
    "id": "Z04k0LRB",
    "block": "[[[8,[39,0],null,null,null]],[],false,[\"layout-loading\"]]",
    "moduleName": "vault/templates/vault/cluster/policies/loading.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/policy", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <Sidebar::Nav::Policies />
  {{outlet}}
  */
  {
    "id": "TECrMPwW",
    "block": "[[[8,[39,0],null,null,null],[1,\"\\n\"],[46,[28,[37,2],null,null],null,null,null]],[],false,[\"sidebar/nav/policies\",\"component\",\"-outlet\"]]",
    "moduleName": "vault/templates/vault/cluster/policy.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/policy/edit", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.top>
      <nav class="breadcrumb">
        <li>
          <LinkTo @route="vault.cluster.policies" @model={{this.policyType}} data-test-policy-list-link={{true}}>
            <span class="sep">&#x0002f;</span>
            {{uppercase this.policyType}}
            policies
          </LinkTo>
        </li>
      </nav>
    </p.top>
    <p.levelLeft>
      <h1 class="title is-3">
        {{this.model.id}}
        {{#if this.model.enforcementLevel}}
          <span class="tag is-medium" aria-label="Enforcement level: {{this.model.enforcementLevel}}">
            {{this.model.enforcementLevel}}
          </span>
        {{/if}}
      </h1>
    </p.levelLeft>
  </PageHeader>
  {{#if (and (not-eq this.model.id "root") (or this.capabilities.canUpdate this.capabilities.canDelete))}}
    <Toolbar>
      <ToolbarActions>
        {{#if (and (not-eq this.model.id "default") this.capabilities.canDelete)}}
          <ConfirmAction
            @buttonClasses="toolbar-link"
            @confirmMessage="This may affect access to OpenBao data."
            @onConfirmAction={{this.deletePolicy}}
            data-test-policy-delete="true"
          >
            Delete
          </ConfirmAction>
          <div class="toolbar-separator"></div>
        {{/if}}
        <ToolbarLink @route="vault.cluster.policy.show" @model={{this.model.id}} data-test-policy-edit-toggle>
          Back to policy
        </ToolbarLink>
      </ToolbarActions>
    </Toolbar>
  {{/if}}
  
  <PolicyForm
    @model={{this.model}}
    @onSave={{transition-to "vault.cluster.policy.show" this.model.policyType this.model.name}}
    @onCancel={{transition-to "vault.cluster.policy.show" this.model.policyType this.model.name}}
  />
  */
  {
    "id": "oamVVWw+",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"top\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"nav\"],[14,0,\"breadcrumb\"],[12],[1,\"\\n      \"],[10,\"li\"],[12],[1,\"\\n        \"],[8,[39,1],[[16,\"data-test-policy-list-link\",true]],[[\"@route\",\"@model\"],[\"vault.cluster.policies\",[30,0,[\"policyType\"]]]],[[\"default\"],[[[[1,\"\\n          \"],[10,1],[14,0,\"sep\"],[12],[1,\"/\"],[13],[1,\"\\n          \"],[1,[28,[35,2],[[30,0,[\"policyType\"]]],null]],[1,\"\\n          policies\\n        \"]],[]]]]],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n      \"],[1,[30,0,[\"model\",\"id\"]]],[1,\"\\n\"],[41,[30,0,[\"model\",\"enforcementLevel\"]],[[[1,\"        \"],[10,1],[14,0,\"tag is-medium\"],[15,\"aria-label\",[29,[\"Enforcement level: \",[30,0,[\"model\",\"enforcementLevel\"]]]]],[12],[1,\"\\n          \"],[1,[30,0,[\"model\",\"enforcementLevel\"]]],[1,\"\\n        \"],[13],[1,\"\\n\"]],[]],null],[1,\"    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\"],[41,[28,[37,4],[[28,[37,5],[[30,0,[\"model\",\"id\"]],\"root\"],null],[28,[37,6],[[30,0,[\"capabilities\",\"canUpdate\"]],[30,0,[\"capabilities\",\"canDelete\"]]],null]],null],[[[1,\"  \"],[8,[39,7],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,8],null,null,[[\"default\"],[[[[1,\"\\n\"],[41,[28,[37,4],[[28,[37,5],[[30,0,[\"model\",\"id\"]],\"default\"],null],[30,0,[\"capabilities\",\"canDelete\"]]],null],[[[1,\"        \"],[8,[39,9],[[24,\"data-test-policy-delete\",\"true\"]],[[\"@buttonClasses\",\"@confirmMessage\",\"@onConfirmAction\"],[\"toolbar-link\",\"This may affect access to OpenBao data.\",[30,0,[\"deletePolicy\"]]]],[[\"default\"],[[[[1,\"\\n          Delete\\n        \"]],[]]]]],[1,\"\\n        \"],[10,0],[14,0,\"toolbar-separator\"],[12],[13],[1,\"\\n\"]],[]],null],[1,\"      \"],[8,[39,10],[[24,\"data-test-policy-edit-toggle\",\"\"]],[[\"@route\",\"@model\"],[\"vault.cluster.policy.show\",[30,0,[\"model\",\"id\"]]]],[[\"default\"],[[[[1,\"\\n        Back to policy\\n      \"]],[]]]]],[1,\"\\n    \"]],[]]]]],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"\\n\"],[8,[39,11],null,[[\"@model\",\"@onSave\",\"@onCancel\"],[[30,0,[\"model\"]],[28,[37,12],[\"vault.cluster.policy.show\",[30,0,[\"model\",\"policyType\"]],[30,0,[\"model\",\"name\"]]],null],[28,[37,12],[\"vault.cluster.policy.show\",[30,0,[\"model\",\"policyType\"]],[30,0,[\"model\",\"name\"]]],null]]],null]],[\"p\"],false,[\"page-header\",\"link-to\",\"uppercase\",\"if\",\"and\",\"not-eq\",\"or\",\"toolbar\",\"toolbar-actions\",\"confirm-action\",\"toolbar-link\",\"policy-form\",\"transition-to\"]]",
    "moduleName": "vault/templates/vault/cluster/policy/edit.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/policy/error", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{#if (eq this.model.httpStatus 404)}}
    <NotFound @model={{this.model}} />
  {{else}}
    <PageHeader as |p|>
      <p.levelLeft>
        <h1 class="title is-3 has-text-grey">
          {{#if (eq this.model.httpStatus 403)}}
            Not authorized
          {{else}}
            Error
          {{/if}}
        </h1>
      </p.levelLeft>
    </PageHeader>
    <div class="box is-sideless has-background-white-bis has-text-grey has-text-centered">
      {{#if this.model.message}}
        <p>{{this.model.message}}</p>
      {{/if}}
      {{#each this.model.errors as |error|}}
        <p>{{error}}</p>
      {{/each}}
    </div>
  {{/if}}
  */
  {
    "id": "NogJi/f1",
    "block": "[[[41,[28,[37,1],[[30,0,[\"model\",\"httpStatus\"]],404],null],[[[1,\"  \"],[8,[39,2],null,[[\"@model\"],[[30,0,[\"model\"]]]],null],[1,\"\\n\"]],[]],[[[1,\"  \"],[8,[39,3],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n      \"],[10,\"h1\"],[14,0,\"title is-3 has-text-grey\"],[12],[1,\"\\n\"],[41,[28,[37,1],[[30,0,[\"model\",\"httpStatus\"]],403],null],[[[1,\"          Not authorized\\n\"]],[]],[[[1,\"          Error\\n\"]],[]]],[1,\"      \"],[13],[1,\"\\n    \"]],[]]]]],[1,\"\\n  \"]],[1]]]]],[1,\"\\n  \"],[10,0],[14,0,\"box is-sideless has-background-white-bis has-text-grey has-text-centered\"],[12],[1,\"\\n\"],[41,[30,0,[\"model\",\"message\"]],[[[1,\"      \"],[10,2],[12],[1,[30,0,[\"model\",\"message\"]]],[13],[1,\"\\n\"]],[]],null],[42,[28,[37,5],[[28,[37,5],[[30,0,[\"model\",\"errors\"]]],null]],null],null,[[[1,\"      \"],[10,2],[12],[1,[30,2]],[13],[1,\"\\n\"]],[2]],null],[1,\"  \"],[13],[1,\"\\n\"]],[]]]],[\"p\",\"error\"],false,[\"if\",\"eq\",\"not-found\",\"page-header\",\"each\",\"-track-array\"]]",
    "moduleName": "vault/templates/vault/cluster/policy/error.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/policy/loading", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <LayoutLoading />
  */
  {
    "id": "E54hDU8H",
    "block": "[[[8,[39,0],null,null,null]],[],false,[\"layout-loading\"]]",
    "moduleName": "vault/templates/vault/cluster/policy/loading.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/policy/show", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.top>
      <nav class="breadcrumb">
        <li>
          <LinkTo @route="vault.cluster.policies" @model={{this.policyType}} data-test-policy-list-link={{true}}>
            <span class="sep">&#x0002f;</span>
            {{uppercase this.policyType}}
            policies
          </LinkTo>
        </li>
      </nav>
    </p.top>
    <p.levelLeft>
      <h1 class="title is-3" data-test-policy-name="true">
        {{this.model.id}}
        {{#if this.model.enforcementLevel}}
          <span class="tag" aria-label="Enforcement level: {{this.model.enforcementLevel}}">
            {{this.model.enforcementLevel}}
          </span>
        {{/if}}
      </h1>
    </p.levelLeft>
  </PageHeader>
  <Toolbar>
    <ToolbarActions>
      <DownloadButton
        class="toolbar-link"
        @filename={{this.model.name}}
        @data={{this.model.policy}}
        @extension={{this.model.format}}
      >
        Download policy
        <Chevron @isButton={{true}} />
      </DownloadButton>
      {{#if (and (not-eq this.model.id "root") (or this.capabilities.canUpdate this.capabilities.canDelete))}}
        <ToolbarLink @route="vault.cluster.policy.edit" @model={{this.model.id}} data-test-policy-edit-toggle>
          Edit policy
        </ToolbarLink>
      {{/if}}
    </ToolbarActions>
  </Toolbar>
  <div class="box is-bottomless is-fullwidth is-marginless">
    <div class="field">
      <JsonEditor
        @title="Policy"
        @subTitle={{if (eq this.policyType "acl") (concat this.uppercase this.model.format " format")}}
        @value={{this.model.policy}}
        @readOnly={{true}}
        @mode="ruby"
      />
    </div>
    {{#if this.model.paths}}
      <div class="field box is-shadowless no-bottom-padding is-marginless">
        <h2 class="title is-6">Paths</h2>
        <ul data-test-egp-paths>
          {{#each this.model.paths as |path|}}
            <li class="box has-slim-padding no-top-shadow is-marginless">
              <code class="has-text-black">{{path}}</code>
            </li>
          {{/each}}
        </ul>
      </div>
    {{/if}}
  </div>
  */
  {
    "id": "IZCKpmst",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"top\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"nav\"],[14,0,\"breadcrumb\"],[12],[1,\"\\n      \"],[10,\"li\"],[12],[1,\"\\n        \"],[8,[39,1],[[16,\"data-test-policy-list-link\",true]],[[\"@route\",\"@model\"],[\"vault.cluster.policies\",[30,0,[\"policyType\"]]]],[[\"default\"],[[[[1,\"\\n          \"],[10,1],[14,0,\"sep\"],[12],[1,\"/\"],[13],[1,\"\\n          \"],[1,[28,[35,2],[[30,0,[\"policyType\"]]],null]],[1,\"\\n          policies\\n        \"]],[]]]]],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[14,\"data-test-policy-name\",\"true\"],[12],[1,\"\\n      \"],[1,[30,0,[\"model\",\"id\"]]],[1,\"\\n\"],[41,[30,0,[\"model\",\"enforcementLevel\"]],[[[1,\"        \"],[10,1],[14,0,\"tag\"],[15,\"aria-label\",[29,[\"Enforcement level: \",[30,0,[\"model\",\"enforcementLevel\"]]]]],[12],[1,\"\\n          \"],[1,[30,0,[\"model\",\"enforcementLevel\"]]],[1,\"\\n        \"],[13],[1,\"\\n\"]],[]],null],[1,\"    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\"],[8,[39,4],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[39,5],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,6],[[24,0,\"toolbar-link\"]],[[\"@filename\",\"@data\",\"@extension\"],[[30,0,[\"model\",\"name\"]],[30,0,[\"model\",\"policy\"]],[30,0,[\"model\",\"format\"]]]],[[\"default\"],[[[[1,\"\\n      Download policy\\n      \"],[8,[39,7],null,[[\"@isButton\"],[true]],null],[1,\"\\n    \"]],[]]]]],[1,\"\\n\"],[41,[28,[37,8],[[28,[37,9],[[30,0,[\"model\",\"id\"]],\"root\"],null],[28,[37,10],[[30,0,[\"capabilities\",\"canUpdate\"]],[30,0,[\"capabilities\",\"canDelete\"]]],null]],null],[[[1,\"      \"],[8,[39,11],[[24,\"data-test-policy-edit-toggle\",\"\"]],[[\"@route\",\"@model\"],[\"vault.cluster.policy.edit\",[30,0,[\"model\",\"id\"]]]],[[\"default\"],[[[[1,\"\\n        Edit policy\\n      \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"  \"]],[]]]]],[1,\"\\n\"]],[]]]]],[1,\"\\n\"],[10,0],[14,0,\"box is-bottomless is-fullwidth is-marginless\"],[12],[1,\"\\n  \"],[10,0],[14,0,\"field\"],[12],[1,\"\\n    \"],[8,[39,12],null,[[\"@title\",\"@subTitle\",\"@value\",\"@readOnly\",\"@mode\"],[\"Policy\",[52,[28,[37,13],[[30,0,[\"policyType\"]],\"acl\"],null],[28,[37,14],[[30,0,[\"uppercase\"]],[30,0,[\"model\",\"format\"]],\" format\"],null]],[30,0,[\"model\",\"policy\"]],true,\"ruby\"]],null],[1,\"\\n  \"],[13],[1,\"\\n\"],[41,[30,0,[\"model\",\"paths\"]],[[[1,\"    \"],[10,0],[14,0,\"field box is-shadowless no-bottom-padding is-marginless\"],[12],[1,\"\\n      \"],[10,\"h2\"],[14,0,\"title is-6\"],[12],[1,\"Paths\"],[13],[1,\"\\n      \"],[10,\"ul\"],[14,\"data-test-egp-paths\",\"\"],[12],[1,\"\\n\"],[42,[28,[37,16],[[28,[37,16],[[30,0,[\"model\",\"paths\"]]],null]],null],null,[[[1,\"          \"],[10,\"li\"],[14,0,\"box has-slim-padding no-top-shadow is-marginless\"],[12],[1,\"\\n            \"],[10,\"code\"],[14,0,\"has-text-black\"],[12],[1,[30,2]],[13],[1,\"\\n          \"],[13],[1,\"\\n\"]],[2]],null],[1,\"      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n\"]],[]],null],[13]],[\"p\",\"path\"],false,[\"page-header\",\"link-to\",\"uppercase\",\"if\",\"toolbar\",\"toolbar-actions\",\"download-button\",\"chevron\",\"and\",\"not-eq\",\"or\",\"toolbar-link\",\"json-editor\",\"eq\",\"concat\",\"each\",\"-track-array\"]]",
    "moduleName": "vault/templates/vault/cluster/policy/show.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/redirect", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <LogoSplash />
  */
  {
    "id": "3qsY9GDc",
    "block": "[[[8,[39,0],null,null,null]],[],false,[\"logo-splash\"]]",
    "moduleName": "vault/templates/vault/cluster/redirect.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/secrets/backend/configuration", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <SecretListHeader
    @model={{this.model}}
    @backendCrumb={{hash
      label=this.model.id
      text=this.model.id
      path="vault.cluster.secrets.backend.list-root"
      model=this.model.id
    }}
    @isConfigure={{true}}
  />
  
  {{#if this.isConfigurable}}
    <Toolbar>
      <ToolbarActions>
        <ToolbarLink
          @route="vault.cluster.settings.configure-secret-backend"
          @model={{this.model.id}}
          data-test-secret-backend-configure
        >
          Configure
        </ToolbarLink>
      </ToolbarActions>
    </Toolbar>
  {{/if}}
  
  <div class="box is-fullwidth is-sideless is-paddingless is-marginless">
    {{#each this.model.attrs as |attr|}}
      {{#if (eq attr.type "object")}}
        <InfoTableRow
          @alwaysRender={{not (is-empty-value (get this.model attr.name))}}
          @label={{or attr.options.label (to-label attr.name)}}
          @value={{stringify (get this.model (or attr.options.fieldValue attr.name))}}
        />
      {{else}}
        <InfoTableRow
          @alwaysRender={{and (not (is-empty-value (get this.model attr.name))) (not-eq attr.name "version")}}
          @formatTtl={{eq attr.options.editType "ttl"}}
          @label={{or attr.options.label (to-label attr.name)}}
          @value={{get this.model (or attr.options.fieldValue attr.name)}}
        />
      {{/if}}
    {{/each}}
  </div>
  */
  {
    "id": "JdOPF2r3",
    "block": "[[[8,[39,0],null,[[\"@model\",\"@backendCrumb\",\"@isConfigure\"],[[30,0,[\"model\"]],[28,[37,1],null,[[\"label\",\"text\",\"path\",\"model\"],[[30,0,[\"model\",\"id\"]],[30,0,[\"model\",\"id\"]],\"vault.cluster.secrets.backend.list-root\",[30,0,[\"model\",\"id\"]]]]],true]],null],[1,\"\\n\\n\"],[41,[30,0,[\"isConfigurable\"]],[[[1,\"  \"],[8,[39,3],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,4],null,null,[[\"default\"],[[[[1,\"\\n      \"],[8,[39,5],[[24,\"data-test-secret-backend-configure\",\"\"]],[[\"@route\",\"@model\"],[\"vault.cluster.settings.configure-secret-backend\",[30,0,[\"model\",\"id\"]]]],[[\"default\"],[[[[1,\"\\n        Configure\\n      \"]],[]]]]],[1,\"\\n    \"]],[]]]]],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"\\n\"],[10,0],[14,0,\"box is-fullwidth is-sideless is-paddingless is-marginless\"],[12],[1,\"\\n\"],[42,[28,[37,7],[[28,[37,7],[[30,0,[\"model\",\"attrs\"]]],null]],null],null,[[[41,[28,[37,8],[[30,1,[\"type\"]],\"object\"],null],[[[1,\"      \"],[8,[39,9],null,[[\"@alwaysRender\",\"@label\",\"@value\"],[[28,[37,10],[[28,[37,11],[[28,[37,12],[[30,0,[\"model\"]],[30,1,[\"name\"]]],null]],null]],null],[28,[37,13],[[30,1,[\"options\",\"label\"]],[28,[37,14],[[30,1,[\"name\"]]],null]],null],[28,[37,15],[[28,[37,12],[[30,0,[\"model\"]],[28,[37,13],[[30,1,[\"options\",\"fieldValue\"]],[30,1,[\"name\"]]],null]],null]],null]]],null],[1,\"\\n\"]],[]],[[[1,\"      \"],[8,[39,9],null,[[\"@alwaysRender\",\"@formatTtl\",\"@label\",\"@value\"],[[28,[37,16],[[28,[37,10],[[28,[37,11],[[28,[37,12],[[30,0,[\"model\"]],[30,1,[\"name\"]]],null]],null]],null],[28,[37,17],[[30,1,[\"name\"]],\"version\"],null]],null],[28,[37,8],[[30,1,[\"options\",\"editType\"]],\"ttl\"],null],[28,[37,13],[[30,1,[\"options\",\"label\"]],[28,[37,14],[[30,1,[\"name\"]]],null]],null],[28,[37,12],[[30,0,[\"model\"]],[28,[37,13],[[30,1,[\"options\",\"fieldValue\"]],[30,1,[\"name\"]]],null]],null]]],null],[1,\"\\n\"]],[]]]],[1]],null],[13]],[\"attr\"],false,[\"secret-list-header\",\"hash\",\"if\",\"toolbar\",\"toolbar-actions\",\"toolbar-link\",\"each\",\"-track-array\",\"eq\",\"info-table-row\",\"not\",\"is-empty-value\",\"get\",\"or\",\"to-label\",\"stringify\",\"and\",\"not-eq\"]]",
    "moduleName": "vault/templates/vault/cluster/secrets/backend/configuration.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/secrets/backend/credentials", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{#if (eq this.model.backendType "database")}}
    <GenerateCredentialsDatabase
      @backendPath={{this.model.backendPath}}
      @roleName={{this.model.roleName}}
      @roleType={{this.model.dbCred.roleType}}
      @model={{this.model.dbCred}}
    />
  {{else}}
    {{! TODO smells a little to have action off of query param requiring a conditional }}
    <GenerateCredentials
      @backendPath={{this.model.backendPath}}
      @backendType={{this.model.backendType}}
      @roleName={{this.model.roleName}}
      @action={{if this.action this.action ""}}
    />
  {{/if}}
  */
  {
    "id": "mKiDEN4d",
    "block": "[[[41,[28,[37,1],[[30,0,[\"model\",\"backendType\"]],\"database\"],null],[[[1,\"  \"],[8,[39,2],null,[[\"@backendPath\",\"@roleName\",\"@roleType\",\"@model\"],[[30,0,[\"model\",\"backendPath\"]],[30,0,[\"model\",\"roleName\"]],[30,0,[\"model\",\"dbCred\",\"roleType\"]],[30,0,[\"model\",\"dbCred\"]]]],null],[1,\"\\n\"]],[]],[[[1,\"  \"],[8,[39,3],null,[[\"@backendPath\",\"@backendType\",\"@roleName\",\"@action\"],[[30,0,[\"model\",\"backendPath\"]],[30,0,[\"model\",\"backendType\"]],[30,0,[\"model\",\"roleName\"]],[52,[30,0,[\"action\"]],[30,0,[\"action\"]],\"\"]]],null],[1,\"\\n\"]],[]]]],[],false,[\"if\",\"eq\",\"generate-credentials-database\",\"generate-credentials\"]]",
    "moduleName": "vault/templates/vault/cluster/secrets/backend/credentials.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/secrets/backend/diff", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.top>
      <KeyValueHeader
        @baseKey={{hash id=@model.id}}
        @path="vault.cluster.secrets.backend.show"
        @mode="show"
        @showCurrent={{true}}
        @root={{@backendCrumb}}
      />
    </p.top>
    <p.levelLeft>
      <h1 class="title is-3">
        View diff
      </h1>
    </p.levelLeft>
  </PageHeader>
  
  <DiffVersionSelector @model={{@model}} />
  */
  {
    "id": "qxbFwdRx",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"top\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,1],null,[[\"@baseKey\",\"@path\",\"@mode\",\"@showCurrent\",\"@root\"],[[28,[37,2],null,[[\"id\"],[[30,2,[\"id\"]]]]],\"vault.cluster.secrets.backend.show\",\"show\",true,[30,3]]],null],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n      View diff\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\\n\"],[8,[39,3],null,[[\"@model\"],[[30,2]]],null]],[\"p\",\"@model\",\"@backendCrumb\"],false,[\"page-header\",\"key-value-header\",\"hash\",\"diff-version-selector\"]]",
    "moduleName": "vault/templates/vault/cluster/secrets/backend/diff.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/secrets/backend/edit-metadata", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{#if this.model.canUpdateMetadata}}
    <PageHeader as |p|>
      <p.levelLeft>
        <h1 class="title is-3">
          Edit secret metadata
        </h1>
      </p.levelLeft>
    </PageHeader>
    <SecretEditMetadata @model={{this.model}} />
  {{else}}
    <EmptyState
      @title="You do not have permissions to edit metadata"
      @message="Ask your administrator if you think you should have access."
    >
      <LinkTo @route="vault.cluster.secrets.backend.metadata" @model={{this.model.id}} class="link">
        View Metadata
      </LinkTo>
      <DocLink @path="/api-docs/secret/kv/kv-v2#createupdate-metadata">More here</DocLink>
    </EmptyState>
  {{/if}}
  */
  {
    "id": "g9HgvQ6a",
    "block": "[[[41,[30,0,[\"model\",\"canUpdateMetadata\"]],[[[1,\"  \"],[8,[39,1],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n      \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n        Edit secret metadata\\n      \"],[13],[1,\"\\n    \"]],[]]]]],[1,\"\\n  \"]],[1]]]]],[1,\"\\n  \"],[8,[39,2],null,[[\"@model\"],[[30,0,[\"model\"]]]],null],[1,\"\\n\"]],[]],[[[1,\"  \"],[8,[39,3],null,[[\"@title\",\"@message\"],[\"You do not have permissions to edit metadata\",\"Ask your administrator if you think you should have access.\"]],[[\"default\"],[[[[1,\"\\n    \"],[8,[39,4],[[24,0,\"link\"]],[[\"@route\",\"@model\"],[\"vault.cluster.secrets.backend.metadata\",[30,0,[\"model\",\"id\"]]]],[[\"default\"],[[[[1,\"\\n      View Metadata\\n    \"]],[]]]]],[1,\"\\n    \"],[8,[39,5],null,[[\"@path\"],[\"/api-docs/secret/kv/kv-v2#createupdate-metadata\"]],[[\"default\"],[[[[1,\"More here\"]],[]]]]],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]]]],[\"p\"],false,[\"if\",\"page-header\",\"secret-edit-metadata\",\"empty-state\",\"link-to\",\"doc-link\"]]",
    "moduleName": "vault/templates/vault/cluster/secrets/backend/edit-metadata.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/secrets/backend/error", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <div class="box is-shadowless">
    <PageHeader as |p|>
      <p.top>
        <nav class="breadcrumb">
          <li>
            <LinkTo @route={{if this.model.backend "vault.cluster.secrets.backend.list-root" "vault.cluster.secrets"}}>
              <span class="sep">&#x0002f;</span>
              {{if this.model.backend this.model.backend "secrets"}}
            </LinkTo>
          </li>
        </nav>
      </p.top>
      <p.levelLeft>
        <h1 class="title is-3 has-text-grey">
          {{#if (eq this.model.httpStatus 404)}}
            404 Not Found
          {{else if (eq this.model.httpStatus 403)}}
            Not Authorized
          {{else}}
            Error
          {{/if}}
        </h1>
      </p.levelLeft>
    </PageHeader>
    <div class="box is-sideless has-background-white-bis has-text-grey has-text-centered">
      {{#if (eq this.model.httpStatus 404)}}
        <p data-test-secret-not-found>
          Unable to find secret at
          <code>{{concat this.model.backend "/" this.model.secret}}</code>. Try going back to the
          <LinkTo @route={{if this.model.backend "vault.cluster.secrets.backend.list-root" "vault.cluster.secrets"}}>
            root
          </LinkTo>
          and navigating from there.
        </p>
      {{else if (eq this.model.httpStatus 403)}}
        {{#if (eq this.model.policyPath "sys/capabilities-self")}}
          <p>
            Your auth token does not have access to
            <code>{{this.model.policyPath}}</code>.
          </p>
          <p>
            Make sure the policy for the path
            <code>{{this.model.policyPath}}</code>
            includes
            <code>capabilities = ['update']</code>.
          </p>
        {{else}}
          <p>
            You don't have access to
            <code>
              {{if this.model.secret (concat this.model.backend "/" this.model.secret) (concat this.model.backend "/")}}
            </code>. If you think you've reached this page in error, please contact your administrator.
          </p>
          <p>
            {{#if this.model.secret}}
              <LinkTo @route="vault.cluster.secrets.backend.list-root">Navigate back to the root</LinkTo>.
            {{else}}
              <LinkTo @route="vault.cluster">Go back home</LinkTo>.
            {{/if}}
          </p>
        {{/if}}
      {{else}}
        {{#if this.model.message}}
          <p>{{this.model.message}}</p>
        {{/if}}
        {{#each this.model.errors as |error|}}
          <p class="message">
            {{error}}
          </p>
        {{/each}}
      {{/if}}
    </div>
  </div>
  */
  {
    "id": "QpxY74qs",
    "block": "[[[10,0],[14,0,\"box is-shadowless\"],[12],[1,\"\\n  \"],[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[30,1,[\"top\"]],null,null,[[\"default\"],[[[[1,\"\\n      \"],[10,\"nav\"],[14,0,\"breadcrumb\"],[12],[1,\"\\n        \"],[10,\"li\"],[12],[1,\"\\n          \"],[8,[39,1],null,[[\"@route\"],[[52,[30,0,[\"model\",\"backend\"]],\"vault.cluster.secrets.backend.list-root\",\"vault.cluster.secrets\"]]],[[\"default\"],[[[[1,\"\\n            \"],[10,1],[14,0,\"sep\"],[12],[1,\"/\"],[13],[1,\"\\n            \"],[1,[52,[30,0,[\"model\",\"backend\"]],[30,0,[\"model\",\"backend\"]],\"secrets\"]],[1,\"\\n          \"]],[]]]]],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"]],[]]]]],[1,\"\\n    \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n      \"],[10,\"h1\"],[14,0,\"title is-3 has-text-grey\"],[12],[1,\"\\n\"],[41,[28,[37,3],[[30,0,[\"model\",\"httpStatus\"]],404],null],[[[1,\"          404 Not Found\\n\"]],[]],[[[41,[28,[37,3],[[30,0,[\"model\",\"httpStatus\"]],403],null],[[[1,\"          Not Authorized\\n\"]],[]],[[[1,\"          Error\\n        \"]],[]]]],[]]],[1,\"      \"],[13],[1,\"\\n    \"]],[]]]]],[1,\"\\n  \"]],[1]]]]],[1,\"\\n  \"],[10,0],[14,0,\"box is-sideless has-background-white-bis has-text-grey has-text-centered\"],[12],[1,\"\\n\"],[41,[28,[37,3],[[30,0,[\"model\",\"httpStatus\"]],404],null],[[[1,\"      \"],[10,2],[14,\"data-test-secret-not-found\",\"\"],[12],[1,\"\\n        Unable to find secret at\\n        \"],[10,\"code\"],[12],[1,[28,[35,4],[[30,0,[\"model\",\"backend\"]],\"/\",[30,0,[\"model\",\"secret\"]]],null]],[13],[1,\". Try going back to the\\n        \"],[8,[39,1],null,[[\"@route\"],[[52,[30,0,[\"model\",\"backend\"]],\"vault.cluster.secrets.backend.list-root\",\"vault.cluster.secrets\"]]],[[\"default\"],[[[[1,\"\\n          root\\n        \"]],[]]]]],[1,\"\\n        and navigating from there.\\n      \"],[13],[1,\"\\n\"]],[]],[[[41,[28,[37,3],[[30,0,[\"model\",\"httpStatus\"]],403],null],[[[41,[28,[37,3],[[30,0,[\"model\",\"policyPath\"]],\"sys/capabilities-self\"],null],[[[1,\"        \"],[10,2],[12],[1,\"\\n          Your auth token does not have access to\\n          \"],[10,\"code\"],[12],[1,[30,0,[\"model\",\"policyPath\"]]],[13],[1,\".\\n        \"],[13],[1,\"\\n        \"],[10,2],[12],[1,\"\\n          Make sure the policy for the path\\n          \"],[10,\"code\"],[12],[1,[30,0,[\"model\",\"policyPath\"]]],[13],[1,\"\\n          includes\\n          \"],[10,\"code\"],[12],[1,\"capabilities = ['update']\"],[13],[1,\".\\n        \"],[13],[1,\"\\n\"]],[]],[[[1,\"        \"],[10,2],[12],[1,\"\\n          You don't have access to\\n          \"],[10,\"code\"],[12],[1,\"\\n            \"],[1,[52,[30,0,[\"model\",\"secret\"]],[28,[37,4],[[30,0,[\"model\",\"backend\"]],\"/\",[30,0,[\"model\",\"secret\"]]],null],[28,[37,4],[[30,0,[\"model\",\"backend\"]],\"/\"],null]]],[1,\"\\n          \"],[13],[1,\". If you think you've reached this page in error, please contact your administrator.\\n        \"],[13],[1,\"\\n        \"],[10,2],[12],[1,\"\\n\"],[41,[30,0,[\"model\",\"secret\"]],[[[1,\"            \"],[8,[39,1],null,[[\"@route\"],[\"vault.cluster.secrets.backend.list-root\"]],[[\"default\"],[[[[1,\"Navigate back to the root\"]],[]]]]],[1,\".\\n\"]],[]],[[[1,\"            \"],[8,[39,1],null,[[\"@route\"],[\"vault.cluster\"]],[[\"default\"],[[[[1,\"Go back home\"]],[]]]]],[1,\".\\n\"]],[]]],[1,\"        \"],[13],[1,\"\\n\"]],[]]]],[]],[[[41,[30,0,[\"model\",\"message\"]],[[[1,\"        \"],[10,2],[12],[1,[30,0,[\"model\",\"message\"]]],[13],[1,\"\\n\"]],[]],null],[42,[28,[37,6],[[28,[37,6],[[30,0,[\"model\",\"errors\"]]],null]],null],null,[[[1,\"        \"],[10,2],[14,0,\"message\"],[12],[1,\"\\n          \"],[1,[30,2]],[1,\"\\n        \"],[13],[1,\"\\n\"]],[2]],null],[1,\"    \"]],[]]]],[]]],[1,\"  \"],[13],[1,\"\\n\"],[13]],[\"p\",\"error\"],false,[\"page-header\",\"link-to\",\"if\",\"eq\",\"concat\",\"each\",\"-track-array\"]]",
    "moduleName": "vault/templates/vault/cluster/secrets/backend/error.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/secrets/backend/list", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <SecretListHeader
    @isCertTab={{eq this.tab "cert"}}
    @model={{this.backendModel}}
    @baseKey={{this.baseKey}}
    @backendCrumb={{this.backendCrumb}}
    @filter={{this.filter}}
  />
  {{#if (and this.noMetadataPermissions this.backendModel.isV2KV)}}
    {{! Show the create button only in the toolbar. Cannot conditional hide this because they could have a specific policy that allows them to create secrets by a certain name }}
    <Toolbar>
      <ToolbarActions>
        <ToolbarSecretLink
          @secret=""
          @mode="create"
          @type="add"
          @queryParams={{hash initialKey=(or this.filter this.baseKey.id) itemType=this.tab}}
          data-test-secret-create={{true}}
        >
          Create Secret
        </ToolbarSecretLink>
      </ToolbarActions>
    </Toolbar>
    <div class="box is-fullwidth is-shadowless has-tall-padding">
      <div class="selectable-card-container one-card">
        <GetCredentialsCard
          @renderInputSearch={{true}}
          @title="View secret"
          @searchLabel="Secret path"
          @subText="Type the path of the secret you want to view. Include a trailing slash to navigate to the list view."
          @placeholder="secret/"
          @type="secret"
          @initialValue={{this.baseKey.id}}
        />
      </div>
    </div>
  {{else}}
    {{#let (options-for-backend this.backendType this.tab) as |options|}}
      {{#if (or this.model.meta.total (not this.isConfigurableTab))}}
        <Toolbar>
          {{#if this.model.meta.total}}
            <ToolbarFilters>
              <NavigateInput
                @filterFocusDidChange={{action "setFilterFocus"}}
                @filterDidChange={{action "setFilter"}}
                @filter={{this.filter}}
                @filterMatchesKey={{this.filterMatchesKey}}
                @firstPartialMatch={{this.firstPartialMatch}}
                @baseKey={{get this.baseKey "id"}}
                @shouldNavigateTree={{options.navigateTree}}
                @placeholder={{options.searchPlaceholder}}
                @mode={{if (eq this.tab "cert") "secrets-cert" "secrets"}}
              />
              {{#if this.filterFocused}}
                {{#if this.filterMatchesKey}}
                  {{#unless this.filterIsFolder}}
                    <p class="input-hint">
                      <kbd>Enter</kbd>
                      to view
                      {{this.filter}}
                    </p>
                  {{/unless}}
                {{/if}}
                {{#if this.firstPartialMatch}}
                  <p class="input-hint">
                    <kbd>Tab</kbd>
                    to autocomplete
                  </p>
                {{/if}}
              {{/if}}
            </ToolbarFilters>
          {{/if}}
  
          <ToolbarActions>
            <ToolbarSecretLink
              @secret=""
              @mode="create"
              @type="add"
              @queryParams={{hash initialKey=(or this.filter this.baseKey.id) itemType=this.tab}}
              data-test-secret-create={{true}}
            >
              {{options.create}}
            </ToolbarSecretLink>
          </ToolbarActions>
        </Toolbar>
      {{/if}}
  
      {{#if this.model.meta.total}}
        {{#each this.model as |item|}}
          {{! Because of the component helper cannot use glimmer nested SecretList::Item }}
          {{#let (component options.listItemPartial) as |Component|}}
            <Component
              @item={{item}}
              @backendModel={{this.backendModel}}
              @backendType={{this.backendType}}
              @delete={{action "delete" item "secret"}}
              @itemPath={{concat options.modelPrefix item.id}}
              @itemType={{options.item}}
              @modelType={{@modelType}}
              @options={{options}}
              @toggleZeroAddress={{action "toggleZeroAddress" item this.backendModel}}
            />
          {{/let}}
        {{else}}
          <div class="box is-sideless">
            {{#if this.filterFocused}}
              There are no
              {{pluralize options.item}}
              matching
              <code>{{this.filter}}</code>, press
              <kbd>ENTER</kbd>
              to add one.
            {{else}}
              There are no
              {{pluralize options.item}}
              matching
              <code>{{this.filter}}</code>.
            {{/if}}
          </div>
        {{/each}}
        {{#if (gt this.model.meta.lastPage 1)}}
          <ListPagination
            @page={{this.model.meta.currentPage}}
            @lastPage={{this.model.meta.lastPage}}
            @link={{concat "vault.cluster.secrets.backend.list" (unless this.baseKey.id "-root")}}
            @models={{compact (array this.backend (if this.baseKey.id this.baseKey.id))}}
          />
        {{/if}}
      {{else}}
        {{#if (eq this.baseKey.id "")}}
          {{#if (and options.firstStep (not this.tab))}}
            <EmptyState @title="Get started with {{capitalize this.backendType}}" @message={{options.firstStep}}>
              <SecretLink
                @mode="create"
                @secret=""
                @queryParams={{hash initialKey=(or this.filter this.baseKey.id) itemType=this.tab}}
                class="link"
              >
                {{options.create}}
              </SecretLink>
            </EmptyState>
          {{else}}
            <EmptyState
              @title="No {{pluralize options.item}} in this backend"
              @message="{{pluralize (capitalize options.item)}}
              in this backend will be listed here.
              {{or options.message (concat 'Add a ' options.item ' to get started.')}}"
            >
              <SecretLink
                @mode="create"
                @secret=""
                @queryParams={{hash initialKey=(or this.filter this.baseKey.id) itemType=this.tab}}
                class="link"
              >
                {{options.create}}
              </SecretLink>
            </EmptyState>
          {{/if}}
        {{else}}
          {{#if this.filterIsFolder}}
            <EmptyState
              @title={{if
                (eq this.filter this.baseKey.id)
                (concat "No " (pluralize options.item) " under &quot;" this.filter "&quot;")
                (concat "No folders matching &quot;" this.filter "&quot;")
              }}
            />
          {{/if}}
        {{/if}}
      {{/if}}
    {{/let}}
  {{/if}}
  */
  {
    "id": "sjWKwetS",
    "block": "[[[8,[39,0],null,[[\"@isCertTab\",\"@model\",\"@baseKey\",\"@backendCrumb\",\"@filter\"],[[28,[37,1],[[30,0,[\"tab\"]],\"cert\"],null],[30,0,[\"backendModel\"]],[30,0,[\"baseKey\"]],[30,0,[\"backendCrumb\"]],[30,0,[\"filter\"]]]],null],[1,\"\\n\"],[41,[28,[37,3],[[30,0,[\"noMetadataPermissions\"]],[30,0,[\"backendModel\",\"isV2KV\"]]],null],[[[1,\"  \"],[8,[39,4],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,5],null,null,[[\"default\"],[[[[1,\"\\n      \"],[8,[39,6],[[16,\"data-test-secret-create\",true]],[[\"@secret\",\"@mode\",\"@type\",\"@queryParams\"],[\"\",\"create\",\"add\",[28,[37,7],null,[[\"initialKey\",\"itemType\"],[[28,[37,8],[[30,0,[\"filter\"]],[30,0,[\"baseKey\",\"id\"]]],null],[30,0,[\"tab\"]]]]]]],[[\"default\"],[[[[1,\"\\n        Create Secret\\n      \"]],[]]]]],[1,\"\\n    \"]],[]]]]],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[10,0],[14,0,\"box is-fullwidth is-shadowless has-tall-padding\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"selectable-card-container one-card\"],[12],[1,\"\\n      \"],[8,[39,9],null,[[\"@renderInputSearch\",\"@title\",\"@searchLabel\",\"@subText\",\"@placeholder\",\"@type\",\"@initialValue\"],[true,\"View secret\",\"Secret path\",\"Type the path of the secret you want to view. Include a trailing slash to navigate to the list view.\",\"secret/\",\"secret\",[30,0,[\"baseKey\",\"id\"]]]],null],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]],[[[44,[[28,[37,11],[[30,0,[\"backendType\"]],[30,0,[\"tab\"]]],null]],[[[41,[28,[37,8],[[30,0,[\"model\",\"meta\",\"total\"]],[28,[37,12],[[30,0,[\"isConfigurableTab\"]]],null]],null],[[[1,\"      \"],[8,[39,4],null,null,[[\"default\"],[[[[1,\"\\n\"],[41,[30,0,[\"model\",\"meta\",\"total\"]],[[[1,\"          \"],[8,[39,13],null,null,[[\"default\"],[[[[1,\"\\n            \"],[8,[39,14],null,[[\"@filterFocusDidChange\",\"@filterDidChange\",\"@filter\",\"@filterMatchesKey\",\"@firstPartialMatch\",\"@baseKey\",\"@shouldNavigateTree\",\"@placeholder\",\"@mode\"],[[28,[37,15],[[30,0],\"setFilterFocus\"],null],[28,[37,15],[[30,0],\"setFilter\"],null],[30,0,[\"filter\"]],[30,0,[\"filterMatchesKey\"]],[30,0,[\"firstPartialMatch\"]],[28,[37,16],[[30,0,[\"baseKey\"]],\"id\"],null],[30,1,[\"navigateTree\"]],[30,1,[\"searchPlaceholder\"]],[52,[28,[37,1],[[30,0,[\"tab\"]],\"cert\"],null],\"secrets-cert\",\"secrets\"]]],null],[1,\"\\n\"],[41,[30,0,[\"filterFocused\"]],[[[41,[30,0,[\"filterMatchesKey\"]],[[[41,[51,[30,0,[\"filterIsFolder\"]]],[[[1,\"                  \"],[10,2],[14,0,\"input-hint\"],[12],[1,\"\\n                    \"],[10,\"kbd\"],[12],[1,\"Enter\"],[13],[1,\"\\n                    to view\\n                    \"],[1,[30,0,[\"filter\"]]],[1,\"\\n                  \"],[13],[1,\"\\n\"]],[]],null]],[]],null],[41,[30,0,[\"firstPartialMatch\"]],[[[1,\"                \"],[10,2],[14,0,\"input-hint\"],[12],[1,\"\\n                  \"],[10,\"kbd\"],[12],[1,\"Tab\"],[13],[1,\"\\n                  to autocomplete\\n                \"],[13],[1,\"\\n\"]],[]],null]],[]],null],[1,\"          \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"\\n        \"],[8,[39,5],null,null,[[\"default\"],[[[[1,\"\\n          \"],[8,[39,6],[[16,\"data-test-secret-create\",true]],[[\"@secret\",\"@mode\",\"@type\",\"@queryParams\"],[\"\",\"create\",\"add\",[28,[37,7],null,[[\"initialKey\",\"itemType\"],[[28,[37,8],[[30,0,[\"filter\"]],[30,0,[\"baseKey\",\"id\"]]],null],[30,0,[\"tab\"]]]]]]],[[\"default\"],[[[[1,\"\\n            \"],[1,[30,1,[\"create\"]]],[1,\"\\n          \"]],[]]]]],[1,\"\\n        \"]],[]]]]],[1,\"\\n      \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"\\n\"],[41,[30,0,[\"model\",\"meta\",\"total\"]],[[[42,[28,[37,19],[[28,[37,19],[[30,0,[\"model\"]]],null]],null],null,[[[44,[[50,[30,1,[\"listItemPartial\"]],0,null,null]],[[[1,\"          \"],[8,[30,3],null,[[\"@item\",\"@backendModel\",\"@backendType\",\"@delete\",\"@itemPath\",\"@itemType\",\"@modelType\",\"@options\",\"@toggleZeroAddress\"],[[30,2],[30,0,[\"backendModel\"]],[30,0,[\"backendType\"]],[28,[37,15],[[30,0],\"delete\",[30,2],\"secret\"],null],[28,[37,21],[[30,1,[\"modelPrefix\"]],[30,2,[\"id\"]]],null],[30,1,[\"item\"]],[30,4],[30,1],[28,[37,15],[[30,0],\"toggleZeroAddress\",[30,2],[30,0,[\"backendModel\"]]],null]]],null],[1,\"\\n\"]],[3]]]],[2]],[[[1,\"        \"],[10,0],[14,0,\"box is-sideless\"],[12],[1,\"\\n\"],[41,[30,0,[\"filterFocused\"]],[[[1,\"            There are no\\n            \"],[1,[28,[35,22],[[30,1,[\"item\"]]],null]],[1,\"\\n            matching\\n            \"],[10,\"code\"],[12],[1,[30,0,[\"filter\"]]],[13],[1,\", press\\n            \"],[10,\"kbd\"],[12],[1,\"ENTER\"],[13],[1,\"\\n            to add one.\\n\"]],[]],[[[1,\"            There are no\\n            \"],[1,[28,[35,22],[[30,1,[\"item\"]]],null]],[1,\"\\n            matching\\n            \"],[10,\"code\"],[12],[1,[30,0,[\"filter\"]]],[13],[1,\".\\n\"]],[]]],[1,\"        \"],[13],[1,\"\\n\"]],[]]],[41,[28,[37,23],[[30,0,[\"model\",\"meta\",\"lastPage\"]],1],null],[[[1,\"        \"],[8,[39,24],null,[[\"@page\",\"@lastPage\",\"@link\",\"@models\"],[[30,0,[\"model\",\"meta\",\"currentPage\"]],[30,0,[\"model\",\"meta\",\"lastPage\"]],[28,[37,21],[\"vault.cluster.secrets.backend.list\",[52,[51,[30,0,[\"baseKey\",\"id\"]]],\"-root\"]],null],[28,[37,25],[[28,[37,26],[[30,0,[\"backend\"]],[52,[30,0,[\"baseKey\",\"id\"]],[30,0,[\"baseKey\",\"id\"]]]],null]],null]]],null],[1,\"\\n\"]],[]],null]],[]],[[[41,[28,[37,1],[[30,0,[\"baseKey\",\"id\"]],\"\"],null],[[[41,[28,[37,3],[[30,1,[\"firstStep\"]],[28,[37,12],[[30,0,[\"tab\"]]],null]],null],[[[1,\"          \"],[8,[39,27],null,[[\"@title\",\"@message\"],[[29,[\"Get started with \",[28,[37,28],[[30,0,[\"backendType\"]]],null]]],[30,1,[\"firstStep\"]]]],[[\"default\"],[[[[1,\"\\n            \"],[8,[39,29],[[24,0,\"link\"]],[[\"@mode\",\"@secret\",\"@queryParams\"],[\"create\",\"\",[28,[37,7],null,[[\"initialKey\",\"itemType\"],[[28,[37,8],[[30,0,[\"filter\"]],[30,0,[\"baseKey\",\"id\"]]],null],[30,0,[\"tab\"]]]]]]],[[\"default\"],[[[[1,\"\\n              \"],[1,[30,1,[\"create\"]]],[1,\"\\n            \"]],[]]]]],[1,\"\\n          \"]],[]]]]],[1,\"\\n\"]],[]],[[[1,\"          \"],[8,[39,27],null,[[\"@title\",\"@message\"],[[29,[\"No \",[28,[37,22],[[30,1,[\"item\"]]],null],\" in this backend\"]],[29,[[28,[37,22],[[28,[37,28],[[30,1,[\"item\"]]],null]],null],\"\\n            in this backend will be listed here.\\n            \",[28,[37,8],[[30,1,[\"message\"]],[28,[37,21],[\"Add a \",[30,1,[\"item\"]],\" to get started.\"],null]],null]]]]],[[\"default\"],[[[[1,\"\\n            \"],[8,[39,29],[[24,0,\"link\"]],[[\"@mode\",\"@secret\",\"@queryParams\"],[\"create\",\"\",[28,[37,7],null,[[\"initialKey\",\"itemType\"],[[28,[37,8],[[30,0,[\"filter\"]],[30,0,[\"baseKey\",\"id\"]]],null],[30,0,[\"tab\"]]]]]]],[[\"default\"],[[[[1,\"\\n              \"],[1,[30,1,[\"create\"]]],[1,\"\\n            \"]],[]]]]],[1,\"\\n          \"]],[]]]]],[1,\"\\n\"]],[]]]],[]],[[[41,[30,0,[\"filterIsFolder\"]],[[[1,\"          \"],[8,[39,27],null,[[\"@title\"],[[52,[28,[37,1],[[30,0,[\"filter\"]],[30,0,[\"baseKey\",\"id\"]]],null],[28,[37,21],[\"No \",[28,[37,22],[[30,1,[\"item\"]]],null],\" under &quot;\",[30,0,[\"filter\"]],\"&quot;\"],null],[28,[37,21],[\"No folders matching &quot;\",[30,0,[\"filter\"]],\"&quot;\"],null]]]],null],[1,\"\\n\"]],[]],null]],[]]]],[]]]],[1]]]],[]]]],[\"options\",\"item\",\"Component\",\"@modelType\"],false,[\"secret-list-header\",\"eq\",\"if\",\"and\",\"toolbar\",\"toolbar-actions\",\"toolbar-secret-link\",\"hash\",\"or\",\"get-credentials-card\",\"let\",\"options-for-backend\",\"not\",\"toolbar-filters\",\"navigate-input\",\"action\",\"get\",\"unless\",\"each\",\"-track-array\",\"component\",\"concat\",\"pluralize\",\"gt\",\"list-pagination\",\"compact\",\"array\",\"empty-state\",\"capitalize\",\"secret-link\"]]",
    "moduleName": "vault/templates/vault/cluster/secrets/backend/list.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/secrets/backend/metadata", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.top>
      <KeyValueHeader
        @baseKey={{hash id=this.id}}
        @path="vault.cluster.secrets.backend.list"
        @mode="show"
        @showCurrent={{true}}
        @root={{this.backendCrumb}}
      />
    </p.top>
    <p.levelLeft>
      <h1 class="title is-3">
        {{this.id}}
      </h1>
    </p.levelLeft>
  </PageHeader>
  {{! Tabs }}
  <div class="tabs-container box is-bottomless is-marginless is-fullwidth is-paddingless">
    <nav class="tabs">
      <ul>
        <LinkTo @route="vault.cluster.secrets.backend.show" @model={{this.id}} data-test-secret-tab>
          Secret
        </LinkTo>
        <LinkTo @route="vault.cluster.secrets.backend.metadata" @model={{this.id}}>
          Metadata
        </LinkTo>
      </ul>
    </nav>
  </div>
  
  <Toolbar>
    {{! You must have update on metadata, create is not enough. }}
    {{#if this.model.canUpdateMetadata}}
      <ToolbarActions>
        <ToolbarLink @route="vault.cluster.secrets.backend.edit-metadata" @model={{this.id}}>
          Edit metadata
        </ToolbarLink>
      </ToolbarActions>
    {{/if}}
  </Toolbar>
  
  <div class="form-section">
    <label class="title is-5 has-top-padding-m">
      Custom metadata
    </label>
  </div>
  <div class="box is-fullwidth is-sideless is-paddingless is-marginless">
    {{#each-in this.model.customMetadata as |key value|}}
      <InfoTableRow @alwaysRender={{false}} @label={{key}} @value={{value}} />
    {{else if this.noReadAccess}}
      <EmptyState
        @title="You do not have access to read secret metadata"
        @bottomBorder={{true}}
        @message="In order to edit secret metadata access, the UI requires read permissions; otherwise, data may be deleted. Edits can still be made via the API and CLI."
      />
    {{else}}
      <EmptyState
        @title="No custom metadata"
        @bottomBorder={{true}}
        @message="This data is version-agnostic and is usually used to describe the secret being stored."
      >
        {{#if this.model.canUpdateMetadata}}
          <LinkTo @route="vault.cluster.secrets.backend.edit-metadata" @model={{this.model.id}} data-test-add-custom-metadata>
            Add metadata
          </LinkTo>
        {{/if}}
      </EmptyState>
    {{/each-in}}
  </div>
  {{#unless this.noReadAccess}}
    <div class="form-section">
      <label class="title is-5 has-top-padding-m">
        Secret Metadata
      </label>
    </div>
    <div class="box is-fullwidth is-sideless is-paddingless is-marginless">
      <InfoTableRow @alwaysRender={{true}} @label="Maximum versions" @value={{this.model.maxVersions}} />
      <InfoTableRow @alwaysRender={{true}} @label="Check-and-Set required" @value={{this.model.casRequired}} />
      <InfoTableRow
        @alwaysRender={{true}}
        @label="Delete version after"
        @value={{if (eq this.model.deleteVersionAfter "0s") "Never delete" this.model.deleteVersionAfter}}
      />
    </div>
  {{/unless}}
  */
  {
    "id": "lNNZuFsH",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"top\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,1],null,[[\"@baseKey\",\"@path\",\"@mode\",\"@showCurrent\",\"@root\"],[[28,[37,2],null,[[\"id\"],[[30,0,[\"id\"]]]]],\"vault.cluster.secrets.backend.list\",\"show\",true,[30,0,[\"backendCrumb\"]]]],null],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n      \"],[1,[30,0,[\"id\"]]],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\"],[10,0],[14,0,\"tabs-container box is-bottomless is-marginless is-fullwidth is-paddingless\"],[12],[1,\"\\n  \"],[10,\"nav\"],[14,0,\"tabs\"],[12],[1,\"\\n    \"],[10,\"ul\"],[12],[1,\"\\n      \"],[8,[39,3],[[24,\"data-test-secret-tab\",\"\"]],[[\"@route\",\"@model\"],[\"vault.cluster.secrets.backend.show\",[30,0,[\"id\"]]]],[[\"default\"],[[[[1,\"\\n        Secret\\n      \"]],[]]]]],[1,\"\\n      \"],[8,[39,3],null,[[\"@route\",\"@model\"],[\"vault.cluster.secrets.backend.metadata\",[30,0,[\"id\"]]]],[[\"default\"],[[[[1,\"\\n        Metadata\\n      \"]],[]]]]],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"],[13],[1,\"\\n\\n\"],[8,[39,4],null,null,[[\"default\"],[[[[1,\"\\n\"],[41,[30,0,[\"model\",\"canUpdateMetadata\"]],[[[1,\"    \"],[8,[39,6],null,null,[[\"default\"],[[[[1,\"\\n      \"],[8,[39,7],null,[[\"@route\",\"@model\"],[\"vault.cluster.secrets.backend.edit-metadata\",[30,0,[\"id\"]]]],[[\"default\"],[[[[1,\"\\n        Edit metadata\\n      \"]],[]]]]],[1,\"\\n    \"]],[]]]]],[1,\"\\n\"]],[]],null]],[]]]]],[1,\"\\n\\n\"],[10,0],[14,0,\"form-section\"],[12],[1,\"\\n  \"],[10,\"label\"],[14,0,\"title is-5 has-top-padding-m\"],[12],[1,\"\\n    Custom metadata\\n  \"],[13],[1,\"\\n\"],[13],[1,\"\\n\"],[10,0],[14,0,\"box is-fullwidth is-sideless is-paddingless is-marginless\"],[12],[1,\"\\n\"],[42,[28,[37,9],[[30,0,[\"model\",\"customMetadata\"]]],null],null,[[[1,\"    \"],[8,[39,10],null,[[\"@alwaysRender\",\"@label\",\"@value\"],[false,[30,3],[30,2]]],null],[1,\"\\n\"]],[2,3]],[[[41,[30,0,[\"noReadAccess\"]],[[[1,\"    \"],[8,[39,11],null,[[\"@title\",\"@bottomBorder\",\"@message\"],[\"You do not have access to read secret metadata\",true,\"In order to edit secret metadata access, the UI requires read permissions; otherwise, data may be deleted. Edits can still be made via the API and CLI.\"]],null],[1,\"\\n\"]],[]],[[[1,\"    \"],[8,[39,11],null,[[\"@title\",\"@bottomBorder\",\"@message\"],[\"No custom metadata\",true,\"This data is version-agnostic and is usually used to describe the secret being stored.\"]],[[\"default\"],[[[[1,\"\\n\"],[41,[30,0,[\"model\",\"canUpdateMetadata\"]],[[[1,\"        \"],[8,[39,3],[[24,\"data-test-add-custom-metadata\",\"\"]],[[\"@route\",\"@model\"],[\"vault.cluster.secrets.backend.edit-metadata\",[30,0,[\"model\",\"id\"]]]],[[\"default\"],[[[[1,\"\\n          Add metadata\\n        \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"    \"]],[]]]]],[1,\"\\n  \"]],[]]]],[]]],[13],[1,\"\\n\"],[41,[51,[30,0,[\"noReadAccess\"]]],[[[1,\"  \"],[10,0],[14,0,\"form-section\"],[12],[1,\"\\n    \"],[10,\"label\"],[14,0,\"title is-5 has-top-padding-m\"],[12],[1,\"\\n      Secret Metadata\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n  \"],[10,0],[14,0,\"box is-fullwidth is-sideless is-paddingless is-marginless\"],[12],[1,\"\\n    \"],[8,[39,10],null,[[\"@alwaysRender\",\"@label\",\"@value\"],[true,\"Maximum versions\",[30,0,[\"model\",\"maxVersions\"]]]],null],[1,\"\\n    \"],[8,[39,10],null,[[\"@alwaysRender\",\"@label\",\"@value\"],[true,\"Check-and-Set required\",[30,0,[\"model\",\"casRequired\"]]]],null],[1,\"\\n    \"],[8,[39,10],null,[[\"@alwaysRender\",\"@label\",\"@value\"],[true,\"Delete version after\",[52,[28,[37,13],[[30,0,[\"model\",\"deleteVersionAfter\"]],\"0s\"],null],\"Never delete\",[30,0,[\"model\",\"deleteVersionAfter\"]]]]],null],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]],null]],[\"p\",\"value\",\"key\"],false,[\"page-header\",\"key-value-header\",\"hash\",\"link-to\",\"toolbar\",\"if\",\"toolbar-actions\",\"toolbar-link\",\"each\",\"-each-in\",\"info-table-row\",\"empty-state\",\"unless\",\"eq\"]]",
    "moduleName": "vault/templates/vault/cluster/secrets/backend/metadata.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/secrets/backend/overview", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <SecretListHeader
    @isCertTab={{eq this.tab "cert"}}
    @model={{this.model}}
    @baseKey={{this.baseKey}}
    @backendCrumb={{this.backendCrumb}}
    @filter={{this.filter}}
  />
  
  {{#if this.showEmptyState}}
    <div class="box is-fullwidth is-shadowless is-sideless is-paddingless is-marginless">
      <Toolbar />
      <EmptyState @title="Connect a database" @message={{this.emptyStateMessage}}>
        {{#if (or this.model.connectionCapabilities.canCreate this.model.connectionCapabilities.canUpdate)}}
          <SecretLink
            @mode="create"
            @secret=""
            @queryParams={{hash initialKey=(or this.filter this.baseKey.id) itemType=this.tab}}
            class="link"
            data-test-secret-create="connections"
          >
            Connect a database
          </SecretLink>
        {{/if}}
      </EmptyState>
    </div>
  {{else}}
    <div class="box is-fullwidth is-shadowless has-tall-padding">
      <div class="selectable-card-container {{if (and (eq this.model.connections 403) (eq this.model.roles 403)) 'one-card'}}">
        {{#if this.model.connectionCapabilities.canList}}
          <SelectableCard
            @cardTitle="Connections"
            @total={{if (eq this.model.connections 404) 0 this.model.connections.length}}
            @subText="The total number of connections to external databases that you have access to."
            @actionText="Configure new"
            @actionTo="vault.cluster.secrets.backend.create-root"
            @queryParam={{"connection"}}
            @type="role"
          />
        {{/if}}
        {{#if (or this.model.roleCapabilities.canList this.model.staticRoleCapabilities.canList)}}
          <SelectableCard
            @cardTitle="Roles"
            @total={{if (eq this.model.roles 404) 0 this.model.roles.length}}
            {{! TODO: Messaging needs massaging }}
            @subText="The total number of roles that have been set up that you can list."
            @actionText="Create new"
            @actionTo="vault.cluster.secrets.backend.create-root"
            @queryParam={{"role"}}
          />
        {{/if}}
        <GetCredentialsCard
          @title="Get Credentials"
          @searchLabel="Role to use"
          @backend={{this.model.backend}}
          @models={{array "database/role"}}
          @type="role"
        />
      </div>
    </div>
  {{/if}}
  */
  {
    "id": "xFiZC2Gn",
    "block": "[[[8,[39,0],null,[[\"@isCertTab\",\"@model\",\"@baseKey\",\"@backendCrumb\",\"@filter\"],[[28,[37,1],[[30,0,[\"tab\"]],\"cert\"],null],[30,0,[\"model\"]],[30,0,[\"baseKey\"]],[30,0,[\"backendCrumb\"]],[30,0,[\"filter\"]]]],null],[1,\"\\n\\n\"],[41,[30,0,[\"showEmptyState\"]],[[[1,\"  \"],[10,0],[14,0,\"box is-fullwidth is-shadowless is-sideless is-paddingless is-marginless\"],[12],[1,\"\\n    \"],[8,[39,3],null,null,null],[1,\"\\n    \"],[8,[39,4],null,[[\"@title\",\"@message\"],[\"Connect a database\",[30,0,[\"emptyStateMessage\"]]]],[[\"default\"],[[[[1,\"\\n\"],[41,[28,[37,5],[[30,0,[\"model\",\"connectionCapabilities\",\"canCreate\"]],[30,0,[\"model\",\"connectionCapabilities\",\"canUpdate\"]]],null],[[[1,\"        \"],[8,[39,6],[[24,0,\"link\"],[24,\"data-test-secret-create\",\"connections\"]],[[\"@mode\",\"@secret\",\"@queryParams\"],[\"create\",\"\",[28,[37,7],null,[[\"initialKey\",\"itemType\"],[[28,[37,5],[[30,0,[\"filter\"]],[30,0,[\"baseKey\",\"id\"]]],null],[30,0,[\"tab\"]]]]]]],[[\"default\"],[[[[1,\"\\n          Connect a database\\n        \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"    \"]],[]]]]],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]],[[[1,\"  \"],[10,0],[14,0,\"box is-fullwidth is-shadowless has-tall-padding\"],[12],[1,\"\\n    \"],[10,0],[15,0,[29,[\"selectable-card-container \",[52,[28,[37,8],[[28,[37,1],[[30,0,[\"model\",\"connections\"]],403],null],[28,[37,1],[[30,0,[\"model\",\"roles\"]],403],null]],null],\"one-card\"]]]],[12],[1,\"\\n\"],[41,[30,0,[\"model\",\"connectionCapabilities\",\"canList\"]],[[[1,\"        \"],[8,[39,9],null,[[\"@cardTitle\",\"@total\",\"@subText\",\"@actionText\",\"@actionTo\",\"@queryParam\",\"@type\"],[\"Connections\",[52,[28,[37,1],[[30,0,[\"model\",\"connections\"]],404],null],0,[30,0,[\"model\",\"connections\",\"length\"]]],\"The total number of connections to external databases that you have access to.\",\"Configure new\",\"vault.cluster.secrets.backend.create-root\",\"connection\",\"role\"]],null],[1,\"\\n\"]],[]],null],[41,[28,[37,5],[[30,0,[\"model\",\"roleCapabilities\",\"canList\"]],[30,0,[\"model\",\"staticRoleCapabilities\",\"canList\"]]],null],[[[1,\"        \"],[8,[39,9],null,[[\"@cardTitle\",\"@total\",\"@subText\",\"@actionText\",\"@actionTo\",\"@queryParam\"],[\"Roles\",[52,[28,[37,1],[[30,0,[\"model\",\"roles\"]],404],null],0,[30,0,[\"model\",\"roles\",\"length\"]]],\"The total number of roles that have been set up that you can list.\",\"Create new\",\"vault.cluster.secrets.backend.create-root\",\"role\"]],null],[1,\"\\n\"]],[]],null],[1,\"      \"],[8,[39,10],null,[[\"@title\",\"@searchLabel\",\"@backend\",\"@models\",\"@type\"],[\"Get Credentials\",\"Role to use\",[30,0,[\"model\",\"backend\"]],[28,[37,11],[\"database/role\"],null],\"role\"]],null],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]]]],[],false,[\"secret-list-header\",\"eq\",\"if\",\"toolbar\",\"empty-state\",\"or\",\"secret-link\",\"hash\",\"and\",\"selectable-card\",\"get-credentials-card\",\"array\"]]",
    "moduleName": "vault/templates/vault/cluster/secrets/backend/overview.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/secrets/backend/secret-edit-layout", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{component
    (get (options-for-backend this.backendType this.model.idPrefix) "editComponent")
    key=this.model
    tab=this.tab
    model=this.model
    mode=this.mode
    root=this.backendCrumb
    capabilities=this.capabilities
    onRefresh=(action "refresh")
    onToggleAdvancedEdit=(action "toggleAdvancedEdit")
    initialKey=this.initialKey
    baseKey=this.baseKey
    preferAdvancedEdit=this.preferAdvancedEdit
  }}
  */
  {
    "id": "tLvSkoPm",
    "block": "[[[46,[28,[37,1],[[28,[37,2],[[30,0,[\"backendType\"]],[30,0,[\"model\",\"idPrefix\"]]],null],\"editComponent\"],null],null,[[\"key\",\"tab\",\"model\",\"mode\",\"root\",\"capabilities\",\"onRefresh\",\"onToggleAdvancedEdit\",\"initialKey\",\"baseKey\",\"preferAdvancedEdit\"],[[30,0,[\"model\"]],[30,0,[\"tab\"]],[30,0,[\"model\"]],[30,0,[\"mode\"]],[30,0,[\"backendCrumb\"]],[30,0,[\"capabilities\"]],[28,[37,3],[[30,0],\"refresh\"],null],[28,[37,3],[[30,0],\"toggleAdvancedEdit\"],null],[30,0,[\"initialKey\"]],[30,0,[\"baseKey\"]],[30,0,[\"preferAdvancedEdit\"]]]],null]],[],false,[\"component\",\"get\",\"options-for-backend\",\"action\"]]",
    "moduleName": "vault/templates/vault/cluster/secrets/backend/secret-edit-layout.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/secrets/backend/sign", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.top>
      <nav class="breadcrumb">
        <ul>
          <li>
            <span class="sep">&#x0002f;</span>
            <LinkTo @route="vault.cluster.secrets.backend" @model={{this.backend.id}}>
              ssh
            </LinkTo>
          </li>
          <li class="is-active">
            <span class="sep">&#x0002f;</span>
            <LinkTo @route="vault.cluster.secrets.backend" @model={{this.backend.id}}>
              sign
            </LinkTo>
          </li>
          <li>
            <span class="sep">&#x0002f;</span>
            <LinkTo @route="vault.cluster.secrets.backend.show" @model={{this.model.role.name}}>
              {{this.model.role.name}}
            </LinkTo>
          </li>
        </ul>
      </nav>
    </p.top>
    <p.levelLeft>
      <h1 class="title is-3">
        Sign SSH key
      </h1>
    </p.levelLeft>
  </PageHeader>
  
  {{#if this.model.signedKey}}
    <div class="box is-fullwidth is-sideless is-paddingless is-marginless">
      <AlertBanner
        @type="warning"
        @message="You will not be able to access this information later, so please copy the information below."
        data-test-warning
      />
      {{#each this.model.attrs as |attr|}}
        {{#if (eq attr.type "object")}}
          <InfoTableRow
            @label={{capitalize (or attr.options.label (humanize (dasherize attr.name)))}}
            @value={{stringify (get this.model attr.name)}}
          />
        {{else}}
          <InfoTableRow
            @label={{capitalize (or attr.options.label (humanize (dasherize attr.name)))}}
            @value={{get this.model attr.name}}
          />
        {{/if}}
      {{/each}}
    </div>
    <div class="field is-grouped box is-fullwidth is-bottomless">
      <div class="control">
        <CopyButton
          @clipboardText={{this.model.signedKey}}
          @class="button is-primary"
          @buttonType="button"
          @success={{action (set-flash-message "Key copied!")}}
        >
          Copy key
        </CopyButton>
      </div>
      {{#if this.model.leaseId}}
        <div class="control">
          <CopyButton
            @clipboardText={{this.model.leaseId}}
            @class="button"
            @buttonType="button"
            @success={{action (set-flash-message "Lease ID copied!")}}
          >
            Copy lease ID
          </CopyButton>
        </div>
      {{/if}}
      <div class="control">
        <button type="button" {{action "newModel"}} class="button" data-test-secret-generate-back={{true}}>
          Back
        </button>
      </div>
    </div>
  {{else}}
    <form {{action "sign" on="submit"}} data-test-secret-generate-form="true">
      <div class="box is-sideless is-fullwidth is-marginless">
        <MessageError @model={{this.model}} />
        <NamespaceReminder @mode="sign" @noun="SSH key" />
        {{#if this.model.attrs}}
          {{#each (take 1 this.model.attrs) as |attr|}}
            <FormFieldFromModel
              @attr={{attr}}
              @model={{this.model}}
              @updateTtl={{action "updateTtl" attr.name}}
              @emptyData={{this.emptyData}}
              @codemirrorUpdated={{action "codemirrorUpdated" attr.name}}
            />
          {{/each}}
          <ToggleButton @isOpen={{this.showOptions}} @onClick={{fn (mut this.showOptions)}} data-test-toggle-button />
          {{#if this.showOptions}}
            <div class="box is-marginless">
              {{#each (drop 1 this.model.attrs) as |attr|}}
                <FormFieldFromModel
                  @attr={{attr}}
                  @model={{this.model}}
                  @updateTtl={{action "updateTtl" attr.name}}
                  @emptyData={{this.emptyData}}
                  @codemirrorUpdated={{action "codemirrorUpdated" attr.name}}
                />
              {{/each}}
            </div>
          {{/if}}
        {{/if}}
      </div>
      <div class="field is-grouped box is-fullwidth is-bottomless">
        <div class="control">
          <button
            type="submit"
            disabled={{this.loading}}
            class="button is-primary {{if this.loading 'is-loading'}}"
            data-test-secret-generate={{true}}
          >
            Sign
          </button>
        </div>
        <div class="control">
          <LinkTo
            @route="vault.cluster.secrets.backend.list-root"
            @model={{this.backend.id}}
            class="button"
            data-test-secret-generate-cancel={{true}}
          >
            Cancel
          </LinkTo>
        </div>
      </div>
    </form>
  {{/if}}
  */
  {
    "id": "d/kVt119",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"top\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"nav\"],[14,0,\"breadcrumb\"],[12],[1,\"\\n      \"],[10,\"ul\"],[12],[1,\"\\n        \"],[10,\"li\"],[12],[1,\"\\n          \"],[10,1],[14,0,\"sep\"],[12],[1,\"/\"],[13],[1,\"\\n          \"],[8,[39,1],null,[[\"@route\",\"@model\"],[\"vault.cluster.secrets.backend\",[30,0,[\"backend\",\"id\"]]]],[[\"default\"],[[[[1,\"\\n            ssh\\n          \"]],[]]]]],[1,\"\\n        \"],[13],[1,\"\\n        \"],[10,\"li\"],[14,0,\"is-active\"],[12],[1,\"\\n          \"],[10,1],[14,0,\"sep\"],[12],[1,\"/\"],[13],[1,\"\\n          \"],[8,[39,1],null,[[\"@route\",\"@model\"],[\"vault.cluster.secrets.backend\",[30,0,[\"backend\",\"id\"]]]],[[\"default\"],[[[[1,\"\\n            sign\\n          \"]],[]]]]],[1,\"\\n        \"],[13],[1,\"\\n        \"],[10,\"li\"],[12],[1,\"\\n          \"],[10,1],[14,0,\"sep\"],[12],[1,\"/\"],[13],[1,\"\\n          \"],[8,[39,1],null,[[\"@route\",\"@model\"],[\"vault.cluster.secrets.backend.show\",[30,0,[\"model\",\"role\",\"name\"]]]],[[\"default\"],[[[[1,\"\\n            \"],[1,[30,0,[\"model\",\"role\",\"name\"]]],[1,\"\\n          \"]],[]]]]],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n      Sign SSH key\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\\n\"],[41,[30,0,[\"model\",\"signedKey\"]],[[[1,\"  \"],[10,0],[14,0,\"box is-fullwidth is-sideless is-paddingless is-marginless\"],[12],[1,\"\\n    \"],[8,[39,3],[[24,\"data-test-warning\",\"\"]],[[\"@type\",\"@message\"],[\"warning\",\"You will not be able to access this information later, so please copy the information below.\"]],null],[1,\"\\n\"],[42,[28,[37,5],[[28,[37,5],[[30,0,[\"model\",\"attrs\"]]],null]],null],null,[[[41,[28,[37,6],[[30,2,[\"type\"]],\"object\"],null],[[[1,\"        \"],[8,[39,7],null,[[\"@label\",\"@value\"],[[28,[37,8],[[28,[37,9],[[30,2,[\"options\",\"label\"]],[28,[37,10],[[28,[37,11],[[30,2,[\"name\"]]],null]],null]],null]],null],[28,[37,12],[[28,[37,13],[[30,0,[\"model\"]],[30,2,[\"name\"]]],null]],null]]],null],[1,\"\\n\"]],[]],[[[1,\"        \"],[8,[39,7],null,[[\"@label\",\"@value\"],[[28,[37,8],[[28,[37,9],[[30,2,[\"options\",\"label\"]],[28,[37,10],[[28,[37,11],[[30,2,[\"name\"]]],null]],null]],null]],null],[28,[37,13],[[30,0,[\"model\"]],[30,2,[\"name\"]]],null]]],null],[1,\"\\n\"]],[]]]],[2]],null],[1,\"  \"],[13],[1,\"\\n  \"],[10,0],[14,0,\"field is-grouped box is-fullwidth is-bottomless\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n      \"],[8,[39,14],null,[[\"@clipboardText\",\"@class\",\"@buttonType\",\"@success\"],[[30,0,[\"model\",\"signedKey\"]],\"button is-primary\",\"button\",[28,[37,15],[[30,0],[28,[37,16],[\"Key copied!\"],null]],null]]],[[\"default\"],[[[[1,\"\\n        Copy key\\n      \"]],[]]]]],[1,\"\\n    \"],[13],[1,\"\\n\"],[41,[30,0,[\"model\",\"leaseId\"]],[[[1,\"      \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n        \"],[8,[39,14],null,[[\"@clipboardText\",\"@class\",\"@buttonType\",\"@success\"],[[30,0,[\"model\",\"leaseId\"]],\"button\",\"button\",[28,[37,15],[[30,0],[28,[37,16],[\"Lease ID copied!\"],null]],null]]],[[\"default\"],[[[[1,\"\\n          Copy lease ID\\n        \"]],[]]]]],[1,\"\\n      \"],[13],[1,\"\\n\"]],[]],null],[1,\"    \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n      \"],[11,\"button\"],[24,0,\"button\"],[16,\"data-test-secret-generate-back\",true],[24,4,\"button\"],[4,[38,15],[[30,0],\"newModel\"],null],[12],[1,\"\\n        Back\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]],[[[1,\"  \"],[11,\"form\"],[24,\"data-test-secret-generate-form\",\"true\"],[4,[38,15],[[30,0],\"sign\"],[[\"on\"],[\"submit\"]]],[12],[1,\"\\n    \"],[10,0],[14,0,\"box is-sideless is-fullwidth is-marginless\"],[12],[1,\"\\n      \"],[8,[39,17],null,[[\"@model\"],[[30,0,[\"model\"]]]],null],[1,\"\\n      \"],[8,[39,18],null,[[\"@mode\",\"@noun\"],[\"sign\",\"SSH key\"]],null],[1,\"\\n\"],[41,[30,0,[\"model\",\"attrs\"]],[[[42,[28,[37,5],[[28,[37,5],[[28,[37,19],[1,[30,0,[\"model\",\"attrs\"]]],null]],null]],null],null,[[[1,\"          \"],[8,[39,20],null,[[\"@attr\",\"@model\",\"@updateTtl\",\"@emptyData\",\"@codemirrorUpdated\"],[[30,3],[30,0,[\"model\"]],[28,[37,15],[[30,0],\"updateTtl\",[30,3,[\"name\"]]],null],[30,0,[\"emptyData\"]],[28,[37,15],[[30,0],\"codemirrorUpdated\",[30,3,[\"name\"]]],null]]],null],[1,\"\\n\"]],[3]],null],[1,\"        \"],[8,[39,21],[[24,\"data-test-toggle-button\",\"\"]],[[\"@isOpen\",\"@onClick\"],[[30,0,[\"showOptions\"]],[28,[37,22],[[28,[37,23],[[30,0,[\"showOptions\"]]],null]],null]]],null],[1,\"\\n\"],[41,[30,0,[\"showOptions\"]],[[[1,\"          \"],[10,0],[14,0,\"box is-marginless\"],[12],[1,\"\\n\"],[42,[28,[37,5],[[28,[37,5],[[28,[37,24],[1,[30,0,[\"model\",\"attrs\"]]],null]],null]],null],null,[[[1,\"              \"],[8,[39,20],null,[[\"@attr\",\"@model\",\"@updateTtl\",\"@emptyData\",\"@codemirrorUpdated\"],[[30,4],[30,0,[\"model\"]],[28,[37,15],[[30,0],\"updateTtl\",[30,4,[\"name\"]]],null],[30,0,[\"emptyData\"]],[28,[37,15],[[30,0],\"codemirrorUpdated\",[30,4,[\"name\"]]],null]]],null],[1,\"\\n\"]],[4]],null],[1,\"          \"],[13],[1,\"\\n\"]],[]],null]],[]],null],[1,\"    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"field is-grouped box is-fullwidth is-bottomless\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n        \"],[10,\"button\"],[15,\"disabled\",[30,0,[\"loading\"]]],[15,0,[29,[\"button is-primary \",[52,[30,0,[\"loading\"]],\"is-loading\"]]]],[15,\"data-test-secret-generate\",true],[14,4,\"submit\"],[12],[1,\"\\n          Sign\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n      \"],[10,0],[14,0,\"control\"],[12],[1,\"\\n        \"],[8,[39,1],[[24,0,\"button\"],[16,\"data-test-secret-generate-cancel\",true]],[[\"@route\",\"@model\"],[\"vault.cluster.secrets.backend.list-root\",[30,0,[\"backend\",\"id\"]]]],[[\"default\"],[[[[1,\"\\n          Cancel\\n        \"]],[]]]]],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]]]],[\"p\",\"attr\",\"attr\",\"attr\"],false,[\"page-header\",\"link-to\",\"if\",\"alert-banner\",\"each\",\"-track-array\",\"eq\",\"info-table-row\",\"capitalize\",\"or\",\"humanize\",\"dasherize\",\"stringify\",\"get\",\"copy-button\",\"action\",\"set-flash-message\",\"message-error\",\"namespace-reminder\",\"take\",\"form-field-from-model\",\"toggle-button\",\"fn\",\"mut\",\"drop\"]]",
    "moduleName": "vault/templates/vault/cluster/secrets/backend/sign.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/secrets/backend/transit-actions-layout", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <div class="columns">
    <div class="column">
      <PageHeader as |p|>
        <p.top>
          <KeyValueHeader
            @baseKey={{this.model}}
            @path="vault.cluster.secrets.backend.list"
            @mode={{this.mode}}
            @root={{this.backendCrumb}}
            @showCurrent={{true}}
          />
        </p.top>
        <p.levelLeft>
          <h1 class="title is-3">
            <SecretLink
              class="is-inline has-text-info"
              @secret={{this.model.id}}
              @mode="show"
              @replace={{true}}
              @queryParams={{hash tab="actions"}}
              data-test-transit-link="actions"
            >
              <Icon @name="arrow-left" />
            </SecretLink>
            Key Actions
          </h1>
        </p.levelLeft>
      </PageHeader>
  
      <div class="tabs-container box is-sideless is-fullwidth is-paddingless is-marginless">
        <nav class="tabs">
          <ul>
            {{#each this.model.supportedActions as |supportedAction|}}
              <li class={{if (eq supportedAction.name this.selectedAction) "is-active"}}>
                <SecretLink
                  @mode="actions"
                  @secret={{this.model.id}}
                  @queryParams={{hash action=supportedAction.name}}
                  data-test-transit-action-link={{supportedAction.name}}
                >
                  {{#if (eq supportedAction.name "export")}}
                    Export Key
                  {{else if (eq supportedAction.name "hmac")}}
                    HMAC
                  {{else}}
                    {{humanize supportedAction.name}}
                  {{/if}}
                </SecretLink>
              </li>
            {{/each}}
          </ul>
        </nav>
      </div>
  
      <TransitKeyActions
        @selectedAction={{this.selectedAction}}
        @backend={{this.backend}}
        @key={{this.model}}
        @capabilities={{this.capabilities}}
        @onRefresh={{action "refresh"}}
      />
    </div>
  </div>
  */
  {
    "id": "B+qr9vVI",
    "block": "[[[10,0],[14,0,\"columns\"],[12],[1,\"\\n  \"],[10,0],[14,0,\"column\"],[12],[1,\"\\n    \"],[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n      \"],[8,[30,1,[\"top\"]],null,null,[[\"default\"],[[[[1,\"\\n        \"],[8,[39,1],null,[[\"@baseKey\",\"@path\",\"@mode\",\"@root\",\"@showCurrent\"],[[30,0,[\"model\"]],\"vault.cluster.secrets.backend.list\",[30,0,[\"mode\"]],[30,0,[\"backendCrumb\"]],true]],null],[1,\"\\n      \"]],[]]]]],[1,\"\\n      \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n        \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n          \"],[8,[39,2],[[24,0,\"is-inline has-text-info\"],[24,\"data-test-transit-link\",\"actions\"]],[[\"@secret\",\"@mode\",\"@replace\",\"@queryParams\"],[[30,0,[\"model\",\"id\"]],\"show\",true,[28,[37,3],null,[[\"tab\"],[\"actions\"]]]]],[[\"default\"],[[[[1,\"\\n            \"],[8,[39,4],null,[[\"@name\"],[\"arrow-left\"]],null],[1,\"\\n          \"]],[]]]]],[1,\"\\n          Key Actions\\n        \"],[13],[1,\"\\n      \"]],[]]]]],[1,\"\\n    \"]],[1]]]]],[1,\"\\n\\n    \"],[10,0],[14,0,\"tabs-container box is-sideless is-fullwidth is-paddingless is-marginless\"],[12],[1,\"\\n      \"],[10,\"nav\"],[14,0,\"tabs\"],[12],[1,\"\\n        \"],[10,\"ul\"],[12],[1,\"\\n\"],[42,[28,[37,6],[[28,[37,6],[[30,0,[\"model\",\"supportedActions\"]]],null]],null],null,[[[1,\"            \"],[10,\"li\"],[15,0,[52,[28,[37,8],[[30,2,[\"name\"]],[30,0,[\"selectedAction\"]]],null],\"is-active\"]],[12],[1,\"\\n              \"],[8,[39,2],[[16,\"data-test-transit-action-link\",[30,2,[\"name\"]]]],[[\"@mode\",\"@secret\",\"@queryParams\"],[\"actions\",[30,0,[\"model\",\"id\"]],[28,[37,3],null,[[\"action\"],[[30,2,[\"name\"]]]]]]],[[\"default\"],[[[[1,\"\\n\"],[41,[28,[37,8],[[30,2,[\"name\"]],\"export\"],null],[[[1,\"                  Export Key\\n\"]],[]],[[[41,[28,[37,8],[[30,2,[\"name\"]],\"hmac\"],null],[[[1,\"                  HMAC\\n\"]],[]],[[[1,\"                  \"],[1,[28,[35,9],[[30,2,[\"name\"]]],null]],[1,\"\\n                \"]],[]]]],[]]],[1,\"              \"]],[]]]]],[1,\"\\n            \"],[13],[1,\"\\n\"]],[2]],null],[1,\"        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n\\n    \"],[8,[39,10],null,[[\"@selectedAction\",\"@backend\",\"@key\",\"@capabilities\",\"@onRefresh\"],[[30,0,[\"selectedAction\"]],[30,0,[\"backend\"]],[30,0,[\"model\"]],[30,0,[\"capabilities\"]],[28,[37,11],[[30,0],\"refresh\"],null]]],null],[1,\"\\n  \"],[13],[1,\"\\n\"],[13]],[\"p\",\"supportedAction\"],false,[\"page-header\",\"key-value-header\",\"secret-link\",\"hash\",\"icon\",\"each\",\"-track-array\",\"if\",\"eq\",\"humanize\",\"transit-key-actions\",\"action\"]]",
    "moduleName": "vault/templates/vault/cluster/secrets/backend/transit-actions-layout.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/secrets/backend/versions", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.top>
      <KeyValueHeader
        @baseKey={{hash id=this.model.id}}
        @path="vault.cluster.secrets.backend.list"
        @mode="show"
        @root={{hash
          label=this.model.engineId
          text=this.model.engineId
          path="vault.cluster.secrets.backend.list-root"
          model=this.model.engineId
        }}
        @showCurrent={{true}}
      />
    </p.top>
    <p.levelLeft>
      <h1 class="title is-3">
        Version History
      </h1>
    </p.levelLeft>
  </PageHeader>
  <ListView @items={{reverse this.model.versions}} @itemNoun="version" as |list|>
    <ListItem
      @hasMenu={{false}}
      @linkParams={{array "vault.cluster.secrets.backend.show" this.model.id}}
      @queryParams={{hash version=list.item.version}}
      as |Item|
    >
      <Item.content>
        <div class="columns is-flex-1">
          <div>
            <Icon @name="history" class="has-text-grey" />
            Version
            {{list.item.version}}
          </div>
          {{#if (eq list.item.version this.model.currentVersion)}}
            <div class="column is-1">
              <span class="has-text-success is-size-9">
                <Icon @name="check-circle-fill" />Current
              </span>
            </div>
          {{/if}}
          {{#if list.item.deleted}}
            <div class="column is-1">
              <span class="has-text-grey is-size-8">
                <Icon @name="x-square-fill" />Deleted
              </span>
            </div>
          {{/if}}
          {{#if list.item.destroyed}}
            <div class="column is-1">
              <span class="has-text-danger is-size-8">
                <Icon @name="x-square-fill" />Destroyed
              </span>
            </div>
          {{/if}}
          <div class="center-inside-row">
            <ToolTip @verticalPosition="above" @horizontalPosition="center" as |T|>
              <T.Trigger data-test-tooltip-trigger tabindex="-1">
                Created
                {{date-format list.item.createdTime "MMM dd, yyyy hh:mm a"}}
              </T.Trigger>
              <T.Content @defaultClass="tool-tip smaller-font">
                <div class="box" data-test-hover-copy-tooltip-text>
                  {{list.item.createdTime}}
                </div>
              </T.Content>
            </ToolTip>
          </div>
        </div>
      </Item.content>
      <Item.menu>
        <BasicDropdown @class="popup-menu" @horizontalPosition="auto-right" @verticalPosition="below" as |D|>
          <D.Trigger
            data-test-popup-menu-trigger="true"
            class={{concat "toolbar-link" (if D.isOpen " is-active")}}
            @htmlTag="button"
          >
            <Icon @name="more-horizontal" aria-label="More options" class="has-text-black auto-width" />
          </D.Trigger>
          <D.Content @defaultClass="popup-menu-content">
            <nav class="box menu">
              <ul class="menu-list">
                <li class="action">
                  <SecretLink
                    data-test-version={{true}}
                    @mode="show"
                    @secret={{this.model.id}}
                    class="has-text-black has-text-weight-semibold"
                    @queryParams={{hash version=list.item.version}}
                  >
                    View version
                    {{list.item.version}}
                  </SecretLink>
                </li>
                <li class="action">
                  <SecretLink
                    @mode="edit"
                    @secret={{this.model.id}}
                    class="has-text-black has-text-weight-semibold"
                    @queryParams={{hash version=list.item.version}}
                  >
                    Create new version from
                    {{list.item.version}}
                  </SecretLink>
                </li>
              </ul>
            </nav>
          </D.Content>
        </BasicDropdown>
      </Item.menu>
    </ListItem>
  </ListView>
  */
  {
    "id": "zeBloQ13",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"top\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,1],null,[[\"@baseKey\",\"@path\",\"@mode\",\"@root\",\"@showCurrent\"],[[28,[37,2],null,[[\"id\"],[[30,0,[\"model\",\"id\"]]]]],\"vault.cluster.secrets.backend.list\",\"show\",[28,[37,2],null,[[\"label\",\"text\",\"path\",\"model\"],[[30,0,[\"model\",\"engineId\"]],[30,0,[\"model\",\"engineId\"]],\"vault.cluster.secrets.backend.list-root\",[30,0,[\"model\",\"engineId\"]]]]],true]],null],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n      Version History\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\"],[8,[39,3],null,[[\"@items\",\"@itemNoun\"],[[28,[37,4],[[30,0,[\"model\",\"versions\"]]],null],\"version\"]],[[\"default\"],[[[[1,\"\\n  \"],[8,[39,5],null,[[\"@hasMenu\",\"@linkParams\",\"@queryParams\"],[false,[28,[37,6],[\"vault.cluster.secrets.backend.show\",[30,0,[\"model\",\"id\"]]],null],[28,[37,2],null,[[\"version\"],[[30,2,[\"item\",\"version\"]]]]]]],[[\"default\"],[[[[1,\"\\n    \"],[8,[30,3,[\"content\"]],null,null,[[\"default\"],[[[[1,\"\\n      \"],[10,0],[14,0,\"columns is-flex-1\"],[12],[1,\"\\n        \"],[10,0],[12],[1,\"\\n          \"],[8,[39,7],[[24,0,\"has-text-grey\"]],[[\"@name\"],[\"history\"]],null],[1,\"\\n          Version\\n          \"],[1,[30,2,[\"item\",\"version\"]]],[1,\"\\n        \"],[13],[1,\"\\n\"],[41,[28,[37,9],[[30,2,[\"item\",\"version\"]],[30,0,[\"model\",\"currentVersion\"]]],null],[[[1,\"          \"],[10,0],[14,0,\"column is-1\"],[12],[1,\"\\n            \"],[10,1],[14,0,\"has-text-success is-size-9\"],[12],[1,\"\\n              \"],[8,[39,7],null,[[\"@name\"],[\"check-circle-fill\"]],null],[1,\"Current\\n            \"],[13],[1,\"\\n          \"],[13],[1,\"\\n\"]],[]],null],[41,[30,2,[\"item\",\"deleted\"]],[[[1,\"          \"],[10,0],[14,0,\"column is-1\"],[12],[1,\"\\n            \"],[10,1],[14,0,\"has-text-grey is-size-8\"],[12],[1,\"\\n              \"],[8,[39,7],null,[[\"@name\"],[\"x-square-fill\"]],null],[1,\"Deleted\\n            \"],[13],[1,\"\\n          \"],[13],[1,\"\\n\"]],[]],null],[41,[30,2,[\"item\",\"destroyed\"]],[[[1,\"          \"],[10,0],[14,0,\"column is-1\"],[12],[1,\"\\n            \"],[10,1],[14,0,\"has-text-danger is-size-8\"],[12],[1,\"\\n              \"],[8,[39,7],null,[[\"@name\"],[\"x-square-fill\"]],null],[1,\"Destroyed\\n            \"],[13],[1,\"\\n          \"],[13],[1,\"\\n\"]],[]],null],[1,\"        \"],[10,0],[14,0,\"center-inside-row\"],[12],[1,\"\\n          \"],[8,[39,10],null,[[\"@verticalPosition\",\"@horizontalPosition\"],[\"above\",\"center\"]],[[\"default\"],[[[[1,\"\\n            \"],[8,[30,4,[\"Trigger\"]],[[24,\"data-test-tooltip-trigger\",\"\"],[24,\"tabindex\",\"-1\"]],null,[[\"default\"],[[[[1,\"\\n              Created\\n              \"],[1,[28,[35,11],[[30,2,[\"item\",\"createdTime\"]],\"MMM dd, yyyy hh:mm a\"],null]],[1,\"\\n            \"]],[]]]]],[1,\"\\n            \"],[8,[30,4,[\"Content\"]],null,[[\"@defaultClass\"],[\"tool-tip smaller-font\"]],[[\"default\"],[[[[1,\"\\n              \"],[10,0],[14,0,\"box\"],[14,\"data-test-hover-copy-tooltip-text\",\"\"],[12],[1,\"\\n                \"],[1,[30,2,[\"item\",\"createdTime\"]]],[1,\"\\n              \"],[13],[1,\"\\n            \"]],[]]]]],[1,\"\\n          \"]],[4]]]]],[1,\"\\n        \"],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"]],[]]]]],[1,\"\\n    \"],[8,[30,3,[\"menu\"]],null,null,[[\"default\"],[[[[1,\"\\n      \"],[8,[39,12],null,[[\"@class\",\"@horizontalPosition\",\"@verticalPosition\"],[\"popup-menu\",\"auto-right\",\"below\"]],[[\"default\"],[[[[1,\"\\n        \"],[8,[30,5,[\"Trigger\"]],[[24,\"data-test-popup-menu-trigger\",\"true\"],[16,0,[28,[37,13],[\"toolbar-link\",[52,[30,5,[\"isOpen\"]],\" is-active\"]],null]]],[[\"@htmlTag\"],[\"button\"]],[[\"default\"],[[[[1,\"\\n          \"],[8,[39,7],[[24,\"aria-label\",\"More options\"],[24,0,\"has-text-black auto-width\"]],[[\"@name\"],[\"more-horizontal\"]],null],[1,\"\\n        \"]],[]]]]],[1,\"\\n        \"],[8,[30,5,[\"Content\"]],null,[[\"@defaultClass\"],[\"popup-menu-content\"]],[[\"default\"],[[[[1,\"\\n          \"],[10,\"nav\"],[14,0,\"box menu\"],[12],[1,\"\\n            \"],[10,\"ul\"],[14,0,\"menu-list\"],[12],[1,\"\\n              \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                \"],[8,[39,14],[[16,\"data-test-version\",true],[24,0,\"has-text-black has-text-weight-semibold\"]],[[\"@mode\",\"@secret\",\"@queryParams\"],[\"show\",[30,0,[\"model\",\"id\"]],[28,[37,2],null,[[\"version\"],[[30,2,[\"item\",\"version\"]]]]]]],[[\"default\"],[[[[1,\"\\n                  View version\\n                  \"],[1,[30,2,[\"item\",\"version\"]]],[1,\"\\n                \"]],[]]]]],[1,\"\\n              \"],[13],[1,\"\\n              \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                \"],[8,[39,14],[[24,0,\"has-text-black has-text-weight-semibold\"]],[[\"@mode\",\"@secret\",\"@queryParams\"],[\"edit\",[30,0,[\"model\",\"id\"]],[28,[37,2],null,[[\"version\"],[[30,2,[\"item\",\"version\"]]]]]]],[[\"default\"],[[[[1,\"\\n                  Create new version from\\n                  \"],[1,[30,2,[\"item\",\"version\"]]],[1,\"\\n                \"]],[]]]]],[1,\"\\n              \"],[13],[1,\"\\n            \"],[13],[1,\"\\n          \"],[13],[1,\"\\n        \"]],[]]]]],[1,\"\\n      \"]],[5]]]]],[1,\"\\n    \"]],[]]]]],[1,\"\\n  \"]],[3]]]]],[1,\"\\n\"]],[2]]]]]],[\"p\",\"list\",\"Item\",\"T\",\"D\"],false,[\"page-header\",\"key-value-header\",\"hash\",\"list-view\",\"reverse\",\"list-item\",\"array\",\"icon\",\"if\",\"eq\",\"tool-tip\",\"date-format\",\"basic-dropdown\",\"concat\",\"secret-link\"]]",
    "moduleName": "vault/templates/vault/cluster/secrets/backend/versions.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/secrets/backends", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.levelLeft>
      <h1 class="title is-3">
        Secrets Engines
      </h1>
    </p.levelLeft>
  </PageHeader>
  
  <Toolbar>
    <ToolbarFilters>
      <SearchSelect
        @id="filter-by-engine-type"
        @options={{this.secretEngineArrayByType}}
        @selectLimit="1"
        @disallowNewItems={{true}}
        @fallbackComponent="input-search"
        @onChange={{this.filterEngineType}}
        @placeholder={{"Filter by engine type"}}
        @displayInherit={{true}}
        @inputValue={{if this.selectedEngineType (array this.selectedEngineType)}}
        @disabled={{if this.selectedEngineName true false}}
        class="is-marginless"
      />
      <SearchSelect
        @id="filter-by-engine-name"
        @options={{this.secretEngineArrayByName}}
        @selectLimit="1"
        @disallowNewItems={{true}}
        @fallbackComponent="input-search"
        @onChange={{this.filterEngineName}}
        @placeholder={{"Filter by engine name"}}
        @displayInherit={{true}}
        @inputValue={{if this.selectedEngineName (array this.selectedEngineName)}}
        class="is-marginless has-left-padding-s"
      />
    </ToolbarFilters>
    <ToolbarActions>
      <ToolbarLink @route="vault.cluster.settings.mount-secret-backend" @type="add" data-test-enable-engine>
        Enable new engine
      </ToolbarLink>
    </ToolbarActions>
  </Toolbar>
  {{#each this.sortedDisplayableBackends as |backend|}}
    <LinkedBlock
      @params={{array backend.backendLink backend.id}}
      class="list-item-row linkable-item is-no-underline"
      data-test-auth-backend-link={{backend.id}}
      @disabled={{if backend.isSupportedBackend false true}}
    >
      <div class="linkable-item-content" data-test-linkable-item-content>
        <div class="has-text-grey">
          {{#if backend.icon}}
            <ToolTip @horizontalPosition="left" as |T|>
              <T.Trigger>
                <Icon @name={{backend.icon}} class="has-text-grey-light" data-test-linkable-item-glyph />
              </T.Trigger>
              <T.Content @defaultClass="tool-tip">
                <div class="box">
                  {{or backend.engineType backend.path}}
                </div>
              </T.Content>
            </ToolTip>
          {{/if}}
          {{#if backend.path}}
            {{#if backend.isSupportedBackend}}
              <LinkTo
                @route={{backend.backendLink}}
                @model={{backend.id}}
                class="has-text-black has-text-weight-semibold"
                data-test-secret-path
              >
                {{backend.path}}
              </LinkTo>
            {{else}}
              <span data-test-secret-path>{{backend.path}}</span>
            {{/if}}
          {{/if}}
        </div>
        {{#if backend.accessor}}
          <code class="has-text-grey is-size-8" data-test-linkable-item-accessor>
            {{backend.accessor}}
          </code>
        {{/if}}
        {{#if backend.description}}
          <ReadMore data-test-linkable-item-description>
            {{backend.description}}
          </ReadMore>
        {{/if}}
        {{yield}}
      </div>
      {{! meatball sandwich menu }}
      <div class="linkable-item-menu" data-test-linkable-item-menu={{backend.path}}>
        <PopupMenu @name="engine-menu">
          <Confirm as |c|>
            <nav class="menu" aria-label="{{if backend.isSupportedBackend 'supported' 'unsupported'}} secrets engine menu">
              <ul class="menu-list">
                <li class="action">
                  <LinkTo @route="vault.cluster.secrets.backend.configuration" @model={{backend.id}} data-test-engine-config>
                    View configuration
                  </LinkTo>
                </li>
                {{#if (not-eq backend.type "cubbyhole")}}
                  <li class="action">
                    <c.Message
                      @id={{backend.id}}
                      @triggerText="Disable"
                      @message="Any data in this engine will be permanently deleted."
                      @title="Disable engine?"
                      @confirmButtonText="Disable"
                      @onConfirm={{perform this.disableEngine backend}}
                      data-test-engine-disable="true"
                    />
                  </li>
                {{/if}}
              </ul>
            </nav>
          </Confirm>
        </PopupMenu>
      </div>
    </LinkedBlock>
  {{/each}}
  */
  {
    "id": "qSMlfxzv",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n      Secrets Engines\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\\n\"],[8,[39,1],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[39,2],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,3],[[24,0,\"is-marginless\"]],[[\"@id\",\"@options\",\"@selectLimit\",\"@disallowNewItems\",\"@fallbackComponent\",\"@onChange\",\"@placeholder\",\"@displayInherit\",\"@inputValue\",\"@disabled\"],[\"filter-by-engine-type\",[30,0,[\"secretEngineArrayByType\"]],\"1\",true,\"input-search\",[30,0,[\"filterEngineType\"]],\"Filter by engine type\",true,[52,[30,0,[\"selectedEngineType\"]],[28,[37,5],[[30,0,[\"selectedEngineType\"]]],null]],[52,[30,0,[\"selectedEngineName\"]],true,false]]],null],[1,\"\\n    \"],[8,[39,3],[[24,0,\"is-marginless has-left-padding-s\"]],[[\"@id\",\"@options\",\"@selectLimit\",\"@disallowNewItems\",\"@fallbackComponent\",\"@onChange\",\"@placeholder\",\"@displayInherit\",\"@inputValue\"],[\"filter-by-engine-name\",[30,0,[\"secretEngineArrayByName\"]],\"1\",true,\"input-search\",[30,0,[\"filterEngineName\"]],\"Filter by engine name\",true,[52,[30,0,[\"selectedEngineName\"]],[28,[37,5],[[30,0,[\"selectedEngineName\"]]],null]]]],null],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[39,6],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,7],[[24,\"data-test-enable-engine\",\"\"]],[[\"@route\",\"@type\"],[\"vault.cluster.settings.mount-secret-backend\",\"add\"]],[[\"default\"],[[[[1,\"\\n      Enable new engine\\n    \"]],[]]]]],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]]]]],[1,\"\\n\"],[42,[28,[37,9],[[28,[37,9],[[30,0,[\"sortedDisplayableBackends\"]]],null]],null],null,[[[1,\"  \"],[8,[39,10],[[24,0,\"list-item-row linkable-item is-no-underline\"],[16,\"data-test-auth-backend-link\",[30,2,[\"id\"]]]],[[\"@params\",\"@disabled\"],[[28,[37,5],[[30,2,[\"backendLink\"]],[30,2,[\"id\"]]],null],[52,[30,2,[\"isSupportedBackend\"]],false,true]]],[[\"default\"],[[[[1,\"\\n    \"],[10,0],[14,0,\"linkable-item-content\"],[14,\"data-test-linkable-item-content\",\"\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"has-text-grey\"],[12],[1,\"\\n\"],[41,[30,2,[\"icon\"]],[[[1,\"          \"],[8,[39,11],null,[[\"@horizontalPosition\"],[\"left\"]],[[\"default\"],[[[[1,\"\\n            \"],[8,[30,3,[\"Trigger\"]],null,null,[[\"default\"],[[[[1,\"\\n              \"],[8,[39,12],[[24,0,\"has-text-grey-light\"],[24,\"data-test-linkable-item-glyph\",\"\"]],[[\"@name\"],[[30,2,[\"icon\"]]]],null],[1,\"\\n            \"]],[]]]]],[1,\"\\n            \"],[8,[30,3,[\"Content\"]],null,[[\"@defaultClass\"],[\"tool-tip\"]],[[\"default\"],[[[[1,\"\\n              \"],[10,0],[14,0,\"box\"],[12],[1,\"\\n                \"],[1,[28,[35,13],[[30,2,[\"engineType\"]],[30,2,[\"path\"]]],null]],[1,\"\\n              \"],[13],[1,\"\\n            \"]],[]]]]],[1,\"\\n          \"]],[3]]]]],[1,\"\\n\"]],[]],null],[41,[30,2,[\"path\"]],[[[41,[30,2,[\"isSupportedBackend\"]],[[[1,\"            \"],[8,[39,14],[[24,0,\"has-text-black has-text-weight-semibold\"],[24,\"data-test-secret-path\",\"\"]],[[\"@route\",\"@model\"],[[30,2,[\"backendLink\"]],[30,2,[\"id\"]]]],[[\"default\"],[[[[1,\"\\n              \"],[1,[30,2,[\"path\"]]],[1,\"\\n            \"]],[]]]]],[1,\"\\n\"]],[]],[[[1,\"            \"],[10,1],[14,\"data-test-secret-path\",\"\"],[12],[1,[30,2,[\"path\"]]],[13],[1,\"\\n\"]],[]]]],[]],null],[1,\"      \"],[13],[1,\"\\n\"],[41,[30,2,[\"accessor\"]],[[[1,\"        \"],[10,\"code\"],[14,0,\"has-text-grey is-size-8\"],[14,\"data-test-linkable-item-accessor\",\"\"],[12],[1,\"\\n          \"],[1,[30,2,[\"accessor\"]]],[1,\"\\n        \"],[13],[1,\"\\n\"]],[]],null],[41,[30,2,[\"description\"]],[[[1,\"        \"],[8,[39,15],[[24,\"data-test-linkable-item-description\",\"\"]],null,[[\"default\"],[[[[1,\"\\n          \"],[1,[30,2,[\"description\"]]],[1,\"\\n        \"]],[]]]]],[1,\"\\n\"]],[]],null],[1,\"      \"],[18,5,null],[1,\"\\n    \"],[13],[1,\"\\n\"],[1,\"    \"],[10,0],[14,0,\"linkable-item-menu\"],[15,\"data-test-linkable-item-menu\",[30,2,[\"path\"]]],[12],[1,\"\\n      \"],[8,[39,17],null,[[\"@name\"],[\"engine-menu\"]],[[\"default\"],[[[[1,\"\\n        \"],[8,[39,18],null,null,[[\"default\"],[[[[1,\"\\n          \"],[10,\"nav\"],[14,0,\"menu\"],[15,\"aria-label\",[29,[[52,[30,2,[\"isSupportedBackend\"]],\"supported\",\"unsupported\"],\" secrets engine menu\"]]],[12],[1,\"\\n            \"],[10,\"ul\"],[14,0,\"menu-list\"],[12],[1,\"\\n              \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                \"],[8,[39,14],[[24,\"data-test-engine-config\",\"\"]],[[\"@route\",\"@model\"],[\"vault.cluster.secrets.backend.configuration\",[30,2,[\"id\"]]]],[[\"default\"],[[[[1,\"\\n                  View configuration\\n                \"]],[]]]]],[1,\"\\n              \"],[13],[1,\"\\n\"],[41,[28,[37,19],[[30,2,[\"type\"]],\"cubbyhole\"],null],[[[1,\"                \"],[10,\"li\"],[14,0,\"action\"],[12],[1,\"\\n                  \"],[8,[30,4,[\"Message\"]],[[24,\"data-test-engine-disable\",\"true\"]],[[\"@id\",\"@triggerText\",\"@message\",\"@title\",\"@confirmButtonText\",\"@onConfirm\"],[[30,2,[\"id\"]],\"Disable\",\"Any data in this engine will be permanently deleted.\",\"Disable engine?\",\"Disable\",[28,[37,20],[[30,0,[\"disableEngine\"]],[30,2]],null]]],null],[1,\"\\n                \"],[13],[1,\"\\n\"]],[]],null],[1,\"            \"],[13],[1,\"\\n          \"],[13],[1,\"\\n        \"]],[4]]]]],[1,\"\\n      \"]],[]]]]],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[2]],null]],[\"p\",\"backend\",\"T\",\"c\",\"&default\"],false,[\"page-header\",\"toolbar\",\"toolbar-filters\",\"search-select\",\"if\",\"array\",\"toolbar-actions\",\"toolbar-link\",\"each\",\"-track-array\",\"linked-block\",\"tool-tip\",\"icon\",\"or\",\"link-to\",\"read-more\",\"yield\",\"popup-menu\",\"confirm\",\"not-eq\",\"perform\"]]",
    "moduleName": "vault/templates/vault/cluster/secrets/backends.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/settings", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{outlet}}
  */
  {
    "id": "AhHv5MwW",
    "block": "[[[46,[28,[37,1],null,null],null,null,null]],[],false,[\"component\",\"-outlet\"]]",
    "moduleName": "vault/templates/vault/cluster/settings.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/settings/auth", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <Sidebar::Nav::Access />
  {{outlet}}
  */
  {
    "id": "9r6T/MWi",
    "block": "[[[8,[39,0],null,null,null],[1,\"\\n\"],[46,[28,[37,2],null,null],null,null,null]],[],false,[\"sidebar/nav/access\",\"component\",\"-outlet\"]]",
    "moduleName": "vault/templates/vault/cluster/settings/auth.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/settings/auth/configure", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.top>
      <KeyValueHeader @baseKey={{this.model}} @path="vault.cluster.access.method" @root={{this.root}} @showCurrent={{true}} />
    </p.top>
    <p.levelLeft>
      <h1 class="title is-3">
        Configure
        {{get (find-by "type" this.model.type (mountable-auth-methods)) "displayName"}}
      </h1>
    </p.levelLeft>
  </PageHeader>
  
  {{section-tabs this.model}}
  
  <Toolbar>
    <ToolbarActions>
      <ToolbarLink @route="vault.cluster.access.method" @model={{this.model.id}} data-test-backend-view-link>
        View method
      </ToolbarLink>
    </ToolbarActions>
  </Toolbar>
  
  {{outlet}}
  */
  {
    "id": "WMLTaj6K",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"top\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,1],null,[[\"@baseKey\",\"@path\",\"@root\",\"@showCurrent\"],[[30,0,[\"model\"]],\"vault.cluster.access.method\",[30,0,[\"root\"]],true]],null],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n      Configure\\n      \"],[1,[28,[35,2],[[28,[37,3],[\"type\",[30,0,[\"model\",\"type\"]],[28,[37,4],null,null]],null],\"displayName\"],null]],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\\n\"],[1,[28,[35,5],[[30,0,[\"model\"]]],null]],[1,\"\\n\\n\"],[8,[39,6],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[39,7],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,8],[[24,\"data-test-backend-view-link\",\"\"]],[[\"@route\",\"@model\"],[\"vault.cluster.access.method\",[30,0,[\"model\",\"id\"]]]],[[\"default\"],[[[[1,\"\\n      View method\\n    \"]],[]]]]],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]]]]],[1,\"\\n\\n\"],[46,[28,[37,10],null,null],null,null,null]],[\"p\"],false,[\"page-header\",\"key-value-header\",\"get\",\"find-by\",\"mountable-auth-methods\",\"section-tabs\",\"toolbar\",\"toolbar-actions\",\"toolbar-link\",\"component\",\"-outlet\"]]",
    "moduleName": "vault/templates/vault/cluster/settings/auth/configure.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/settings/auth/configure/section", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    {{#if (eq this.model.section "options")}}
    {{auth-config-form/options this.model.model}}
  {{else}}
    {{auth-config-form/config this.model.model}}
  {{/if}}
  */
  {
    "id": "GK7CHWi9",
    "block": "[[[41,[28,[37,1],[[30,0,[\"model\",\"section\"]],\"options\"],null],[[[1,\"  \"],[1,[28,[35,2],[[30,0,[\"model\",\"model\"]]],null]],[1,\"\\n\"]],[]],[[[1,\"  \"],[1,[28,[35,3],[[30,0,[\"model\",\"model\"]]],null]],[1,\"\\n\"]],[]]]],[],false,[\"if\",\"eq\",\"auth-config-form/options\",\"auth-config-form/config\"]]",
    "moduleName": "vault/templates/vault/cluster/settings/auth/configure/section.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/settings/auth/enable", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <MountBackendForm @mountModel={{this.model}} @onMountSuccess={{action "onMountSuccess"}} />
  */
  {
    "id": "4bobQvic",
    "block": "[[[8,[39,0],null,[[\"@mountModel\",\"@onMountSuccess\"],[[30,0,[\"model\"]],[28,[37,1],[[30,0],\"onMountSuccess\"],null]]],null]],[],false,[\"mount-backend-form\",\"action\"]]",
    "moduleName": "vault/templates/vault/cluster/settings/auth/enable.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/settings/configure-secret-backend", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.top>
      <KeyValueHeader
        @baseKey={{this.model}}
        @path="vault.cluster.secrets.backend"
        @root={{this.root}}
        @showCurrent={{true}}
      />
    </p.top>
    <p.levelLeft>
      <h1 class="title is-3">
        Configure
        {{get (options-for-backend this.model.type) "displayName"}}
      </h1>
    </p.levelLeft>
  </PageHeader>
  
  <Toolbar>
    <ToolbarActions>
      <ToolbarLink @route="vault.cluster.secrets.backend" @model={{this.model.id}} data-test-backend-view-link>
        View backend
      </ToolbarLink>
    </ToolbarActions>
  </Toolbar>
  
  {{#if (eq this.model.type "aws")}}
    <ConfigureAwsSecret
      @model={{this.model}}
      @tab={{this.tab}}
      @accessKey={{this.accessKey}}
      @secretKey={{this.secretKey}}
      @region={{this.region}}
      @iamEndpoint={{this.iamEndpoint}}
      @stsEndpoint={{this.stsEndpoint}}
      @saveAWSRoot={{action "save" "saveAWSRoot"}}
      @saveAWSLease={{action "save" "saveAWSLease"}}
    />
  {{else if (eq this.model.type "ssh")}}
    <ConfigureSshSecret
      @model={{this.model}}
      @configured={{this.configured}}
      @saveConfig={{action "saveConfig"}}
      @loading={{this.loading}}
    />
  {{/if}}
  
  {{outlet}}
  */
  {
    "id": "esbF2LCj",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"top\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,1],null,[[\"@baseKey\",\"@path\",\"@root\",\"@showCurrent\"],[[30,0,[\"model\"]],\"vault.cluster.secrets.backend\",[30,0,[\"root\"]],true]],null],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n      Configure\\n      \"],[1,[28,[35,2],[[28,[37,3],[[30,0,[\"model\",\"type\"]]],null],\"displayName\"],null]],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\\n\"],[8,[39,4],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[39,5],null,null,[[\"default\"],[[[[1,\"\\n    \"],[8,[39,6],[[24,\"data-test-backend-view-link\",\"\"]],[[\"@route\",\"@model\"],[\"vault.cluster.secrets.backend\",[30,0,[\"model\",\"id\"]]]],[[\"default\"],[[[[1,\"\\n      View backend\\n    \"]],[]]]]],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[]]]]],[1,\"\\n\\n\"],[41,[28,[37,8],[[30,0,[\"model\",\"type\"]],\"aws\"],null],[[[1,\"  \"],[8,[39,9],null,[[\"@model\",\"@tab\",\"@accessKey\",\"@secretKey\",\"@region\",\"@iamEndpoint\",\"@stsEndpoint\",\"@saveAWSRoot\",\"@saveAWSLease\"],[[30,0,[\"model\"]],[30,0,[\"tab\"]],[30,0,[\"accessKey\"]],[30,0,[\"secretKey\"]],[30,0,[\"region\"]],[30,0,[\"iamEndpoint\"]],[30,0,[\"stsEndpoint\"]],[28,[37,10],[[30,0],\"save\",\"saveAWSRoot\"],null],[28,[37,10],[[30,0],\"save\",\"saveAWSLease\"],null]]],null],[1,\"\\n\"]],[]],[[[41,[28,[37,8],[[30,0,[\"model\",\"type\"]],\"ssh\"],null],[[[1,\"  \"],[8,[39,11],null,[[\"@model\",\"@configured\",\"@saveConfig\",\"@loading\"],[[30,0,[\"model\"]],[30,0,[\"configured\"]],[28,[37,10],[[30,0],\"saveConfig\"],null],[30,0,[\"loading\"]]]],null],[1,\"\\n\"]],[]],null]],[]]],[1,\"\\n\"],[46,[28,[37,13],null,null],null,null,null]],[\"p\"],false,[\"page-header\",\"key-value-header\",\"get\",\"options-for-backend\",\"toolbar\",\"toolbar-actions\",\"toolbar-link\",\"if\",\"eq\",\"configure-aws-secret\",\"action\",\"configure-ssh-secret\",\"component\",\"-outlet\"]]",
    "moduleName": "vault/templates/vault/cluster/settings/configure-secret-backend.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/settings/mount-secret-backend", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <MountBackendForm @mountModel={{this.model}} @mountType="secret" @onMountSuccess={{action "onMountSuccess"}} />
  */
  {
    "id": "qHTMQ1IH",
    "block": "[[[8,[39,0],null,[[\"@mountModel\",\"@mountType\",\"@onMountSuccess\"],[[30,0,[\"model\"]],\"secret\",[28,[37,1],[[30,0],\"onMountSuccess\"],null]]],null]],[],false,[\"mount-backend-form\",\"action\"]]",
    "moduleName": "vault/templates/vault/cluster/settings/mount-secret-backend.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/settings/seal", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <PageHeader as |p|>
    <p.levelLeft>
      <h1 class="title is-3">
        Seal OpenBao
      </h1>
    </p.levelLeft>
  </PageHeader>
  
  {{#if this.model.seal.canUpdate}}
    <div class="box is-sideless is-fullwidth is-marginless">
      <p>
        Sealing an OpenBao instance tells the OpenBao server to stop responding to any access operations until it is unsealed
        again. A sealed instance throws away its root key to unlock the data, so it physically is blocked from responding to
        operations again until OpenBao is unsealed again with the "unseal" command or via the API.
      </p>
    </div>
    <div class="field is-grouped box is-fullwidth is-bottomless">
      <ConfirmAction
        @buttonClasses="button is-primary"
        @confirmTitle="Seal this cluster?"
        @confirmMessage="You will not be able to read or write any data until the cluster is unsealed again."
        @confirmButtonText="Seal"
        @horizontalPosition="auto-left"
        @onConfirmAction={{action "seal"}}
        data-test-seal="true"
      >
        Seal
      </ConfirmAction>
    </div>
  {{else}}
    <EmptyState @title="This token does not have sufficient capabilities to seal this OpenBao instance" />
  {{/if}}
  */
  {
    "id": "lScmupr5",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"levelLeft\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n      Seal OpenBao\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]],[1,\"\\n\\n\"],[41,[30,0,[\"model\",\"seal\",\"canUpdate\"]],[[[1,\"  \"],[10,0],[14,0,\"box is-sideless is-fullwidth is-marginless\"],[12],[1,\"\\n    \"],[10,2],[12],[1,\"\\n      Sealing an OpenBao instance tells the OpenBao server to stop responding to any access operations until it is unsealed\\n      again. A sealed instance throws away its root key to unlock the data, so it physically is blocked from responding to\\n      operations again until OpenBao is unsealed again with the \\\"unseal\\\" command or via the API.\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n  \"],[10,0],[14,0,\"field is-grouped box is-fullwidth is-bottomless\"],[12],[1,\"\\n    \"],[8,[39,2],[[24,\"data-test-seal\",\"true\"]],[[\"@buttonClasses\",\"@confirmTitle\",\"@confirmMessage\",\"@confirmButtonText\",\"@horizontalPosition\",\"@onConfirmAction\"],[\"button is-primary\",\"Seal this cluster?\",\"You will not be able to read or write any data until the cluster is unsealed again.\",\"Seal\",\"auto-left\",[28,[37,3],[[30,0],\"seal\"],null]]],[[\"default\"],[[[[1,\"\\n      Seal\\n    \"]],[]]]]],[1,\"\\n  \"],[13],[1,\"\\n\"]],[]],[[[1,\"  \"],[8,[39,4],null,[[\"@title\"],[\"This token does not have sufficient capabilities to seal this OpenBao instance\"]],null],[1,\"\\n\"]],[]]]],[\"p\"],false,[\"page-header\",\"if\",\"confirm-action\",\"action\",\"empty-state\"]]",
    "moduleName": "vault/templates/vault/cluster/settings/seal.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/storage-restore", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <RaftStorageRestore />
  */
  {
    "id": "S/xzjJiL",
    "block": "[[[8,[39,0],null,null,null]],[],false,[\"raft-storage-restore\"]]",
    "moduleName": "vault/templates/vault/cluster/storage-restore.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/storage", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <RaftStorageOverview @model={{this.model}} />
  */
  {
    "id": "MjXaPDSw",
    "block": "[[[8,[39,0],null,[[\"@model\"],[[30,0,[\"model\"]]]],null]],[],false,[\"raft-storage-overview\"]]",
    "moduleName": "vault/templates/vault/cluster/storage.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/tools/error", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <NotFound @model={{this.model}} />
  */
  {
    "id": "rWNDHaM0",
    "block": "[[[8,[39,0],null,[[\"@model\"],[[30,0,[\"model\"]]]],null]],[],false,[\"not-found\"]]",
    "moduleName": "vault/templates/vault/cluster/tools/error.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/tools/tool", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <Sidebar::Nav::Tools />
  <ToolActionsForm @selectedAction={{this.selectedAction}} />
  */
  {
    "id": "bR/70Uci",
    "block": "[[[8,[39,0],null,null,null],[1,\"\\n\"],[8,[39,1],null,[[\"@selectedAction\"],[[30,0,[\"selectedAction\"]]]],null]],[],false,[\"sidebar/nav/tools\",\"tool-actions-form\"]]",
    "moduleName": "vault/templates/vault/cluster/tools/tool.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/cluster/unseal", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <SplashPage as |Page|>
    <Page.header>
      <h1 class="title is-3">
        Unseal OpenBao
      </h1>
    </Page.header>
    <Page.content>
      <div class="box is-borderless is-shadowless is-marginless">
        <p class="title is-5">
          {{capitalize this.model.name}}
          is
          {{if this.model.unsealed "unsealed" "sealed"}}
        </p>
        <p>
          Unseal OpenBao by entering portions of the unseal key. This can be done via multiple mechanisms on multiple
          computers. Once all portions are entered, the root key will be decrypted and OpenBao will unseal.
        </p>
      </div>
      <ShamirFlow
        @action="unseal"
        @onShamirSuccess={{action "transitionToCluster"}}
        @buttonText="Unseal"
        @thresholdPath="t"
        @isComplete={{action "isUnsealed"}}
        @threshold={{this.model.sealThreshold}}
        @progress={{this.model.sealProgress}}
      />
    </Page.content>
    <Page.footer>
      <div class="box is-borderless is-shadowless">
        <p>
          <DocLink @path="/docs/concepts/seal">
            Seal/unseal documentation
          </DocLink>
        </p>
      </div>
    </Page.footer>
  </SplashPage>
  */
  {
    "id": "yWPG+Vd8",
    "block": "[[[8,[39,0],null,null,[[\"default\"],[[[[1,\"\\n  \"],[8,[30,1,[\"header\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,\"h1\"],[14,0,\"title is-3\"],[12],[1,\"\\n      Unseal OpenBao\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[30,1,[\"content\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,0],[14,0,\"box is-borderless is-shadowless is-marginless\"],[12],[1,\"\\n      \"],[10,2],[14,0,\"title is-5\"],[12],[1,\"\\n        \"],[1,[28,[35,1],[[30,0,[\"model\",\"name\"]]],null]],[1,\"\\n        is\\n        \"],[1,[52,[30,0,[\"model\",\"unsealed\"]],\"unsealed\",\"sealed\"]],[1,\"\\n      \"],[13],[1,\"\\n      \"],[10,2],[12],[1,\"\\n        Unseal OpenBao by entering portions of the unseal key. This can be done via multiple mechanisms on multiple\\n        computers. Once all portions are entered, the root key will be decrypted and OpenBao will unseal.\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n    \"],[8,[39,3],null,[[\"@action\",\"@onShamirSuccess\",\"@buttonText\",\"@thresholdPath\",\"@isComplete\",\"@threshold\",\"@progress\"],[\"unseal\",[28,[37,4],[[30,0],\"transitionToCluster\"],null],\"Unseal\",\"t\",[28,[37,4],[[30,0],\"isUnsealed\"],null],[30,0,[\"model\",\"sealThreshold\"]],[30,0,[\"model\",\"sealProgress\"]]]],null],[1,\"\\n  \"]],[]]]]],[1,\"\\n  \"],[8,[30,1,[\"footer\"]],null,null,[[\"default\"],[[[[1,\"\\n    \"],[10,0],[14,0,\"box is-borderless is-shadowless\"],[12],[1,\"\\n      \"],[10,2],[12],[1,\"\\n        \"],[8,[39,5],null,[[\"@path\"],[\"/docs/concepts/seal\"]],[[\"default\"],[[[[1,\"\\n          Seal/unseal documentation\\n        \"]],[]]]]],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n  \"]],[]]]]],[1,\"\\n\"]],[1]]]]]],[\"Page\"],false,[\"splash-page\",\"capitalize\",\"if\",\"shamir-flow\",\"action\",\"doc-link\"]]",
    "moduleName": "vault/templates/vault/cluster/unseal.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/error", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <div class="is-flex-1 is-flex-v-centered">
    <div class="empty-state-content">
      <div class="is-flex-v-centered has-bottom-margin-xxl">
        <div class="brand-icon-large">
          <Icon @name="vault" @size="24" @stretched={{true}} />
        </div>
      </div>
      <div class="is-flex-center">
        <div class="error-icon">
          <Icon @name="help" @size="24" class="has-text-grey" @stretched={{true}} />
        </div>
        <div class="has-left-margin-s">
          <h1 class="is-size-4 has-text-semibold has-text-grey has-line-height-1">
            {{#if (eq this.model.httpStatus 403)}}
              Not authorized
            {{else if (eq this.model.httpStatus 404)}}
              Page not found
            {{else}}
              Error
            {{/if}}
          </h1>
          <p class="has-text-grey is-size-8">Error {{this.model.httpStatus}}</p>
        </div>
      </div>
  
      <p class="has-text-grey has-top-margin-m has-bottom-padding-l has-border-bottom-light" data-test-error-description>
        {{#if (eq this.model.httpStatus 404)}}
          Sorry, we were unable to find any content at that URL. Double check it or go back home.
        {{else}}
          {{this.model.message}}
          {{join ". " this.model.errors}}
        {{/if}}
      </p>
  
      <div class="is-flex-between has-top-margin-s">
        <ExternalLink @href="/" @sameTab={{true}} class="is-no-underline is-flex-center has-text-semibold">
          <Chevron @direction="left" />
          Go home
        </ExternalLink>
        <DocLink @path="/api-docs#http-status-codes">
          Learn more
        </DocLink>
      </div>
    </div>
  </div>
  */
  {
    "id": "J3EHMROD",
    "block": "[[[10,0],[14,0,\"is-flex-1 is-flex-v-centered\"],[12],[1,\"\\n  \"],[10,0],[14,0,\"empty-state-content\"],[12],[1,\"\\n    \"],[10,0],[14,0,\"is-flex-v-centered has-bottom-margin-xxl\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"brand-icon-large\"],[12],[1,\"\\n        \"],[8,[39,0],null,[[\"@name\",\"@size\",\"@stretched\"],[\"vault\",\"24\",true]],null],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n    \"],[10,0],[14,0,\"is-flex-center\"],[12],[1,\"\\n      \"],[10,0],[14,0,\"error-icon\"],[12],[1,\"\\n        \"],[8,[39,0],[[24,0,\"has-text-grey\"]],[[\"@name\",\"@size\",\"@stretched\"],[\"help\",\"24\",true]],null],[1,\"\\n      \"],[13],[1,\"\\n      \"],[10,0],[14,0,\"has-left-margin-s\"],[12],[1,\"\\n        \"],[10,\"h1\"],[14,0,\"is-size-4 has-text-semibold has-text-grey has-line-height-1\"],[12],[1,\"\\n\"],[41,[28,[37,2],[[30,0,[\"model\",\"httpStatus\"]],403],null],[[[1,\"            Not authorized\\n\"]],[]],[[[41,[28,[37,2],[[30,0,[\"model\",\"httpStatus\"]],404],null],[[[1,\"            Page not found\\n\"]],[]],[[[1,\"            Error\\n          \"]],[]]]],[]]],[1,\"        \"],[13],[1,\"\\n        \"],[10,2],[14,0,\"has-text-grey is-size-8\"],[12],[1,\"Error \"],[1,[30,0,[\"model\",\"httpStatus\"]]],[13],[1,\"\\n      \"],[13],[1,\"\\n    \"],[13],[1,\"\\n\\n    \"],[10,2],[14,0,\"has-text-grey has-top-margin-m has-bottom-padding-l has-border-bottom-light\"],[14,\"data-test-error-description\",\"\"],[12],[1,\"\\n\"],[41,[28,[37,2],[[30,0,[\"model\",\"httpStatus\"]],404],null],[[[1,\"        Sorry, we were unable to find any content at that URL. Double check it or go back home.\\n\"]],[]],[[[1,\"        \"],[1,[30,0,[\"model\",\"message\"]]],[1,\"\\n        \"],[1,[28,[35,3],[\". \",[30,0,[\"model\",\"errors\"]]],null]],[1,\"\\n\"]],[]]],[1,\"    \"],[13],[1,\"\\n\\n    \"],[10,0],[14,0,\"is-flex-between has-top-margin-s\"],[12],[1,\"\\n      \"],[8,[39,4],[[24,0,\"is-no-underline is-flex-center has-text-semibold\"]],[[\"@href\",\"@sameTab\"],[\"/\",true]],[[\"default\"],[[[[1,\"\\n        \"],[8,[39,5],null,[[\"@direction\"],[\"left\"]],null],[1,\"\\n        Go home\\n      \"]],[]]]]],[1,\"\\n      \"],[8,[39,6],null,[[\"@path\"],[\"/api-docs#http-status-codes\"]],[[\"default\"],[[[[1,\"\\n        Learn more\\n      \"]],[]]]]],[1,\"\\n    \"],[13],[1,\"\\n  \"],[13],[1,\"\\n\"],[13]],[],false,[\"icon\",\"if\",\"eq\",\"join\",\"external-link\",\"chevron\",\"doc-link\"]]",
    "moduleName": "vault/templates/vault/error.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/templates/vault/not-found", ["exports", "@ember/template-factory"], function (_exports, _templateFactory) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"ember-cli-htmlbars"eaimeta@70e063a35619d71f

  var _default = (0, _templateFactory.createTemplateFactory)(
  /*
    <NotFound @model={{this.model}} />
  */
  {
    "id": "u2m6ji5O",
    "block": "[[[8,[39,0],null,[[\"@model\"],[[30,0,[\"model\"]]]],null]],[],false,[\"not-found\"]]",
    "moduleName": "vault/templates/vault/not-found.hbs",
    "isStrictMode": false
  });

  _exports.default = _default;
});
;define("vault/transforms/array", ["exports", "@ember-data/serializer/transform", "@ember/array"], function (_exports, _transform, _array) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/serializer/transform",0,"@ember/array"eaimeta@70e063a35619d71f

  /*
    This should go inside a globally available place for all apps
  
    DS.attr('array')
  */
  var _default = _transform.default.extend({
    deserialize(value) {
      if ((0, _array.isArray)(value)) {
        return (0, _array.A)(value);
      } else {
        return (0, _array.A)();
      }
    },

    serialize(value) {
      if ((0, _array.isArray)(value)) {
        return (0, _array.A)(value);
      } else {
        return (0, _array.A)();
      }
    }

  });

  _exports.default = _default;
});
;define("vault/transforms/boolean", ["exports", "@ember-data/serializer/-private"], function (_exports, _private) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _private.BooleanTransform;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@ember-data/serializer/-private"eaimeta@70e063a35619d71f
});
;define("vault/transforms/date", ["exports", "@ember-data/serializer/-private"], function (_exports, _private) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _private.DateTransform;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@ember-data/serializer/-private"eaimeta@70e063a35619d71f
});
;define("vault/transforms/number", ["exports", "@ember-data/serializer/-private"], function (_exports, _private) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _private.NumberTransform;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@ember-data/serializer/-private"eaimeta@70e063a35619d71f
});
;define("vault/transforms/object", ["exports", "@ember-data/serializer/transform", "@ember/utils"], function (_exports, _transform, _utils) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/serializer/transform",0,"@ember/utils"eaimeta@70e063a35619d71f

  /*
    DS.attr('object')
  */
  var _default = _transform.default.extend({
    deserialize: function (value) {
      if ((0, _utils.typeOf)(value) !== 'object') {
        return {};
      } else {
        return value;
      }
    },
    serialize: function (value) {
      if ((0, _utils.typeOf)(value) !== 'object') {
        return {};
      } else {
        return value;
      }
    }
  });

  _exports.default = _default;
});
;define("vault/transforms/string", ["exports", "@ember-data/serializer/-private"], function (_exports, _private) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _private.StringTransform;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"@ember-data/serializer/-private"eaimeta@70e063a35619d71f
});
;define("vault/utils/action-params", ["exports", "pki/utils/action-params"], function (_exports, _actionParams) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "keyParamsByType", {
    enumerable: true,
    get: function () {
      return _actionParams.keyParamsByType;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"pki/utils/action-params"eaimeta@70e063a35619d71f
});
;define("vault/utils/api-path", ["exports", "@ember/debug"], function (_exports, _debug) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = apiPath;
  0; //eaimeta@70e063a35619d71f0,"@ember/debug"eaimeta@70e063a35619d71f

  // This is a tagged template function that will
  // replace placeholders in the form of 'id' with the value from the passed context
  //
  // usage:
  // let fn = apiPath`foo/bar/${'id'}`;
  // let output = fn({id: 'an-id'});
  // output will result in 'foo/bar/an-id';
  function apiPath(strings) {
    for (var _len = arguments.length, keys = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      keys[_key - 1] = arguments[_key];
    }

    return function (data) {
      const dict = data || {};
      const result = [strings[0]];
      (true && !(Object.keys(data).length >= keys.length) && (0, _debug.assert)(`Expected ${keys.length} keys in apiPath context, only recieved ${Object.keys(data).join(',')}`, Object.keys(data).length >= keys.length));
      keys.forEach((key, i) => {
        result.push(dict[key], strings[i + 1]);
      });
      return result.join('');
    };
  }
});
;define("vault/utils/b64", ["exports", "core/utils/b64"], function (_exports, _b) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "decodeString", {
    enumerable: true,
    get: function () {
      return _b.decodeString;
    }
  });
  Object.defineProperty(_exports, "encodeString", {
    enumerable: true,
    get: function () {
      return _b.encodeString;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/utils/b64"eaimeta@70e063a35619d71f
});
;define("vault/utils/calculate-position", ["exports", "ember-basic-dropdown/utils/calculate-position"], function (_exports, _calculatePosition) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _calculatePosition.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-basic-dropdown/utils/calculate-position"eaimeta@70e063a35619d71f
});
;define("vault/utils/camelize-object-keys", ["exports", "@ember/string"], function (_exports, _string) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = camelizeKeys;
  0; //eaimeta@70e063a35619d71f0,"@ember/string"eaimeta@70e063a35619d71f

  function camelizeKeys(object) {
    const newObject = {};
    Object.entries(object).forEach(_ref => {
      let [key, value] = _ref;
      newObject[(0, _string.camelize)(key)] = value;
    });
    return newObject;
  }
});
;define("vault/utils/chart-helpers", ["exports", "d3-format", "d3-array"], function (_exports, _d3Format, _d3Array) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.UPGRADE_WARNING = _exports.TRANSLATE = _exports.SVG_DIMENSIONS = _exports.LIGHT_AND_DARK_BLUE = _exports.GREY = _exports.BAR_COLOR_HOVER = void 0;
  _exports.calculateAverage = calculateAverage;
  _exports.formatNumbers = formatNumbers;
  _exports.formatTooltipNumber = formatTooltipNumber;
  0; //eaimeta@70e063a35619d71f0,"d3-format",0,"d3-array"eaimeta@70e063a35619d71f

  // COLOR THEME:
  const LIGHT_AND_DARK_BLUE = ['#BFD4FF', '#1563FF'];
  _exports.LIGHT_AND_DARK_BLUE = LIGHT_AND_DARK_BLUE;
  const UPGRADE_WARNING = '#FDEEBA';
  _exports.UPGRADE_WARNING = UPGRADE_WARNING;
  const BAR_COLOR_HOVER = ['#1563FF', '#0F4FD1'];
  _exports.BAR_COLOR_HOVER = BAR_COLOR_HOVER;
  const GREY = '#EBEEF2'; // TRANSLATIONS:

  _exports.GREY = GREY;
  const TRANSLATE = {
    left: -11
  };
  _exports.TRANSLATE = TRANSLATE;
  const SVG_DIMENSIONS = {
    height: 190,
    width: 500
  }; // Reference for tickFormat https://www.youtube.com/watch?v=c3MCROTNN8g

  _exports.SVG_DIMENSIONS = SVG_DIMENSIONS;

  function formatNumbers(number) {
    if (number < 1000) return number;
    if (number < 10000) return (0, _d3Format.format)('.1s')(number); // replace SI prefix of 'G' for billions to 'B'

    return (0, _d3Format.format)('.2s')(number).replace('G', 'B');
  }

  function formatTooltipNumber(value) {
    if (typeof value !== 'number') {
      return value;
    } // formats a number according to the locale


    return new Intl.NumberFormat().format(value);
  }

  function calculateAverage(dataset, objectKey) {
    // before mapping for values, check that the objectKey exists at least once in the dataset because
    // map returns 0 when dataset[objectKey] is undefined in order to calculate average
    if (!Array.isArray(dataset) || !objectKey || !dataset.some(d => Object.keys(d).includes(objectKey))) {
      return null;
    }

    const integers = dataset.map(d => d[objectKey] ? d[objectKey] : 0);
    const checkIntegers = integers.every(n => Number.isInteger(n)); // decimals will be false

    return checkIntegers ? Math.round((0, _d3Array.mean)(integers)) : null;
  }
});
;define("vault/utils/clamp", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = _default;
  0; //eaimeta@70e063a35619d71feaimeta@70e063a35619d71f

  /**
   * Copyright (c) HashiCorp, Inc.
   * SPDX-License-Identifier: MPL-2.0
   */
  function _default(num, min, max) {
    let inRangeNumber;

    if (typeof num !== 'number') {
      inRangeNumber = min;
    } else {
      inRangeNumber = num;
    }

    return Math.min(Math.max(inRangeNumber, min), max);
  }
});
;define("vault/utils/database-helpers", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.STATEMENT_FIELDS = _exports.ROLE_FIELDS = _exports.AVAILABLE_PLUGIN_TYPES = void 0;
  _exports.getRoleFields = getRoleFields;
  _exports.getStatementFields = getStatementFields;
  0; //eaimeta@70e063a35619d71feaimeta@70e063a35619d71f

  /**
   * Copyright (c) HashiCorp, Inc.
   * SPDX-License-Identifier: MPL-2.0
   */
  const AVAILABLE_PLUGIN_TYPES = [{
    value: 'mysql-aurora-database-plugin',
    displayName: 'MySQL (Aurora)',
    fields: [{
      attr: 'plugin_name'
    }, {
      attr: 'name'
    }, {
      attr: 'verify_connection',
      show: false
    }, {
      attr: 'password_policy'
    }, {
      attr: 'connection_url',
      group: 'pluginConfig'
    }, {
      attr: 'username',
      group: 'pluginConfig',
      show: false
    }, {
      attr: 'password',
      group: 'pluginConfig',
      show: false
    }, {
      attr: 'max_open_connections',
      group: 'pluginConfig'
    }, {
      attr: 'max_idle_connections',
      group: 'pluginConfig'
    }, {
      attr: 'max_connection_lifetime',
      group: 'pluginConfig'
    }, {
      attr: 'username_template',
      group: 'pluginConfig'
    }, {
      attr: 'tls',
      group: 'pluginConfig',
      subgroup: 'TLS options'
    }, {
      attr: 'tls_ca',
      group: 'pluginConfig',
      subgroup: 'TLS options'
    }, {
      attr: 'root_rotation_statements',
      group: 'statements'
    }]
  }, {
    value: 'mysql-legacy-database-plugin',
    displayName: 'MySQL (Legacy)',
    fields: [{
      attr: 'plugin_name'
    }, {
      attr: 'name'
    }, {
      attr: 'verify_connection',
      show: false
    }, {
      attr: 'password_policy'
    }, {
      attr: 'connection_url',
      group: 'pluginConfig'
    }, {
      attr: 'username',
      group: 'pluginConfig',
      show: false
    }, {
      attr: 'password',
      group: 'pluginConfig',
      show: false
    }, {
      attr: 'max_open_connections',
      group: 'pluginConfig'
    }, {
      attr: 'max_idle_connections',
      group: 'pluginConfig'
    }, {
      attr: 'max_connection_lifetime',
      group: 'pluginConfig'
    }, {
      attr: 'username_template',
      group: 'pluginConfig'
    }, {
      attr: 'tls',
      group: 'pluginConfig',
      subgroup: 'TLS options'
    }, {
      attr: 'tls_ca',
      group: 'pluginConfig',
      subgroup: 'TLS options'
    }, {
      attr: 'root_rotation_statements',
      group: 'statements'
    }]
  }, {
    value: 'mysql-database-plugin',
    displayName: 'MySQL/MariaDB',
    fields: [{
      attr: 'plugin_name'
    }, {
      attr: 'name'
    }, {
      attr: 'verify_connection',
      show: false
    }, {
      attr: 'password_policy'
    }, {
      attr: 'connection_url',
      group: 'pluginConfig'
    }, {
      attr: 'username',
      group: 'pluginConfig',
      show: false
    }, {
      attr: 'password',
      group: 'pluginConfig',
      show: false
    }, {
      attr: 'max_open_connections',
      group: 'pluginConfig'
    }, {
      attr: 'max_idle_connections',
      group: 'pluginConfig'
    }, {
      attr: 'max_connection_lifetime',
      group: 'pluginConfig'
    }, {
      attr: 'username_template',
      group: 'pluginConfig'
    }, {
      attr: 'tls',
      group: 'pluginConfig',
      subgroup: 'TLS options'
    }, {
      attr: 'tls_ca',
      group: 'pluginConfig',
      subgroup: 'TLS options'
    }, {
      attr: 'root_rotation_statements',
      group: 'statements'
    }]
  }, {
    value: 'mysql-rds-database-plugin',
    displayName: 'MySQL (RDS)',
    fields: [{
      attr: 'plugin_name'
    }, {
      attr: 'name'
    }, {
      attr: 'verify_connection',
      show: false
    }, {
      attr: 'password_policy'
    }, {
      attr: 'connection_url',
      group: 'pluginConfig'
    }, {
      attr: 'username',
      group: 'pluginConfig',
      show: false
    }, {
      attr: 'password',
      group: 'pluginConfig',
      show: false
    }, {
      attr: 'max_open_connections',
      group: 'pluginConfig'
    }, {
      attr: 'max_idle_connections',
      group: 'pluginConfig'
    }, {
      attr: 'max_connection_lifetime',
      group: 'pluginConfig'
    }, {
      attr: 'username_template',
      group: 'pluginConfig'
    }, {
      attr: 'tls',
      group: 'pluginConfig',
      subgroup: 'TLS options'
    }, {
      attr: 'tls_ca',
      group: 'pluginConfig',
      subgroup: 'TLS options'
    }, {
      attr: 'root_rotation_statements',
      group: 'statements'
    }]
  }, {
    value: 'postgresql-database-plugin',
    displayName: 'PostgreSQL',
    fields: [{
      attr: 'plugin_name'
    }, {
      attr: 'name'
    }, {
      attr: 'verify_connection',
      show: false
    }, {
      attr: 'password_policy'
    }, {
      attr: 'connection_url',
      group: 'pluginConfig'
    }, {
      attr: 'username',
      group: 'pluginConfig',
      show: false
    }, {
      attr: 'password',
      group: 'pluginConfig',
      show: false
    }, {
      attr: 'max_open_connections',
      group: 'pluginConfig'
    }, {
      attr: 'max_idle_connections',
      group: 'pluginConfig'
    }, {
      attr: 'max_connection_lifetime',
      group: 'pluginConfig'
    }, {
      attr: 'username_template',
      group: 'pluginConfig'
    }, {
      attr: 'root_rotation_statements',
      group: 'statements'
    }]
  }];
  _exports.AVAILABLE_PLUGIN_TYPES = AVAILABLE_PLUGIN_TYPES;
  const ROLE_FIELDS = {
    static: ['username', 'rotation_period'],
    dynamic: ['default_ttl', 'max_ttl']
  };
  _exports.ROLE_FIELDS = ROLE_FIELDS;
  const STATEMENT_FIELDS = {
    static: {
      default: ['rotation_statements'],
      'mysql-database-plugin': [],
      'mysql-aurora-database-plugin': [],
      'mysql-legacy-database-plugin': [],
      'mysql-rds-database-plugin': [],
      'postgresql-database-plugin': []
    },
    dynamic: {
      default: ['creation_statements', 'revocation_statements', 'rollback_statements', 'renew_statements'],
      'mysql-database-plugin': ['creation_statements', 'revocation_statements'],
      'mysql-aurora-database-plugin': ['creation_statements', 'revocation_statements'],
      'mysql-legacy-database-plugin': ['creation_statements', 'revocation_statements'],
      'mysql-rds-database-plugin': ['creation_statements', 'revocation_statements'],
      'postgresql-database-plugin': ['creation_statements', 'revocation_statements', 'rollback_statements', 'renew_statements']
    }
  };
  _exports.STATEMENT_FIELDS = STATEMENT_FIELDS;

  function getStatementFields(type, plugin) {
    if (!type) return null;
    let dbValidFields = STATEMENT_FIELDS[type].default;

    if (STATEMENT_FIELDS[type][plugin]) {
      dbValidFields = STATEMENT_FIELDS[type][plugin];
    }

    return dbValidFields;
  }

  function getRoleFields(type) {
    if (!type) return null;
    return ROLE_FIELDS[type];
  }
});
;define("vault/utils/error-message", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = _default;
  0; //eaimeta@70e063a35619d71feaimeta@70e063a35619d71f

  /**
   * Copyright (c) HashiCorp, Inc.
   * SPDX-License-Identifier: MPL-2.0
   */
  // accepts an error and returns error.errors joined with a comma, error.message or a fallback message
  function _default(error) {
    let fallbackMessage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'An error occurred, please try again';

    if (error instanceof Error && error?.errors) {
      return error.errors.join(', ');
    }

    return error?.message || fallbackMessage;
  }
});
;define("vault/utils/field-to-attrs", ["exports", "@ember/object/computed"], function (_exports, _computed) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = _default;
  _exports.expandAttributeMeta = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/object/computed"eaimeta@70e063a35619d71f

  /*
   *
   * @param modelClass DS.Model
   * @param attributeNames Array[String]
   * @param prefixName String
   * @param map Map
   * @returns Array[Object]
   *
   * A function that takes a model and an array of attributes
   * and expands them in-place to an array of metadata about the attributes
   *
   * if passed a Model with attributes `foo` and `bar` and the array ['foo', 'bar']
   * the returned array would take the form of:
   *
   *  [
   *    {
   *      name: 'foo',
   *      type: 'string',
   *      options: {
   *        defaultValue: 'Foo'
   *      }
   *    },
   *    {
   *      name: 'bar',
   *      type: 'string',
   *      options: {
   *        defaultValue: 'Bar',
   *        editType: 'textarea',
   *        label: 'The Bar Field'
   *      }
   *    },
   *  ]
   *
   */
  const expandAttributeMeta = function (modelClass, attributeNames) {
    const fields = []; // expand all attributes
    // see docs for examples of brace-expansion - https://api.emberjs.com/ember/4.4/functions/@ember%2Fobject%2Fcomputed/expandProperties

    attributeNames.map(field => (0, _computed.expandProperties)(field, prop => fields.push(prop))); // cache results of eachAttribute so we don't call it on each iteration of fields loop

    const modelAttrs = {};

    const getAttributeMeta = (klass, attrKey) => {
      // populate cache if empty
      if (!modelAttrs[klass.modelName]) {
        modelAttrs[klass.modelName] = [];
        klass.eachAttribute((name, meta) => {
          modelAttrs[klass.modelName].push(meta);
        });
      } // lookup attr and return meta


      return modelAttrs[klass.modelName].findBy('name', attrKey);
    };

    return fields.map(field => {
      let meta = {}; // check for relationship by presence of dot nation in field name

      if (field.includes('.')) {
        const [relKey, prop] = field.split('.');
        const rel = modelClass.belongsTo(relKey);
        const relModelClass = modelClass.store.modelFor(rel.type);
        meta = getAttributeMeta(relModelClass, prop);
      } else {
        meta = getAttributeMeta(modelClass, field);
      }

      const {
        type,
        options
      } = meta || {};
      return {
        // using field name here because it is the full path,
        // name on the attribute meta will be relative to the relationship if applicable
        name: field,
        type,
        options
      };
    });
  };
  /*
   *
   * @param modelClass DS.Model
   * @param fieldGroups Array[Object]
   * @returns Array
   *
   * A function meant for use on an Ember Data Model
   *
   * The function takes a array of groups, each group
   * being a list of attributes on the model, for example
   * `fieldGroups` could look like this
   *
   *  [
   *    { default: ['commonName', 'format'] },
   *    { Options: ['altNames', 'ipSans', 'ttl', 'excludeCnFromSans'] },
   *  ]
   *
   *  The array will get mapped over producing a new array with each attribute replaced with that attribute's metadata from the attr declaration
   */


  _exports.expandAttributeMeta = expandAttributeMeta;

  function _default(modelClass, fieldGroups) {
    return fieldGroups.map(group => {
      const groupKey = Object.keys(group)[0];
      const fields = expandAttributeMeta(modelClass, group[groupKey]);
      return {
        [groupKey]: fields
      };
    });
  }
});
;define("vault/utils/identity-manager", ["exports", "uuid"], function (_exports, _uuid) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  0; //eaimeta@70e063a35619d71f0,"uuid"eaimeta@70e063a35619d71f

  // manage a set of unique ids
  class _default {
    constructor() {
      this.ids = new Set();
    }
    /**
     * Returns a unique identifier.
     *
     * @method fetch
     * @param {Object} data Records attributes hash
     * @return {String} Unique identifier
     * @public
     */


    fetch() {
      let uuid = (0, _uuid.v4)(); // odds are incredibly low that we'll run into a duplicate but just to be safe...

      while (this.ids.has(uuid)) {
        uuid = (0, _uuid.v4)();
      }

      this.ids.add(uuid);
      return uuid;
    }
    /**
     * Register an identifier.
     * Must throw if identifier is already used.
     *
     * @method set
     * @param {String|Number} id
     * @public
     */


    set(id) {
      if (this.ids.has(id)) {
        throw new Error(`ID ${id} is in use.`);
      }

      this.ids.add(id);
    }
    /**
     * Reset identity manager.
     *
     * @method reset
     * @public
     */


    reset() {
      this.ids.clear();
    }

  }

  _exports.default = _default;
});
;define("vault/utils/openapi-to-attrs", ["exports", "@ember-data/model", "@ember/polyfills", "@ember/string"], function (_exports, _model, _polyfills, _string) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.expandOpenApiProps = _exports.combineFields = _exports.combineFieldGroups = _exports.combineAttributes = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember-data/model",0,"@ember/polyfills",0,"@ember/string"eaimeta@70e063a35619d71f

  const expandOpenApiProps = function (props) {
    const attrs = {}; // expand all attributes

    for (const propName in props) {
      const prop = props[propName];
      let {
        description,
        items,
        type,
        format,
        isId,
        deprecated
      } = prop;

      if (deprecated === true) {
        continue;
      }

      let {
        name,
        value,
        group,
        sensitive,
        editType,
        description: displayDescription
      } = prop['x-vault-displayAttrs'] || {};

      if (type === 'integer') {
        type = 'number';
      }

      if (displayDescription) {
        description = displayDescription;
      }

      editType = editType || type;

      if (format === 'seconds') {
        editType = 'ttl';
      } else if (items) {
        editType = items.type + (0, _string.capitalize)(type);
      }

      const attrDefn = {
        editType,
        helpText: description,
        possibleValues: prop['enum'],
        fieldValue: isId ? 'mutableId' : null,
        fieldGroup: group || 'default',
        readOnly: isId,
        defaultValue: value || null
      };

      if (type === 'object' && !!value) {
        attrDefn.defaultValue = () => {
          return value;
        };
      }

      if (sensitive) {
        attrDefn.sensitive = true;
      } // only set a label if we have one from OpenAPI
      // otherwise the propName will be humanized by the form-field component


      if (name) {
        attrDefn.label = name;
      } // ttls write as a string and read as a number
      // so setting type on them runs the wrong transform


      if (editType !== 'ttl' && type !== 'array') {
        attrDefn.type = type;
      } // loop to remove empty vals


      for (const attrProp in attrDefn) {
        if (attrDefn[attrProp] == null) {
          delete attrDefn[attrProp];
        }
      }

      attrs[(0, _string.camelize)(propName)] = attrDefn;
    }

    return attrs;
  };

  _exports.expandOpenApiProps = expandOpenApiProps;

  const combineAttributes = function (oldAttrs, newProps) {
    const newAttrs = {};
    const newFields = [];

    if (oldAttrs) {
      oldAttrs.forEach(function (value, name) {
        if (newProps[name]) {
          newAttrs[name] = (0, _model.attr)(newProps[name].type, (0, _polyfills.assign)({}, newProps[name], value.options));
        } else {
          newAttrs[name] = (0, _model.attr)(value.type, value.options);
        }
      });
    }

    for (const prop in newProps) {
      if (newAttrs[prop]) {
        continue;
      } else {
        newAttrs[prop] = (0, _model.attr)(newProps[prop].type, newProps[prop]);
        newFields.push(prop);
      }
    }

    return {
      attrs: newAttrs,
      newFields
    };
  };

  _exports.combineAttributes = combineAttributes;

  const combineFields = function (currentFields, newFields, excludedFields) {
    const otherFields = newFields.filter(field => {
      return !currentFields.includes(field) && !excludedFields.includes(field);
    });

    if (otherFields.length) {
      currentFields = currentFields.concat(otherFields);
    }

    return currentFields;
  };

  _exports.combineFields = combineFields;

  const combineFieldGroups = function (currentGroups, newFields, excludedFields) {
    let allFields = [];

    for (const group of currentGroups) {
      const fieldName = Object.keys(group)[0];
      allFields = allFields.concat(group[fieldName]);
    }

    const otherFields = newFields.filter(field => {
      return !allFields.includes(field) && !excludedFields.includes(field);
    });

    if (otherFields.length) {
      currentGroups[0].default = currentGroups[0].default.concat(otherFields);
    }

    return currentGroups;
  };

  _exports.combineFieldGroups = combineFieldGroups;
});
;define("vault/utils/parse-pki-cert-oids", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.parsedParameterKeys = _exports.SUBJECT_OIDs = _exports.SIGNATURE_ALGORITHM_OIDs = _exports.SAN_TYPES = _exports.OTHER_OIDs = _exports.KEY_USAGE_BITS = _exports.EXTENSION_OIDs = void 0;
  0; //eaimeta@70e063a35619d71feaimeta@70e063a35619d71f

  /**
   * Copyright (c) HashiCorp, Inc.
   * SPDX-License-Identifier: MPL-2.0
   */
  //* lookup OIDs: http://oid-info.com/basic-search.htm
  const SUBJECT_OIDs = {
    common_name: '2.5.4.3',
    subject_serial_number: '2.5.4.5',
    ou: '2.5.4.11',
    organization: '2.5.4.10',
    country: '2.5.4.6',
    locality: '2.5.4.7',
    province: '2.5.4.8',
    street_address: '2.5.4.9',
    postal_code: '2.5.4.17'
  };
  _exports.SUBJECT_OIDs = SUBJECT_OIDs;
  const EXTENSION_OIDs = {
    key_usage: '2.5.29.15',
    // contains keyUsage values (KEY_USAGE_BITS below)
    subject_alt_name: '2.5.29.17',
    // contains SAN_TYPES below
    basic_constraints: '2.5.29.19',
    // contains max_path_length
    name_constraints: '2.5.29.30' // contains permitted_dns_domains

  }; // these are allowed ext oids, but not parsed and passed to cross-signed certs

  _exports.EXTENSION_OIDs = EXTENSION_OIDs;
  const OTHER_OIDs = {
    // These two extensions are controlled by the parent authority.
    authority_key_identifier: '2.5.29.35',
    authority_access_info: '1.3.6.1.5.5.7.1.1',
    // This extension is based off the key material of the new issuer, which
    // will automatically match the existing issuer's key material.
    subject_key_identifier: '2.5.29.14'
  };
  _exports.OTHER_OIDs = OTHER_OIDs;
  const KEY_USAGE_BITS = ['DigitalSignature', 'ContentCommitment', 'KeyEncipherment', 'DataEncipherment', 'KeyAgreement', 'CertSign', 'CRLSign', 'EncipherOnly', 'DecipherOnly']; // SubjectAltName/GeneralName types (scroll up to page 38 -> https://datatracker.ietf.org/doc/html/rfc5280#section-4.2.1.7 )

  _exports.KEY_USAGE_BITS = KEY_USAGE_BITS;
  const SAN_TYPES = {
    other_sans: 0,
    // <OID>;UTF8:<value>
    alt_names: 2,
    // dNSName
    uri_sans: 6,
    // uniformResourceIdentifier
    ip_sans: 7 // iPAddress - OCTET STRING

  };
  _exports.SAN_TYPES = SAN_TYPES;
  const SIGNATURE_ALGORITHM_OIDs = {
    '1.2.840.113549.1.1.2': '0',
    // MD2-RSA
    '1.2.840.113549.1.1.4': '0',
    // MD5-RSA
    '1.2.840.113549.1.1.5': '0',
    // SHA1-RSA
    '1.2.840.113549.1.1.11': '256',
    // SHA256-RSA
    '1.2.840.113549.1.1.12': '384',
    // SHA384-RSA
    '1.2.840.113549.1.1.13': '512',
    // SHA512-RSA
    '1.2.840.113549.1.1.10': {
      // RSA-PSS have additional OIDs that need to be mapped
      '2.16.840.1.101.3.4.2.1': '256',
      // SHA-256
      '2.16.840.1.101.3.4.2.2': '384',
      // SHA-384
      '2.16.840.1.101.3.4.2.3': '512' // SHA-512

    },
    '1.2.840.10040.4.3': '0',
    // DSA-SHA1
    '2.16.840.1.101.3.4.3.2': '256',
    // DSA-SHA256
    '1.2.840.10045.4.1': '0',
    // ECDSA-SHA1
    '1.2.840.10045.4.3.2': '256',
    // ECDSA-SHA256
    '1.2.840.10045.4.3.3': '384',
    // ECDSA-SHA384
    '1.2.840.10045.4.3.4': '512',
    // ECDSA-SHA512
    '1.3.101.112': '0' // Ed25519

  }; // returns array of strings that correspond to possible returned values from parsing cert

  _exports.SIGNATURE_ALGORITHM_OIDs = SIGNATURE_ALGORITHM_OIDs;
  const parsedParameterKeys = [...Object.keys(SUBJECT_OIDs), ...Object.keys(EXTENSION_OIDs), ...Object.keys(SAN_TYPES), 'use_pss', 'not_valid_before', 'not_valid_after'];
  _exports.parsedParameterKeys = parsedParameterKeys;
});
;define("vault/utils/parse-pki-cert", ["exports", "asn1js", "pvutils", "pkijs", "date-fns", "vault/utils/parse-pki-cert-oids"], function (_exports, asn1js, _pvutils, _pkijs, _dateFns, _parsePkiCertOids) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.formatValues = formatValues;
  _exports.jsonToCertObject = jsonToCertObject;
  _exports.parseCertificate = parseCertificate;
  _exports.parseExtensions = parseExtensions;
  _exports.parsePkiCert = parsePkiCert;
  _exports.parseSubject = parseSubject;
  _exports.verifyCertificates = verifyCertificates;
  _exports.verifySignature = verifySignature;
  0; //eaimeta@70e063a35619d71f0,"asn1js",0,"pvutils",0,"pkijs",0,"date-fns",0,"vault/utils/parse-pki-cert-oids"eaimeta@70e063a35619d71f

  /* 
   It may be helpful to visualize a certificate's SEQUENCE structure alongside this parsing file.
   You can do so by decoding a certificate here: https://lapo.it/asn1js/#
  
   A certificate is encoded in ASN.1 data - a SEQUENCE is how you define structures in ASN.1.
   GeneralNames, Extension, AlgorithmIdentifier are all examples of SEQUENCEs 
  
   * Error handling: 
  { can_parse: false } -> returned if the external library cannot convert the certificate 
  { parsing_errors: [] } -> returned if the certificate was converted, but there's ANY problem parsing certificate details. 
   This means we cannot cross-sign in the UI and prompt the user to do so manually using the CLI.
   */
  function jsonToCertObject(jsonString) {
    const cert_base64 = jsonString.replace(/(-----(BEGIN|END) CERTIFICATE-----|\n)/g, '');
    const cert_der = (0, _pvutils.fromBase64)(cert_base64);
    const cert_asn1 = asn1js.fromBER((0, _pvutils.stringToArrayBuffer)(cert_der));
    return new _pkijs.Certificate({
      schema: cert_asn1.result
    });
  }

  function parseCertificate(certificateContent) {
    let cert;

    try {
      cert = jsonToCertObject(certificateContent);
    } catch (error) {
      console.debug('DEBUG: Converting Certificate', error); // eslint-disable-line

      return {
        can_parse: false
      };
    }

    let parsedCertificateValues;

    try {
      const subjectValues = parseSubject(cert?.subject?.typesAndValues);
      const extensionValues = parseExtensions(cert?.extensions);
      const [signature_bits, use_pss] = mapSignatureBits(cert?.signatureAlgorithm);
      const formattedValues = formatValues(subjectValues, extensionValues);
      parsedCertificateValues = { ...formattedValues,
        signature_bits,
        use_pss
      };
    } catch (error) {
      console.debug('DEBUG: Parsing Certificate', error); // eslint-disable-line

      parsedCertificateValues = {
        parsing_errors: [new Error('error parsing certificate values')]
      };
    }

    const expiryDate = cert?.notAfter?.value;
    const issueDate = cert?.notBefore?.value;
    const ttl = `${(0, _dateFns.differenceInHours)(expiryDate, issueDate)}h`;
    return { ...parsedCertificateValues,
      can_parse: true,
      not_valid_after: (0, _dateFns.getUnixTime)(expiryDate),
      not_valid_before: (0, _dateFns.getUnixTime)(issueDate),
      ttl
    };
  }

  function parsePkiCert(model) {
    // model has to be the responseJSON from PKI serializer
    // return if no certificate or if the "certificate" is actually a CRL
    if (!model.certificate || model.certificate.includes('BEGIN X509 CRL')) {
      return;
    }

    return parseCertificate(model.certificate);
  }

  function formatValues(subject, extension) {
    if (!subject || !extension) {
      return {
        parsing_errors: [new Error('error formatting certificate values')]
      };
    }

    const {
      subjValues,
      subjErrors
    } = subject;
    const {
      extValues,
      extErrors
    } = extension;
    const parsing_errors = [...subjErrors, ...extErrors];
    const exclude_cn_from_sans = extValues.alt_names?.length > 0 && !extValues.alt_names?.includes(subjValues?.common_name) ? true : false; // now that we've finished parsing data, join all extension arrays

    for (const ext in extValues) {
      if (Array.isArray(extValues[ext])) {
        extValues[ext] = extValues[ext].length !== 0 ? extValues[ext].join(', ') : null;
      }
    }

    return { ...subjValues,
      ...extValues,
      parsing_errors,
      exclude_cn_from_sans
    };
  }
  /*
  Explanation of cross-signing and how to use the verify function: 
  (See setup script here: https://github.com/hashicorp/vault-tools/blob/main/vault-ui/pki/pki-cross-sign-config.sh)
  1. A trust chain exists between "old-parent-issuer-name" -> "old-intermediate"
  2. We create a new root, "my-parent-issuer-name" to phase out the old one
  
  * cross-signing step performed in the UI * 
  3. Cross-sign "old-intermediate" against new root "my-parent-issuer-name" which generates a new intermediate issuer, 
  "newly-cross-signed-int-name", to phase out the old intermediate
  
  * validate cross-signing accurately copied the old intermediate issuer *
  4. Generate a leaf certificate from "newly-cross-signed-int-name", let's call it "baby-leaf"
  5. Verify that "baby-leaf" validates against both chains: 
  "old-parent-issuer-name" -> "old-intermediate" -> "baby-leaf"
  "my-parent-issuer-name" -> "newly-cross-signed-int-name" -> "baby-leaf"
  
  We're just concerned with the link between the leaf and both intermediates
  to confirm the UI performed the cross-sign correctly
  (which already assumes the link between each parent and intermediate is valid)
  
  verifyCertificates(oldIntermediate, crossSignedCert, leaf)
  
  */


  async function verifyCertificates(certA, certB, leaf) {
    const parsedCertA = jsonToCertObject(certA);
    const parsedCertB = jsonToCertObject(certB);

    if (leaf) {
      const parsedLeaf = jsonToCertObject(leaf);
      const chainA = await verifySignature(parsedCertA, parsedLeaf);
      const chainB = await verifySignature(parsedCertB, parsedLeaf); // the leaf's issuer should be equal to the subject data of the intermediate certs

      const isEqualA = parsedLeaf.issuer.isEqual(parsedCertA.subject);
      const isEqualB = parsedLeaf.issuer.isEqual(parsedCertB.subject);
      return chainA && chainB && isEqualA && isEqualB;
    } // can be used to validate if a certificate is self-signed (i.e. a root cert), by passing it as both certA and B


    return (await verifySignature(parsedCertA, parsedCertB)) && parsedCertA.issuer.isEqual(parsedCertB.subject);
  }

  async function verifySignature(parent, child) {
    try {
      return await child.verify(parent);
    } catch (error) {
      // ed25519 is an unsupported signature algorithm and so verify() errors
      // SKID (subject key ID) is the byte array of the key identifier
      // AKID (authority key ID) is a SEQUENCE-type extension that includes the key identifier and potentially other information.
      const skidExtension = parent.extensions.find(ext => ext.extnID === _parsePkiCertOids.OTHER_OIDs.subject_key_identifier);
      const akidExtension = parent.extensions.find(ext => ext.extnID === _parsePkiCertOids.OTHER_OIDs.authority_key_identifier); // return false if either extension is missing
      // this could mean a false-negative but that's okay for our use-case

      if (!skidExtension || !akidExtension) return false;
      const skid = new Uint8Array(skidExtension.parsedValue.valueBlock.valueHex);
      const akid = new Uint8Array(akidExtension.extnValue.valueBlock.valueHex); // Check that AKID includes the SKID, which saves us from parsing the AKID and is unlikely to return false-positives.

      return akid.toString().includes(skid.toString());
    }
  } //* PARSING HELPERS

  /*
    We wish to get each SUBJECT_OIDs (see utils/parse-pki-cert-oids.js) out of this certificate's subject. 
    A subject is a list of RDNs, where each RDN is a (type, value) tuple
    and where a type is an OID. The OID for CN can be found here:
       
       https://datatracker.ietf.org/doc/html/rfc5280#page-112
    
    Each value is then encoded as another ASN.1 object; in the case of a
    CommonName field, this is usually a PrintableString, BMPString, or a
    UTF8String. Regardless of encoding, it should be present in the
    valueBlock's value field if it is renderable.
  */


  function parseSubject(subject) {
    if (!subject) return null;
    const values = {};
    const errors = [];

    const isUnexpectedSubjectOid = rdn => !Object.values(_parsePkiCertOids.SUBJECT_OIDs).includes(rdn.type);

    if (subject.any(isUnexpectedSubjectOid)) {
      const unknown = subject.filter(isUnexpectedSubjectOid).map(rdn => rdn.type);
      errors.push(new Error('certificate contains unsupported subject OIDs: ' + unknown.join(', ')));
    }

    const returnValues = OID => {
      const values = subject.filter(rdn => rdn?.type === OID).map(rdn => rdn?.value?.valueBlock?.value); // Theoretically, there might be multiple (or no) CommonNames -- but Vault
      // presently refuses to issue certificates without CommonNames in most
      // cases. For now, return the first CommonName we find. Alternatively, we
      // might update our callers to handle multiple and return a string array

      return values ? values?.length ? values[0] : null : null;
    };

    Object.keys(_parsePkiCertOids.SUBJECT_OIDs).forEach(key => values[key] = returnValues(_parsePkiCertOids.SUBJECT_OIDs[key]));
    return {
      subjValues: values,
      subjErrors: errors
    };
  }

  function parseExtensions(extensions) {
    if (!extensions) return null;
    const values = {};
    const errors = [];
    const allowedOids = Object.values({ ..._parsePkiCertOids.EXTENSION_OIDs,
      ..._parsePkiCertOids.OTHER_OIDs
    });

    const isUnknownExtension = ext => !allowedOids.includes(ext.extnID);

    if (extensions.any(isUnknownExtension)) {
      const unknown = extensions.filter(isUnknownExtension).map(ext => ext.extnID);
      errors.push(new Error('certificate contains unsupported extension OIDs: ' + unknown.join(', ')));
    } // make each extension its own key/value pair


    for (const attrName in _parsePkiCertOids.EXTENSION_OIDs) {
      values[attrName] = extensions.find(ext => ext.extnID === _parsePkiCertOids.EXTENSION_OIDs[attrName])?.parsedValue;
    }

    if (values.subject_alt_name) {
      // we only support SANs of type 2 (altNames), 6 (uri) and 7 (ipAddress)
      const supportedTypes = Object.values(_parsePkiCertOids.SAN_TYPES);
      const supportedNames = Object.keys(_parsePkiCertOids.SAN_TYPES);
      const sans = values.subject_alt_name?.altNames;

      if (!sans) {
        errors.push(new Error('certificate contains an unsupported subjectAltName construction'));
      } else if (sans.any(san => !supportedTypes.includes(san.type))) {
        // pass along error that unsupported values exist
        errors.push(new Error('subjectAltName contains unsupported types')); // still check and parse any supported values

        if (sans.any(san => supportedTypes.includes(san.type))) {
          supportedNames.forEach(attrName => {
            values[attrName] = sans.filter(gn => gn.type === Number(_parsePkiCertOids.SAN_TYPES[attrName])).map(gn => gn.value);
          });
        }
      } else if (sans.every(san => supportedTypes.includes(san.type))) {
        supportedNames.forEach(attrName => {
          values[attrName] = sans.filter(gn => gn.type === Number(_parsePkiCertOids.SAN_TYPES[attrName])).map(gn => gn.value);
        });
      } else {
        errors.push(new Error('unsupported subjectAltName values'));
      }
    } // permitted_dns_domains


    if (values.name_constraints) {
      // we only support Name Constraints of dnsName (type 2), this value lives in the permittedSubtree of the Name Constraints sequence
      // permittedSubtrees contain an array of subtree objects, each object has a 'base' key and EITHER a 'minimum' or 'maximum' key
      // GeneralSubtree { "base": {   "type": 2,  "value": "dnsname1.com" }, minimum: 0 }
      const nameConstraints = values.name_constraints;

      if (Object.keys(nameConstraints).includes('excludedSubtrees')) {
        errors.push(new Error('nameConstraints contains excludedSubtrees'));
      } else if (nameConstraints.permittedSubtrees.any(subtree => subtree.minimum !== 0)) {
        errors.push(new Error('nameConstraints permittedSubtree contains non-zero minimums'));
      } else if (nameConstraints.permittedSubtrees.any(subtree => subtree.maximum)) {
        errors.push(new Error('nameConstraints permittedSubtree contains maximum'));
      } else if (nameConstraints.permittedSubtrees.any(subtree => subtree.base.type !== 2)) {
        errors.push(new Error('nameConstraints permittedSubtree can only contain dnsName (type 2)')); // still check and parse any supported values

        if (nameConstraints.permittedSubtrees.any(subtree => subtree.base.type === 2)) {
          values.permitted_dns_domains = nameConstraints.permittedSubtrees.filter(gn => gn.base.type === 2).map(gn => gn.base.value);
        }
      } else if (nameConstraints.permittedSubtrees.every(subtree => subtree.base.type === 2)) {
        values.permitted_dns_domains = nameConstraints.permittedSubtrees.map(gn => gn.base.value);
      } else {
        errors.push(new Error('unsupported nameConstraints values'));
      }
    }

    if (values.basic_constraints) {
      values.max_path_length = values.basic_constraints?.pathLenConstraint;
    }

    if (values.ip_sans) {
      const parsed_ips = [];

      for (const ip_san of values.ip_sans) {
        const unused = ip_san.valueBlock.unusedBits;

        if (unused !== undefined && unused !== null && unused !== 0) {
          errors.push(new Error('unsupported ip_san value: non-zero unused bits in encoding'));
          continue;
        }

        const ip = new Uint8Array(ip_san.valueBlock.valueHex); // Length of the IP determines the type: 4 bytes for IPv4, 16 bytes for
        // IPv6.

        if (ip.length === 4) {
          const ip_addr = ip.join('.');
          parsed_ips.push(ip_addr);
        } else if (ip.length === 16) {
          const src = new Array(...ip);
          const hex = src.map(value => '0' + new Number(value).toString(16));
          const trimmed = hex.map(value => value.slice(value.length - 2, 3)); // add a colon after every other number (those with an odd index)

          let ip_addr = trimmed.map((value, index) => index % 2 === 0 ? value : value + ':').join(''); // Remove trailing :, if any.

          ip_addr = ip_addr.slice(-1) === ':' ? ip_addr.slice(0, -1) : ip_addr;
          parsed_ips.push(ip_addr);
        } else {
          errors.push(new Error('unsupported ip_san value: unknown IP address size (should be 4 or 16 bytes, was ' + parseInt(ip.length / 2) + ')'));
        }
      }

      values.ip_sans = parsed_ips;
    }

    if (values.key_usage) {
      // KeyUsage is a big-endian bit-packed enum. Unused right-most bits are
      // truncated. So, a KeyUsage with CertSign+CRLSign would be "000001100",
      // with the right two bits truncated, and packed into an 8-bit, one-byte
      // string ("00000011"), introducing a leading zero. unused indicates that
      // this bit can be discard, shifting our result over by one, to go back
      // to its original form (minus trailing zeros).
      //
      // We can thus take our enumeration (KEY_USAGE_BITS), check whether the
      // bits are asserted, and push in our pretty names as appropriate.
      const unused = values.key_usage.valueBlock.unusedBits;
      const keyUsage = new Uint8Array(values.key_usage.valueBlock.valueHex);
      const computedKeyUsages = [];

      for (const enumIndex in _parsePkiCertOids.KEY_USAGE_BITS) {
        // May span two bytes.
        const byteIndex = parseInt(enumIndex / 8);
        const bitIndex = parseInt(enumIndex % 8);
        const enumName = _parsePkiCertOids.KEY_USAGE_BITS[enumIndex];
        const mask = 1 << 8 - bitIndex; // Big endian.

        if (byteIndex >= keyUsage.length) {
          // DecipherOnly is rare and would push into a second byte, but we
          // don't have one so exit.
          break;
        }

        let enumByte = keyUsage[byteIndex];
        const needsAdjust = byteIndex + 1 === keyUsage.length && unused > 0;

        if (needsAdjust) {
          enumByte = parseInt(enumByte << unused);
        }

        const isSet = (mask & enumByte) === mask;

        if (isSet) {
          computedKeyUsages.push(enumName);
        }
      } // Vault currently doesn't allow setting key_usage during issuer
      // generation, but will allow it if it comes in via an externally
      // generated CSR. Validate that key_usage matches expectations and
      // prune accordingly.


      const expectedUsages = ['CertSign', 'CRLSign'];

      const isUnexpectedKeyUsage = ext => !expectedUsages.includes(ext);

      if (computedKeyUsages.any(isUnexpectedKeyUsage)) {
        const unknown = computedKeyUsages.filter(isUnexpectedKeyUsage);
        errors.push(new Error('unsupported key usage value on issuer certificate: ' + unknown.join(', ')));
      }

      values.key_usage = computedKeyUsages;
    }

    if (values.other_sans) {
      // We need to parse these into their server-side values.
      const parsed_sans = [];

      for (const san of values.other_sans) {
        let [objectId, constructed] = san.valueBlock.value;
        objectId = objectId.toJSON().valueBlock.value;
        constructed = constructed.valueBlock.value[0].toJSON(); // can I just grab the first element here?

        const {
          blockName
        } = constructed;
        const value = constructed.valueBlock.value;
        parsed_sans.push(`${objectId};${blockName.replace('String', '')}:${value}`);
      }

      values.other_sans = parsed_sans;
    }

    delete values.subject_alt_name;
    delete values.basic_constraints;
    delete values.name_constraints;
    return {
      extValues: values,
      extErrors: errors
    };
    /*
    values is an object with keys from EXTENSION_OIDs and SAN_TYPES
    values = {
      "alt_names": string[],
      "uri_sans": string[],
      "permitted_dns_domains": string[],
      "max_path_length": int,
      "key_usage": ['CertSign', 'CRLSign'],
      "ip_sans": ['192.158.1.38', '1234:fd2:5621:1:89::4500'],
    }
    */
  }

  function mapSignatureBits(sigAlgo) {
    const {
      algorithmId
    } = sigAlgo; // use_pss is true, additional OIDs need to be mapped

    if (algorithmId === '1.2.840.113549.1.1.10') {
      // object identifier for PSS is very nested
      const objId = sigAlgo.algorithmParams?.valueBlock?.value[0]?.valueBlock?.value[0]?.valueBlock?.value[0].toString().split(' : ')[1];
      return [_parsePkiCertOids.SIGNATURE_ALGORITHM_OIDs[algorithmId][objId], true];
    }

    return [_parsePkiCertOids.SIGNATURE_ALGORITHM_OIDs[algorithmId], false];
  }
});
;define("vault/utils/path-encoding-helpers", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.encodePath = encodePath;
  _exports.normalizePath = normalizePath;
  0; //eaimeta@70e063a35619d71feaimeta@70e063a35619d71f

  /**
   * Copyright (c) HashiCorp, Inc.
   * SPDX-License-Identifier: MPL-2.0
   */
  function encodePath(path) {
    return path ? path.split('/').map(segment => encodeURIComponent(segment)).join('/') : path;
  }

  function normalizePath(path) {
    // Unlike normalizePath from route-recognizer, this method assumes
    // we do not have percent-encoded data octets as defined in
    // https://datatracker.ietf.org/doc/html/rfc3986
    return path ? path.split('/').map(segment => decodeURIComponent(segment)).join('/') : '';
  }
});
;define("vault/utils/remove-record", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = removeRecord;
  0; //eaimeta@70e063a35619d71feaimeta@70e063a35619d71f

  /**
   * Copyright (c) HashiCorp, Inc.
   * SPDX-License-Identifier: MPL-2.0
   */
  // Unlinks a record from all its relationships and unloads it from
  // the store.
  function removeRecord(store, record) {
    const id = record.path || record.id;

    if (id) {
      // Collect relationship property names and types
      const relationshipMeta = [];
      record.eachRelationship((key, _ref) => {
        let {
          kind
        } = _ref;
        relationshipMeta.push({
          key,
          kind
        });
      }); // Push an update to this record with the relationships nulled out.
      // This unlinks the relationship from the models that aren't about to
      // be unloaded.

      store.push({
        data: {
          id,
          type: record.constructor.modelName,
          relationships: relationshipMeta.reduce((hash, rel) => {
            hash[rel.key] = {
              data: rel.kind === 'hasMany' ? [] : null
            };
            return hash;
          }, {})
        }
      });
    } // Now that the record has no attachments, it can be safely unloaded
    // from the store.


    store.unloadRecord(record);
  }
});
;define("vault/utils/sort-objects", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = sortObjects;
  0; //eaimeta@70e063a35619d71feaimeta@70e063a35619d71f

  function sortObjects(array, key) {
    if (Array.isArray(array) && array?.every(e => e[key] && typeof e[key] === 'string')) {
      return array.sort((a, b) => {
        // ignore upper vs lowercase
        const valueA = a[key].toUpperCase();
        const valueB = b[key].toUpperCase();
        if (valueA < valueB) return -1;
        if (valueA > valueB) return 1;
        return 0;
      });
    } // if not sortable, return original array


    return array;
  }
});
;define("vault/utils/timestamp", ["exports", "core/utils/timestamp"], function (_exports, _timestamp) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _timestamp.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"core/utils/timestamp"eaimeta@70e063a35619d71f
});
;define("vault/utils/titleize", ["exports", "ember-cli-string-helpers/utils/titleize"], function (_exports, _titleize) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "default", {
    enumerable: true,
    get: function () {
      return _titleize.default;
    }
  });
  0; //eaimeta@70e063a35619d71f0,"ember-cli-string-helpers/utils/titleize"eaimeta@70e063a35619d71f
});
;define("vault/utils/trim-right", ["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = _default;
  0; //eaimeta@70e063a35619d71feaimeta@70e063a35619d71f

  /**
   * Copyright (c) HashiCorp, Inc.
   * SPDX-License-Identifier: MPL-2.0
   */
  // will trim a given set of endings from the end of a string
  // if isExtension is true, the first char of that string will be escaped
  // in the regex
  function _default(str) {
    let endings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
    let isExtension = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
    const prefix = isExtension ? '\\' : '';
    const trimRegex = new RegExp(endings.map(ext => `${prefix}${ext}$`).join('|'));
    return str.replace(trimRegex, '');
  }
});
;define("vault/utils/validators", ["exports", "@ember/utils"], function (_exports, _utils) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.presence = _exports.number = _exports.length = _exports.default = _exports.containsWhiteSpace = void 0;
  0; //eaimeta@70e063a35619d71f0,"@ember/utils"eaimeta@70e063a35619d71f

  const presence = value => (0, _utils.isPresent)(value);

  _exports.presence = presence;

  const length = function (value) {
    let {
      nullable = false,
      min,
      max
    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    if (!min && !max) return; // value could be an integer if the attr has a default value of some number

    const valueLength = value?.toString().length;

    if (valueLength) {
      const underMin = min && valueLength < min;
      const overMax = max && valueLength > max;
      return underMin || overMax ? false : true;
    }

    return nullable;
  };

  _exports.length = length;

  const number = function (value) {
    let {
      nullable = false
    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    // since 0 is falsy, !value returns true even though 0 is a valid number
    if (!value && value !== 0) return nullable;
    return !isNaN(value);
  };

  _exports.number = number;

  const containsWhiteSpace = value => {
    const validation = new RegExp('\\s', 'g'); // search for whitespace

    return !validation.test(value);
  };

  _exports.containsWhiteSpace = containsWhiteSpace;
  var _default = {
    presence,
    length,
    number,
    containsWhiteSpace
  };
  _exports.default = _default;
});
;

;define('vault/config/environment', [], function() {
  var prefix = 'vault';
try {
  var metaName = prefix + '/config/environment';
  var rawConfig = document.querySelector('meta[name="' + metaName + '"]').getAttribute('content');
  var config = JSON.parse(decodeURIComponent(rawConfig));

  var exports = { 'default': config };

  Object.defineProperty(exports, '__esModule', { value: true });

  return exports;
}
catch(err) {
  throw new Error('Could not read config from meta tag with name "' + metaName + '".');
}

});

;
          if (!runningTests) {
            require("vault/app")["default"].create({"POLLING_URLS":["sys/health","sys/seal-status"],"NAMESPACE_ROOT_URLS":["sys/health","sys/seal-status","sys/license/features","sys/internal/counters/config"],"DEFAULT_PAGE_SIZE":15,"LOG_TRANSITIONS":true});
          }
        
//# sourceMappingURL=vault.map
